
IndexUnaryOp:
    GrB_IndexUnaryOp
    GrB_IndexUnaryOp_new
    GrB_IndexUnaryOp_free
    built-in GrB_IndexUnaryOps (see table 2.8)
    apply with IndexUnaryOp

GrB_select
    not the same as my GxB_select, but very similar.
    uses the GrB_IndexUnaryOp

GrB_apply with IndexUnaryOp

GrB_*_wait: with 2nd parameter: GrB_COMPLETE, GrB_MATERIALIZE

Vector_extractElement (GrB_Scalar s, v, i)
Matrix_extractElement (GrB_Scalar s, A, i, j)

GrB_Vector_assign_Scalar with GrB_Scalar
GrB_Matrix_assign_Scalar with GrB_Scalar
and thus:
GxB_Vector_subassign_Scalar with GrB_Scalar
GxB_Matrix_subassign_Scalar with GrB_Scalar

GrB_reduce to GrB_Scalar using a monoid: do this
GrB_reduce to GrB_Scalar using a binary op: NOT_IMPLEMENTED
    for Matrix and Vector

--------------------------------------------------------------------------------
DRAFTED: need to test them:

add serialize/deserialize tests to @GrB/test

--------------------------------------------------------------------------------
DONE:

G*B_Matrix_serialize
G*B_Matrix_deserialize
GrB_Matrix_serializeSize
    GxB_IMPORT: GxB_FAST_IMPORT or GxB_SECURE_IMPORT

Vector_build, Matrix_build when dup is NULL: no duplicates allowed

GrB_Matrix_diag (C, v) same as GxB_Matrix_diag (C, v, 0, NULL)

apply bind1st and bind2nd: already handle GxB_Scalar, change to GrB_Scalar

Vector_setElement (v, GrB_Scalar s, i)
Matrix_setElement (A, GrB_Scalar s, i, j)
    if nvals(s) is zero: it becomes a deletion of that entry in v or A,
    like removeElement

GrB_Scalar    was GxB_Scalar
    GrB_Scalar_new
    GrB_Scalar_dup
    ...

enum values for GrB_Info
    GrB_NOT_IMPLEMENTED
    GrB_EMPTY_OBJECT

GrB_Matrix_import
GrB_Matrix_export
GrB_Matrix_exportSize
GrB_Matrix_exportHint
GrB_Format: COO, CSR, CSC, dense by row, dense by col
    CSR and CSC not required to be sorted; can be jumbled on input
    COO: also any order (can there be duplicates?)
    DENSE by row or col: what if entries are missing? Error?

enums are specified.  Note GrB_BLOCKING and GrB_NONBLOCKING enums are flipped.

