Device: 0: memory: 34052177920 SMs: 80 compute: 7.7
    GraphBLAS type: WildType user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
WildType size: 128
    GraphBLAS type: WildType user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;

a wildtype scalar: scalar1 [this is from scalar1]
       0.0        1.0        2.0        3.0 
     100.0      101.0      102.0      103.0 
     200.0      201.0      202.0      203.0 
     300.0      301.0      302.0      303.0 

a wildtype scalar: got scalar2 = C(7,2) [this is A(2,7)]
       0.0        1.0        2.0        3.0 
     100.0      101.0      102.0      103.0 
     200.0      201.0      202.0      203.0 
     300.0      301.0      302.0      303.0 

    GraphBLAS BinaryOp: WildAdd (user-defined) z=wildtype_add(x,y)
    GraphBLAS type: ztype user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: xtype user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: ytype user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
GxB_STATIC_INLINE_VOID                                                 
wildtype_add (wildtype *z, const wildtype *x, const wildtype *y)       
{                                                                      
   for (int i = 0 ; i < 4 ; i++)                                       
   {                                                                   
       for (int j = 0 ; j < 4 ; j++)                                   
       {                                                               
           z->stuff [i][j] = x->stuff [i][j] + y->stuff [i][j] ;       
       }                                                               
   }                                                                   
   const char *psrc = "this was added" ;                             
   char *pdst = z->whatstuff ;                                         
   while ((*pdst++ = *psrc++)) ;                                       
}

    GraphBLAS BinaryOp: WildMult (user-defined) z=wildtype_mult(x,y)
    GraphBLAS type: ztype user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: xtype user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: ytype user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
GxB_STATIC_INLINE_VOID                                                 
wildtype_mult (wildtype *z, const wildtype *x, const wildtype *y)      
{                                                                      
   for (int i = 0 ; i < 4 ; i++)                                       
   {                                                                   
       for (int j = 0 ; j < 4 ; j++)                                   
       {                                                               
           z->stuff [i][j] = 0 ;                                       
           for (int k = 0 ; k < 4 ; k++)                               
           {                                                           
               z->stuff [i][j] += (x->stuff [i][k] * y->stuff [k][j]) ;
           }                                                           
       }                                                               
   }                                                                   
   const char *psrc = "this was multiplied" ;                        
   char *pdst = z->whatstuff ;                                         
   while ((*pdst++ = *psrc++)) ;                                       
}

a wildtype scalar: scalar2 [here is scalar2]
       0.5        1.5        2.5        3.5 
      -0.5        0.5        1.5        2.5 
      -1.5       -0.5        0.5        1.5 
      -2.5       -1.5       -0.5        0.5 

a wildtype scalar: scalar_identity for the monoid [identity]
       0.0        0.0        0.0        0.0 
       0.0        0.0        0.0        0.0 
       0.0        0.0        0.0        0.0 
       0.0        0.0        0.0        0.0 

    GraphBLAS Semiring: InTheWild (user-defined)
    GraphBLAS Monoid: semiring->add (user-defined)
    GraphBLAS BinaryOp: monoid->op (user-defined) z=wildtype_add(x,y)
    GraphBLAS type: ztype user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: xtype user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: ytype user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
GxB_STATIC_INLINE_VOID                                                 
wildtype_add (wildtype *z, const wildtype *x, const wildtype *y)       
{                                                                      
   for (int i = 0 ; i < 4 ; i++)                                       
   {                                                                   
       for (int j = 0 ; j < 4 ; j++)                                   
       {                                                               
           z->stuff [i][j] = x->stuff [i][j] + y->stuff [i][j] ;       
       }                                                               
   }                                                                   
   const char *psrc = "this was added" ;                             
   char *pdst = z->whatstuff ;                                         
   while ((*pdst++ = *psrc++)) ;                                       
}
    identity: [ [user-defined value] ] 

    GraphBLAS BinaryOp: semiring->multiply (user-defined) z=wildtype_mult(x,y)
    GraphBLAS type: ztype user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: xtype user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    GraphBLAS type: ytype user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
GxB_STATIC_INLINE_VOID                                                 
wildtype_mult (wildtype *z, const wildtype *x, const wildtype *y)      
{                                                                      
   for (int i = 0 ; i < 4 ; i++)                                       
   {                                                                   
       for (int j = 0 ; j < 4 ; j++)                                   
       {                                                               
           z->stuff [i][j] = 0 ;                                       
           for (int k = 0 ; k < 4 ; k++)                               
           {                                                           
               z->stuff [i][j] += (x->stuff [i][k] * y->stuff [k][j]) ;
           }                                                           
       }                                                               
   }                                                                   
   const char *psrc = "this was multiplied" ;                        
   char *pdst = z->whatstuff ;                                         
   while ((*pdst++ = *psrc++)) ;                                       
}

multiplication C=A*B InTheWild semiring:

Printing the matrix with GxB_Matrix_fprint:

  10x10 GraphBLAS wildtype matrix, sparse by row
  max # entries: 4
  vlen: 10 nvec_nonempty: 2 nvec: 10 plen: 10 vdim: 10
  hyper_switch 0.0625 bitmap_switch 0.1
  sparsity control: hyper/sparse/bitmap/full
  header 0x7f24d6000200 number of memory blocks: 4
  deep: 928 shallow: 0 total: 928
    GraphBLAS type:  user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
  ->h: (nil) shallow: 0 size: 0
  ->p: 0x7f24d6001b00 shallow: 0 size: 128
  ->i: 0x7f24d604a800 shallow: 0 size: 32
  ->b: (nil) shallow: 0 size: 0
  ->x: 0x7f24d604a900 shallow: 0 size: 512
  ->Y: (nil) shallow: 0
  input A, 3 entries, memory: 928 bytes

  row: 0 : 0 entries [0:-1]
  row: 1 : 0 entries [0:-1]
  row: 2 : 2 entries [0:1]
    column 4: [user-defined value]
    column 7: [user-defined value]
  row: 3 : 1 entries [2:2]
    column 7: [user-defined value]
  row: 4 : 0 entries [3:2]
  row: 5 : 0 entries [3:2]
  row: 6 : 0 entries [3:2]
  row: 7 : 0 entries [3:2]
  row: 8 : 0 entries [3:2]
  row: 9 : 0 entries [3:2]
  Pending (nil)


============= printing the WildType matrix: input A (10-by-10 with 3 entries)

----------- input A(2,4):

a wildtype scalar:  [this is A(2,4)]
       0.0        1.0        2.0        3.0 
     100.0      101.0      102.0      103.0 
     200.0      201.0      202.0      909.0 
     300.0      301.0      302.0       42.0 

----------- input A(2,7):

a wildtype scalar:  [this is A(2,7)]
       0.0        1.0        2.0        3.0 
     100.0      101.0      102.0      103.0 
     200.0      201.0      202.0      203.0 
     300.0      301.0      302.0      303.0 

----------- input A(3,7):

a wildtype scalar:  [this is A(3,7)]
       0.0        1.0        2.0        3.0 
     100.0      101.0      102.0      103.0 
     200.0      201.0      202.0      909.0 
     300.0      301.0      302.0      303.0 

============= that was the WildType matrix input A

Printing the matrix with GxB_Matrix_fprint:

  10x10 GraphBLAS wildtype matrix, hypersparse by row
  max # entries: 1
  vlen: 10 nvec_nonempty: 1 nvec: 1 plen: 1 vdim: 10
  hyper_switch 0.0625 bitmap_switch 0.1
  sparsity control: hyper/sparse/bitmap/full
  header 0x7f24d600a400 number of memory blocks: 9
  deep: 37408 shallow: 0 total: 37408
    GraphBLAS type:  user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
  ->h: 0x7f24d6001a00 shallow: 0 size: 8
  ->p: 0x7f24d6009f00 shallow: 0 size: 16
  ->i: 0x7f24d6001900 shallow: 0 size: 8
  ->b: (nil) shallow: 0 size: 0
  ->x: 0x7f24d604bc00 shallow: 0 size: 128
  ->Y: (nil) shallow: 0
  input B, 1 entry, memory: 36.5 KB
  pending tuples: 2 max pending: 256 zombies: 0

  row: 7 : 1 entries [0:0]
    column 2: [user-defined value]
  Pending 0x7f24d6000600
  Pending->i 0x7f24d6000f00
  Pending->j 0x7f24d604b400
  Pending->x 0x7f24d6001c00
  pending tuples:
    GraphBLAS type:  user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
    row: 7 col: 5 [user-defined value]
    row: 4 col: 2 [user-defined value]
  pending operator: implicit 2nd


============= printing the WildType matrix: input B (10-by-10 with 3 entries)

----------- input B(4,2):

a wildtype scalar:  [finally, B(4,2)]
      -1.0        1.5        2.5       77.0 
      -0.5        0.5        1.5        2.5 
      -1.5       -0.5        0.5        1.5 
      -2.5       -1.5       -0.5        0.5 

----------- input B(7,2):

a wildtype scalar:  [this is B(7,2)]
       0.5        1.5        2.5        3.5 
      -0.5        0.5        1.5        2.5 
      -1.5       -0.5        0.5        1.5 
      -2.5       -1.5       -0.5        0.5 

----------- input B(7,5):

a wildtype scalar:  [here is B(7,5)]
      -1.0        1.5        2.5        3.5 
      -0.5        0.5        1.5        2.5 
      -1.5       -0.5        0.5        1.5 
      -2.5       -1.5       -0.5        0.5 

============= that was the WildType matrix input B

Printing the matrix with GxB_Matrix_fprint:

  10x10 GraphBLAS wildtype matrix, sparse by row
  max # entries: 4
  vlen: 10 nvec_nonempty: 2 nvec: 10 plen: 10 vdim: 10
  hyper_switch 0.0625 bitmap_switch 0.1
  sparsity control: hyper/sparse/bitmap/full
  header 0x7f24d6001700 number of memory blocks: 4
  deep: 928 shallow: 0 total: 928
    GraphBLAS type:  user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
  ->h: (nil) shallow: 0 size: 0
  ->p: 0x7f24d6000600 shallow: 0 size: 128
  ->i: 0x7f24d600a000 shallow: 0 size: 32
  ->b: (nil) shallow: 0 size: 0
  ->x: 0x7f24d604c400 shallow: 0 size: 512
  ->Y: (nil) shallow: 0
  output C, 4 entries, memory: 928 bytes

  row: 0 : 0 entries [0:-1]
  row: 1 : 0 entries [0:-1]
  row: 2 : 2 entries [0:1]
    column 2: [user-defined value]
    column 5: [user-defined value]
  row: 3 : 2 entries [2:3]
    column 2: [user-defined value]
    column 5: [user-defined value]
  row: 4 : 0 entries [4:3]
  row: 5 : 0 entries [4:3]
  row: 6 : 0 entries [4:3]
  row: 7 : 0 entries [4:3]
  row: 8 : 0 entries [4:3]
  row: 9 : 0 entries [4:3]
  Pending (nil)


============= printing the WildType matrix: output C (10-by-10 with 4 entries)

----------- output C(2,2):

a wildtype scalar:  [this was added]
     -22.0      -10.0        2.0       14.0 
    -972.0      -10.0      802.0     8964.0 
   -3687.0    -1069.0     1249.0    18267.0 
   -2219.5      381.5     2532.5    26733.5 

----------- output C(2,5):

a wildtype scalar:  [this was multiplied]
     -11.0       -5.0        1.0        7.0 
    -561.0       -5.0      401.0      807.0 
   -1111.0       -5.0      801.0     1607.0 
   -1661.0       -5.0     1201.0     2407.0 

----------- output C(3,2):

a wildtype scalar:  [this was multiplied]
     -11.0       -5.0        1.0        7.0 
    -411.0       -5.0      401.0      807.0 
   -2576.0    -1064.0      448.0     1960.0 
   -1211.0       -5.0     1201.0     2407.0 

----------- output C(3,5):

a wildtype scalar:  [this was multiplied]
     -11.0       -5.0        1.0        7.0 
    -561.0       -5.0      401.0      807.0 
   -2876.0    -1064.0      448.0     1960.0 
   -1661.0       -5.0     1201.0     2407.0 

============= that was the WildType matrix output C

------ C<M>=C*C'----------------------------------------

The mask matrix M:

  10x10 GraphBLAS bool matrix, hypersparse by row
  max # entries: 0
  vlen: 10 nvec_nonempty: 0 nvec: 0 plen: 1 vdim: 10
  hyper_switch 0.0625 bitmap_switch 0.1
  sparsity control: hyper/sparse/bitmap/full
  header 0x7f24d604be00 number of memory blocks: 7
  deep: 4512 shallow: 0 total: 4512
    GraphBLAS type:  bool size: 1
  ->h: 0x7f24d6001900 shallow: 0 size: 8
  ->p: 0x7f24d6000300 shallow: 0 size: 16
  ->i: (nil) shallow: 0 size: 0
  ->b: (nil) shallow: 0 size: 0
  ->x: 0x7f24d6001a00 shallow: 0 size: 8
  ->Y: (nil) shallow: 0
  M, no entries, memory: 4.4 KB
  iso value:   1
  pending tuples: 4 max pending: 256 zombies: 0
  Pending 0x7f24d6000500
  Pending->i 0x7f24d6000f00
  Pending->j 0x7f24d604b400
  Pending->x (nil)
  pending tuples:
    GraphBLAS type:  int32_t size: 4
    row: 2 col: 2 
    row: 2 col: 3 
    row: 3 col: 2 
    row: 3 col: 3 
  pending operator: implicit 2nd

 [ GrB_mxm (iso wait:M 0 zombies, 4 pending) (iso build) (hyper to sparse) C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) (using the GPU: 4)  work:1.6 GPUs:4 (GPU dot3) (GPU C created and copied from M) (GPU stringified srcode = 287685082509930069)
(GPU phase1 start nblk = 1) =========== RAW JIT INPUT(2):
GB_jit_AxB_dot3_phase1
#undef  GxB_STATIC_INLINE_VOID\n
    #define GxB_STATIC_INLINE_VOID static __device__ __inline__ void
#include "/home/faculty/d/davis/.SuiteSparse/GraphBLAS/7.4.0/GB_mxm_287685082509930069.h"
#include "templates/GB_jit_AxB_dot3_phase1.cuh"
(GPU phase1 done      3.23482 ms )
(GPU phase2 start nblk=1 ) (GPU phase2 done      2.47603 ms )
(GPU phase3 bucket 1 launch ) =========== RAW JIT INPUT(5):
GB_jit_AxB_dot3_phase3_vsvs
#undef  GxB_STATIC_INLINE_VOID\n
    #define GxB_STATIC_INLINE_VOID static __device__ __inline__ void
#include "/home/faculty/d/davis/.SuiteSparse/GraphBLAS/7.4.0/GB_mxm_287685082509930069.h"
#include "GB_jit_AxB_dot3_phase3_vsvs.cuh"
(GPU phase3 launch phase3_vsvs st,end=0,4 nblocks,blocksize= 1,256 )
(GPU phase3 bucket 1 done     0.710656 ms, rate=   0.0056286)

   0.00807 sec ]

Printing the matrix with GxB_Matrix_fprint:

  10x10 GraphBLAS wildtype matrix, sparse by row
  max # entries: 8
  vlen: 10 nvec_nonempty: 2 nvec: 10 plen: 10 vdim: 10
  hyper_switch 0.0625 bitmap_switch 0.1
  sparsity control: hyper/sparse/bitmap/full
  header 0x7f24d6001700 number of memory blocks: 4
  deep: 1472 shallow: 0 total: 1472
    GraphBLAS type:  user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
  ->h: (nil) shallow: 0 size: 0
  ->p: 0x7f24d604c300 shallow: 0 size: 128
  ->i: 0x7f24d604c600 shallow: 0 size: 64
  ->b: (nil) shallow: 0 size: 0
  ->x: 0x7f24d604c700 shallow: 0 size: 1024
  ->Y: (nil) shallow: 0
  output C, 4 entries, memory: 1.4 KB

  row: 0 : 0 entries [0:-1]
  row: 1 : 0 entries [0:-1]
  row: 2 : 2 entries [0:1]
    column 2: [user-defined value]
    column 3: [user-defined value]
  row: 3 : 2 entries [2:3]
    column 2: [user-defined value]
    column 3: [user-defined value]
  row: 4 : 0 entries [4:3]
  row: 5 : 0 entries [4:3]
  row: 6 : 0 entries [4:3]
  row: 7 : 0 entries [4:3]
  row: 8 : 0 entries [4:3]
  row: 9 : 0 entries [4:3]
  Pending (nil)


============= printing the WildType matrix: output C (10-by-10 with 4 entries)

----------- output C(2,2):

a wildtype scalar:  [this was added]
  -38054.0     3564.0    37082.0   335200.0 
-24598430.0  2569039.0 24980906.0 256764880.0 
-47572600.0  5674780.5 49524960.0 506665664.0 
-74305584.0  7500259.0 75016352.0 772037888.0 

----------- output C(2,3):

a wildtype scalar:  [this was added]
  -29330.0    -3056.0    20518.0    44092.0 
-15391280.0 -1321106.0 12266368.0 25853844.0 
-29816720.0 -2251209.0 24351604.0 50954412.0 
-46461400.0 -4100625.5 36817444.0 77735512.0 

----------- output C(3,2):

a wildtype scalar:  [this was added]
  -23932.5     1802.5    22137.5   174772.5 
-5032682.5  -119847.5  3827587.5 31427322.0 
-8035863.0   312889.0  6948041.0 55566392.0 
-15050183.0  -363147.5 11438488.0 93932416.0 

----------- output C(3,3):

a wildtype scalar:  [this was added]
  -20453.0    -2037.0    13679.0    29395.0 
-4488403.0  -856487.0  2292729.0  5441945.0 
-6977435.0  -935043.0  4250549.0  9436141.0 
-13424303.0 -2565387.0  6850829.0 16267045.0 

============= that was the WildType matrix output C
(using the GPU: 4) 
a wildtype scalar: sum [this was added]
 -111769.5      273.5    93416.5   583459.5 
-49510800.0   271598.5 43367588.0 319488000.0 
-92402616.0  2801417.5 85075152.0 622622656.0 
-149241472.0   471099.0 130123112.0 959972864.0 

C is now stored by column, but it looks just the same to the
GraphBLAS user application.  The difference is opaque, in the
internal data structure.

Printing the matrix with GxB_Matrix_fprint:

  10x10 GraphBLAS wildtype matrix, sparse by col
  max # entries: 4
  vlen: 10 nvec_nonempty: 2 nvec: 10 plen: 10 vdim: 10
  hyper_switch 0.0625 bitmap_switch 0.1
  sparsity control: hyper/sparse/bitmap/full
  header 0x7f24d6001700 number of memory blocks: 4
  deep: 928 shallow: 0 total: 928
    GraphBLAS type:  user-defined: [wildtype] size: 128
    typedef struct { float stuff [4][4] ; char whatstuff [64] ; } wildtype ;
  ->h: (nil) shallow: 0 size: 0
  ->p: 0x7f24d6000600 shallow: 0 size: 128
  ->i: 0x7f24d600a000 shallow: 0 size: 32
  ->b: (nil) shallow: 0 size: 0
  ->x: 0x7f24d604c400 shallow: 0 size: 512
  ->Y: (nil) shallow: 0
  output C, 4 entries, memory: 928 bytes

  column: 0 : 0 entries [0:-1]
  column: 1 : 0 entries [0:-1]
  column: 2 : 2 entries [0:1]
    row 2: [user-defined value]
    row 3: [user-defined value]
  column: 3 : 2 entries [2:3]
    row 2: [user-defined value]
    row 3: [user-defined value]
  column: 4 : 0 entries [4:3]
  column: 5 : 0 entries [4:3]
  column: 6 : 0 entries [4:3]
  column: 7 : 0 entries [4:3]
  column: 8 : 0 entries [4:3]
  column: 9 : 0 entries [4:3]
  Pending (nil)


============= printing the WildType matrix: output C (10-by-10 with 4 entries)

----------- output C(2,2):

a wildtype scalar:  [this was added]
  -38054.0     3564.0    37082.0   335200.0 
-24598430.0  2569039.0 24980906.0 256764880.0 
-47572600.0  5674780.5 49524960.0 506665664.0 
-74305584.0  7500259.0 75016352.0 772037888.0 

----------- output C(2,3):

a wildtype scalar:  [this was added]
  -29330.0    -3056.0    20518.0    44092.0 
-15391280.0 -1321106.0 12266368.0 25853844.0 
-29816720.0 -2251209.0 24351604.0 50954412.0 
-46461400.0 -4100625.5 36817444.0 77735512.0 

----------- output C(3,2):

a wildtype scalar:  [this was added]
  -23932.5     1802.5    22137.5   174772.5 
-5032682.5  -119847.5  3827587.5 31427322.0 
-8035863.0   312889.0  6948041.0 55566392.0 
-15050183.0  -363147.5 11438488.0 93932416.0 

----------- output C(3,3):

a wildtype scalar:  [this was added]
  -20453.0    -2037.0    13679.0    29395.0 
-4488403.0  -856487.0  2292729.0  5441945.0 
-6977435.0  -935043.0  4250549.0  9436141.0 
-13424303.0 -2565387.0  6850829.0 16267045.0 

============= that was the WildType matrix output C

Printing the matrix with GxB_Matrix_fprint:

  10x10 GraphBLAS float matrix, hypersparse by row
  max # entries: 0
  vlen: 10 nvec_nonempty: 0 nvec: 0 plen: 1 vdim: 10
  hyper_switch 0.0625 bitmap_switch 0.1
  sparsity control: hyper/sparse/bitmap/full
  header 0x7f24d6009e00 number of memory blocks: 3
  deep: 280 shallow: 0 total: 280
    GraphBLAS type:  float size: 4
  ->h: 0x7f24d6001a00 shallow: 0 size: 8
  ->p: 0x7f24d6009f00 shallow: 0 size: 16
  ->i: (nil) shallow: 0 size: 0
  ->b: (nil) shallow: 0 size: 0
  ->x: (nil) shallow: 0 size: 0
  ->Y: (nil) shallow: 0
  D, no entries, memory: 280 bytes
  Pending (nil)


The matrix D is not wild enough to print.

  10x10 GraphBLAS int64_t matrix, sparse by row
  max # entries: 4
  vlen: 10 nvec_nonempty: 2 nvec: 10 plen: 10 vdim: 10
  hyper_switch 0.0625 bitmap_switch 0.1
  sparsity control: hyper/sparse/bitmap/full
  header 0x7f24d600a300 number of memory blocks: 4
  deep: 448 shallow: 0 total: 448
    GraphBLAS type:  int64_t size: 8
  ->h: (nil) shallow: 0 size: 0
  ->p: 0x7f24d604c300 shallow: 0 size: 128
  ->i: 0x7f24d604d000 shallow: 0 size: 32
  ->b: (nil) shallow: 0 size: 0
  ->x: 0x7f24d604d100 shallow: 0 size: 32
  ->Y: (nil) shallow: 0
  E (positional i), 3 entries, memory: 448 bytes

  row: 0 : 0 entries [0:-1]
  row: 1 : 0 entries [0:-1]
  row: 2 : 2 entries [0:1]
    column 4:   2
    column 7:   2
  row: 3 : 1 entries [2:2]
    column 7:   3
  row: 4 : 0 entries [3:2]
  row: 5 : 0 entries [3:2]
  row: 6 : 0 entries [3:2]
  row: 7 : 0 entries [3:2]
  row: 8 : 0 entries [3:2]
  row: 9 : 0 entries [3:2]
  Pending (nil)


  10x10 GraphBLAS int64_t matrix, sparse by row
  max # entries: 4
  vlen: 10 nvec_nonempty: 2 nvec: 10 plen: 10 vdim: 10
  hyper_switch 0.0625 bitmap_switch 0.1
  sparsity control: hyper/sparse/bitmap/full
  header 0x7f24d600a300 number of memory blocks: 4
  deep: 448 shallow: 0 total: 448
    GraphBLAS type:  int64_t size: 8
  ->h: (nil) shallow: 0 size: 0
  ->p: 0x7f24d604c200 shallow: 0 size: 128
  ->i: 0x7f24d604a700 shallow: 0 size: 32
  ->b: (nil) shallow: 0 size: 0
  ->x: 0x7f24d604cf00 shallow: 0 size: 32
  ->Y: (nil) shallow: 0
  E (positional j), 3 entries, memory: 448 bytes

  row: 0 : 0 entries [0:-1]
  row: 1 : 0 entries [0:-1]
  row: 2 : 2 entries [0:1]
    column 4:   4
    column 7:   7
  row: 3 : 1 entries [2:2]
    column 7:   7
  row: 4 : 0 entries [3:2]
  row: 5 : 0 entries [3:2]
  row: 6 : 0 entries [3:2]
  row: 7 : 0 entries [3:2]
  row: 8 : 0 entries [3:2]
  row: 9 : 0 entries [3:2]
  Pending (nil)


This is supposed to fail, as a demo of GrB_error:
GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrB_Matrix_eWiseAdd_BinaryOp (C, M, accum, add, A, B, desc)
Incompatible type for z=wildtype_add(x,y):
second input of type [float]
cannot be typecast to y input of type [wildtype]
