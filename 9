Script started on 2023-04-27 20:39:01-0500
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Copyright (C) 2017 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Python 3.9.7 :: Intel Corporation
 cmake version 3.24.2

CMake suite maintained and supported by Kitware (kitware.com/cmake).
[0;36mslash $[0m mat
[?1h=
                            < M A T L A B (R) >
                  Copyright 1984-2022 The MathWorks, Inc.
                  R2022a (9.12.0.1884302) 64-bit (glnxa64)
                             February 16, 2022

 
To get started, type doc.
For product information, visit www.mathworks.com.
 

	Sponsored Third Party Support License -- for use only to support products interfaced to
	MathWorks software under terms specified in your company's restricted use license agreement.

ans =
    '/home/davis/master/GraphBLAS/GraphBLAS/@GrB/private'
>> cd ../../../Tc  Tcov/
>> grbcov
rm -f *.o *.d
rm -f *.mex* tmp*/* errlog*.txt grbstat.mat fprint.txt
rm -f libgraphblas_tcov.*
rm -f log.txt
[?1h=......................................
........................................
......................................
........................................
........................................
........................................
......................................
......................................
....................
hfile count: 2233
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
........................................
..........................
cfile count: 21586
Rename with -DGBMATLAB=1
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxor_uint8.c -o GB_aop__bxor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_bxor_uint64.c -o GB_AxB__bxor_bxor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_minus_uint16.c -o GB_AxB__plus_minus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_lt_fp32.c -o GB_AxB__land_lt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_code_string.c -o GB_code_string.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_first_uint64.c -o GB_AxB__max_first_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__le_bool.c -o GB_ew__le_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rdiv_int8.c -o GB_aop__rdiv_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_lt_int64.c -o GB_AxB__lxor_lt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bget_int32.c -o GB_ew__bget_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_diag.c -o GxB_Matrix_diag.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isne_uint64.c -o GB_aop__isne_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_div_fp64.c -o GB_AxB__min_div_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_notM_accum_whole.c -o GB_bitmap_assign_notM_accum_whole.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_assign_zombie5.c -o GB_assign_zombie5.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Descriptor_set.c -o GrB_Descriptor_set.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pow_fc64.c -o GB_ew__pow_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__le_thunk_fp64.c -o GB_sel__le_thunk_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__second_uint8.c -o GB_aop__second_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ne_uint32.c -o GB_ew__ne_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_second_fp32.c -o GB_AxB__max_second_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_binop_to_monoid.c -o GB_binop_to_monoid.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_lt_uint32.c -o GB_AxB__lor_lt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bor_int8.c -o GB_aop__bor_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_sh.c -o GB_AxB_saxpy3_sym_sh.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_second_uint64.c -o GB_AxB__times_second_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_eq_int64.c -o GB_AxB__land_eq_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_concat.c -o GB_concat.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_nrows.c -o GrB_Matrix_nrows.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lor_uint64.c -o GB_ew__lor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_bxor_uint32.c -o GB_AxB__bor_bxor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pair_bool.c -o GB_aop__pair_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_second_bool.c -o GB_AxB__any_second_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__isinf_bool_fp64.c -o GB_unop__isinf_bool_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__min_int16.c -o GB_aop__min_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint32_fc32.c -o GB_unop__identity_uint32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__plus_fc32.c -o GB_bld__plus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint64_int16.c -o GB_unop__identity_uint64_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__minus_uint16.c -o GB_aop__minus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint64_int64.c -o GB_unop__identity_uint64_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lt_int64.c -o GB_aop__lt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_hyper_prune.c -o GB_hyper_prune.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pair_uint16.c -o GB_ew__pair_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_plus_int32.c -o GB_AxB__times_plus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_lt_int32.c -o GB_AxB__lxor_lt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint32_uint32.c -o GB_unop__identity_uint32_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int64_fp64.c -o GB_unop__identity_int64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ainv_int32_int32.c -o GB_unop__ainv_int32_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_type_name.c -o GxB_Vector_type_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__nonzombie_uint32.c -o GB_sel__nonzombie_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_first_fp64.c -o GB_AxB__max_first_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_pair_uint8.c -o GB_AxB__plus_pair_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc64_fp32.c -o GB_unop__identity_fc64_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_min_fp32.c -o GB_AxB__plus_min_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_unpack_CSC.c -o GxB_Matrix_unpack_CSC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Pending_n.c -o GB_Pending_n.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_any_to_full.c -o GB_convert_any_to_full.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_hypermatrix_prune.c -o GB_hypermatrix_prune.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ne_thunk_fc64.c -o GB_sel__ne_thunk_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_op_is_second.c -o GB_op_is_second.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_band_uint64.c -o GB_AxB__bor_band_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isle_uint64.c -o GB_aop__isle_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_secondj_int64.c -o GB_AxB__any_secondj_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__eq_int16.c -o GB_ew__eq_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rminus_fc32.c -o GB_AxB__times_rminus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp64_fp32.c -o GB_unop__identity_fp64_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log10_fc32_fc32.c -o GB_unop__log10_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__min_int16.c -o GB_red__min_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__second_bool.c -o GB_aop__second_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ewise.c -o GB_ewise.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_first_fp64.c -o GB_AxB__min_first_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__times_fc64.c -o GB_bld__times_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint16_int32.c -o GB_unop__identity_uint16_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bclr_uint64.c -o GB_aop__bclr_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_resize.c -o GB_resize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lt_int8.c -o GB_ew__lt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_boolean_rename.c -o GB_boolean_rename.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__land_uint16.c -o GB_aop__land_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_08_jit.c -o GB_emult_08_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__eq_thunk_int8.c -o GB_sel__eq_thunk_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_second_uint64.c -o GB_AxB__max_second_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_dot2_control.c -o GB_AxB_dot2_control.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_second_bool.c -o GB_AxB__land_second_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ge_thunk_int32.c -o GB_sel__ge_thunk_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rminus_uint64.c -o GB_AxB__min_rminus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rdiv_uint8.c -o GB_AxB__times_rdiv_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ne_int32.c -o GB_AxB__lor_ne_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_lt_uint16.c -o GB_AxB__any_lt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__islt_fp64.c -o GB_ew__islt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__plus_int32.c -o GB_aop__plus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_times_uint16.c -o GB_AxB__plus_times_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__asinh_fp64_fp64.c -o GB_unop__asinh_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_gt_fp32.c -o GB_AxB__land_gt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_fullM_noaccum_whole.c -o GB_bitmap_assign_fullM_noaccum_whole.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_times_fc32.c -o GB_AxB__any_times_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Context_disengage.c -o GxB_Context_disengage.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pair_bool.c -o GB_ew__pair_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rdiv_fc32.c -o GB_ew__rdiv_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__eq_thunk_fp64.c -o GB_sel__eq_thunk_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__plus_fp64.c -o GB_aop__plus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Type_compatible.c -o GB_Type_compatible.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_qsort_1.c -o GB_qsort_1.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isne_int64.c -o GB_aop__isne_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_min_uint32.c -o GB_AxB__max_min_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_cumsum.c -o GB_AxB_saxpy3_cumsum.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_plus_fp64.c -o GB_AxB__plus_plus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__any_int8.c -o GB_bld__any_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__times_uint8.c -o GB_ew__times_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pair_fc64.c -o GB_aop__pair_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ge_uint32.c -o GB_AxB__eq_ge_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_gt_fp64.c -o GB_AxB__any_gt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__le_int32.c -o GB_aop__le_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_firstj_int32.c -o GB_AxB__plus_firstj_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_export_CSR.c -o GxB_Matrix_export_CSR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_minus_int16.c -o GB_AxB__any_minus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_bool_bool.c -o GB_unop__identity_bool_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_eq_uint8.c -o GB_AxB__any_eq_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_plus_uint16.c -o GB_AxB__times_plus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_second_int16.c -o GB_AxB__any_second_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__first_fp32.c -o GB_aop__first_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__minus_uint32.c -o GB_aop__minus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_firsti_int64.c -o GB_AxB__any_firsti_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__lnot_int64_int64.c -o GB_unop__lnot_int64_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_transpose.c -o GrB_transpose.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_plus_fc64.c -o GB_AxB__plus_plus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rdiv_int64.c -o GB_AxB__min_rdiv_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__second_uint32.c -o GB_aop__second_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_concat_full.c -o GB_concat_full.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_min_fp32.c -o GB_AxB__any_min_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Context_engage.c -o GxB_Context_engage.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_gt_int64.c -o GB_AxB__lor_gt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log10_fp32_fp32.c -o GB_unop__log10_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bor_int32.c -o GB_aop__bor_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_s2b_test.c -o GB_convert_s2b_test.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_as__uint16.c -o GB_as__uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_minus_uint64.c -o GB_AxB__plus_minus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxbit_generic_firsti64.c -o GB_AxB_saxbit_generic_firsti64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_import_Full.c -o GxB_Vector_import_Full.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_dup_worker.c -o GB_dup_worker.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int8_int64.c -o GB_unop__identity_int8_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__nonzombie_bool.c -o GB_sel__nonzombie_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__iseq_fc32.c -o GB_ew__iseq_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_second_uint64.c -o GB_AxB__plus_second_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__times_int8.c -o GB_red__times_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_full_to_bitmap.c -o GB_convert_full_to_bitmap.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint8_int64.c -o GB_unop__identity_uint8_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_first_uint64.c -o GB_AxB__any_first_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_plus_fp64.c -o GB_AxB__any_plus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pow_int32.c -o GB_aop__pow_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__gt_int32.c -o GB_ew__gt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_minus_uint8.c -o GB_AxB__max_minus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint8_uint64.c -o GB_unop__identity_uint8_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lxor_bool.c -o GB_ew__lxor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int16_uint8.c -o GB_unop__identity_int16_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pair_fp64.c -o GB_aop__pair_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__first_uint16.c -o GB_bld__first_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__first_uint64.c -o GB_bld__first_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pow_fp64.c -o GB_aop__pow_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__div_fc64.c -o GB_aop__div_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ne_thunk_fp64.c -o GB_sel__ne_thunk_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__expm1_fp64_fp64.c -o GB_unop__expm1_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pair_fc32.c -o GB_aop__pair_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_gt_uint8.c -o GB_AxB__land_gt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rminus_uint8.c -o GB_AxB__any_rminus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_select.c -o GxB_Vector_select.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_bitmap.c -o GB_emult_bitmap.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__eq_bool.c -o GB_aop__eq_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ainv_bool_bool.c -o GB_unop__ainv_bool_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__second_uint16.c -o GB_bld__second_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_min_uint32.c -o GB_AxB__times_min_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_pair_uint64.c -o GB_AxB__plus_pair_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxnor_uint16.c -o GB_ew__bxnor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__lnot_uint64_uint64.c -o GB_unop__lnot_uint64_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__times_int64.c -o GB_bld__times_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_max_int32.c -o GB_AxB__times_max_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint32_bool.c -o GB_unop__identity_uint32_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_fullM_accum_whole.c -o GB_bitmap_assign_fullM_accum_whole.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rdiv_uint64.c -o GB_AxB__max_rdiv_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_notM_noaccum_whole.c -o GB_bitmap_assign_notM_noaccum_whole.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__le_int16.c -o GB_ew__le_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rdiv_fp64.c -o GB_AxB__times_rdiv_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_one_slice.c -o GB_subassign_one_slice.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_07.c -o GB_subassign_07.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_nnz_held.c -o GB_nnz_held.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isge_fp64.c -o GB_aop__isge_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_06s_and_14.c -o GB_subassign_06s_and_14.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_div_fc32.c -o GB_AxB__plus_div_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ge_uint8.c -o GB_AxB__lxor_ge_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_bool_fp32.c -o GB_unop__identity_bool_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int32_int32.c -o GB_unop__identity_int32_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_nhf.c -o GB_AxB_saxpy3_sym_nhf.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_pack_FullC.c -o GxB_Matrix_pack_FullC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_memcpy.c -o GB_memcpy.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Context_get.c -o GxB_Context_get.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_div_uint8.c -o GB_AxB__any_div_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__erf_fp64_fp64.c -o GB_unop__erf_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rminus_int16.c -o GB_AxB__any_rminus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__tanh_fc64_fc64.c -o GB_unop__tanh_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Scalar_extractElement.c -o GrB_Scalar_extractElement.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxnor_int8.c -o GB_aop__bxnor_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_le_bool.c -o GB_AxB__eq_le_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_split_bitmap.c -o GB_split_bitmap.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_conform_hyper.c -o GB_conform_hyper.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__land_bool.c -o GB_red__land_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy_generic.c -o GB_AxB_saxpy_generic.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_Option_get.c -o GxB_Matrix_Option_get.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_msort_3.c -o GB_msort_3.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__bnot_int64_int64.c -o GB_unop__bnot_int64_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_bxnor_uint32.c -o GB_AxB__bxnor_bxnor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_split.c -o GxB_Matrix_split.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int8_uint64.c -o GB_unop__identity_int8_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_minus_fp64.c -o GB_AxB__max_minus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_lt_uint64.c -o GB_AxB__land_lt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_generic_secondj32.c -o GB_AxB_saxpy3_generic_secondj32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Descriptor_get.c -o GxB_Descriptor_get.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__exp_fc32_fc32.c -o GB_unop__exp_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_first_uint16.c -o GB_AxB__plus_first_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_eq_uint32.c -o GB_AxB__lxor_eq_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_le_uint64.c -o GB_AxB__lor_le_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint64_fc32.c -o GB_unop__identity_uint64_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log2_fp32_fp32.c -o GB_unop__log2_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_gt_int8.c -o GB_AxB__any_gt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint16_int8.c -o GB_unop__identity_uint16_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rminus_uint64.c -o GB_AxB__plus_rminus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_nvals.c -o GrB_Vector_nvals.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__erf_fp32_fp32.c -o GB_unop__erf_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__iseq_fp32.c -o GB_ew__iseq_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_second_fc64.c -o GB_AxB__any_second_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_min_fp64.c -o GB_AxB__min_min_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__min_fp64.c -o GB_ew__min_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__any_uint32.c -o GB_bld__any_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_accum_mask.c -o GB_accum_mask.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pow_int8.c -o GB_ew__pow_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rdiv_uint64.c -o GB_AxB__any_rdiv_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__hypot_fp64.c -o GB_aop__hypot_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_export_CSC.c -o GxB_Matrix_export_CSC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_UnaryOp_fprint.c -o GxB_UnaryOp_fprint.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_gt_int8.c -o GB_AxB__eq_gt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_band_uint64.c -o GB_AxB__bxor_band_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__le_thunk_int32.c -o GB_sel__le_thunk_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_rowscale_jit.c -o GB_rowscale_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_secondj1_int64.c -o GB_AxB__min_secondj1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bshift_uint32.c -o GB_aop__bshift_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_assign_prep.c -o GB_assign_prep.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__max_uint64.c -o GB_ew__max_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_firsti_int32.c -o GB_AxB__min_firsti_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_assign.c -o GB_macrofy_assign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxbit_generic_secondj64.c -o GB_AxB_saxbit_generic_secondj64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ge_bool.c -o GB_aop__ge_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__minus_int64.c -o GB_ew__minus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ne_int64.c -o GB_ew__ne_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__trunc_fp64_fp64.c -o GB_unop__trunc_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__eq_uint32.c -o GB_aop__eq_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_JITpackage.c -o GB_JITpackage.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_masker_phase2.c -o GB_masker_phase2.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__second_int64.c -o GB_ew__second_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint64_fc64.c -o GB_unop__identity_uint64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_export_FullC.c -o GxB_Matrix_export_FullC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__bnot_uint64_uint64.c -o GB_unop__bnot_uint64_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_eq_int16.c -o GB_AxB__eq_eq_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__asin_fp32_fp32.c -o GB_unop__asin_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__gt_thunk_uint8.c -o GB_sel__gt_thunk_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint16_bool.c -o GB_unop__identity_uint16_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rdiv_int16.c -o GB_AxB__max_rdiv_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_pair_int64.c -o GB_AxB__plus_pair_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_apply_bind2nd_jit.c -o GB_apply_bind2nd_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_pack_CSC.c -o GxB_Vector_pack_CSC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__cosh_fc32_fc32.c -o GB_unop__cosh_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_prejit.c -o GB_prejit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isge_int32.c -o GB_aop__isge_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lxor_uint64.c -o GB_ew__lxor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_first_fp32.c -o GB_AxB__times_first_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_reduce_to_scalar.c -o GB_reduce_to_scalar.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint8_uint8.c -o GB_unop__identity_uint8_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_firstj_int32.c -o GB_AxB__max_firstj_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__iseq_fp64.c -o GB_ew__iseq_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ge_uint32.c -o GB_AxB__lxor_ge_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_max_fp64.c -o GB_AxB__times_max_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_binop_builtin.c -o GB_binop_builtin.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc32_int64.c -o GB_unop__identity_fc32_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_cast_input.c -o GB_macrofy_cast_input.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isle_int8.c -o GB_ew__isle_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rminus_int64.c -o GB_AxB__plus_rminus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_le_bool.c -o GB_AxB__any_le_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ne_uint8.c -o GB_AxB__any_ne_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__eq_thunk_uint16.c -o GB_sel__eq_thunk_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_max_fp64.c -o GB_AxB__max_max_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isgt_fp32.c -o GB_aop__isgt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_free.c -o GrB_Matrix_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rdiv_fc32.c -o GB_AxB__plus_rdiv_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_div_uint32.c -o GB_AxB__max_div_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__min_fp32.c -o GB_bld__min_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rminus_uint8.c -o GB_aop__rminus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_gt_fp64.c -o GB_AxB__lxor_gt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__tanh_fc32_fc32.c -o GB_unop__tanh_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rminus_fp32.c -o GB_AxB__max_rminus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isge_int16.c -o GB_ew__isge_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxbit_generic_second.c -o GB_AxB_saxbit_generic_second.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_mxm.c -o GrB_mxm.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__any_fc32.c -o GB_red__any_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_colscale_jit.c -o GB_colscale_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ge_int16.c -o GB_AxB__any_ge_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__isnan_bool_fc32.c -o GB_unop__isnan_bool_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Semiring_wait.c -o GrB_Semiring_wait.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_export_HyperCSC.c -o GxB_Matrix_export_HyperCSC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_dot3_slice.c -o GB_AxB_dot3_slice.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rdiv_fp64.c -o GB_AxB__min_rdiv_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_new_bix.c -o GB_new_bix.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rminus_int8.c -o GB_AxB__min_rminus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select_positional_bitmap.c -o GB_select_positional_bitmap.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ge_uint32.c -o GB_aop__ge_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bor_uint64.c -o GB_ew__bor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_shallow_op.c -o GB_shallow_op.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_secondj1_int32.c -o GB_AxB__min_secondj1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_hf.c -o GB_AxB_saxpy3_sym_hf.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Scalar_free.c -o GrB_Scalar_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ge_int16.c -o GB_AxB__eq_ge_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_cumsum.c -o GB_cumsum.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_div_int8.c -o GB_AxB__min_div_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_gt_fp64.c -o GB_AxB__eq_gt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__times_uint16.c -o GB_red__times_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_Option_set.c -o GxB_Vector_Option_set.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__le_thunk_int8.c -o GB_sel__le_thunk_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Descriptor_wait.c -o GrB_Descriptor_wait.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pow_uint8.c -o GB_aop__pow_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_qsort_1b.c -o GB_qsort_1b.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__trunc_fp32_fp32.c -o GB_unop__trunc_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxbit_generic_firstj32.c -o GB_AxB_saxbit_generic_firstj32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Pending_alloc.c -o GB_Pending_alloc.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint16_uint16.c -o GB_unop__identity_uint16_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ldexp_fp64.c -o GB_ew__ldexp_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__div_int64.c -o GB_aop__div_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_le_int16.c -o GB_AxB__lxor_le_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_gt_fp32.c -o GB_AxB__lor_gt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint32_uint16.c -o GB_unop__identity_uint32_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__eq_uint8.c -o GB_aop__eq_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_le_fp32.c -o GB_AxB__lxor_le_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isne_uint32.c -o GB_ew__isne_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_le_uint8.c -o GB_AxB__any_le_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_rowscale.c -o GB_rowscale.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ge_thunk_uint16.c -o GB_sel__ge_thunk_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_name.c -o GB_macrofy_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_lt_fp64.c -o GB_AxB__eq_lt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select_generic_phase1.c -o GB_select_generic_phase1.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_cast_copy.c -o GB_macrofy_cast_copy.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_le_uint8.c -o GB_AxB__eq_le_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_div_int64.c -o GB_AxB__max_div_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_iso.c -o GxB_Matrix_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_max_fp64.c -o GB_AxB__plus_max_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bclr_uint16.c -o GB_ew__bclr_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_mhb.c -o GB_AxB_saxpy3_sym_mhb.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_eq_bool.c -o GB_AxB__any_eq_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_div_uint32.c -o GB_AxB__plus_div_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_minus_int32.c -o GB_AxB__max_minus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_minus_uint8.c -o GB_AxB__times_minus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_hyper_realloc.c -o GB_hyper_realloc.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_first_int8.c -o GB_AxB__max_first_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rminus_fp32.c -o GB_AxB__plus_rminus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__times_fp64.c -o GB_bld__times_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_nfh.c -o GB_AxB_saxpy3_sym_nfh.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__asin_fc64_fc64.c -o GB_unop__asin_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_eq_fp32.c -o GB_AxB__lor_eq_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__islt_int64.c -o GB_aop__islt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_BinaryOp_ytype_name.c -o GxB_BinaryOp_ytype_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__exp2_fp64_fp64.c -o GB_unop__exp2_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__second_fc32.c -o GB_aop__second_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__first_uint64.c -o GB_aop__first_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_monoid.c -o GB_enumify_monoid.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_binop.c -o GB_macrofy_binop.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_eq_bool.c -o GB_AxB__eq_eq_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_min_int16.c -o GB_AxB__times_min_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rminus_uint32.c -o GB_AxB__any_rminus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_extractTuples.c -o GrB_Matrix_extractTuples.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_concat_sparse.c -o GB_concat_sparse.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_min_uint64.c -o GB_AxB__any_min_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_div_uint8.c -o GB_AxB__max_div_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aliased.c -o GB_aliased.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_gt_uint64.c -o GB_AxB__land_gt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_firstj_int32.c -o GB_AxB__any_firstj_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Iterator_rc_bitmap_next.c -o GB_Iterator_rc_bitmap_next.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int64_int8.c -o GB_unop__identity_int64_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rdiv_int8.c -o GB_ew__rdiv_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_transpose.c -o GB_transpose.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_times_int16.c -o GB_AxB__min_times_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ainv_uint16_uint16.c -o GB_unop__ainv_uint16_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_eq_int8.c -o GB_AxB__lor_eq_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Iterator_new.c -o GxB_Iterator_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_IndexUnaryOp_ytype_name.c -o GxB_IndexUnaryOp_ytype_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_exportSize.c -o GrB_Matrix_exportSize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_plus_fp32.c -o GB_AxB__any_plus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isle_uint32.c -o GB_ew__isle_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_bool_int16.c -o GB_unop__identity_bool_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp32_fc64.c -o GB_unop__identity_fp32_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_pack_HyperCSC.c -o GxB_Matrix_pack_HyperCSC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_17.c -o GB_subassign_17.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bor_uint16.c -o GB_aop__bor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pow_int64.c -o GB_aop__pow_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ge_uint64.c -o GB_ew__ge_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_bor_uint16.c -o GB_AxB__bor_bor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_minus_int64.c -o GB_AxB__min_minus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__times_uint32.c -o GB_ew__times_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__atan_fp32_fp32.c -o GB_unop__atan_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_bxnor_uint32.c -o GB_AxB__band_bxnor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_zstd.c -o GB_zstd.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__iseq_int16.c -o GB_aop__iseq_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_second_int64.c -o GB_AxB__min_second_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_bxnor_uint64.c -o GB_AxB__band_bxnor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rminus_uint8.c -o GB_AxB__plus_rminus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_min_fp32.c -o GB_AxB__times_min_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ge_bool.c -o GB_AxB__any_ge_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_masker_phase1.c -o GB_masker_phase1.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_second_bool.c -o GB_AxB__lxor_second_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign.c -o GB_subassign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lt_uint16.c -o GB_aop__lt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_BinaryOp_new.c -o GrB_BinaryOp_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ne_fc32.c -o GB_aop__ne_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lt_uint32.c -o GB_aop__lt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_sparsity.c -o GB_emult_sparsity.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_times_uint64.c -o GB_AxB__times_times_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_lt_bool.c -o GB_AxB__lor_lt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ge_fp32.c -o GB_AxB__lor_ge_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__sin_fp32_fp32.c -o GB_unop__sin_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_omp.c -o GB_omp.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_first_int8.c -o GB_AxB__plus_first_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isne_uint8.c -o GB_ew__isne_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__le_int16.c -o GB_aop__le_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__land_int64.c -o GB_aop__land_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lxor_int16.c -o GB_ew__lxor_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__any_uint8.c -o GB_red__any_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_lt_int16.c -o GB_AxB__lor_lt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int32_uint64.c -o GB_unop__identity_int32_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_plus_int32.c -o GB_AxB__plus_plus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_eq_uint32.c -o GB_AxB__eq_eq_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__second_int32.c -o GB_bld__second_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_land_uint32.c -o GB_AxB__plus_land_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_times_int16.c -o GB_AxB__plus_times_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_demacrofy_name.c -o GB_demacrofy_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_div_uint64.c -o GB_AxB__times_div_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_max_uint16.c -o GB_AxB__times_max_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_IndexUnaryOp_new.c -o GrB_IndexUnaryOp_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select_column.c -o GB_select_column.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isge_int64.c -o GB_aop__isge_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_first_fp64.c -o GB_AxB__times_first_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__second_fp64.c -o GB_bld__second_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_ncols.c -o GrB_Matrix_ncols.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__iseq_fp32.c -o GB_aop__iseq_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__times_int32.c -o GB_red__times_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_times_int8.c -o GB_AxB__times_times_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxnor_int32.c -o GB_ew__bxnor_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_first_bool.c -o GB_AxB__any_first_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_split.c -o GB_split.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ne_int8.c -o GB_AxB__land_ne_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__sqrt_fp32_fp32.c -o GB_unop__sqrt_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subref_phase3.c -o GB_subref_phase3.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_times_uint16.c -o GB_AxB__any_times_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_reduce.c -o GrB_Vector_reduce.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log_fc64_fc64.c -o GB_unop__log_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int8_fc64.c -o GB_unop__identity_int8_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__times_int16.c -o GB_aop__times_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pow_int8.c -o GB_aop__pow_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__min_uint64.c -o GB_red__min_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_eq_uint16.c -o GB_AxB__land_eq_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__cimag_fp32_fc32.c -o GB_unop__cimag_fp32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_minus_int8.c -o GB_AxB__min_minus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ne_thunk_int8.c -o GB_sel__ne_thunk_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc64_fc32.c -o GB_unop__identity_fc64_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_min_fp64.c -o GB_AxB__any_min_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__max_fp32.c -o GB_red__max_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_times_uint32.c -o GB_AxB__plus_times_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_serialize_method.c -o GB_serialize_method.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__first_int64.c -o GB_aop__first_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_plus_uint64.c -o GB_AxB__max_plus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ge_fp64.c -o GB_AxB__land_ge_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_div_int32.c -o GB_AxB__any_div_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint64_uint16.c -o GB_unop__identity_uint64_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__minus_int64.c -o GB_aop__minus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_min_fp64.c -o GB_AxB__plus_min_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ne_int16.c -o GB_ew__ne_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_second_int64.c -o GB_AxB__times_second_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__max_uint16.c -o GB_red__max_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_times_uint64.c -o GB_AxB__any_times_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_firsti_int32.c -o GB_AxB__any_firsti_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__cos_fp64_fp64.c -o GB_unop__cos_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_eq_uint8.c -o GB_AxB__lor_eq_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__plus_fc64.c -o GB_red__plus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ge_thunk_uint64.c -o GB_sel__ge_thunk_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rdiv_int32.c -o GB_AxB__min_rdiv_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_eq_fp32.c -o GB_AxB__land_eq_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_div_fc64.c -o GB_AxB__any_div_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_type.c -o GxB_Vector_type.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_new.c -o GrB_Matrix_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subref_phase0.c -o GB_subref_phase0.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_monoid.c -o GB_macrofy_monoid.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__asinh_fc32_fc32.c -o GB_unop__asinh_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bclr_uint64.c -o GB_ew__bclr_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_first_fp32.c -o GB_AxB__plus_first_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bor_int16.c -o GB_ew__bor_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_minus_uint32.c -o GB_AxB__plus_minus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_eq_fp64.c -o GB_AxB__lxor_eq_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_le_int8.c -o GB_AxB__land_le_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rminus_int8.c -o GB_AxB__max_rminus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bor_uint16.c -o GB_ew__bor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_second_uint32.c -o GB_AxB__plus_second_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ge_fp32.c -o GB_AxB__eq_ge_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_shallow_copy.c -o GB_shallow_copy.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__any_int16.c -o GB_bld__any_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__atan_fc32_fc32.c -o GB_unop__atan_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_first_uint32.c -o GB_AxB__any_first_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__floor_fp32_fp32.c -o GB_unop__floor_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_encodify_user_type.c -o GB_encodify_user_type.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_finalize.c -o GrB_finalize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__exp_fc64_fc64.c -o GB_unop__exp_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_import_BitmapC.c -o GxB_Matrix_import_BitmapC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isgt_int16.c -o GB_ew__isgt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ge_uint16.c -o GB_AxB__land_ge_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_add_phase2.c -o GB_add_phase2.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__max_fp64.c -o GB_bld__max_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_as__uint8.c -o GB_as__uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_reshapeDup.c -o GxB_Matrix_reshapeDup.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__round_fp64_fp64.c -o GB_unop__round_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_min_int64.c -o GB_AxB__times_min_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_bxor_uint64.c -o GB_AxB__bxnor_bxor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__nonzombie_fc64.c -o GB_sel__nonzombie_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lt_fp32.c -o GB_ew__lt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__gt_uint32.c -o GB_ew__gt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_fprint.c -o GxB_Matrix_fprint.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lor_uint8.c -o GB_ew__lor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_to_full.c -o GB_bitmap_assign_to_full.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_bool_int64.c -o GB_unop__identity_bool_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__min_fp64.c -o GB_aop__min_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lt_uint64.c -o GB_ew__lt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_iso.c -o GB_emult_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_min_uint16.c -o GB_AxB__min_min_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bor_uint64.c -o GB_aop__bor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bset_uint16.c -o GB_ew__bset_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__min_fp32.c -o GB_ew__min_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint32_fp32.c -o GB_unop__identity_uint32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_max_int16.c -o GB_AxB__min_max_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lor_bool.c -o GB_ew__lor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_div_int16.c -o GB_AxB__max_div_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_le_uint16.c -o GB_AxB__lxor_le_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_assign_zombie1.c -o GB_assign_zombie1.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__plus_uint16.c -o GB_red__plus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Type_new.c -o GrB_Type_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_compatible.c -o GB_compatible.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log_fc32_fc32.c -o GB_unop__log_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_export.c -o GrB_Matrix_export.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_first_uint8.c -o GB_AxB__min_first_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_div_int8.c -o GB_AxB__plus_div_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_typedefs.c -o GB_macrofy_typedefs.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__land_bool.c -o GB_bld__land_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_06n.c -o GB_subassign_06n.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__nonzombie_int64.c -o GB_sel__nonzombie_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_BinaryOp_ztype.c -o GxB_BinaryOp_ztype.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bshift_uint8.c -o GB_ew__bshift_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__band_uint16.c -o GB_ew__band_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__sinh_fc64_fc64.c -o GB_unop__sinh_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__max_uint32.c -o GB_ew__max_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rminus_int16.c -o GB_AxB__min_rminus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc32_fc64.c -o GB_unop__identity_fc32_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_lt_fp32.c -o GB_AxB__lor_lt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Context_fprint.c -o GxB_Context_fprint.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isne_uint32.c -o GB_aop__isne_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__cosh_fc64_fc64.c -o GB_unop__cosh_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_02.c -o GB_emult_02.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lxor_int64.c -o GB_ew__lxor_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_lt_int64.c -o GB_AxB__lor_lt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int64_fc64.c -o GB_unop__identity_int64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_eq_fp64.c -o GB_AxB__land_eq_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_flip_binop.c -o GB_flip_binop.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bclr_uint16.c -o GB_aop__bclr_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_times_uint64.c -o GB_AxB__max_times_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__minus_fp64.c -o GB_ew__minus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_minus_uint8.c -o GB_AxB__plus_minus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_eq_int32.c -o GB_AxB__land_eq_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_xalloc_memory.c -o GB_xalloc_memory.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Context_new.c -o GxB_Context_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__plus_fp64.c -o GB_bld__plus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lor_uint32.c -o GB_ew__lor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__tan_fc64_fc64.c -o GB_unop__tan_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__second_fp64.c -o GB_ew__second_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_second_uint8.c -o GB_AxB__plus_second_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__minv_int64_int64.c -o GB_unop__minv_int64_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rminus_int16.c -o GB_AxB__times_rminus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__first_int8.c -o GB_bld__first_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_eq_int32.c -o GB_AxB__lor_eq_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__le_int32.c -o GB_ew__le_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint32_int64.c -o GB_unop__identity_uint32_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_max_uint16.c -o GB_AxB__max_max_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lt_int32.c -o GB_aop__lt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__min_uint32.c -o GB_red__min_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__times_fp32.c -o GB_red__times_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_eq_fp64.c -o GB_AxB__lor_eq_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pair_int16.c -o GB_aop__pair_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ge_int8.c -o GB_AxB__eq_ge_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_gt_uint16.c -o GB_AxB__lxor_gt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_gt_int16.c -o GB_AxB__eq_gt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_pack_CSC.c -o GxB_Matrix_pack_CSC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_sort.c -o GxB_Vector_sort.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_qsort_2.c -o GB_qsort_2.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp32_uint16.c -o GB_unop__identity_fp32_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ne_uint8.c -o GB_aop__ne_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ge_uint8.c -o GB_aop__ge_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_band_uint32.c -o GB_AxB__bor_band_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isle_uint32.c -o GB_aop__isle_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__le_int64.c -o GB_ew__le_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__min_uint8.c -o GB_bld__min_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int64_uint32.c -o GB_unop__identity_int64_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ge_thunk_fp32.c -o GB_sel__ge_thunk_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pow_uint8.c -o GB_ew__pow_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_pair_fc64.c -o GB_AxB__plus_pair_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__minus_uint32.c -o GB_ew__minus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__plus_uint8.c -o GB_bld__plus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_concat_bitmap_jit.c -o GB_concat_bitmap_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rdiv_uint8.c -o GB_AxB__max_rdiv_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__plus_uint32.c -o GB_ew__plus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp64_uint64.c -o GB_unop__identity_fp64_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__atanh_fp64_fp64.c -o GB_unop__atanh_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__lt_thunk_int16.c -o GB_sel__lt_thunk_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_02_phase1.c -o GB_emult_02_phase1.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log2_fc64_fc64.c -o GB_unop__log2_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_band_uint8.c -o GB_AxB__band_band_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_pair_uint16.c -o GB_AxB__plus_pair_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_SelectOp_fprint.c -o GxB_SelectOp_fprint.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_generic_firsti64.c -o GB_AxB_saxpy3_generic_firsti64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__gt_uint16.c -o GB_aop__gt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_minus_int64.c -o GB_AxB__any_minus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ge_int32.c -o GB_AxB__land_ge_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_UnaryOp_wait.c -o GrB_UnaryOp_wait.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ewise_fulla_jit.c -o GB_ewise_fulla_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_times_uint64.c -o GB_AxB__plus_times_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_second_int64.c -o GB_AxB__any_second_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__max_int64.c -o GB_red__max_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_lt_int8.c -o GB_AxB__lxor_lt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ge_uint64.c -o GB_AxB__land_ge_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bshift_uint64.c -o GB_aop__bshift_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_bxor_uint32.c -o GB_AxB__bxnor_bxor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ne_int16.c -o GB_aop__ne_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_first_fc32.c -o GB_AxB__times_first_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_add_sparsity.c -o GB_add_sparsity.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lxor_int16.c -o GB_aop__lxor_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_lt_uint16.c -o GB_AxB__eq_lt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__sinh_fc32_fc32.c -o GB_unop__sinh_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_transplant.c -o GB_transplant.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_input.c -o GB_macrofy_input.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_min_int32.c -o GB_AxB__min_min_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bset_int32.c -o GB_ew__bset_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_max_uint16.c -o GB_AxB__plus_max_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_as__uint64.c -o GB_as__uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_cast_output.c -o GB_macrofy_cast_output.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__div_fp64.c -o GB_aop__div_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_bitmap_to_sparse.c -o GB_convert_bitmap_to_sparse.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_eq_int8.c -o GB_AxB__land_eq_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__plus_int32.c -o GB_red__plus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint64_int32.c -o GB_unop__identity_uint64_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__eq_thunk_int32.c -o GB_sel__eq_thunk_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__times_uint16.c -o GB_bld__times_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__minv_fp64_fp64.c -o GB_unop__minv_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__iseq_int16.c -o GB_ew__iseq_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_lt_fp32.c -o GB_AxB__any_lt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__minus_fc64.c -o GB_ew__minus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_defn.c -o GB_macrofy_defn.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_times_fp32.c -o GB_AxB__plus_times_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Context_free.c -o GxB_Context_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__plus_fc64.c -o GB_bld__plus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__min_uint16.c -o GB_bld__min_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_secondj_int64.c -o GB_AxB__min_secondj_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__second_fc64.c -o GB_ew__second_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__tan_fc32_fc32.c -o GB_unop__tan_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lt_int8.c -o GB_aop__lt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__min_uint8.c -o GB_red__min_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lor_uint16.c -o GB_AxB__plus_lor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_transpose_op.c -o GB_transpose_op.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_min_int8.c -o GB_AxB__times_min_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__max_int8.c -o GB_red__max_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_div_int32.c -o GB_AxB__times_div_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isgt_uint32.c -o GB_ew__isgt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_identity.c -o GB_enumify_identity.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rdiv_fp64.c -o GB_ew__rdiv_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rdiv_uint8.c -o GB_AxB__plus_rdiv_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_max_uint8.c -o GB_AxB__min_max_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_apply.c -o GB_apply.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__second_uint64.c -o GB_bld__second_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Global_Option_set.c -o GxB_Global_Option_set.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_deserialize.c -o GxB_Matrix_deserialize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_band_uint16.c -o GB_AxB__bxnor_band_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxnor_uint64.c -o GB_ew__bxnor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_plus_fc32.c -o GB_AxB__any_plus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_bor_uint8.c -o GB_AxB__band_bor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bclr_int32.c -o GB_aop__bclr_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isge_int8.c -o GB_aop__isge_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_minus_fp32.c -o GB_AxB__any_minus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_UnaryOp_check.c -o GB_UnaryOp_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__abs_fp64_fp64.c -o GB_unop__abs_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rdiv_int16.c -o GB_AxB__times_rdiv_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__round_fc64_fc64.c -o GB_unop__round_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_memoryUsage.c -o GxB_Matrix_memoryUsage.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__plus_uint8.c -o GB_ew__plus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__times_fp32.c -o GB_aop__times_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__times_uint8.c -o GB_aop__times_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_fs.c -o GB_AxB_saxpy3_sym_fs.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_max_fp32.c -o GB_AxB__times_max_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_max_int32.c -o GB_AxB__max_max_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ne_fp64.c -o GB_AxB__land_ne_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int8_uint32.c -o GB_unop__identity_int8_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_gt_int32.c -o GB_AxB__lxor_gt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__second_int16.c -o GB_bld__second_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_slice_balanced.c -o GB_AxB_saxpy3_slice_balanced.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pair_uint64.c -o GB_aop__pair_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_lxor_bool.c -o GB_AxB__lxor_lxor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_as__int32.c -o GB_as__int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_init.c -o GB_init.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_assign_zombie2.c -o GB_assign_zombie2.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__eq_fp64.c -o GB_ew__eq_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp32_int32.c -o GB_unop__identity_fp32_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__acosh_fc32_fc32.c -o GB_unop__acosh_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_minus_int16.c -o GB_AxB__max_minus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Semiring_multiply.c -o GxB_Semiring_multiply.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_full_to_sparse.c -o GB_convert_full_to_sparse.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Semiring_fprint.c -o GxB_Semiring_fprint.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rminus_int64.c -o GB_ew__rminus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_min_int32.c -o GB_AxB__any_min_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_plus_int16.c -o GB_AxB__min_plus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__minus_fp32.c -o GB_aop__minus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_mss.c -o GB_AxB_saxpy3_sym_mss.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_min_int8.c -o GB_AxB__min_min_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__plus_int16.c -o GB_bld__plus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bset_int8.c -o GB_ew__bset_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log1p_fc64_fc64.c -o GB_unop__log1p_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bclr_uint8.c -o GB_aop__bclr_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rdiv_int64.c -o GB_AxB__any_rdiv_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_le_uint16.c -o GB_AxB__land_le_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isge_uint64.c -o GB_aop__isge_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__plus_uint16.c -o GB_bld__plus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bshift_uint16.c -o GB_ew__bshift_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__plus_int8.c -o GB_red__plus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isne_fc64.c -o GB_ew__isne_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_serialize_to_blob.c -o GB_serialize_to_blob.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_add_phase1.c -o GB_add_phase1.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__min_int64.c -o GB_aop__min_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__signum_fp32_fp32.c -o GB_unop__signum_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__eq_thunk_fc32.c -o GB_sel__eq_thunk_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__gt_int32.c -o GB_aop__gt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_flopcount.c -o GB_AxB_saxpy3_flopcount.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__cos_fc32_fc32.c -o GB_unop__cos_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rminus_uint32.c -o GB_AxB__times_rminus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__plus_int16.c -o GB_aop__plus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_eWiseAdd.c -o GrB_Matrix_eWiseAdd.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pair_uint64.c -o GB_ew__pair_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_times_int32.c -o GB_AxB__max_times_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_assign_burble.c -o GB_assign_burble.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__band_int8.c -o GB_ew__band_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subref_phase2.c -o GB_subref_phase2.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_land_bool.c -o GB_AxB__lor_land_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_le_fp64.c -o GB_AxB__land_le_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rdiv_fc64.c -o GB_ew__rdiv_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_times_uint32.c -o GB_AxB__max_times_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_any_to_sparse.c -o GB_convert_any_to_sparse.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isgt_uint8.c -o GB_ew__isgt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__max_int32.c -o GB_aop__max_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__second_fp64.c -o GB_aop__second_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_max_uint16.c -o GB_AxB__min_max_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxbit_generic_unflipped.c -o GB_AxB_saxbit_generic_unflipped.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_second_int16.c -o GB_AxB__min_second_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Iterator_attach.c -o GB_Iterator_attach.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_plus_uint32.c -o GB_AxB__min_plus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__islt_uint16.c -o GB_ew__islt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_plus_fp32.c -o GB_AxB__times_plus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select_phase1_jit.c -o GB_select_phase1_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxor_uint16.c -o GB_aop__bxor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_lt_int8.c -o GB_AxB__land_lt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_max_int32.c -o GB_AxB__plus_max_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_split_sparse_jit.c -o GB_split_sparse_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bclr_int8.c -o GB_aop__bclr_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ainv_int8_int8.c -o GB_unop__ainv_int8_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_bor_uint64.c -o GB_AxB__band_bor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ne_uint32.c -o GB_AxB__lxor_ne_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_bor_uint64.c -o GB_AxB__bxnor_bor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__frexpe_fp32_fp32.c -o GB_unop__frexpe_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxnor_uint32.c -o GB_ew__bxnor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isgt_fp32.c -o GB_ew__isgt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_wait.c -o GrB_Matrix_wait.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_minus_uint8.c -o GB_AxB__any_minus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__remainder_fp64.c -o GB_aop__remainder_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_serialize.c -o GxB_Matrix_serialize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isne_int64.c -o GB_ew__isne_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ne_uint64.c -o GB_AxB__lor_ne_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_as__fp32.c -o GB_as__fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__abs_fp64_fc64.c -o GB_unop__abs_fp64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__gt_fp64.c -o GB_aop__gt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__lt_thunk_uint32.c -o GB_sel__lt_thunk_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__round_fc32_fc32.c -o GB_unop__round_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_max_int8.c -o GB_AxB__max_max_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Scalar_clear.c -o GrB_Scalar_clear.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lor_int32.c -o GB_AxB__plus_lor_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__plus_fc64.c -o GB_aop__plus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__le_bool.c -o GB_aop__le_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__max_uint64.c -o GB_aop__max_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc64_uint64.c -o GB_unop__identity_fc64_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__atanh_fc64_fc64.c -o GB_unop__atanh_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ne_int16.c -o GB_AxB__any_ne_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lor_fp64.c -o GB_ew__lor_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp32_int8.c -o GB_unop__identity_fp32_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_gt_uint16.c -o GB_AxB__eq_gt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_helper.c -o GB_helper.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_removeElement.c -o GrB_Matrix_removeElement.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pow_fc64.c -o GB_aop__pow_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign.c -o GB_bitmap_assign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_id.c -o GB_macrofy_id.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rminus_int16.c -o GB_aop__rminus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__min_int32.c -o GB_bld__min_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lxor_uint32.c -o GB_aop__lxor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lor_int8.c -o GB_AxB__plus_lor_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_div_fp64.c -o GB_AxB__any_div_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_colIterator.c -o GxB_colIterator.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_08n_slice.c -o GB_subassign_08n_slice.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__second_fp32.c -o GB_bld__second_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_export_Full.c -o GxB_Vector_export_Full.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_import_CSR.c -o GxB_Matrix_import_CSR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_add_phase0.c -o GB_add_phase0.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lor_uint64.c -o GB_aop__lor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_encodify_mxm.c -o GB_encodify_mxm.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_le_uint32.c -o GB_AxB__lxor_le_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ge_uint32.c -o GB_AxB__any_ge_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_cpu_features_support.c -o GB_cpu_features_support.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rdiv_int32.c -o GB_ew__rdiv_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lxor_uint64.c -o GB_AxB__plus_lxor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__land_uint16.c -o GB_ew__land_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__iseq_uint32.c -o GB_ew__iseq_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__gt_int8.c -o GB_aop__gt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_lt_int8.c -o GB_AxB__any_lt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rminus_uint8.c -o GB_AxB__times_rminus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int16_uint32.c -o GB_unop__identity_int16_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pair_uint16.c -o GB_aop__pair_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_times_uint8.c -o GB_AxB__max_times_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isge_uint8.c -o GB_aop__isge_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__isfinite_bool_fc64.c -o GB_unop__isfinite_bool_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isgt_uint16.c -o GB_aop__isgt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_plus_int64.c -o GB_AxB__times_plus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select_sparse.c -o GB_select_sparse.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_24.c -o GB_subassign_24.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_SelectOp_ttype.c -o GxB_SelectOp_ttype.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__any_uint64.c -o GB_red__any_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Scalar_reduce.c -o GB_Scalar_reduce.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_lt_int8.c -o GB_AxB__eq_lt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_eq_uint16.c -o GB_AxB__any_eq_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__first_fp64.c -o GB_bld__first_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_plus_uint8.c -o GB_AxB__min_plus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_le_int16.c -o GB_AxB__any_le_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__any_int16.c -o GB_red__any_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_times_fc32.c -o GB_AxB__times_times_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_pack_CSR.c -o GxB_Matrix_pack_CSR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lxor_int8.c -o GB_ew__lxor_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__eq_int16.c -o GB_aop__eq_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_12_and_20.c -o GB_subassign_12_and_20.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_generic_first.c -o GB_AxB_saxpy3_generic_first.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_eq_uint32.c -o GB_AxB__any_eq_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ne_uint8.c -o GB_AxB__lxor_ne_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__le_uint32.c -o GB_aop__le_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bshift_int32.c -o GB_ew__bshift_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__plus_int64.c -o GB_red__plus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_apply.c -o GrB_Matrix_apply.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_serialize.c -o GB_serialize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__plus_uint64.c -o GB_aop__plus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ne_fp64.c -o GB_AxB__any_ne_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_le_int16.c -o GB_AxB__eq_le_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__land_int64.c -o GB_ew__land_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Col_subassign.c -o GxB_Col_subassign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_binop.c -o GB_enumify_binop.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_first_int16.c -o GB_AxB__min_first_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_import_FullR.c -o GxB_Matrix_import_FullR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__isnan_bool_fp64.c -o GB_unop__isnan_bool_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Monoid_free.c -o GrB_Monoid_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_div_int64.c -o GB_AxB__times_div_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_apply_op.c -o GB_apply_op.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ge_int16.c -o GB_AxB__lxor_ge_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Col_assign.c -o GrB_Col_assign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__times_int64.c -o GB_aop__times_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__min_int32.c -o GB_ew__min_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__sin_fc32_fc32.c -o GB_unop__sin_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_firstj1_int32.c -o GB_AxB__max_firstj1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_as__int8.c -o GB_as__int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_firsti_int64.c -o GB_AxB__times_firsti_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bget_int8.c -o GB_aop__bget_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bget_int32.c -o GB_aop__bget_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__gt_fp32.c -o GB_ew__gt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_div_uint16.c -o GB_AxB__min_div_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pair_int64.c -o GB_ew__pair_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__islt_int32.c -o GB_ew__islt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Type_size.c -o GxB_Type_size.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxnor_int32.c -o GB_aop__bxnor_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__le_thunk_uint16.c -o GB_sel__le_thunk_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__islt_uint32.c -o GB_ew__islt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__atanh_fc32_fc32.c -o GB_unop__atanh_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__min_int8.c -o GB_ew__min_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__times_uint32.c -o GB_aop__times_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bset_int64.c -o GB_aop__bset_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int64_int16.c -o GB_unop__identity_int64_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_min_int8.c -o GB_AxB__plus_min_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Desc_get.c -o GxB_Desc_get.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_bool_int32.c -o GB_unop__identity_bool_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__second_fc64.c -o GB_bld__second_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_lt_fp64.c -o GB_AxB__lxor_lt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ne_uint8.c -o GB_AxB__eq_ne_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_le_fp32.c -o GB_AxB__lor_le_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_new.c -o GrB_Vector_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_as__fc64.c -o GB_as__fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_first_uint64.c -o GB_AxB__times_first_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_subassign_scalar.c -o GxB_Matrix_subassign_scalar.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_gt_int32.c -o GB_AxB__any_gt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ge_int16.c -o GB_aop__ge_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_lxor_bool.c -o GB_AxB__any_lxor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_bxnor_uint32.c -o GB_AxB__bxor_bxnor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__iseq_uint8.c -o GB_ew__iseq_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__div_uint8.c -o GB_aop__div_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_s2b_jit.c -o GB_convert_s2b_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__land_int16.c -o GB_aop__land_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__band_int64.c -o GB_aop__band_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ne_fp32.c -o GB_AxB__lor_ne_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pow_int32.c -o GB_ew__pow_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_vxm.c -o GrB_vxm.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_pack_HyperCSR.c -o GxB_Matrix_pack_HyperCSR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isgt_uint64.c -o GB_aop__isgt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_gt_int32.c -o GB_AxB__eq_gt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_lxor_bool.c -o GB_AxB__eq_lxor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rminus_uint64.c -o GB_AxB__max_rminus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subref.c -o GB_subref.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__max_fp32.c -o GB_aop__max_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__minv_fc32_fc32.c -o GB_unop__minv_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__min_int8.c -o GB_aop__min_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint64_fp64.c -o GB_unop__identity_uint64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lt_fp64.c -o GB_aop__lt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_type.c -o GB_macrofy_type.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__acosh_fp32_fp32.c -o GB_unop__acosh_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isne_int16.c -o GB_ew__isne_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_band_uint16.c -o GB_AxB__bxor_band_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ge_uint64.c -o GB_AxB__lor_ge_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__le_uint8.c -o GB_aop__le_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bshift_int8.c -o GB_ew__bshift_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_setElement.c -o GrB_Matrix_setElement.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_firstj1_int32.c -o GB_AxB__plus_firstj1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__isinf_bool_fc32.c -o GB_unop__isinf_bool_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__land_int32.c -o GB_ew__land_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_BinaryOp_xtype_name.c -o GxB_BinaryOp_xtype_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rdiv_uint32.c -o GB_AxB__max_rdiv_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_minus_fc32.c -o GB_AxB__plus_minus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_mfs.c -o GB_AxB_saxpy3_sym_mfs.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_second_int64.c -o GB_AxB__plus_second_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_div_int16.c -o GB_AxB__plus_div_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__min_uint64.c -o GB_bld__min_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lor_fp32.c -o GB_aop__lor_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__times_fp32.c -o GB_bld__times_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_second_fc32.c -o GB_AxB__plus_second_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rminus_int8.c -o GB_AxB__times_rminus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select_generic_phase2.c -o GB_select_generic_phase2.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_max_uint64.c -o GB_AxB__any_max_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_first_fc32.c -o GB_AxB__any_first_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lxor_fp32.c -o GB_AxB__plus_lxor_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__plus_fp32.c -o GB_aop__plus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__copysign_fp32.c -o GB_aop__copysign_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_preface.c -o GB_macrofy_preface.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__times_uint16.c -o GB_ew__times_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__isnan_bool_fc64.c -o GB_unop__isnan_bool_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_min_fp64.c -o GB_AxB__max_min_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ne_int8.c -o GB_AxB__any_ne_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_first_uint32.c -o GB_AxB__times_first_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_first_bool.c -o GB_AxB__lor_first_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_div_fp32.c -o GB_AxB__times_div_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__plus_fc64.c -o GB_ew__plus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isne_fp32.c -o GB_ew__isne_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__times_fc64.c -o GB_aop__times_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__le_thunk_uint32.c -o GB_sel__le_thunk_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_secondj_int64.c -o GB_AxB__times_secondj_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lor_int32.c -o GB_ew__lor_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rminus_int8.c -o GB_aop__rminus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_03.c -o GB_subassign_03.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ne_uint8.c -o GB_ew__ne_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_plus_uint16.c -o GB_AxB__max_plus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_secondj1_int64.c -o GB_AxB__max_secondj1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bset_uint32.c -o GB_ew__bset_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rdiv_uint64.c -o GB_AxB__plus_rdiv_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__times_uint64.c -o GB_red__times_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__minus_uint64.c -o GB_ew__minus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rdiv_int16.c -o GB_aop__rdiv_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_nnz_full.c -o GB_nnz_full.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_eq_int8.c -o GB_AxB__lxor_eq_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy_sparsity.c -o GB_AxB_saxpy_sparsity.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int8_int8.c -o GB_unop__identity_int8_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__second_uint64.c -o GB_ew__second_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__iseq_int64.c -o GB_aop__iseq_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_noM_accum.c -o GB_bitmap_assign_noM_accum.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_add_iso.c -o GB_add_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_max_int64.c -o GB_AxB__max_max_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_eq_uint16.c -o GB_AxB__eq_eq_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ge_int32.c -o GB_aop__ge_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bor_int64.c -o GB_ew__bor_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isle_int16.c -o GB_aop__isle_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_IndexUnaryOp_wait.c -o GrB_IndexUnaryOp_wait.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subref_slice.c -o GB_subref_slice.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ne_fp32.c -o GB_ew__ne_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Scalar_check.c -o GB_Scalar_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_SelectOp_check.c -o GB_SelectOp_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint8_int32.c -o GB_unop__identity_uint8_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp32_fc32.c -o GB_unop__identity_fp32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__times_int16.c -o GB_red__times_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__tgamma_fp32_fp32.c -o GB_unop__tgamma_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int16_fc64.c -o GB_unop__identity_int16_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rdiv_fp32.c -o GB_AxB__times_rdiv_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isge_uint8.c -o GB_ew__isge_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_land_uint16.c -o GB_AxB__plus_land_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__second_uint16.c -o GB_aop__second_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc32_uint64.c -o GB_unop__identity_fc32_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_import_HyperCSR.c -o GxB_Matrix_import_HyperCSR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rminus_fp64.c -o GB_AxB__times_rminus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int16_uint16.c -o GB_unop__identity_int16_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__second_int64.c -o GB_aop__second_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_apply.c -o GB_macrofy_apply.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_le_int8.c -o GB_AxB__any_le_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_cuda_atomic.c -o GB_enumify_cuda_atomic.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_concat.c -o GxB_Matrix_concat.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__sqrt_fc32_fc32.c -o GB_unop__sqrt_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__eq_int8.c -o GB_aop__eq_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_div_int16.c -o GB_AxB__times_div_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isne_int32.c -o GB_ew__isne_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Operator_check.c -o GB_Operator_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int32_fp64.c -o GB_unop__identity_int32_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_eslice.c -o GB_eslice.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ceil_fc64_fc64.c -o GB_unop__ceil_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__lt_thunk_uint8.c -o GB_sel__lt_thunk_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_div_int64.c -o GB_AxB__any_div_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_min_uint16.c -o GB_AxB__times_min_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_band_uint64.c -o GB_AxB__bxnor_band_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_le_int8.c -o GB_AxB__eq_le_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_div_fp32.c -o GB_AxB__min_div_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bclr_int16.c -o GB_ew__bclr_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_first_int8.c -o GB_AxB__min_first_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_div_int32.c -o GB_AxB__plus_div_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_iso.c -o GxB_Vector_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxor_uint8.c -o GB_ew__bxor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_minus_int8.c -o GB_AxB__times_minus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_gt_bool.c -o GB_AxB__lor_gt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lt_bool.c -o GB_ew__lt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_second_uint8.c -o GB_AxB__max_second_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ge_int8.c -o GB_AxB__lxor_ge_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_secondj1_int64.c -o GB_AxB__plus_secondj1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Monoid_new.c -o GrB_Monoid_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_second_int8.c -o GB_AxB__times_second_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_firsti_int32.c -o GB_AxB__plus_firsti_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_firstj1_int64.c -o GB_AxB__any_firstj1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__signum_fp64_fp64.c -o GB_unop__signum_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_plus_fc64.c -o GB_AxB__times_plus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Descriptor_get.c -o GB_Descriptor_get.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ge_uint16.c -o GB_AxB__eq_ge_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_selectop_to_idxunop.c -o GB_selectop_to_idxunop.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rminus_int32.c -o GB_AxB__any_rminus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__exp_fp32_fp32.c -o GB_unop__exp_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_plus_int8.c -o GB_AxB__min_plus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_div_int8.c -o GB_AxB__max_div_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_pair_iso.c -o GB_AxB__any_pair_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_gt_int64.c -o GB_AxB__land_gt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_extractTuples.c -o GrB_Vector_extractTuples.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_diag.c -o GrB_Matrix_diag.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_noM_noaccum_whole.c -o GB_bitmap_assign_noM_noaccum_whole.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_transpose_method.c -o GB_transpose_method.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rdiv_int32.c -o GB_AxB__times_rdiv_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__div_uint64.c -o GB_aop__div_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_split_full.c -o GB_split_full.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_pair_fp32.c -o GB_AxB__plus_pair_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_export_BitmapR.c -o GxB_Matrix_export_BitmapR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__iseq_fp64.c -o GB_aop__iseq_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__any_bool.c -o GB_bld__any_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_first_uint32.c -o GB_AxB__plus_first_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isle_int32.c -o GB_ew__isle_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ne_fp64.c -o GB_aop__ne_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rdiv_int64.c -o GB_ew__rdiv_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lxor_fp64.c -o GB_aop__lxor_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__eq_thunk_bool.c -o GB_sel__eq_thunk_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ge_int8.c -o GB_aop__ge_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lxor_uint8.c -o GB_AxB__plus_lxor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__frexpe_fp64_fp64.c -o GB_unop__frexpe_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bor_int16.c -o GB_aop__bor_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_eq_int64.c -o GB_AxB__any_eq_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__plus_fc32.c -o GB_red__plus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ne_int32.c -o GB_ew__ne_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__times_int32.c -o GB_ew__times_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ge_uint8.c -o GB_AxB__any_ge_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__eq_bool.c -o GB_bld__eq_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_le_fp64.c -o GB_AxB__lxor_le_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_gt_fp32.c -o GB_AxB__any_gt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_encodify_assign.c -o GB_encodify_assign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pair_fc64.c -o GB_ew__pair_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rdiv_uint64.c -o GB_ew__rdiv_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_bor_uint16.c -o GB_AxB__bxnor_bor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__gt_int16.c -o GB_ew__gt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ldexp_fp32.c -o GB_aop__ldexp_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__islt_uint64.c -o GB_aop__islt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_hb.c -o GB_AxB_saxpy3_sym_hb.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_gt_uint8.c -o GB_AxB__lor_gt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_bxnor_uint8.c -o GB_AxB__bxor_bxnor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_le_uint8.c -o GB_AxB__lxor_le_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_times_int64.c -o GB_AxB__times_times_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_bor_uint8.c -o GB_AxB__bxor_bor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lt_uint32.c -o GB_ew__lt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_first_int8.c -o GB_AxB__any_first_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rminus_fc64.c -o GB_AxB__times_rminus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isne_int8.c -o GB_ew__isne_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_lt_int32.c -o GB_AxB__eq_lt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__min_uint32.c -o GB_aop__min_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_max_uint64.c -o GB_AxB__min_max_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_bitmap_jit.c -o GB_emult_bitmap_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_min_uint8.c -o GB_AxB__max_min_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_eq_int32.c -o GB_AxB__eq_eq_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lxor_uint8.c -o GB_aop__lxor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_unpack_BitmapC.c -o GxB_Matrix_unpack_BitmapC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__minus_fp32.c -o GB_ew__minus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_max_int16.c -o GB_AxB__times_max_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__lnot_bool_bool.c -o GB_unop__lnot_bool_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_lt_uint32.c -o GB_AxB__land_lt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__plus_fp32.c -o GB_bld__plus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_minus_uint32.c -o GB_AxB__min_minus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_bool_uint16.c -o GB_unop__identity_bool_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__second_fp32.c -o GB_ew__second_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_11.c -o GB_subassign_11.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_02.c -o GB_subassign_02.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pow_uint64.c -o GB_aop__pow_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_positional_idxunop_ijflip.c -o GB_positional_idxunop_ijflip.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_land_int32.c -o GB_AxB__plus_land_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bset_uint16.c -o GB_aop__bset_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_minus_uint64.c -o GB_AxB__min_minus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__abs_fp32_fp32.c -o GB_unop__abs_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int16_int32.c -o GB_unop__identity_int16_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__exp2_fc64_fc64.c -o GB_unop__exp2_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_minus_int16.c -o GB_AxB__min_minus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rminus_int8.c -o GB_AxB__any_rminus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_div_int32.c -o GB_AxB__max_div_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_second_uint64.c -o GB_AxB__min_second_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Scalar_dup.c -o GrB_Scalar_dup.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bget_uint16.c -o GB_aop__bget_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__min_fp32.c -o GB_red__min_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__eq_uint64.c -o GB_aop__eq_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_second_int64.c -o GB_AxB__max_second_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_max_uint8.c -o GB_AxB__any_max_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_times_fc64.c -o GB_AxB__any_times_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc32_fp32.c -o GB_unop__identity_fc32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bget_int16.c -o GB_ew__bget_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rdiv_int16.c -o GB_AxB__any_rdiv_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rdiv_int8.c -o GB_AxB__times_rdiv_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_plus_int64.c -o GB_AxB__any_plus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_band_uint8.c -o GB_AxB__bor_band_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__first_fp64.c -o GB_ew__first_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_first_uint8.c -o GB_AxB__plus_first_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ge_int32.c -o GB_AxB__any_ge_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__land_uint64.c -o GB_aop__land_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lxor_uint16.c -o GB_ew__lxor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__div_uint16.c -o GB_ew__div_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_lt_uint16.c -o GB_AxB__lor_lt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_M_scatter_whole.c -o GB_bitmap_M_scatter_whole.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isne_int8.c -o GB_aop__isne_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp32_int64.c -o GB_unop__identity_fp32_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ne_fc64.c -o GB_aop__ne_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_reduce.c -o GB_macrofy_reduce.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_apply_bind1st_jit.c -o GB_apply_bind1st_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__times_int8.c -o GB_ew__times_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__plus_uint8.c -o GB_aop__plus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_bor_uint16.c -o GB_AxB__bxor_bor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ge_uint16.c -o GB_AxB__any_ge_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ge_int32.c -o GB_AxB__eq_ge_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_le_int64.c -o GB_AxB__any_le_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rdiv_uint16.c -o GB_aop__rdiv_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__times_uint32.c -o GB_red__times_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ne_fc64.c -o GB_ew__ne_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__eq_uint64.c -o GB_ew__eq_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxbit_generic_firstj64.c -o GB_AxB_saxbit_generic_firstj64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Descriptor_new.c -o GrB_Descriptor_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_eq_int8.c -o GB_AxB__any_eq_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_plus_int16.c -o GB_AxB__times_plus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_nsf.c -o GB_AxB_saxpy3_sym_nsf.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint16_uint32.c -o GB_unop__identity_uint16_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__iseq_fc64.c -o GB_ew__iseq_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_any_to_bitmap.c -o GB_convert_any_to_bitmap.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lt_uint8.c -o GB_ew__lt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__minv_int16_int16.c -o GB_unop__minv_int16_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_msf.c -o GB_AxB_saxpy3_sym_msf.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_sort.c -o GxB_Matrix_sort.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ne_int32.c -o GB_AxB__eq_ne_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__second_int32.c -o GB_aop__second_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__carg_fp32_fc32.c -o GB_unop__carg_fp32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp32_uint32.c -o GB_unop__identity_fp32_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_matvec_type_name.c -o GB_matvec_type_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ge_thunk_uint32.c -o GB_sel__ge_thunk_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_split_bitmap_jit.c -o GB_split_bitmap_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint64_uint64.c -o GB_unop__identity_uint64_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Row_subassign.c -o GxB_Row_subassign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_01.c -o GB_subassign_01.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_as__int16.c -o GB_as__int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_minus_int64.c -o GB_AxB__plus_minus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__gt_bool.c -o GB_ew__gt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_minus_uint64.c -o GB_AxB__times_minus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp64_int8.c -o GB_unop__identity_fp64_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__le_uint16.c -o GB_ew__le_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_bxor_uint64.c -o GB_AxB__bor_bxor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp64_uint8.c -o GB_unop__identity_fp64_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_secondj_int64.c -o GB_AxB__plus_secondj_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__tanh_fp64_fp64.c -o GB_unop__tanh_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_mask.c -o GB_enumify_mask.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_firstj_int64.c -o GB_AxB__any_firstj_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_query.c -o GB_macrofy_query.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_build.c -o GrB_Matrix_build.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_land_int8.c -o GB_AxB__plus_land_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_BinaryOp_wait.c -o GrB_BinaryOp_wait.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rminus_fc32.c -o GB_AxB__any_rminus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Matrix_new.c -o GB_Matrix_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_memset.c -o GB_memset.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int8_int16.c -o GB_unop__identity_int8_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitwise.c -o GB_bitwise.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__eq_thunk_uint8.c -o GB_sel__eq_thunk_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Scalar_wait.c -o GrB_Scalar_wait.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_bxnor_uint8.c -o GB_AxB__bxnor_bxnor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rdiv_fp32.c -o GB_ew__rdiv_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_minus_uint16.c -o GB_AxB__any_minus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rminus_fc32.c -o GB_AxB__plus_rminus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_eWiseMult.c -o GrB_Matrix_eWiseMult.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int32_bool.c -o GB_unop__identity_int32_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__islt_fp32.c -o GB_aop__islt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Scalar_wrap.c -o GB_Scalar_wrap.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_transpose_bind1st_jit.c -o GB_transpose_bind1st_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_second_uint16.c -o GB_AxB__any_second_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_conform.c -o GB_conform.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_min_int32.c -o GB_AxB__times_min_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rminus_fc32.c -o GB_aop__rminus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxor_int16.c -o GB_ew__bxor_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__minv_uint16_uint16.c -o GB_unop__minv_uint16_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_deserialize.c -o GB_deserialize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_div_int16.c -o GB_AxB__min_div_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ge_int8.c -o GB_AxB__any_ge_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rdiv_uint64.c -o GB_AxB__min_rdiv_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__acosh_fp64_fp64.c -o GB_unop__acosh_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rminus_fp64.c -o GB_aop__rminus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_eq_int64.c -o GB_AxB__lor_eq_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Desc_set.c -o GxB_Desc_set.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__first_fc64.c -o GB_ew__first_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bor_uint32.c -o GB_aop__bor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lor_int16.c -o GB_aop__lor_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ne_fp64.c -o GB_AxB__eq_ne_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rminus_uint32.c -o GB_AxB__min_rminus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_dot4_jit.c -o GB_AxB_dot4_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint16_int16.c -o GB_unop__identity_uint16_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ne_fp32.c -o GB_AxB__land_ne_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lor_uint16.c -o GB_aop__lor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_plus_int32.c -o GB_AxB__max_plus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bget_int64.c -o GB_ew__bget_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_jitifyer.c -o GB_jitifyer.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_op_name_and_defn.c -o GB_op_name_and_defn.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_plus_fc32.c -o GB_AxB__plus_plus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ge_int64.c -o GB_AxB__lxor_ge_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pow_fp32.c -o GB_aop__pow_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__cbrt_fp32_fp32.c -o GB_unop__cbrt_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_plus_fp64.c -o GB_AxB__max_plus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__max_int64.c -o GB_ew__max_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_minus_fp32.c -o GB_AxB__min_minus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select_bitmap.c -o GB_select_bitmap.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_cast_factory.c -o GB_cast_factory.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__minus_int8.c -o GB_aop__minus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_firsti_int64.c -o GB_AxB__plus_firsti_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__remainder_fp64.c -o GB_ew__remainder_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__abs_uint16_uint16.c -o GB_unop__abs_uint16_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_second_fp32.c -o GB_AxB__min_second_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_08n.c -o GB_subassign_08n.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_select.c -o GxB_Matrix_select.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__second_int8.c -o GB_aop__second_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_sf.c -o GB_AxB_saxpy3_sym_sf.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxbit_generic_secondj32.c -o GB_AxB_saxbit_generic_secondj32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__times_fc32.c -o GB_aop__times_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ge_bool.c -o GB_AxB__eq_ge_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lxor_int32.c -o GB_ew__lxor_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__conj_fc64_fc64.c -o GB_unop__conj_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_lt_int32.c -o GB_AxB__lor_lt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_max_int8.c -o GB_AxB__plus_max_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__div_fc32.c -o GB_ew__div_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Context_set.c -o GxB_Context_set.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_le_fp64.c -o GB_AxB__any_le_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_mbs.c -o GB_AxB_saxpy3_sym_mbs.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_transpose_ix.c -o GB_transpose_ix.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_select.c -o GB_macrofy_select.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_plus_uint8.c -o GB_AxB__max_plus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_max_uint32.c -o GB_AxB__times_max_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rdiv_fc32.c -o GB_aop__rdiv_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__le_fp64.c -o GB_aop__le_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__first_fp32.c -o GB_ew__first_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__land_fp32.c -o GB_aop__land_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__isfinite_bool_fp32.c -o GB_unop__isfinite_bool_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_nhb.c -o GB_AxB_saxpy3_sym_nhb.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_le_int16.c -o GB_AxB__lor_le_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_bxnor_uint8.c -o GB_AxB__band_bxnor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ge_int64.c -o GB_AxB__any_ge_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int32_uint8.c -o GB_unop__identity_int32_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int64_int64.c -o GB_unop__identity_int64_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_le_fp64.c -o GB_AxB__eq_le_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__min_int64.c -o GB_red__min_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pair_int16.c -o GB_ew__pair_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ne_int8.c -o GB_AxB__eq_ne_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_le_fp32.c -o GB_AxB__land_le_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isge_fp32.c -o GB_aop__isge_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_bxor_uint32.c -o GB_AxB__bxor_bxor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_minus_fp64.c -o GB_AxB__times_minus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__first_fc32.c -o GB_bld__first_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_as__bool.c -o GB_as__bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_band_uint32.c -o GB_AxB__bxor_band_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ge_fp64.c -o GB_AxB__lxor_ge_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_div_int8.c -o GB_AxB__times_div_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_max_int64.c -o GB_AxB__times_max_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_second_fp64.c -o GB_AxB__times_second_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_lt_uint64.c -o GB_AxB__lxor_lt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bget_uint32.c -o GB_ew__bget_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__cimag_fp64_fc64.c -o GB_unop__cimag_fp64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_unpack_CSC.c -o GxB_Vector_unpack_CSC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lt_int32.c -o GB_ew__lt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lxor_int32.c -o GB_aop__lxor_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_gt_uint16.c -o GB_AxB__lor_gt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rdiv_uint32.c -o GB_ew__rdiv_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__signum_fc32_fc32.c -o GB_unop__signum_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_div_fp64.c -o GB_AxB__max_div_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_subassign.c -o GxB_Vector_subassign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rminus_uint16.c -o GB_ew__rminus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_bool_int8.c -o GB_unop__identity_bool_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_gt_uint32.c -o GB_AxB__lxor_gt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__remainder_fp32.c -o GB_aop__remainder_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ek_slice_merge2.c -o GB_ek_slice_merge2.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__plus_int64.c -o GB_ew__plus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxnor_int64.c -o GB_ew__bxnor_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bor_uint8.c -o GB_aop__bor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_import_CSC.c -o GxB_Matrix_import_CSC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ne_int16.c -o GB_AxB__lor_ne_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__asin_fp64_fp64.c -o GB_unop__asin_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rdiv_uint16.c -o GB_AxB__any_rdiv_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ge_uint8.c -o GB_AxB__eq_ge_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isne_uint16.c -o GB_ew__isne_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop_identity.c -o GB_unop_identity.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_lt_uint8.c -o GB_AxB__land_lt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ldexp_fp64.c -o GB_aop__ldexp_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__times_int8.c -o GB_bld__times_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__second_bool.c -o GB_bld__second_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__min_uint16.c -o GB_aop__min_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_cover_finish.c -o GB_cover_finish.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ge_fp64.c -o GB_aop__ge_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__islt_fp32.c -o GB_ew__islt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_minus_int32.c -o GB_AxB__any_minus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__max_int16.c -o GB_aop__max_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lt_uint64.c -o GB_aop__lt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__nonzombie_int8.c -o GB_sel__nonzombie_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__div_int8.c -o GB_aop__div_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__acos_fc64_fc64.c -o GB_unop__acos_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_plus_uint32.c -o GB_AxB__times_plus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_second_int32.c -o GB_AxB__any_second_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Monoid_operator.c -o GxB_Monoid_operator.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__max_uint64.c -o GB_red__max_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ge_thunk_int16.c -o GB_sel__ge_thunk_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_min_int16.c -o GB_AxB__plus_min_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__nonzombie_int16.c -o GB_sel__nonzombie_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ne_int8.c -o GB_ew__ne_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__lnot_int8_int8.c -o GB_unop__lnot_int8_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_div_fp32.c -o GB_AxB__any_div_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_second_int32.c -o GB_AxB__min_second_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ge_thunk_int8.c -o GB_sel__ge_thunk_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_werk_push.c -o GB_werk_push.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_lt_int8.c -o GB_AxB__lor_lt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint8_int16.c -o GB_unop__identity_uint8_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_first_uint32.c -o GB_AxB__max_first_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bshift_int64.c -o GB_aop__bshift_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_second_fp64.c -o GB_AxB__min_second_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__eq_uint16.c -o GB_ew__eq_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__le_thunk_int16.c -o GB_sel__le_thunk_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_max_uint8.c -o GB_AxB__times_max_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__conj_fc32_fc32.c -o GB_unop__conj_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isne_fp64.c -o GB_ew__isne_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rdiv_fp32.c -o GB_AxB__min_rdiv_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__first_fc32.c -o GB_ew__first_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_eWiseAdd.c -o GrB_Vector_eWiseAdd.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lxor_int16.c -o GB_AxB__plus_lxor_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__eq_fc64.c -o GB_aop__eq_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_iso.c -o GB_AxB_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_cast_array.c -o GB_cast_array.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc32_int16.c -o GB_unop__identity_fc32_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_eq_int64.c -o GB_AxB__lxor_eq_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sort.c -o GB_sort.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_times_uint32.c -o GB_AxB__times_times_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_IndexUnaryOp_free.c -o GrB_IndexUnaryOp_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ne_thunk_fc32.c -o GB_sel__ne_thunk_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint32_int8.c -o GB_unop__identity_uint32_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc64_uint8.c -o GB_unop__identity_fc64_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Context.c -o GB_Context.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__floor_fp64_fp64.c -o GB_unop__floor_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_file.c -o GB_file.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select_positional_phase1.c -o GB_select_positional_phase1.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_gt_int8.c -o GB_AxB__lxor_gt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__first_fp32.c -o GB_bld__first_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Monoid_new.c -o GB_Monoid_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_06d.c -o GB_subassign_06d.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_minus_fc64.c -o GB_AxB__times_minus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ainv_uint64_uint64.c -o GB_unop__ainv_uint64_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bget_uint8.c -o GB_ew__bget_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__cosh_fp64_fp64.c -o GB_unop__cosh_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_08_phase2.c -o GB_emult_08_phase2.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ne_thunk_int32.c -o GB_sel__ne_thunk_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__second_uint32.c -o GB_bld__second_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__minv_bool_bool.c -o GB_unop__minv_bool_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_M_accum_whole.c -o GB_bitmap_assign_M_accum_whole.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rdiv_fp32.c -o GB_AxB__max_rdiv_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxor_uint32.c -o GB_ew__bxor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__band_uint8.c -o GB_aop__band_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__islt_uint16.c -o GB_aop__islt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_div_uint8.c -o GB_AxB__plus_div_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__le_int8.c -o GB_ew__le_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__lnot_uint8_uint8.c -o GB_unop__lnot_uint8_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_05d.c -o GB_subassign_05d.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_noM_noaccum.c -o GB_bitmap_assign_noM_noaccum.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bset_uint64.c -o GB_ew__bset_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_transpose_unop_jit.c -o GB_transpose_unop_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_select.c -o GB_enumify_select.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_semiring_builtin.c -o GB_AxB_semiring_builtin.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_min_int64.c -o GB_AxB__max_min_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_mbb.c -o GB_AxB_saxpy3_sym_mbb.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__plus_int64.c -o GB_aop__plus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__plus_uint64.c -o GB_red__plus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__second_int16.c -o GB_ew__second_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_pair_bool.c -o GB_AxB__lxor_pair_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__times_int16.c -o GB_bld__times_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isle_fp64.c -o GB_ew__isle_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__acosh_fc64_fc64.c -o GB_unop__acosh_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_secondj_int32.c -o GB_AxB__any_secondj_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__second_uint16.c -o GB_ew__second_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_bxnor_uint16.c -o GB_AxB__bor_bxnor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ge_uint16.c -o GB_ew__ge_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_div_uint16.c -o GB_AxB__any_div_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_mhf.c -o GB_AxB_saxpy3_sym_mhf.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log2_fp64_fp64.c -o GB_unop__log2_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_minus_int8.c -o GB_AxB__any_minus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__plus_fp32.c -o GB_ew__plus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_generic_flipped.c -o GB_AxB_saxpy3_generic_flipped.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rminus_fp64.c -o GB_AxB__any_rminus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__hypot_fp32.c -o GB_ew__hypot_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__times_fp64.c -o GB_ew__times_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_plus_uint8.c -o GB_AxB__times_plus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_second_int8.c -o GB_AxB__any_second_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__le_uint64.c -o GB_ew__le_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_diag.c -o GxB_Vector_diag.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__abs_bool_bool.c -o GB_unop__abs_bool_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_firsti1_int32.c -o GB_AxB__times_firsti1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_UnaryOp_new.c -o GrB_UnaryOp_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_gt_int32.c -o GB_AxB__lor_gt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_le_fp64.c -o GB_AxB__lor_le_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__iseq_fc32.c -o GB_aop__iseq_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_BinaryOp_compatible.c -o GB_BinaryOp_compatible.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_lor_bool.c -o GB_AxB__lxor_lor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_max_int32.c -o GB_AxB__any_max_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rminus_int32.c -o GB_ew__rminus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rminus_fp64.c -o GB_AxB__max_rminus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Semiring_free.c -o GrB_Semiring_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_min_int16.c -o GB_AxB__any_min_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_eq_fp64.c -o GB_AxB__any_eq_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_land_bool.c -o GB_AxB__land_land_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select_positional_phase2.c -o GB_select_positional_phase2.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint32_uint64.c -o GB_unop__identity_uint32_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Op_free.c -o GB_Op_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxor_uint64.c -o GB_aop__bxor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rdiv_int32.c -o GB_AxB__any_rdiv_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_plus_uint16.c -o GB_AxB__plus_plus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_first_int16.c -o GB_AxB__times_first_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__land_int8.c -o GB_ew__land_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_band_uint32.c -o GB_AxB__bxnor_band_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ge_int64.c -o GB_aop__ge_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_as__uint32.c -o GB_as__uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_calloc_memory.c -o GB_calloc_memory.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_unpack_BitmapR.c -o GxB_Matrix_unpack_BitmapR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rminus_int64.c -o GB_AxB__times_rminus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__min_int32.c -o GB_aop__min_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_eq_fp64.c -o GB_AxB__eq_eq_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Pending_free.c -o GB_Pending_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_eq_uint64.c -o GB_AxB__land_eq_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bclr_uint8.c -o GB_ew__bclr_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__times_int8.c -o GB_aop__times_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_transplant_conform.c -o GB_transplant_conform.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_max_uint64.c -o GB_AxB__max_max_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rdiv_uint32.c -o GB_AxB__times_rdiv_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pair_uint32.c -o GB_ew__pair_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_div_uint16.c -o GB_AxB__times_div_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Type_new.c -o GxB_Type_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_UnaryOp_ztype.c -o GxB_UnaryOp_ztype.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_encodify_user_op.c -o GB_encodify_user_op.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rminus_uint16.c -o GB_AxB__min_rminus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_times_int64.c -o GB_AxB__plus_times_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__band_uint64.c -o GB_ew__band_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__minv_int32_int32.c -o GB_unop__minv_int32_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select_value_iso.c -o GB_select_value_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_div_fc64.c -o GB_AxB__plus_div_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassigner.c -o GB_subassigner.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_land_fp64.c -o GB_AxB__plus_land_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp32_uint64.c -o GB_unop__identity_fp32_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__cmplx_fp64.c -o GB_ew__cmplx_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lt_fp32.c -o GB_aop__lt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ek_slice_merge1.c -o GB_ek_slice_merge1.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int16_fp64.c -o GB_unop__identity_int16_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__second_uint8.c -o GB_bld__second_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ge_int16.c -o GB_AxB__land_ge_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ne_int64.c -o GB_AxB__lxor_ne_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxnor_uint8.c -o GB_ew__bxnor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ge_bool.c -o GB_ew__ge_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__eq_int32.c -o GB_ew__eq_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__div_int64.c -o GB_ew__div_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_times_int64.c -o GB_AxB__any_times_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__sin_fp64_fp64.c -o GB_unop__sin_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint16_uint64.c -o GB_unop__identity_uint16_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__plus_uint16.c -o GB_aop__plus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rminus_uint32.c -o GB_aop__rminus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__round_fp32_fp32.c -o GB_unop__round_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_extract.c -o GB_extract.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_bor_uint8.c -o GB_AxB__bxnor_bor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__plus_int32.c -o GB_bld__plus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__lt_thunk_int64.c -o GB_sel__lt_thunk_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__any_bool.c -o GB_red__any_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_build_Scalar.c -o GxB_Matrix_build_Scalar.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__min_int16.c -o GB_bld__min_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ge_thunk_int64.c -o GB_sel__ge_thunk_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ge_fp64.c -o GB_AxB__any_ge_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_generic_unflipped.c -o GB_AxB_saxpy3_generic_unflipped.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__atan2_fp32.c -o GB_ew__atan2_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Type_check.c -o GB_Type_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_max_int16.c -o GB_AxB__any_max_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__gt_uint64.c -o GB_aop__gt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Semiring_new.c -o GB_Semiring_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isle_int16.c -o GB_ew__isle_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_reshape.c -o GB_reshape.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__abs_int32_int32.c -o GB_unop__abs_int32_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int8_bool.c -o GB_unop__identity_int8_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__band_uint16.c -o GB_aop__band_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__max_uint32.c -o GB_aop__max_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__eq_bool.c -o GB_red__eq_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_times_int8.c -o GB_AxB__any_times_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ge_fp64.c -o GB_AxB__eq_ge_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_div_uint8.c -o GB_AxB__min_div_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_scalar.c -o GB_subassign_scalar.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__islt_int64.c -o GB_ew__islt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_gt_int8.c -o GB_AxB__lor_gt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lxor_int64.c -o GB_aop__lxor_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_extractElement.c -o GrB_Vector_extractElement.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isne_uint64.c -o GB_ew__isne_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_string.c -o GB_macrofy_string.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rminus_int8.c -o GB_ew__rminus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_binop_rename.c -o GB_binop_rename.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxbit_generic_firsti32.c -o GB_AxB_saxbit_generic_firsti32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_max_uint64.c -o GB_AxB__plus_max_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_dot3.c -o GB_AxB_dot3.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_first_fc32.c -o GB_AxB__plus_first_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_to_nonfull.c -o GB_convert_to_nonfull.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__minus_fp64.c -o GB_aop__minus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_subassign_scalar.c -o GxB_Vector_subassign_scalar.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult.c -o GB_emult.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rdiv_int8.c -o GB_AxB__any_rdiv_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lt_int64.c -o GB_ew__lt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lor_uint32.c -o GB_aop__lor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__times_uint64.c -o GB_bld__times_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_IndexUnaryOp_new.c -o GxB_IndexUnaryOp_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__iseq_int64.c -o GB_ew__iseq_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rminus_int16.c -o GB_AxB__plus_rminus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_bool_fp64.c -o GB_unop__identity_bool_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__div_int32.c -o GB_ew__div_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lxor_uint32.c -o GB_AxB__plus_lxor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ne_uint32.c -o GB_aop__ne_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_gt_uint64.c -o GB_AxB__lxor_gt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__gt_uint16.c -o GB_ew__gt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__hypot_fp32.c -o GB_aop__hypot_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_le_uint32.c -o GB_AxB__lor_le_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__plus_fp32.c -o GB_red__plus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_firstj1_int64.c -o GB_AxB__plus_firstj1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__min_uint32.c -o GB_bld__min_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lor_uint64.c -o GB_AxB__plus_lor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__gt_thunk_fp64.c -o GB_sel__gt_thunk_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop_code_iso.c -o GB_unop_code_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__max_uint16.c -o GB_bld__max_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_lor_bool.c -o GB_AxB__land_lor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_min_fp64.c -o GB_AxB__times_min_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__abs_uint32_uint32.c -o GB_unop__abs_uint32_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_generic_firstj32.c -o GB_AxB_saxpy3_generic_firstj32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__any_uint32.c -o GB_red__any_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__first_int8.c -o GB_ew__first_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bset_int8.c -o GB_aop__bset_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__lt_thunk_fp64.c -o GB_sel__lt_thunk_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_matvec_check.c -o GB_matvec_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint16_uint8.c -o GB_unop__identity_uint16_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_le_uint32.c -o GB_AxB__eq_le_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ops.c -o GB_ops.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_code_check.c -o GB_code_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__le_int64.c -o GB_aop__le_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int8_uint8.c -o GB_unop__identity_int8_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_plus_int16.c -o GB_AxB__any_plus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__eq_int8.c -o GB_ew__eq_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ne_uint16.c -o GB_ew__ne_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int32_uint32.c -o GB_unop__identity_int32_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__iseq_int32.c -o GB_ew__iseq_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_eWiseUnion.c -o GxB_Matrix_eWiseUnion.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_zombie.c -o GB_subassign_zombie.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_le_uint8.c -o GB_AxB__lor_le_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__plus_uint32.c -o GB_aop__plus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__trunc_fc64_fc64.c -o GB_unop__trunc_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Type_fprint.c -o GxB_Type_fprint.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_plus_uint64.c -o GB_AxB__times_plus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_le_bool.c -o GB_AxB__lor_le_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_assign_zombie3.c -o GB_assign_zombie3.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_s2b.c -o GB_convert_s2b.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_firstj1_int64.c -o GB_AxB__min_firstj1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_lor_bool.c -o GB_AxB__any_lor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxbit_generic_flipped.c -o GB_AxB_saxbit_generic_flipped.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_make_shallow.c -o GB_make_shallow.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc64_int32.c -o GB_unop__identity_fc64_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp64_bool.c -o GB_unop__identity_fp64_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lor_bool.c -o GB_aop__lor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rminus_int32.c -o GB_AxB__min_rminus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_plus_uint64.c -o GB_AxB__plus_plus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_secondj1_int64.c -o GB_AxB__times_secondj1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__minv_int8_int8.c -o GB_unop__minv_int8_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp64_fc64.c -o GB_unop__identity_fp64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__max_uint8.c -o GB_aop__max_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_firsti_int32.c -o GB_AxB__times_firsti_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bclr_int64.c -o GB_aop__bclr_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_max_fp32.c -o GB_AxB__max_max_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__max_uint8.c -o GB_ew__max_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ge_int16.c -o GB_AxB__lor_ge_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp32_int16.c -o GB_unop__identity_fp32_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_minus_int16.c -o GB_AxB__times_minus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_gt_fp32.c -o GB_AxB__lxor_gt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__min_fp32.c -o GB_aop__min_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__land_uint64.c -o GB_ew__land_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_times_uint16.c -o GB_AxB__times_times_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_eq_int16.c -o GB_AxB__lor_eq_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_sparse_to_hyper.c -o GB_convert_sparse_to_hyper.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bset_int32.c -o GB_aop__bset_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp32_fp32.c -o GB_unop__identity_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__nonzombie_fp64.c -o GB_sel__nonzombie_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_cast_matrix.c -o GB_cast_matrix.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_bxor_uint8.c -o GB_AxB__bxor_bxor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_firsti1_int64.c -o GB_AxB__max_firsti1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__lnot_uint32_uint32.c -o GB_unop__lnot_uint32_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bshift_uint64.c -o GB_ew__bshift_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__min_uint32.c -o GB_ew__min_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_subref.c -o GB_bitmap_subref.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lor_uint8.c -o GB_aop__lor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_extract.c -o GrB_Vector_extract.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_mbf.c -o GB_AxB_saxpy3_sym_mbf.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ne_fp64.c -o GB_ew__ne_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__minus_fc64.c -o GB_aop__minus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__second_int8.c -o GB_ew__second_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lxor_fp64.c -o GB_ew__lxor_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lxor_uint8.c -o GB_ew__lxor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ge_int8.c -o GB_ew__ge_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_04.c -o GB_emult_04.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__iseq_int8.c -o GB_aop__iseq_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__second_fc64.c -o GB_aop__second_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_08_phase0.c -o GB_emult_08_phase0.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Matrix_check.c -o GB_Matrix_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__band_int32.c -o GB_aop__band_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__times_fc32.c -o GB_red__times_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bclr_int8.c -o GB_ew__bclr_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Semiring_new.c -o GrB_Semiring_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int64_uint16.c -o GB_unop__identity_int64_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_lt_bool.c -o GB_AxB__land_lt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isgt_uint32.c -o GB_aop__isgt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_second_fc32.c -o GB_AxB__times_second_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rdiv_fp64.c -o GB_aop__rdiv_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_import_BitmapR.c -o GxB_Matrix_import_BitmapR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__lgamma_fp32_fp32.c -o GB_unop__lgamma_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint16_fc32.c -o GB_unop__identity_uint16_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ldexp_fp32.c -o GB_ew__ldexp_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_cpu_features_impl.c -o GB_cpu_features_impl.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rminus_uint32.c -o GB_AxB__max_rminus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxnor_uint64.c -o GB_aop__bxnor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__minv_uint8_uint8.c -o GB_unop__minv_uint8_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_lt_uint64.c -o GB_AxB__any_lt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__le_thunk_uint8.c -o GB_sel__le_thunk_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_eq_bool.c -o GB_AxB__lor_eq_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_reduce_to_scalar_iso.c -o GB_reduce_to_scalar_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_phybix_free.c -o GB_phybix_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__exp_fp64_fp64.c -o GB_unop__exp_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxnor_uint8.c -o GB_aop__bxnor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__gt_thunk_int64.c -o GB_sel__gt_thunk_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ge_int64.c -o GB_AxB__lor_ge_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__eq_thunk_uint32.c -o GB_sel__eq_thunk_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__floor_fc32_fc32.c -o GB_unop__floor_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ainv_fp32_fp32.c -o GB_unop__ainv_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ceil_fp64_fp64.c -o GB_unop__ceil_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_apply.c -o GB_enumify_apply.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__cos_fc64_fc64.c -o GB_unop__cos_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bclr_int32.c -o GB_ew__bclr_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_symbolic.c -o GB_AxB_saxpy3_symbolic.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_memoryUsage.c -o GB_memoryUsage.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint8_int8.c -o GB_unop__identity_uint8_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ainv_int16_int16.c -o GB_unop__ainv_int16_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__sin_fc64_fc64.c -o GB_unop__sin_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_resize.c -o GrB_Matrix_resize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_wait.c -o GrB_Vector_wait.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_le_fp32.c -o GB_AxB__any_le_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_bitmap_worker.c -o GB_convert_bitmap_worker.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc32_uint8.c -o GB_unop__identity_fc32_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_hyper_hash_build.c -o GB_hyper_hash_build.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ewise_fulla.c -o GB_ewise_fulla.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pow_uint64.c -o GB_ew__pow_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop_iso.c -o GB_unop_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_firsti1_int64.c -o GB_AxB__plus_firsti1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_eq_uint16.c -o GB_AxB__lor_eq_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__max_uint32.c -o GB_red__max_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_gt_uint64.c -o GB_AxB__eq_gt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_user_op.c -o GB_macrofy_user_op.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__eq_thunk_int16.c -o GB_sel__eq_thunk_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_pair_int32.c -o GB_AxB__plus_pair_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lor_fp32.c -o GB_AxB__plus_lor_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int32_fc64.c -o GB_unop__identity_int32_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rminus_int64.c -o GB_aop__rminus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_kronecker.c -o GrB_kronecker.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ceil_fc32_fc32.c -o GB_unop__ceil_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_gt_int16.c -o GB_AxB__land_gt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_nhs.c -o GB_AxB_saxpy3_sym_nhs.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_jit.c -o GB_AxB_saxpy3_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_min_uint64.c -o GB_AxB__min_min_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_minus_fp64.c -o GB_AxB__any_minus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_firstj_int64.c -o GB_AxB__min_firstj_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ne_int64.c -o GB_AxB__eq_ne_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__plus_int64.c -o GB_bld__plus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__div_uint16.c -o GB_aop__div_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassigner_method.c -o GB_subassigner_method.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_second_fp64.c -o GB_AxB__any_second_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bshift_uint16.c -o GB_aop__bshift_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_min_fp32.c -o GB_AxB__max_min_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__minus_int16.c -o GB_ew__minus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_M_noaccum.c -o GB_bitmap_assign_M_noaccum.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_min_int8.c -o GB_AxB__any_min_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_unpack_Full.c -o GxB_Vector_unpack_Full.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_first_uint8.c -o GB_AxB__times_first_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint8_bool.c -o GB_unop__identity_uint8_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bor_int64.c -o GB_aop__bor_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ge_bool.c -o GB_AxB__lor_ge_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rminus_uint32.c -o GB_AxB__plus_rminus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__band_uint64.c -o GB_aop__band_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ge_bool.c -o GB_AxB__lxor_ge_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__max_int64.c -o GB_aop__max_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_eq_uint32.c -o GB_AxB__lor_eq_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_firstj_int64.c -o GB_AxB__plus_firstj_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_second_bool.c -o GB_AxB__eq_second_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__band_int8.c -o GB_aop__band_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_phy_free.c -o GB_phy_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__plus_fp64.c -o GB_red__plus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ne_thunk_uint64.c -o GB_sel__ne_thunk_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__times_fc32.c -o GB_bld__times_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lor_int16.c -o GB_ew__lor_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isgt_uint8.c -o GB_aop__isgt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rdiv_uint16.c -o GB_ew__rdiv_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Vector_diag.c -o GB_Vector_diag.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_bxor_uint32.c -o GB_AxB__band_bxor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rminus_uint16.c -o GB_AxB__any_rminus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_le_bool.c -o GB_AxB__lxor_le_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxor_uint64.c -o GB_ew__bxor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_min_uint8.c -o GB_AxB__any_min_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rminus_uint8.c -o GB_AxB__max_rminus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rdiv_fc64.c -o GB_AxB__plus_rdiv_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rdiv_fc64.c -o GB_aop__rdiv_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__eq_int64.c -o GB_aop__eq_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_times_int16.c -o GB_AxB__times_times_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint8_fp64.c -o GB_unop__identity_uint8_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__minus_int32.c -o GB_ew__minus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log2_fc32_fc32.c -o GB_unop__log2_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__atan_fp64_fp64.c -o GB_unop__atan_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_div_fc32.c -o GB_AxB__times_div_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_plus_uint32.c -o GB_AxB__any_plus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_hyper_to_sparse_test.c -o GB_convert_hyper_to_sparse_test.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ne_int16.c -o GB_AxB__eq_ne_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__second_int32.c -o GB_ew__second_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint32_fc64.c -o GB_unop__identity_uint32_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__bnot_int8_int8.c -o GB_unop__bnot_int8_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_le_int64.c -o GB_AxB__eq_le_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Monoid_terminal_new.c -o GxB_Monoid_terminal_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ge_int32.c -o GB_ew__ge_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__lgamma_fp64_fp64.c -o GB_unop__lgamma_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__div_fp32.c -o GB_ew__div_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_le_fp32.c -o GB_AxB__eq_le_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_task_cumsum.c -o GB_task_cumsum.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_band_uint64.c -o GB_AxB__band_band_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ewise_fulln.c -o GB_ewise_fulln.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ne_int16.c -o GB_AxB__lxor_ne_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_plus_int64.c -o GB_AxB__max_plus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_first_bool.c -o GB_AxB__lxor_first_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_Option_set.c -o GxB_Matrix_Option_set.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rminus_fc64.c -o GB_aop__rminus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__max_int8.c -o GB_bld__max_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pow_uint16.c -o GB_aop__pow_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__eq_thunk_fp32.c -o GB_sel__eq_thunk_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc64_fp64.c -o GB_unop__identity_fc64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc32_int32.c -o GB_unop__identity_fc32_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_div_uint64.c -o GB_AxB__min_div_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_bool_fc64.c -o GB_unop__identity_bool_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ne_thunk_uint8.c -o GB_sel__ne_thunk_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select_phase2_jit.c -o GB_select_phase2_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ne_uint8.c -o GB_AxB__land_ne_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__le_thunk_uint64.c -o GB_sel__le_thunk_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_gt_uint16.c -o GB_AxB__land_gt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ge_uint32.c -o GB_AxB__lor_ge_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_dup.c -o GB_dup.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__eq_bool.c -o GB_ew__eq_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_as__fc32.c -o GB_as__fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__floor_fc64_fc64.c -o GB_unop__floor_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_second_int16.c -o GB_AxB__max_second_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rminus_fp32.c -o GB_AxB__min_rminus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_03.c -o GB_emult_03.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_firsti_int64.c -o GB_AxB__max_firsti_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log_fp64_fp64.c -o GB_unop__log_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int8_fp64.c -o GB_unop__identity_int8_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bshift_int16.c -o GB_ew__bshift_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__second_int16.c -o GB_aop__second_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__iseq_uint64.c -o GB_aop__iseq_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_minus_fc64.c -o GB_AxB__any_minus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_assign_scalar.c -o GrB_Matrix_assign_scalar.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_code_type.c -o GB_code_type.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_gt_fp64.c -o GB_AxB__lor_gt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__times_fc32.c -o GB_ew__times_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__first_bool.c -o GB_aop__first_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_03_jit.c -o GB_emult_03_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__iseq_uint32.c -o GB_aop__iseq_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_binop_second.c -o GB_binop_second.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_lxor_bool.c -o GB_AxB__land_lxor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lxor_bool.c -o GB_aop__lxor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ne_uint16.c -o GB_AxB__land_ne_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_clear.c -o GB_clear.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bor_uint32.c -o GB_ew__bor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_gt_bool.c -o GB_AxB__land_gt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_error.c -o GrB_error.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_08_phase1.c -o GB_emult_08_phase1.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rdiv_fp64.c -o GB_AxB__any_rdiv_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isge_uint16.c -o GB_aop__isge_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__max_uint32.c -o GB_bld__max_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ne_uint64.c -o GB_AxB__land_ne_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp64_int64.c -o GB_unop__identity_fp64_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_bxor_uint8.c -o GB_AxB__band_bxor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_assign_describe.c -o GB_assign_describe.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bix_free.c -o GB_bix_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxor_int8.c -o GB_ew__bxor_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bix_alloc.c -o GB_bix_alloc.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_times_fc32.c -o GB_AxB__plus_times_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Monoid_check.c -o GB_Monoid_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_dot4.c -o GB_AxB_dot4.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_lt_int16.c -o GB_AxB__land_lt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_minus_uint16.c -o GB_AxB__min_minus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_gt_fp32.c -o GB_AxB__eq_gt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__div_int32.c -o GB_aop__div_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__minus_int8.c -o GB_ew__minus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rminus_uint8.c -o GB_AxB__min_rminus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_secondj1_int64.c -o GB_AxB__any_secondj1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bshift_int32.c -o GB_aop__bshift_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__times_fc64.c -o GB_ew__times_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__plus_int8.c -o GB_bld__plus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_plus_int8.c -o GB_AxB__max_plus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Context_check.c -o GB_Context_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_code_size.c -o GB_code_size.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint8_fc64.c -o GB_unop__identity_uint8_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_firsti1_int32.c -o GB_AxB__any_firsti1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_secondj_int64.c -o GB_AxB__max_secondj_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pair_fp32.c -o GB_ew__pair_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_lt_uint64.c -o GB_AxB__eq_lt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__acos_fc32_fc32.c -o GB_unop__acos_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__acos_fp64_fp64.c -o GB_unop__acos_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__eq_uint16.c -o GB_aop__eq_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_minus_int16.c -o GB_AxB__plus_minus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_lor_bool.c -o GB_AxB__eq_lor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_IndexUnaryOp_check.c -o GB_IndexUnaryOp_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_second_int8.c -o GB_AxB__min_second_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_second_int16.c -o GB_AxB__plus_second_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_mfb.c -o GB_AxB_saxpy3_sym_mfb.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__land_fp32.c -o GB_ew__land_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__nonzombie_int32.c -o GB_sel__nonzombie_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_encodify_ewise.c -o GB_encodify_ewise.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_meta_adotb_control.c -o GB_AxB_meta_adotb_control.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int8_fc32.c -o GB_unop__identity_int8_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pair_fp32.c -o GB_aop__pair_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__islt_int32.c -o GB_aop__islt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rminus_int64.c -o GB_AxB__any_rminus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__first_uint32.c -o GB_aop__first_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_le_int64.c -o GB_AxB__land_le_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isge_fp32.c -o GB_ew__isge_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy4.c -o GB_AxB_saxpy4.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log1p_fc32_fc32.c -o GB_unop__log1p_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_user_type_jit.c -o GB_user_type_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__div_uint32.c -o GB_aop__div_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_div_uint64.c -o GB_AxB__max_div_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_gt_uint32.c -o GB_AxB__land_gt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__abs_fp32_fc32.c -o GB_unop__abs_fp32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__second_fc32.c -o GB_bld__second_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_bor_uint64.c -o GB_AxB__bxor_bor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint64_bool.c -o GB_unop__identity_uint64_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int64_fp32.c -o GB_unop__identity_int64_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rdiv_int32.c -o GB_aop__rdiv_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Type_free.c -o GrB_Type_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isle_int64.c -o GB_ew__isle_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_first_int64.c -o GB_AxB__max_first_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_M_accum.c -o GB_bitmap_assign_M_accum.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rdiv_uint16.c -o GB_AxB__min_rdiv_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_copy_user_user.c -o GB_copy_user_user.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int64_bool.c -o GB_unop__identity_int64_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_band_uint8.c -o GB_AxB__bxor_band_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__remainder_fp32.c -o GB_ew__remainder_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int32_fc32.c -o GB_unop__identity_int32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_max_int64.c -o GB_AxB__min_max_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__times_int64.c -o GB_ew__times_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__erfc_fp32_fp32.c -o GB_unop__erfc_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rminus_fc64.c -o GB_ew__rminus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__sinh_fp64_fp64.c -o GB_unop__sinh_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_minus_int32.c -o GB_AxB__min_minus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_select.c -o GrB_Matrix_select.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc32_fp64.c -o GB_unop__identity_fc32_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_subassign.c -o GxB_Matrix_subassign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rdiv_uint8.c -o GB_ew__rdiv_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_second_uint8.c -o GB_AxB__min_second_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__lnot_fp64_fp64.c -o GB_unop__lnot_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_secondj_int32.c -o GB_AxB__min_secondj_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_BinaryOp_new.c -o GxB_BinaryOp_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rdiv_fc64.c -o GB_AxB__any_rdiv_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ne_int8.c -o GB_AxB__lor_ne_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ge_fp64.c -o GB_ew__ge_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__frexpx_fp32_fp32.c -o GB_unop__frexpx_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__max_int16.c -o GB_ew__max_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_dup.c -o GrB_Vector_dup.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bget_uint64.c -o GB_ew__bget_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_times_uint16.c -o GB_AxB__max_times_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ainv_int64_int64.c -o GB_unop__ainv_int64_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isne_int16.c -o GB_aop__isne_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_deserialize_type_name.c -o GxB_deserialize_type_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_matvec_type.c -o GB_matvec_type.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__le_thunk_fp32.c -o GB_sel__le_thunk_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bshift_int8.c -o GB_aop__bshift_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__min_int16.c -o GB_ew__min_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_second_bool.c -o GB_AxB__lor_second_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__asinh_fc64_fc64.c -o GB_unop__asinh_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_gt_int16.c -o GB_AxB__lor_gt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__tan_fp64_fp64.c -o GB_unop__tan_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_eq_int64.c -o GB_AxB__eq_eq_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_bxnor_uint32.c -o GB_AxB__bor_bxnor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_div_uint32.c -o GB_AxB__any_div_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_deserialize_from_blob.c -o GB_deserialize_from_blob.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_bool_fc32.c -o GB_unop__identity_bool_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_BinaryOp_free.c -o GrB_BinaryOp_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rdiv_int64.c -o GB_AxB__max_rdiv_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_times_uint8.c -o GB_AxB__times_times_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_positional_offset.c -o GB_positional_offset.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__max_int32.c -o GB_bld__max_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__atan_fc64_fc64.c -o GB_unop__atan_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint64_uint8.c -o GB_unop__identity_uint64_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_first_int32.c -o GB_AxB__max_first_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_clear.c -o GrB_Vector_clear.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__atan2_fp64.c -o GB_aop__atan2_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_notM_noaccum.c -o GB_bitmap_assign_notM_noaccum.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_pack_Full.c -o GxB_Vector_pack_Full.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_land_int64.c -o GB_AxB__plus_land_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Semiring_check.c -o GB_Semiring_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Scalar_nvals.c -o GrB_Scalar_nvals.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__eq_fc64.c -o GB_ew__eq_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_first_fc64.c -o GB_AxB__times_first_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int16_int64.c -o GB_unop__identity_int16_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__first_int16.c -o GB_ew__first_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__islt_int8.c -o GB_aop__islt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Descriptor_fprint.c -o GxB_Descriptor_fprint.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_first_uint8.c -o GB_AxB__max_first_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_noM_accum_whole.c -o GB_bitmap_assign_noM_accum_whole.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__first_uint8.c -o GB_aop__first_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_import.c -o GrB_Matrix_import.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_05e.c -o GB_subassign_05e.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_first_fp32.c -o GB_AxB__max_first_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_any_to_iso.c -o GB_convert_any_to_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_minus_uint32.c -o GB_AxB__max_minus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_bxnor_uint16.c -o GB_AxB__bxor_bxnor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rdiv_int16.c -o GB_AxB__plus_rdiv_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rminus_fp64.c -o GB_AxB__min_rminus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Monoid_terminal.c -o GxB_Monoid_terminal.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_all_aliased.c -o GB_all_aliased.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_second_uint32.c -o GB_AxB__max_second_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isgt_int16.c -o GB_aop__isgt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_lt_uint16.c -o GB_AxB__lxor_lt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_M_scatter.c -o GB_bitmap_M_scatter.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Global.c -o GB_Global.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_firsti_int32.c -o GB_AxB__max_firsti_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_times_int8.c -o GB_AxB__max_times_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__exp2_fc32_fc32.c -o GB_unop__exp2_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_add.c -o GB_add.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__le_uint32.c -o GB_ew__le_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_bool_uint8.c -o GB_unop__identity_bool_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_band_uint16.c -o GB_AxB__band_band_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__plus_uint64.c -o GB_ew__plus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__first_fc64.c -o GB_bld__first_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__isinf_bool_fp32.c -o GB_unop__isinf_bool_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__cmplx_fp32.c -o GB_aop__cmplx_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_pack_HyperHash.c -o GxB_pack_HyperHash.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ne_uint16.c -o GB_AxB__lor_ne_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__tan_fp32_fp32.c -o GB_unop__tan_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_mxm.c -o GB_mxm.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_minus_fp32.c -o GB_AxB__plus_minus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_transpose_in_place.c -o GB_transpose_in_place.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_min_uint8.c -o GB_AxB__times_min_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int8_int32.c -o GB_unop__identity_int8_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_nvals.c -o GB_macrofy_nvals.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__asinh_fp32_fp32.c -o GB_unop__asinh_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__any_uint64.c -o GB_bld__any_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_second_fp32.c -o GB_AxB__plus_second_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ge_int64.c -o GB_AxB__land_ge_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__div_uint8.c -o GB_ew__div_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_block.c -o GB_block.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__tgamma_fp64_fp64.c -o GB_unop__tgamma_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_first_fp32.c -o GB_AxB__any_first_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_eq_uint64.c -o GB_AxB__any_eq_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_minus_uint32.c -o GB_AxB__any_minus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pair_uint8.c -o GB_aop__pair_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__nonzombie_uint8.c -o GB_sel__nonzombie_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rdiv_fp32.c -o GB_AxB__any_rdiv_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_second_uint32.c -o GB_AxB__any_second_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxor_int16.c -o GB_aop__bxor_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_positional_binop_ijflip.c -o GB_positional_binop_ijflip.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ainv_uint32_uint32.c -o GB_unop__ainv_uint32_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxor_int32.c -o GB_ew__bxor_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_deserialize.c -o GrB_Matrix_deserialize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Scalar_type.c -o GxB_Scalar_type.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_min_int64.c -o GB_AxB__min_min_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bset_int64.c -o GB_ew__bset_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ne_uint64.c -o GB_aop__ne_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_lt_uint8.c -o GB_AxB__lor_lt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_first_fc64.c -o GB_AxB__any_first_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__abs_int8_int8.c -o GB_unop__abs_int8_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_export_Bitmap.c -o GxB_Vector_export_Bitmap.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_lt_fp64.c -o GB_AxB__lor_lt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_encodify_apply.c -o GB_encodify_apply.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_first_fp64.c -o GB_AxB__plus_first_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_bxnor_uint8.c -o GB_AxB__bor_bxnor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__trunc_fc32_fc32.c -o GB_unop__trunc_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_25.c -o GB_subassign_25.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_times_uint8.c -o GB_AxB__min_times_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__lnot_int32_int32.c -o GB_unop__lnot_int32_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rdiv_uint8.c -o GB_aop__rdiv_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ge_int16.c -o GB_ew__ge_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isle_int64.c -o GB_aop__isle_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rdiv_int64.c -o GB_AxB__times_rdiv_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_export_CSC.c -o GxB_Vector_export_CSC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_le_uint16.c -o GB_AxB__lor_le_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Matrix_free.c -o GB_Matrix_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__band_int64.c -o GB_ew__band_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lor_uint8.c -o GB_AxB__plus_lor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_plus_int8.c -o GB_AxB__times_plus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Iterator_get.c -o GxB_Iterator_get.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint8_uint32.c -o GB_unop__identity_uint8_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_hyper_shallow.c -o GB_hyper_shallow.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_init.c -o GxB_init.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isgt_uint64.c -o GB_ew__isgt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__first_int32.c -o GB_bld__first_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_IndexUnaryOp_xtype_name.c -o GxB_IndexUnaryOp_xtype_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__second_uint64.c -o GB_aop__second_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log_fp32_fp32.c -o GB_unop__log_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__any_uint16.c -o GB_red__any_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__minus_int16.c -o GB_aop__minus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_encodify_select.c -o GB_encodify_select.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_bxor_uint8.c -o GB_AxB__bxnor_bxor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint8_uint16.c -o GB_unop__identity_uint8_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_import_HyperCSC.c -o GxB_Matrix_import_HyperCSC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__max_fp32.c -o GB_ew__max_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__eq_fc32.c -o GB_aop__eq_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pair_fc32.c -o GB_ew__pair_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_land_int16.c -o GB_AxB__plus_land_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isne_fp32.c -o GB_aop__isne_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lt_fp64.c -o GB_ew__lt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_mfh.c -o GB_AxB_saxpy3_sym_mfh.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_min_int32.c -o GB_AxB__plus_min_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Row_assign.c -o GrB_Row_assign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__expm1_fc64_fc64.c -o GB_unop__expm1_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__le_uint8.c -o GB_ew__le_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Iterator_rc_seek.c -o GB_Iterator_rc_seek.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_lt_fp32.c -o GB_AxB__lxor_lt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_dot2n_jit.c -o GB_AxB_dot2n_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_min_uint32.c -o GB_AxB__plus_min_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ge_uint8.c -o GB_ew__ge_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_min_uint64.c -o GB_AxB__max_min_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_times_int16.c -o GB_AxB__max_times_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_minus_fc32.c -o GB_AxB__times_minus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isle_uint8.c -o GB_ew__isle_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_builder.c -o GB_builder.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop_new.c -o GB_unop_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lor_fp32.c -o GB_ew__lor_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint64_int8.c -o GB_unop__identity_uint64_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_times_int8.c -o GB_AxB__plus_times_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_gt_int64.c -o GB_AxB__lxor_gt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint16_int64.c -o GB_unop__identity_uint16_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_secondj_int32.c -o GB_AxB__max_secondj_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_build_Scalar.c -o GxB_Vector_build_Scalar.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rdiv_fc64.c -o GB_AxB__times_rdiv_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_BinaryOp_ztype_name.c -o GxB_BinaryOp_ztype_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__copysign_fp32.c -o GB_ew__copysign_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__any_fp64.c -o GB_bld__any_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ge_int64.c -o GB_AxB__eq_ge_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_dot3_one_slice.c -o GB_AxB_dot3_one_slice.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_second_uint8.c -o GB_AxB__any_second_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_add_jit.c -o GB_add_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_min_fp32.c -o GB_AxB__min_min_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__lt_thunk_int32.c -o GB_sel__lt_thunk_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxnor_int8.c -o GB_ew__bxnor_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pow_fp32.c -o GB_ew__pow_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_gt_uint32.c -o GB_AxB__lor_gt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_reduce.c -o GB_enumify_reduce.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rdiv_fp32.c -o GB_AxB__plus_rdiv_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rminus_int16.c -o GB_ew__rminus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__acos_fp32_fp32.c -o GB_unop__acos_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rminus_uint32.c -o GB_ew__rminus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_second_uint64.c -o GB_AxB__any_second_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_apply_unop_jit.c -o GB_apply_unop_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_min_int16.c -o GB_AxB__max_min_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_IndexUnaryOp_ztype_name.c -o GxB_IndexUnaryOp_ztype_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isle_fp32.c -o GB_aop__isle_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_land_bool.c -o GB_AxB__lxor_land_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rdiv_uint32.c -o GB_AxB__any_rdiv_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ne_int32.c -o GB_AxB__land_ne_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_nvals.c -o GB_nvals.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__max_fp32.c -o GB_bld__max_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_max_fp32.c -o GB_AxB__plus_max_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_transpose_cast.c -o GB_transpose_cast.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__gt_int64.c -o GB_aop__gt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_lt_int64.c -o GB_AxB__any_lt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_build_jit.c -o GB_build_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rminus_uint64.c -o GB_AxB__times_rminus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_first_fc64.c -o GB_AxB__plus_first_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_pack_Bitmap.c -o GxB_Vector_pack_Bitmap.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_second_uint16.c -o GB_AxB__min_second_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_exportHint.c -o GrB_Matrix_exportHint.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__band_int16.c -o GB_aop__band_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isge_int32.c -o GB_ew__isge_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp32_fp64.c -o GB_unop__identity_fp32_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_max_fp32.c -o GB_AxB__any_max_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__fmod_fp32.c -o GB_aop__fmod_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int16_int8.c -o GB_unop__identity_int16_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_plus_uint16.c -o GB_AxB__any_plus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_dot2.c -o GB_AxB_dot2.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_concat_hyper.c -o GB_concat_hyper.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__times_fp64.c -o GB_red__times_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isge_fp64.c -o GB_ew__isge_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_lt_int64.c -o GB_AxB__eq_lt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_le_int32.c -o GB_AxB__eq_le_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_plus_uint64.c -o GB_AxB__min_plus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_ss.c -o GB_AxB_saxpy3_sym_ss.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int16_int16.c -o GB_unop__identity_int16_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_max_int64.c -o GB_AxB__plus_max_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__any_uint8.c -o GB_bld__any_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rminus_fc64.c -o GB_AxB__plus_rminus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__div_int8.c -o GB_ew__div_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ne_uint64.c -o GB_AxB__lxor_ne_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc32_bool.c -o GB_unop__identity_fc32_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log10_fp64_fp64.c -o GB_unop__log10_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__eq_uint32.c -o GB_ew__eq_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lor_int32.c -o GB_aop__lor_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_slice_vector.c -o GB_slice_vector.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int8_fp32.c -o GB_unop__identity_int8_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ne_uint64.c -o GB_AxB__any_ne_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ge_thunk_fp64.c -o GB_sel__ge_thunk_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lxor_int32.c -o GB_AxB__plus_lxor_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__sinh_fp32_fp32.c -o GB_unop__sinh_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__eq_fp64.c -o GB_aop__eq_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__expm1_fc32_fc32.c -o GB_unop__expm1_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__lt_thunk_uint64.c -o GB_sel__lt_thunk_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_div_fp64.c -o GB_AxB__plus_div_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_le_int32.c -o GB_AxB__lor_le_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_first_uint8.c -o GB_AxB__any_first_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_nsh.c -o GB_AxB_saxpy3_sym_nsh.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pair_int8.c -o GB_ew__pair_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_nss.c -o GB_AxB_saxpy3_sym_nss.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__abs_int64_int64.c -o GB_unop__abs_int64_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_bor_uint32.c -o GB_AxB__bxnor_bor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__max_int16.c -o GB_bld__max_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Matrix_diag.c -o GB_Matrix_diag.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_msh.c -o GB_AxB_saxpy3_sym_msh.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bget_int64.c -o GB_aop__bget_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__isfinite_bool_fp64.c -o GB_unop__isfinite_bool_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_first_int32.c -o GB_AxB__min_first_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__any_int32.c -o GB_red__any_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_rowIterator.c -o GxB_rowIterator.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__min_uint64.c -o GB_ew__min_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_firstj1_int64.c -o GB_AxB__times_firstj1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_is_diagonal.c -o GB_is_diagonal.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_pair_int16.c -o GB_AxB__plus_pair_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__minv_uint64_uint64.c -o GB_unop__minv_uint64_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_extractElement.c -o GrB_Matrix_extractElement.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ainv_uint8_uint8.c -o GB_unop__ainv_uint8_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bget_uint64.c -o GB_aop__bget_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_max_int8.c -o GB_AxB__times_max_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__any_fc64.c -o GB_bld__any_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lxor_uint64.c -o GB_aop__lxor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select_bitmap_jit.c -o GB_select_bitmap_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rdiv_fc32.c -o GB_AxB__times_rdiv_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unjumble.c -o GB_unjumble.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rminus_uint8.c -o GB_ew__rminus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__eq_thunk_fc64.c -o GB_sel__eq_thunk_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Type_from_name.c -o GxB_Type_from_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_eWiseUnion.c -o GxB_Vector_eWiseUnion.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__plus_fc32.c -o GB_aop__plus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_lt_uint16.c -o GB_AxB__land_lt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lor_fp64.c -o GB_AxB__plus_lor_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxor_uint16.c -o GB_ew__bxor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_le_uint64.c -o GB_AxB__lxor_le_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rdiv_uint8.c -o GB_AxB__any_rdiv_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_reshape.c -o GxB_Matrix_reshape.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__times_int64.c -o GB_red__times_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_times_int32.c -o GB_AxB__min_times_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__iseq_uint64.c -o GB_ew__iseq_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rminus_uint16.c -o GB_AxB__plus_rminus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_generic_firsti32.c -o GB_AxB_saxpy3_generic_firsti32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_eq_int32.c -o GB_AxB__any_eq_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_15.c -o GB_subassign_15.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__islt_fp64.c -o GB_aop__islt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ge_uint32.c -o GB_ew__ge_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_times_fp64.c -o GB_AxB__min_times_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_max_fp32.c -o GB_AxB__min_max_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy4_jit.c -o GB_AxB_saxpy4_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_sb.c -o GB_AxB_saxpy3_sym_sb.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_assign.c -o GrB_Matrix_assign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_serializeSize.c -o GrB_Matrix_serializeSize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__div_fp32.c -o GB_aop__div_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__div_fp64.c -o GB_ew__div_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_mask.c -o GB_mask.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__abs_uint64_uint64.c -o GB_unop__abs_uint64_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_nnz_max.c -o GB_nnz_max.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_bxnor_uint16.c -o GB_AxB__band_bxnor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_min_uint64.c -o GB_AxB__plus_min_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_plus_fp32.c -o GB_AxB__min_plus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__atan2_fp64.c -o GB_ew__atan2_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__gt_fp64.c -o GB_ew__gt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bclr_int64.c -o GB_ew__bclr_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_firsti1_int64.c -o GB_AxB__min_firsti1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ge_int8.c -o GB_AxB__land_ge_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_unpack_CSR.c -o GxB_Matrix_unpack_CSR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lor_int64.c -o GB_ew__lor_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__le_uint64.c -o GB_aop__le_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bshift_int64.c -o GB_ew__bshift_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_08s_and_16.c -o GB_subassign_08s_and_16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__eq_uint8.c -o GB_ew__eq_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lor_int8.c -o GB_aop__lor_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lxor_uint16.c -o GB_AxB__plus_lxor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc64_uint16.c -o GB_unop__identity_fc64_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_firstj_int32.c -o GB_AxB__times_firstj_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc64_int16.c -o GB_unop__identity_fc64_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__signum_fc64_fc64.c -o GB_unop__signum_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Global_Option_get.c -o GxB_Global_Option_get.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lxor_int8.c -o GB_AxB__plus_lxor_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_nfs.c -o GB_AxB_saxpy3_sym_nfs.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_assign.c -o GB_enumify_assign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_plus_int64.c -o GB_AxB__plus_plus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_plus_fp32.c -o GB_AxB__plus_plus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_le_int8.c -o GB_AxB__lor_le_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__max_uint16.c -o GB_aop__max_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__gt_thunk_uint32.c -o GB_sel__gt_thunk_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_times_fp64.c -o GB_AxB__max_times_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_pack_FullR.c -o GxB_Matrix_pack_FullR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_nhh.c -o GB_AxB_saxpy3_sym_nhh.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_eq_uint8.c -o GB_AxB__eq_eq_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_div_uint32.c -o GB_AxB__times_div_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isgt_int32.c -o GB_aop__isgt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_firstj1_int64.c -o GB_AxB__max_firstj1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxbit.c -o GB_AxB_saxbit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_firstj1_int32.c -o GB_AxB__any_firstj1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__first_int8.c -o GB_aop__first_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rminus_fp32.c -o GB_AxB__times_rminus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int16_fc32.c -o GB_unop__identity_int16_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__any_int8.c -o GB_red__any_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_bxor_uint16.c -o GB_AxB__bor_bxor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rminus_int32.c -o GB_AxB__max_rminus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_hh.c -o GB_AxB_saxpy3_sym_hh.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxor_int64.c -o GB_aop__bxor_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__first_uint64.c -o GB_ew__first_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__cos_fp32_fp32.c -o GB_unop__cos_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ge_uint16.c -o GB_AxB__lor_ge_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp64_int32.c -o GB_unop__identity_fp64_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_jit.c -o GB_subassign_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__times_uint8.c -o GB_red__times_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lt_uint16.c -o GB_ew__lt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__land_uint8.c -o GB_ew__land_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_generic_firstj64.c -o GB_AxB_saxpy3_generic_firstj64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log10_fc64_fc64.c -o GB_unop__log10_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_size.c -o GrB_Vector_size.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_pair_fp64.c -o GB_AxB__plus_pair_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_lxor_bool.c -o GB_AxB__lor_lxor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_assign_scalar.c -o GB_assign_scalar.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_M_noaccum_whole.c -o GB_bitmap_assign_M_noaccum_whole.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_extract.c -o GrB_Matrix_extract.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_concat_sparse_jit.c -o GB_concat_sparse_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ne_fp32.c -o GB_AxB__lxor_ne_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_dot.c -o GB_AxB_dot.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rdiv_uint16.c -o GB_AxB__plus_rdiv_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy5_jit.c -o GB_AxB_saxpy5_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_min_uint32.c -o GB_AxB__any_min_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__iseq_uint16.c -o GB_aop__iseq_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_times_fp32.c -o GB_AxB__any_times_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_SelectOp_xtype.c -o GxB_SelectOp_xtype.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_slice_quick.c -o GB_AxB_saxpy3_slice_quick.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_resize.c -o GrB_Vector_resize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pow_int64.c -o GB_ew__pow_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxbit_jit.c -o GB_AxB_saxbit_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__max_int64.c -o GB_bld__max_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__lt_thunk_fp32.c -o GB_sel__lt_thunk_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__band_uint32.c -o GB_aop__band_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_gt_int64.c -o GB_AxB__eq_gt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_first_int64.c -o GB_AxB__times_first_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isne_uint8.c -o GB_aop__isne_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_unpack_HyperCSR.c -o GxB_Matrix_unpack_HyperCSR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__lor_bool.c -o GB_bld__lor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_transpose_bucket.c -o GB_transpose_bucket.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__minv_uint32_uint32.c -o GB_unop__minv_uint32_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_05.c -o GB_subassign_05.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_unpack_HyperCSC.c -o GxB_Matrix_unpack_HyperCSC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ge_int64.c -o GB_ew__ge_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_plus_fc32.c -o GB_AxB__times_plus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_max_int8.c -o GB_AxB__min_max_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__minus_fc32.c -o GB_aop__minus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rdiv_int16.c -o GB_AxB__min_rdiv_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_div_int32.c -o GB_AxB__min_div_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_import_CSC.c -o GxB_Vector_import_CSC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__div_int16.c -o GB_aop__div_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_times_fp64.c -o GB_AxB__plus_times_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_lt_int32.c -o GB_AxB__land_lt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bshift_int16.c -o GB_aop__bshift_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lor_int64.c -o GB_AxB__plus_lor_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_div_int8.c -o GB_AxB__any_div_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_band_uint8.c -o GB_AxB__bxnor_band_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_expand_to_hyper.c -o GB_bitmap_expand_to_hyper.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Scalar_type_name.c -o GxB_Scalar_type_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_first_int8.c -o GB_AxB__times_first_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__gt_thunk_uint64.c -o GB_sel__gt_thunk_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__plus_uint64.c -o GB_bld__plus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rminus_int32.c -o GB_AxB__plus_rminus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log1p_fp32_fp32.c -o GB_unop__log1p_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bclr_uint32.c -o GB_aop__bclr_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__land_bool.c -o GB_aop__land_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ge_thunk_uint8.c -o GB_sel__ge_thunk_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pair_int64.c -o GB_aop__pair_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_msort_2.c -o GB_msort_2.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_kroner.c -o GB_kroner.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_as__fp64.c -o GB_as__fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy4_tasks.c -o GB_AxB_saxpy4_tasks.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_bxor_uint16.c -o GB_AxB__band_bxor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_bor_uint16.c -o GB_AxB__band_bor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ne_thunk_int64.c -o GB_sel__ne_thunk_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_div_uint8.c -o GB_AxB__times_div_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isgt_int8.c -o GB_aop__isgt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rdiv_int16.c -o GB_ew__rdiv_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_mxm.c -o GB_enumify_mxm.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int64_fc32.c -o GB_unop__identity_int64_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Type_wait.c -o GrB_Type_wait.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ne_int64.c -o GB_AxB__land_ne_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_split_full_jit.c -o GB_split_full_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__islt_int16.c -o GB_aop__islt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__second_bool.c -o GB_ew__second_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_plus_int8.c -o GB_AxB__plus_plus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_bor_uint32.c -o GB_AxB__bor_bor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__first_uint16.c -o GB_aop__first_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_land_uint8.c -o GB_AxB__plus_land_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__band_int32.c -o GB_ew__band_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_ewise.c -o GB_macrofy_ewise.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__any_int32.c -o GB_bld__any_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_pair_uint32.c -o GB_AxB__plus_pair_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_le_uint32.c -o GB_AxB__any_le_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rminus_uint64.c -o GB_aop__rminus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_plus_int32.c -o GB_AxB__any_plus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_bxnor_uint64.c -o GB_AxB__bxnor_bxnor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ne_thunk_uint16.c -o GB_sel__ne_thunk_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__le_fp64.c -o GB_ew__le_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_first_uint32.c -o GB_AxB__min_first_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bset_uint8.c -o GB_aop__bset_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ne_uint64.c -o GB_AxB__eq_ne_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_build.c -o GB_enumify_build.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_reduce_to_vector.c -o GB_reduce_to_vector.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__abs_int16_int16.c -o GB_unop__abs_int16_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_eq_uint64.c -o GB_AxB__lxor_eq_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__creal_fp32_fc32.c -o GB_unop__creal_fp32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp64_uint16.c -o GB_unop__identity_fp64_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint32_int32.c -o GB_unop__identity_uint32_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__le_fp32.c -o GB_aop__le_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ne_int16.c -o GB_AxB__land_ne_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_sparsity.c -o GB_macrofy_sparsity.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__min_int8.c -o GB_bld__min_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_le_uint8.c -o GB_AxB__land_le_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_free.c -o GrB_Vector_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_generic_second.c -o GB_AxB_saxpy3_generic_second.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_max_int8.c -o GB_AxB__any_max_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pow_int16.c -o GB_aop__pow_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_is_shallow.c -o GB_is_shallow.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Descriptor_check.c -o GB_Descriptor_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_binop_pattern.c -o GB_binop_pattern.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_div_int64.c -o GB_AxB__min_div_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_land_bool.c -o GB_AxB__any_land_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_bxnor_uint16.c -o GB_AxB__bxnor_bxnor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__plus_int8.c -o GB_aop__plus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__le_thunk_int64.c -o GB_sel__le_thunk_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint16_fp64.c -o GB_unop__identity_uint16_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ge_int32.c -o GB_AxB__lor_ge_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_symbolic.c -o GB_subassign_symbolic.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_second_uint8.c -o GB_AxB__times_second_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_firsti_int64.c -o GB_AxB__min_firsti_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_13.c -o GB_subassign_13.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__nonzombie_fc32.c -o GB_sel__nonzombie_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_times_uint32.c -o GB_AxB__any_times_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ix_realloc.c -o GB_ix_realloc.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_assign_scalar.c -o GrB_Vector_assign_scalar.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_le_uint64.c -o GB_AxB__any_le_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pow_fp64.c -o GB_ew__pow_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_unop.c -o GB_enumify_unop.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_secondj1_int32.c -o GB_AxB__max_secondj1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__div_fc64.c -o GB_ew__div_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_deserialize.c -o GxB_Vector_deserialize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_build.c -o GB_build.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ne_fc32.c -o GB_ew__ne_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_plus_int64.c -o GB_AxB__min_plus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_user_op_jit.c -o GB_user_op_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_nsb.c -o GB_AxB_saxpy3_sym_nsb.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_eq_int16.c -o GB_AxB__land_eq_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_times_fc64.c -o GB_AxB__plus_times_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__second_uint32.c -o GB_ew__second_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__iseq_int32.c -o GB_aop__iseq_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_math.c -o GB_math.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__atanh_fp32_fp32.c -o GB_unop__atanh_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_msb.c -o GB_AxB_saxpy3_sym_msb.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rdiv_int64.c -o GB_AxB__plus_rdiv_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ne_uint8.c -o GB_AxB__lor_ne_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bor_int32.c -o GB_ew__bor_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Scalar_fprint.c -o GxB_Scalar_fprint.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__bnot_uint8_uint8.c -o GB_unop__bnot_uint8_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_firstj_int32.c -o GB_AxB__min_firstj_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ceil_fp32_fp32.c -o GB_unop__ceil_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_lor_bool.c -o GB_AxB__lor_lor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isge_int16.c -o GB_aop__isge_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_firstj_int64.c -o GB_AxB__max_firstj_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_minus_uint32.c -o GB_AxB__times_minus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ge_uint64.c -o GB_AxB__lxor_ge_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ijlength.c -o GB_ijlength.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__min_uint8.c -o GB_aop__min_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__max_uint8.c -o GB_bld__max_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Iterator_free.c -o GxB_Iterator_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Monoid_identity.c -o GxB_Monoid_identity.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_gt_bool.c -o GB_AxB__any_gt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_first_int32.c -o GB_AxB__plus_first_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Type_name.c -o GxB_Type_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc32_uint32.c -o GB_unop__identity_fc32_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_bor_uint8.c -o GB_AxB__bor_bor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_Iterator.c -o GxB_Vector_Iterator.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_meta.c -o GB_AxB_meta.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pair_fp64.c -o GB_ew__pair_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_minus_uint16.c -o GB_AxB__max_minus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_plus_int8.c -o GB_AxB__any_plus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__first_uint32.c -o GB_ew__first_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bset_uint32.c -o GB_aop__bset_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_casting.c -o GB_casting.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isle_uint16.c -o GB_aop__isle_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__gt_int8.c -o GB_ew__gt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_second_uint16.c -o GB_AxB__max_second_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc64_int8.c -o GB_unop__identity_fc64_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__first_int64.c -o GB_ew__first_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_plus_uint8.c -o GB_AxB__any_plus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_unpack_Bitmap.c -o GxB_Vector_unpack_Bitmap.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Scalar_new.c -o GrB_Scalar_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_plus_uint32.c -o GB_AxB__max_plus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint16_fc64.c -o GB_unop__identity_uint16_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_BinaryOp_xtype.c -o GxB_BinaryOp_xtype.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_mhh.c -o GB_AxB_saxpy3_sym_mhh.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__minv_fp32_fp32.c -o GB_unop__minv_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__log1p_fp64_fp64.c -o GB_unop__log1p_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_dot3_jit.c -o GB_AxB_dot3_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ge_uint64.c -o GB_aop__ge_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint32_int16.c -o GB_unop__identity_uint32_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__copysign_fp64.c -o GB_ew__copysign_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__gt_thunk_fp32.c -o GB_sel__gt_thunk_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3.c -o GB_AxB_saxpy3.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_secondj1_int32.c -o GB_AxB__plus_secondj1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_firsti1_int64.c -o GB_AxB__any_firsti1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_eq_uint8.c -o GB_AxB__lxor_eq_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ne_fp64.c -o GB_AxB__lor_ne_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int32_fp32.c -o GB_unop__identity_int32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__first_int32.c -o GB_aop__first_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lt_int16.c -o GB_aop__lt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ge_int8.c -o GB_AxB__lor_ge_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_bxnor_uint64.c -o GB_AxB__bor_bxnor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_minus_fc32.c -o GB_AxB__any_minus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_div_uint64.c -o GB_AxB__any_div_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_nvec_nonempty.c -o GB_nvec_nonempty.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_div_int16.c -o GB_AxB__any_div_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_UnaryOp_new.c -o GxB_UnaryOp_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_gt_int32.c -o GB_AxB__land_gt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_second_fc32.c -o GB_AxB__any_second_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_times_uint16.c -o GB_AxB__min_times_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ne_fp32.c -o GB_AxB__any_ne_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__max_fp64.c -o GB_aop__max_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_first_int64.c -o GB_AxB__plus_first_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__minus_uint8.c -o GB_ew__minus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_concat_bitmap.c -o GB_concat_bitmap.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_gt_uint64.c -o GB_AxB__any_gt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rminus_fp32.c -o GB_aop__rminus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_unpack_FullR.c -o GxB_Matrix_unpack_FullR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_times_fp64.c -o GB_AxB__any_times_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__second_uint8.c -o GB_ew__second_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__minus_uint16.c -o GB_ew__minus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_10_and_18.c -o GB_subassign_10_and_18.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_min_int64.c -o GB_AxB__any_min_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_nbs.c -o GB_AxB_saxpy3_sym_nbs.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_positional_unop_ijflip.c -o GB_positional_unop_ijflip.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_eq_bool.c -o GB_AxB__lxor_eq_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bor_int8.c -o GB_ew__bor_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_eq_fp32.c -o GB_AxB__lxor_eq_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_div_uint64.c -o GB_AxB__plus_div_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_mff.c -o GB_AxB_saxpy3_sym_mff.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Mask_compatible.c -o GB_Mask_compatible.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ne_uint64.c -o GB_ew__ne_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_eq_uint64.c -o GB_AxB__lor_eq_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lor_fp64.c -o GB_aop__lor_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_le_int64.c -o GB_AxB__lxor_le_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_second_uint16.c -o GB_AxB__plus_second_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint64_fp32.c -o GB_unop__identity_uint64_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__first_int16.c -o GB_bld__first_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lxor_fp64.c -o GB_AxB__plus_lxor_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_first_uint64.c -o GB_AxB__min_first_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint8_fc32.c -o GB_unop__identity_uint8_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__copysign_fp64.c -o GB_aop__copysign_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__islt_uint32.c -o GB_aop__islt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_expand_iso.c -o GB_expand_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rminus_fp64.c -o GB_ew__rminus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__fmod_fp64.c -o GB_ew__fmod_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_times_int32.c -o GB_AxB__times_times_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_first_int32.c -o GB_AxB__times_first_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_band_uint16.c -o GB_AxB__bor_band_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pair_uint8.c -o GB_ew__pair_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ne_fp64.c -o GB_AxB__lxor_ne_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__times_uint64.c -o GB_aop__times_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_le_bool.c -o GB_AxB__land_le_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__any_fp64.c -o GB_red__any_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rminus_int8.c -o GB_AxB__plus_rminus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_mxv.c -o GrB_mxv.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_pack_BitmapC.c -o GxB_Matrix_pack_BitmapC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_BinaryOp_check.c -o GB_BinaryOp_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__eq_fp32.c -o GB_aop__eq_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isle_uint64.c -o GB_ew__isle_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_minus_fp32.c -o GB_AxB__max_minus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ne_uint32.c -o GB_AxB__land_ne_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_times_fp32.c -o GB_AxB__times_times_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_bs.c -o GB_AxB_saxpy3_sym_bs.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_sparse_to_hyper_test.c -o GB_convert_sparse_to_hyper_test.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_pslice.c -o GB_pslice.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rdiv_uint16.c -o GB_AxB__max_rdiv_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__any_int64.c -o GB_bld__any_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bget_int8.c -o GB_ew__bget_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pow_uint32.c -o GB_aop__pow_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__cmplx_fp32.c -o GB_ew__cmplx_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_hyper_to_sparse.c -o GB_convert_hyper_to_sparse.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_BinaryOp_ytype.c -o GxB_BinaryOp_ytype.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_first_fp32.c -o GB_AxB__min_first_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__eq_thunk_int64.c -o GB_sel__eq_thunk_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_family.c -o GB_macrofy_family.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_minus_fp32.c -o GB_AxB__times_minus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_04_jit.c -o GB_emult_04_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_mxm.c -o GB_macrofy_mxm.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxnor_uint32.c -o GB_aop__bxnor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ge_fp32.c -o GB_AxB__lxor_ge_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_pair_fc32.c -o GB_AxB__plus_pair_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_second_uint32.c -o GB_AxB__min_second_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_second_fp32.c -o GB_AxB__times_second_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_dup.c -o GrB_Matrix_dup.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_gt_int8.c -o GB_AxB__land_gt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_second_int32.c -o GB_AxB__max_second_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_firstj1_int32.c -o GB_AxB__times_firstj1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_lt_int16.c -o GB_AxB__lxor_lt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_bxor_uint16.c -o GB_AxB__bxor_bxor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isle_int8.c -o GB_aop__isle_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_fprint.c -o GxB_Vector_fprint.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isne_uint16.c -o GB_aop__isne_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_div_fp32.c -o GB_AxB__max_div_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bshift_uint8.c -o GB_aop__bshift_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rminus_fc32.c -o GB_ew__rminus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isle_uint8.c -o GB_aop__isle_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_gt_uint8.c -o GB_AxB__eq_gt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_le_int32.c -o GB_AxB__land_le_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_eq_uint64.c -o GB_AxB__eq_eq_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__land_uint32.c -o GB_aop__land_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop_one.c -o GB_unop_one.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rdiv_fc32.c -o GB_AxB__any_rdiv_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__tanh_fp32_fp32.c -o GB_unop__tanh_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_clear.c -o GrB_Matrix_clear.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rminus_int64.c -o GB_AxB__min_rminus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lor_uint16.c -o GB_ew__lor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__any_fp32.c -o GB_red__any_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_le_uint32.c -o GB_AxB__land_le_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isge_uint32.c -o GB_aop__isge_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__land_int32.c -o GB_aop__land_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ge_fp32.c -o GB_aop__ge_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__min_uint16.c -o GB_ew__min_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_land_uint64.c -o GB_AxB__plus_land_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_plus_uint64.c -o GB_AxB__any_plus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_second_int32.c -o GB_AxB__times_second_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__gt_uint64.c -o GB_ew__gt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int16_uint64.c -o GB_unop__identity_int16_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__land_fp64.c -o GB_aop__land_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__islt_uint8.c -o GB_aop__islt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__min_uint16.c -o GB_red__min_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_le_int16.c -o GB_AxB__land_le_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_max_int32.c -o GB_AxB__min_max_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_first_int64.c -o GB_AxB__min_first_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_new.c -o GB_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__max_int16.c -o GB_red__max_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_selector.c -o GB_selector.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_serialize_array.c -o GB_serialize_array.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isgt_fp64.c -o GB_aop__isgt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__times_int32.c -o GB_bld__times_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_first_uint16.c -o GB_AxB__any_first_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_import_Bitmap.c -o GxB_Vector_import_Bitmap.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_max_fp64.c -o GB_AxB__min_max_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_bytes.c -o GB_macrofy_bytes.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_any_to_non_iso.c -o GB_convert_any_to_non_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Descriptor_free.c -o GrB_Descriptor_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_terminal.c -o GB_enumify_terminal.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__eq_fc32.c -o GB_ew__eq_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__land_int16.c -o GB_ew__land_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ge_uint64.c -o GB_AxB__any_ge_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp64_fp64.c -o GB_unop__identity_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__any_fc64.c -o GB_red__any_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_minus_int32.c -o GB_AxB__plus_minus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rdiv_int8.c -o GB_AxB__min_rdiv_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_reduce.c -o GrB_Matrix_reduce.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_secondj1_int32.c -o GB_AxB__any_secondj1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_second_int32.c -o GB_AxB__plus_second_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_qsort_3.c -o GB_qsort_3.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__plus_uint16.c -o GB_ew__plus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__times_uint16.c -o GB_aop__times_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_first_int32.c -o GB_AxB__any_first_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_eq_bool.c -o GB_AxB__land_eq_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ge_uint64.c -o GB_AxB__eq_ge_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_div_fp32.c -o GB_AxB__plus_div_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_minus_uint8.c -o GB_AxB__min_minus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_fh.c -o GB_AxB_saxpy3_sym_fh.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_I_inverse.c -o GB_I_inverse.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__lxor_bool.c -o GB_red__lxor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__min_fp64.c -o GB_bld__min_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lt_int16.c -o GB_ew__lt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_minus_int8.c -o GB_AxB__max_minus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rminus_int16.c -o GB_AxB__max_rminus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_max_fp64.c -o GB_AxB__any_max_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_transpose_bind2nd_jit.c -o GB_transpose_bind2nd_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_split_sparse.c -o GB_split_sparse.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_second_int8.c -o GB_AxB__max_second_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__cosh_fp32_fp32.c -o GB_unop__cosh_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rminus_uint16.c -o GB_AxB__max_rminus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__minus_uint64.c -o GB_aop__minus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ne_thunk_fp32.c -o GB_sel__ne_thunk_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rminus_fp32.c -o GB_AxB__any_rminus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_status_code.c -o GB_status_code.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_minus_int64.c -o GB_AxB__times_minus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_kron.c -o GB_kron.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__plus_int16.c -o GB_ew__plus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_type.c -o GxB_Matrix_type.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rdiv_uint32.c -o GB_AxB__min_rdiv_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__land_uint8.c -o GB_aop__land_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bset_int16.c -o GB_ew__bset_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rminus_fc64.c -o GB_AxB__any_rminus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_export_FullR.c -o GxB_Matrix_export_FullR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rdiv_int32.c -o GB_AxB__max_rdiv_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__times_fc64.c -o GB_red__times_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_lt_fp64.c -o GB_AxB__land_lt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__plus_int16.c -o GB_red__plus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isle_fp32.c -o GB_ew__isle_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ainv_fp64_fp64.c -o GB_unop__ainv_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sparsity_control.c -o GB_sparsity_control.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_lt_bool.c -o GB_AxB__lxor_lt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__lt_thunk_int8.c -o GB_sel__lt_thunk_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_IndexUnaryOp_fprint.c -o GxB_IndexUnaryOp_fprint.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_msort_1.c -o GB_msort_1.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__gt_int64.c -o GB_ew__gt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rminus_fp64.c -o GB_AxB__plus_rminus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__gt_fp32.c -o GB_aop__gt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__first_uint32.c -o GB_bld__first_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_times_int16.c -o GB_AxB__any_times_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__times_fp32.c -o GB_ew__times_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_assign.c -o GrB_Vector_assign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__band_int16.c -o GB_ew__band_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_first_uint64.c -o GB_AxB__plus_first_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__max_int32.c -o GB_ew__max_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_rdiv_uint8.c -o GB_AxB__min_rdiv_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int64_uint64.c -o GB_unop__identity_int64_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__min_int64.c -o GB_bld__min_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isne_int32.c -o GB_aop__isne_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isgt_uint16.c -o GB_ew__isgt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__lnot_fp32_fp32.c -o GB_unop__lnot_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_unop.c -o GB_macrofy_unop.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_land_bool.c -o GB_AxB__eq_land_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_union_jit.c -o GB_union_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_eq_fp32.c -o GB_AxB__any_eq_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rdiv_int8.c -o GB_AxB__plus_rdiv_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_times_uint64.c -o GB_AxB__min_times_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_bitmap_to_sparse_test.c -o GB_convert_bitmap_to_sparse_test.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_gt_uint8.c -o GB_AxB__lxor_gt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__minus_int32.c -o GB_aop__minus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_max_uint16.c -o GB_AxB__any_max_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bclr_int16.c -o GB_aop__bclr_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_times_int64.c -o GB_AxB__max_times_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isge_int8.c -o GB_ew__isge_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ne_fp32.c -o GB_aop__ne_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_minus_int8.c -o GB_AxB__plus_minus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_nbh.c -o GB_AxB_saxpy3_sym_nbh.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_bool_uint64.c -o GB_unop__identity_bool_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lt_bool.c -o GB_aop__lt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_mbh.c -o GB_AxB_saxpy3_sym_mbh.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isgt_int64.c -o GB_ew__isgt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__plus_fc32.c -o GB_ew__plus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_second_int8.c -o GB_AxB__plus_second_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_eq_fp32.c -o GB_AxB__eq_eq_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_minus_uint64.c -o GB_AxB__any_minus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_bxor_uint64.c -o GB_AxB__band_bxor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_min_uint16.c -o GB_AxB__max_min_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_times_uint32.c -o GB_AxB__min_times_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc32_int8.c -o GB_unop__identity_fc32_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int32_int64.c -o GB_unop__identity_int32_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_max_int16.c -o GB_AxB__max_max_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lt_uint8.c -o GB_aop__lt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__min_int32.c -o GB_red__min_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_setElement.c -o GrB_Vector_setElement.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__abs_uint8_uint8.c -o GB_unop__abs_uint8_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_unpack_FullC.c -o GxB_Matrix_unpack_FullC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_notM_accum.c -o GB_bitmap_assign_notM_accum.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_gt_int16.c -o GB_AxB__lxor_gt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_UnaryOp_xtype_name.c -o GxB_UnaryOp_xtype_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bset_int16.c -o GB_aop__bset_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_land_fp32.c -o GB_AxB__plus_land_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pair_int32.c -o GB_ew__pair_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rdiv_int32.c -o GB_AxB__plus_rdiv_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__nonzombie_uint64.c -o GB_sel__nonzombie_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_bxor_uint8.c -o GB_AxB__bor_bxor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isge_uint32.c -o GB_ew__isge_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int16_fp32.c -o GB_unop__identity_int16_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int8_uint16.c -o GB_unop__identity_int8_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__any_fc32.c -o GB_bld__any_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_lt_uint32.c -o GB_AxB__lxor_lt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_first_int64.c -o GB_AxB__any_first_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__lor_bool.c -o GB_red__lor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ge_fp32.c -o GB_AxB__land_ge_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_extract_vector_list.c -o GB_extract_vector_list.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isle_int32.c -o GB_aop__isle_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ge_fp64.c -o GB_AxB__lor_ge_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__creal_fp64_fc64.c -o GB_unop__creal_fp64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bor_uint8.c -o GB_ew__bor_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_cast_expression.c -o GB_macrofy_cast_expression.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_lt_uint64.c -o GB_AxB__lor_lt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_min_int16.c -o GB_AxB__min_min_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isne_fc32.c -o GB_ew__isne_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_pair_int8.c -o GB_AxB__plus_pair_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rdiv_int8.c -o GB_AxB__max_rdiv_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__plus_int32.c -o GB_ew__plus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ge_bool.c -o GB_AxB__land_ge_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_bor_uint32.c -o GB_AxB__bxor_bor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_bh.c -o GB_AxB_saxpy3_sym_bh.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_eq_int16.c -o GB_AxB__any_eq_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ge_fp32.c -o GB_AxB__any_ge_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_eq_uint32.c -o GB_AxB__land_eq_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Scalar_memoryUsage.c -o GxB_Scalar_memoryUsage.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_minus_uint64.c -o GB_AxB__max_minus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rdiv_uint64.c -o GB_aop__rdiv_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_second_int16.c -o GB_AxB__times_second_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__carg_fp64_fc64.c -o GB_unop__carg_fp64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__gt_int16.c -o GB_aop__gt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_lt_int16.c -o GB_AxB__any_lt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ijsort.c -o GB_ijsort.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rminus_uint16.c -o GB_AxB__times_rminus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ne_uint32.c -o GB_AxB__eq_ne_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__min_uint8.c -o GB_ew__min_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__max_uint16.c -o GB_ew__max_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_reduce_worker_iso.c -o GB_reduce_worker_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_hyper_hash_free.c -o GB_hyper_hash_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_max_uint64.c -o GB_AxB__times_max_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint64_uint32.c -o GB_unop__identity_uint64_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__max_int8.c -o GB_ew__max_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_build.c -o GrB_Vector_build.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ewise_fulln_jit.c -o GB_ewise_fulln_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ne_uint32.c -o GB_AxB__lor_ne_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pow_fc32.c -o GB_ew__pow_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Scalar_setElement.c -o GrB_Scalar_setElement.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_09.c -o GB_subassign_09.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_user_type.c -o GB_macrofy_user_type.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int16_bool.c -o GB_unop__identity_int16_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_rminus_uint64.c -o GB_AxB__any_rminus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_mask.c -o GB_macrofy_mask.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bget_uint16.c -o GB_ew__bget_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_plus_uint16.c -o GB_AxB__min_plus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Col_extract.c -o GrB_Col_extract.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_callback.c -o GB_callback.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int64_uint8.c -o GB_unop__identity_int64_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_gt_bool.c -o GB_AxB__lxor_gt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_gt_bool.c -o GB_AxB__eq_gt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_plus_int16.c -o GB_AxB__max_plus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_as__int64.c -o GB_as__int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_second_fc64.c -o GB_AxB__times_second_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pair_int8.c -o GB_aop__pair_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ne_uint16.c -o GB_AxB__lxor_ne_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__times_uint32.c -o GB_bld__times_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_second_uint32.c -o GB_AxB__times_second_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__second_fp32.c -o GB_aop__second_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_wait.c -o GB_wait.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lor_int8.c -o GB_ew__lor_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_max_uint32.c -o GB_AxB__any_max_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_secondj_int32.c -o GB_AxB__plus_secondj_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__max_int8.c -o GB_aop__max_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_generic_secondj64.c -o GB_AxB_saxpy3_generic_secondj64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_masker.c -o GB_masker.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy.c -o GB_AxB_saxpy.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_plus_fc64.c -o GB_AxB__any_plus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_fullM_accum.c -o GB_bitmap_assign_fullM_accum.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__lt_thunk_uint16.c -o GB_sel__lt_thunk_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc64_fc64.c -o GB_unop__identity_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__nonzombie_uint16.c -o GB_sel__nonzombie_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__min_int8.c -o GB_red__min_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_apply.c -o GrB_Vector_apply.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__plus_uint32.c -o GB_bld__plus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lor_int16.c -o GB_AxB__plus_lor_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isgt_int32.c -o GB_ew__isgt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__second_fc32.c -o GB_ew__second_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ge_uint32.c -o GB_AxB__land_ge_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bget_int16.c -o GB_aop__bget_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_gt_uint16.c -o GB_AxB__any_gt_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__islt_int8.c -o GB_ew__islt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_dot2_jit.c -o GB_AxB_dot2_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_lt_bool.c -o GB_AxB__any_lt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__second_int64.c -o GB_bld__second_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__isnan_bool_fp32.c -o GB_unop__isnan_bool_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_lt_uint8.c -o GB_AxB__lxor_lt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxor_int64.c -o GB_ew__bxor_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__first_fp64.c -o GB_aop__first_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ne_uint16.c -o GB_aop__ne_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_firstj_int64.c -o GB_AxB__times_firstj_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_plus_fp64.c -o GB_AxB__min_plus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lxor_uint16.c -o GB_aop__lxor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__asin_fc32_fc32.c -o GB_unop__asin_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_min_uint16.c -o GB_AxB__plus_min_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Semiring_add.c -o GxB_Semiring_add.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_min_int64.c -o GB_AxB__plus_min_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_gt_fp64.c -o GB_AxB__land_gt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__bnot_int16_int16.c -o GB_unop__bnot_int16_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_min_uint32.c -o GB_AxB__min_min_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rdiv_uint64.c -o GB_AxB__times_rdiv_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_times_fp32.c -o GB_AxB__min_times_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__plus_int8.c -o GB_ew__plus_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_reduce_to_scalar_jit.c -o GB_reduce_to_scalar_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_masker_sparsity.c -o GB_masker_sparsity.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_min_int32.c -o GB_AxB__max_min_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_memoryUsage.c -o GxB_Vector_memoryUsage.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_eq_uint8.c -o GB_AxB__land_eq_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__plus_uint32.c -o GB_red__plus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc32_uint16.c -o GB_unop__identity_fc32_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp32_bool.c -o GB_unop__identity_fp32_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__hypot_fp64.c -o GB_ew__hypot_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__iseq_uint16.c -o GB_ew__iseq_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__land_bool.c -o GB_ew__land_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc64_bool.c -o GB_unop__identity_fc64_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_BinaryOp_fprint.c -o GxB_BinaryOp_fprint.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_plus_int16.c -o GB_AxB__plus_plus_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__second_int8.c -o GB_bld__second_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__minus_uint8.c -o GB_aop__minus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__iseq_fc64.c -o GB_aop__iseq_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ainv_fc64_fc64.c -o GB_unop__ainv_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__band_uint32.c -o GB_ew__band_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp64_uint32.c -o GB_unop__identity_fp64_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ewise_slice.c -o GB_ewise_slice.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isge_uint64.c -o GB_ew__isge_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__max_uint8.c -o GB_red__max_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__nonzombie_fp32.c -o GB_sel__nonzombie_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_eWiseMult.c -o GrB_Vector_eWiseMult.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__minus_fc32.c -o GB_ew__minus_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_le_uint64.c -o GB_AxB__eq_le_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__gt_bool.c -o GB_aop__gt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__div_int16.c -o GB_ew__div_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int32_int16.c -o GB_unop__identity_int32_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__le_uint16.c -o GB_aop__le_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_times_fp64.c -o GB_AxB__times_times_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__max_int32.c -o GB_red__max_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_Iterator.c -o GxB_Matrix_Iterator.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_times_uint8.c -o GB_AxB__plus_times_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_UnaryOp_free.c -o GrB_UnaryOp_free.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lxor_fp32.c -o GB_ew__lxor_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_pack_BitmapR.c -o GxB_Matrix_pack_BitmapR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__bnot_uint16_uint16.c -o GB_unop__bnot_uint16_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__max_fp64.c -o GB_red__max_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ne_int64.c -o GB_aop__ne_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__cbrt_fp64_fp64.c -o GB_unop__cbrt_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rminus_int32.c -o GB_AxB__times_rminus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_lt_bool.c -o GB_AxB__eq_lt_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__first_bool.c -o GB_bld__first_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__first_bool.c -o GB_ew__first_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isne_fc32.c -o GB_aop__isne_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__erfc_fp64_fp64.c -o GB_unop__erfc_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_max_uint32.c -o GB_AxB__max_max_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_times_int8.c -o GB_AxB__min_times_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rdiv_fp32.c -o GB_aop__rdiv_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_firsti1_int64.c -o GB_AxB__times_firsti1_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_min_uint16.c -o GB_AxB__any_min_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isgt_int8.c -o GB_ew__isgt_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc32_fc32.c -o GB_unop__identity_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_ge_uint8.c -o GB_AxB__land_ge_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select_generic_bitmap.c -o GB_select_generic_bitmap.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pair_int32.c -o GB_aop__pair_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_plus_int32.c -o GB_AxB__min_plus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__islt_int16.c -o GB_ew__islt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_04.c -o GB_subassign_04.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_lt_int16.c -o GB_AxB__eq_lt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxnor_int16.c -o GB_aop__bxnor_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__first_uint16.c -o GB_ew__first_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__frexpx_fp64_fp64.c -o GB_unop__frexpx_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_gt_uint64.c -o GB_AxB__lor_gt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_eq_int16.c -o GB_AxB__lxor_eq_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_import_FullC.c -o GxB_Matrix_import_FullC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ne_int32.c -o GB_AxB__lxor_ne_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rminus_uint64.c -o GB_ew__rminus_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_gt_int64.c -o GB_AxB__any_gt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__first_fc64.c -o GB_aop__first_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_times_int32.c -o GB_AxB__any_times_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_second_fp64.c -o GB_AxB__max_second_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bset_uint8.c -o GB_ew__bset_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Monoid_wait.c -o GrB_Monoid_wait.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ne_int64.c -o GB_AxB__lor_ne_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_min_int8.c -o GB_AxB__max_min_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_serialize.c -o GxB_Vector_serialize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_gt_int16.c -o GB_AxB__any_gt_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__plus_uint8.c -o GB_red__plus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__le_fp32.c -o GB_ew__le_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__eq_thunk_uint64.c -o GB_sel__eq_thunk_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_max_uint32.c -o GB_AxB__min_max_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_concat_full_jit.c -o GB_concat_full_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__min_uint64.c -o GB_aop__min_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__exp2_fp32_fp32.c -o GB_unop__exp2_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__gt_uint8.c -o GB_ew__gt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__gt_uint32.c -o GB_aop__gt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_lt_uint32.c -o GB_AxB__any_lt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pow_int16.c -o GB_ew__pow_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ne_uint32.c -o GB_AxB__any_ne_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isge_uint16.c -o GB_ew__isge_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rdiv_int64.c -o GB_aop__rdiv_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ne_int64.c -o GB_AxB__any_ne_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__div_uint64.c -o GB_ew__div_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__band_uint8.c -o GB_ew__band_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Monoid_fprint.c -o GxB_Monoid_fprint.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_times_fp32.c -o GB_AxB__max_times_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint8_fp32.c -o GB_unop__identity_uint8_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_export_BitmapC.c -o GxB_Matrix_export_BitmapC.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_removeElement.c -o GrB_Vector_removeElement.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_colscale.c -o GB_colscale.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__ainv_fc32_fc32.c -o GB_unop__ainv_fc32_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_lt_uint32.c -o GB_AxB__eq_lt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxor_int32.c -o GB_aop__bxor_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__div_fc32.c -o GB_aop__div_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_select.c -o GB_select.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_second_fp32.c -o GB_AxB__any_second_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_max_uint32.c -o GB_AxB__plus_max_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint32_fp64.c -o GB_unop__identity_uint32_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lor_int64.c -o GB_aop__lor_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_setElement.c -o GB_setElement.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__min_int64.c -o GB_ew__min_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_le_int32.c -o GB_AxB__lxor_le_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_type_name.c -o GxB_Matrix_type_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_output.c -o GB_macrofy_output.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lxor_int64.c -o GB_AxB__plus_lxor_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__gt_thunk_uint16.c -o GB_sel__gt_thunk_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Matrix_export_HyperCSR.c -o GxB_Matrix_export_HyperCSR.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_times_fc64.c -o GB_AxB__times_times_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__sqrt_fp64_fp64.c -o GB_unop__sqrt_fp64_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_23.c -o GB_subassign_23.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_times_uint8.c -o GB_AxB__any_times_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_le_int64.c -o GB_AxB__lor_le_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_div_fp64.c -o GB_AxB__times_div_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__cmplx_fp64.c -o GB_aop__cmplx_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__islt_uint64.c -o GB_ew__islt_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__fmod_fp32.c -o GB_ew__fmod_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy5.c -o GB_AxB_saxpy5.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_minus_fp64.c -o GB_AxB__plus_minus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_max_uint8.c -o GB_AxB__max_max_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__islt_uint8.c -o GB_ew__islt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ne_thunk_int16.c -o GB_sel__ne_thunk_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint16_fp32.c -o GB_unop__identity_uint16_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_lor_uint32.c -o GB_AxB__plus_lor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxbit_generic_first.c -o GB_AxB_saxbit_generic_first.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_second_fp64.c -o GB_AxB__plus_second_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__any_int64.c -o GB_red__any_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ne_int32.c -o GB_aop__ne_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_first_fp64.c -o GB_AxB__any_first_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bget_uint32.c -o GB_aop__bget_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ne_uint16.c -o GB_AxB__any_ne_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int64_int32.c -o GB_unop__identity_int64_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp32_uint8.c -o GB_unop__identity_fp32_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_nnz.c -o GB_nnz.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_min_uint8.c -o GB_AxB__min_min_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_max_int16.c -o GB_AxB__plus_max_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rdiv_uint32.c -o GB_AxB__plus_rdiv_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxor_bxnor_uint64.c -o GB_AxB__bxor_bxnor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ne_int8.c -o GB_AxB__lxor_ne_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rminus_uint16.c -o GB_aop__rminus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lxor_fp32.c -o GB_aop__lxor_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bxnor_bxor_uint16.c -o GB_AxB__bxnor_bxor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_hs.c -o GB_AxB_saxpy3_sym_hs.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__first_int16.c -o GB_aop__first_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ne_uint16.c -o GB_AxB__eq_ne_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_02_jit.c -o GB_emult_02_jit.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_minus_fp64.c -o GB_AxB__min_minus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bxnor_int16.c -o GB_ew__bxnor_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_eq_uint16.c -o GB_AxB__lxor_eq_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__times_uint64.c -o GB_ew__times_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_macrofy_build.c -o GB_macrofy_build.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_ewise.c -o GB_enumify_ewise.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_first_bool.c -o GB_AxB__eq_first_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_ne_fp32.c -o GB_AxB__eq_ne_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_firstj1_int32.c -o GB_AxB__min_firstj1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__first_uint8.c -o GB_ew__first_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pow_fc32.c -o GB_aop__pow_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_bor_uint32.c -o GB_AxB__band_bor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__gt_uint8.c -o GB_aop__gt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_lt_uint8.c -o GB_AxB__any_lt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rdiv_fp64.c -o GB_AxB__max_rdiv_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_first_uint16.c -o GB_AxB__times_first_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_plus_uint32.c -o GB_AxB__plus_plus_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_secondj1_int32.c -o GB_AxB__times_secondj1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_assign.c -o GB_assign.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__first_int32.c -o GB_ew__first_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_enumify_sparsity.c -o GB_enumify_sparsity.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_19.c -o GB_subassign_19.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ne_int8.c -o GB_aop__ne_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rdiv_uint32.c -o GB_aop__rdiv_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_lt_fp32.c -o GB_AxB__eq_lt_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__lxor_int8.c -o GB_aop__lxor_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_lt_uint8.c -o GB_AxB__eq_lt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_eq_int8.c -o GB_AxB__eq_eq_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_werk_pop.c -o GB_werk_pop.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp64_fc32.c -o GB_unop__identity_fp64_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_le_uint16.c -o GB_AxB__any_le_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_plus_fp32.c -o GB_AxB__max_plus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Pending_realloc.c -o GB_Pending_realloc.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_uint32_uint8.c -o GB_unop__identity_uint32_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__max_fp64.c -o GB_ew__max_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_max_uint8.c -o GB_AxB__plus_max_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc64_uint32.c -o GB_unop__identity_fc64_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__div_uint32.c -o GB_ew__div_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isne_fp64.c -o GB_aop__isne_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_firsti1_int32.c -o GB_AxB__max_firsti1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_assign_zombie4.c -o GB_assign_zombie4.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bshift_uint32.c -o GB_ew__bshift_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__isfinite_bool_fc32.c -o GB_unop__isfinite_bool_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__rminus_fp32.c -o GB_ew__rminus_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_le_int8.c -o GB_AxB__lxor_le_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__times_uint8.c -o GB_bld__times_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_bool_uint32.c -o GB_unop__identity_bool_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__iseq_int8.c -o GB_ew__iseq_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_le_uint16.c -o GB_AxB__eq_le_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_UnaryOp_ztype_name.c -o GxB_UnaryOp_ztype_name.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_malloc_memory.c -o GB_malloc_memory.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pow_uint16.c -o GB_ew__pow_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_first_uint16.c -o GB_AxB__min_first_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_minus_int64.c -o GB_AxB__max_minus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_check_if_iso.c -o GB_check_if_iso.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_convert_any_to_hyper.c -o GB_convert_any_to_hyper.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_minus_uint16.c -o GB_AxB__times_minus_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isgt_int64.c -o GB_aop__isgt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_first_int16.c -o GB_AxB__max_first_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__isinf_bool_fc64.c -o GB_unop__isinf_bool_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ge_uint16.c -o GB_AxB__lxor_ge_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isge_int64.c -o GB_ew__isge_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_lz4.c -o GB_lz4.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_unpack_HyperHash.c -o GxB_unpack_HyperHash.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_second_uint16.c -o GB_AxB__times_second_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_minus_fc64.c -o GB_AxB__plus_minus_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_rminus_int64.c -o GB_AxB__max_rminus_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__any_fp32.c -o GB_bld__any_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bget_uint8.c -o GB_aop__bget_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__max_uint64.c -o GB_bld__max_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxnor_uint16.c -o GB_aop__bxnor_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_second_fc64.c -o GB_AxB__plus_second_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_free_memory.c -o GB_free_memory.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_minus_int32.c -o GB_AxB__times_minus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_red__min_fp64.c -o GB_red__min_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxor_uint32.c -o GB_aop__bxor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_div_uint16.c -o GB_AxB__max_div_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxnor_int64.c -o GB_aop__bxnor_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__le_int8.c -o GB_aop__le_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Vector_select.c -o GrB_Vector_select.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_lt_int32.c -o GB_AxB__any_lt_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__iseq_uint8.c -o GB_aop__iseq_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bset_uint64.c -o GB_aop__bset_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_times_int32.c -o GB_AxB__plus_times_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_rdiv_fp64.c -o GB_AxB__plus_rdiv_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__first_fc32.c -o GB_aop__first_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__minv_fc64_fc64.c -o GB_unop__minv_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__gt_thunk_int32.c -o GB_sel__gt_thunk_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_serialize_free_blocks.c -o GB_serialize_free_blocks.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_lt_fp64.c -o GB_AxB__any_lt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_plus_fp64.c -o GB_AxB__times_plus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__first_int64.c -o GB_bld__first_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__eq_fp32.c -o GB_ew__eq_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isle_fp64.c -o GB_aop__isle_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_init.c -o GrB_init.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_gt_uint32.c -o GB_AxB__any_gt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_import.c -o GB_import.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_max_int64.c -o GB_AxB__any_max_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__ge_uint16.c -o GB_aop__ge_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__lxor_bool.c -o GB_bld__lxor_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_Vector_check.c -o GB_Vector_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int32_int8.c -o GB_unop__identity_int32_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__max_first_uint16.c -o GB_AxB__max_first_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_encodify_build.c -o GB_encodify_build.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__plus_fp64.c -o GB_ew__plus_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_plus_uint8.c -o GB_AxB__plus_plus_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__pow_uint32.c -o GB_ew__pow_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__bxor_int8.c -o GB_aop__bxor_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_ne_int32.c -o GB_AxB__any_ne_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_firsti1_int32.c -o GB_AxB__plus_firsti1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__expm1_fp32_fp32.c -o GB_unop__expm1_fp32_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__eq_gt_uint32.c -o GB_AxB__eq_gt_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__fmod_fp64.c -o GB_aop__fmod_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__gt_thunk_int16.c -o GB_sel__gt_thunk_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_div_fc32.c -o GB_AxB__any_div_fc32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB_saxpy3_sym_mhs.c -o GB_AxB_saxpy3_sym_mhs.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lor_ge_uint8.c -o GB_AxB__lor_ge_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__rminus_int32.c -o GB_aop__rminus_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_getVersion.c -o GrB_getVersion.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__land_fp64.c -o GB_ew__land_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_realloc_memory.c -o GB_realloc_memory.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__bclr_uint32.c -o GB_ew__bclr_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__times_int32.c -o GB_aop__times_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_Vector_Option_get.c -o GxB_Vector_Option_get.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_lt_int64.c -o GB_AxB__land_lt_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_int32_uint16.c -o GB_unop__identity_int32_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_22.c -o GB_subassign_22.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__bnot_int32_int32.c -o GB_unop__bnot_int32_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__first_uint8.c -o GB_bld__first_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_first_int16.c -o GB_AxB__plus_first_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_eq_int32.c -o GB_AxB__lxor_eq_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__lnot_int16_int16.c -o GB_unop__lnot_int16_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__times_fp64.c -o GB_aop__times_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_serialize.c -o GrB_Matrix_serialize.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GxB_UnaryOp_xtype.c -o GxB_UnaryOp_xtype.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_le_uint64.c -o GB_AxB__land_le_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_boolean_rename_op.c -o GB_boolean_rename_op.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_export.c -o GB_export.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__isne_fc64.c -o GB_aop__isne_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__land_uint32.c -o GB_ew__land_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ijproperties.c -o GB_ijproperties.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_min_uint8.c -o GB_AxB__plus_min_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ek_slice.c -o GB_ek_slice.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_div_uint16.c -o GB_AxB__plus_div_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__pair_uint32.c -o GB_aop__pair_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_emult_generic.c -o GB_emult_generic.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fp64_int16.c -o GB_unop__identity_fp64_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__times_int16.c -o GB_ew__times_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__ne_thunk_uint32.c -o GB_sel__ne_thunk_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__ge_fp32.c -o GB_ew__ge_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__sqrt_fc64_fc64.c -o GB_unop__sqrt_fc64_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__lxor_uint32.c -o GB_ew__lxor_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_entry_check.c -o GB_entry_check.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__bor_bor_uint64.c -o GB_AxB__bor_bor_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_div_fc64.c -o GB_AxB__times_div_fc64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_extractTuples.c -o GB_extractTuples.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_le_int32.c -o GB_AxB__any_le_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__eq_int64.c -o GB_ew__eq_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_subassign_IxJ_slice.c -o GB_subassign_IxJ_slice.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_times_int64.c -o GB_AxB__min_times_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__eq_int32.c -o GB_aop__eq_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__land_int8.c -o GB_aop__land_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__plus_div_int64.c -o GB_AxB__plus_div_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__identity_fc64_int64.c -o GB_unop__identity_fc64_int64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isgt_fp64.c -o GB_ew__isgt_fp64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_firsti1_int32.c -o GB_AxB__min_firsti1_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_min_uint64.c -o GB_AxB__times_min_uint64.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_rdiv_uint16.c -o GB_AxB__times_rdiv_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_sel__gt_thunk_int8.c -o GB_sel__gt_thunk_int8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_encodify_reduce.c -o GB_encodify_reduce.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__bnot_uint32_uint32.c -o GB_unop__bnot_uint32_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__min_div_uint32.c -o GB_AxB__min_div_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_ew__isle_uint16.c -o GB_ew__isle_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_unop__lnot_uint16_uint16.c -o GB_unop__lnot_uint16_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GrB_Matrix_nvals.c -o GrB_Matrix_nvals.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_aop__atan2_fp32.c -o GB_aop__atan2_fp32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_gt_uint8.c -o GB_AxB__any_gt_uint8.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__band_band_uint32.c -o GB_AxB__band_band_uint32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__land_first_bool.c -o GB_AxB__land_first_bool.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_binop_new.c -o GB_binop_new.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bld__any_uint16.c -o GB_bld__any_uint16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__lxor_ge_int32.c -o GB_AxB__lxor_ge_int32.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__any_first_int16.c -o GB_AxB__any_first_int16.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_bitmap_assign_fullM_noaccum.c -o GB_bitmap_assign_fullM_noaccum.o
cc -c -g -std=c11 -fopenmp -fexceptions -fPIC -Wno-pragmas -Itmp_include -I../rmm_wrap -I../zstd -I../zstd/zstd_subset -I../lz4 -I../xxHash -DGBNCPUFEAT -DGBCOVER -DGBMATLAB=1 tmp_source/GB_AxB__times_secondj_int32.c -o GB_AxB__times_secondj_int32.o
cc -fopenmp -shared -Wl,-soname -Wl,libgraphblas_tcov.so -Wl,--no-undefined GB_aop__bxor_uint8.o GB_AxB__bxor_bxor_uint64.o GB_AxB__plus_minus_uint16.o GB_AxB__land_lt_fp32.o GB_code_string.o GB_AxB__max_first_uint64.o GB_ew__le_bool.o GB_aop__rdiv_int8.o GB_AxB__lxor_lt_int64.o GB_ew__bget_int32.o GxB_Matrix_diag.o GB_aop__isne_uint64.o GB_AxB__min_div_fp64.o GB_bitmap_assign_notM_accum_whole.o GB_assign_zombie5.o GrB_Descriptor_set.o GB_ew__pow_fc64.o GB_sel__le_thunk_fp64.o GB_aop__second_uint8.o GB_ew__ne_uint32.o GB_AxB__max_second_fp32.o GB_binop_to_monoid.o GB_AxB__lor_lt_uint32.o GB_aop__bor_int8.o GB_AxB_saxpy3_sym_sh.o GB_AxB__times_second_uint64.o GB_AxB__land_eq_int64.o GB_concat.o GrB_Matrix_nrows.o GB_ew__lor_uint64.o GB_AxB__bor_bxor_uint32.o GB_aop__pair_bool.o GB_AxB__any_second_bool.o GB_unop__isinf_bool_fp64.o GB_aop__min_int16.o GB_unop__identity_uint32_fc32.o GB_bld__plus_fc32.o GB_unop__identity_uint64_int16.o GB_aop__minus_uint16.o GB_unop__identity_uint64_int64.o GB_aop__lt_int64.o GB_hyper_prune.o GB_ew__pair_uint16.o GB_AxB__times_plus_int32.o GB_AxB__lxor_lt_int32.o GB_unop__identity_uint32_uint32.o GB_unop__identity_int64_fp64.o GB_unop__ainv_int32_int32.o GxB_Vector_type_name.o GB_sel__nonzombie_uint32.o GB_AxB__max_first_fp64.o GB_AxB__plus_pair_uint8.o GB_unop__identity_fc64_fp32.o GB_AxB__plus_min_fp32.o GxB_Matrix_unpack_CSC.o GB_Pending_n.o GB_convert_any_to_full.o GB_hypermatrix_prune.o GB_sel__ne_thunk_fc64.o GB_op_is_second.o GB_AxB__bor_band_uint64.o GB_aop__isle_uint64.o GB_AxB__any_secondj_int64.o GB_ew__eq_int16.o GB_AxB__times_rminus_fc32.o GB_unop__identity_fp64_fp32.o GB_unop__log10_fc32_fc32.o GB_red__min_int16.o GB_aop__second_bool.o GB_ewise.o GB_AxB__min_first_fp64.o GB_bld__times_fc64.o GB_unop__identity_uint16_int32.o GB_aop__bclr_uint64.o GB_resize.o GB_ew__lt_int8.o GB_boolean_rename.o GB_aop__land_uint16.o GB_emult_08_jit.o GB_sel__eq_thunk_int8.o GB_AxB__max_second_uint64.o GB_AxB_dot2_control.o GB_AxB__land_second_bool.o GB_sel__ge_thunk_int32.o GB_AxB__min_rminus_uint64.o GB_AxB__times_rdiv_uint8.o GB_AxB__lor_ne_int32.o GB_AxB__any_lt_uint16.o GB_ew__islt_fp64.o GB_aop__plus_int32.o GB_AxB__plus_times_uint16.o GB_unop__asinh_fp64_fp64.o GB_AxB__land_gt_fp32.o GB_bitmap_assign_fullM_noaccum_whole.o GB_AxB__any_times_fc32.o GxB_Context_disengage.o GB_ew__pair_bool.o GB_ew__rdiv_fc32.o GB_sel__eq_thunk_fp64.o GB_aop__plus_fp64.o GB_Type_compatible.o GB_qsort_1.o GB_aop__isne_int64.o GB_AxB__max_min_uint32.o GB_AxB_saxpy3_cumsum.o GB_AxB__plus_plus_fp64.o GB_bld__any_int8.o GB_ew__times_uint8.o GB_aop__pair_fc64.o GB_AxB__eq_ge_uint32.o GB_AxB__any_gt_fp64.o GB_aop__le_int32.o GB_AxB__plus_firstj_int32.o GxB_Matrix_export_CSR.o GB_AxB__any_minus_int16.o GB_unop__identity_bool_bool.o GB_AxB__any_eq_uint8.o GB_AxB__times_plus_uint16.o GB_AxB__any_second_int16.o GB_aop__first_fp32.o GB_aop__minus_uint32.o GB_AxB__any_firsti_int64.o GB_unop__lnot_int64_int64.o GrB_transpose.o GB_AxB__plus_plus_fc64.o GB_AxB__min_rdiv_int64.o GB_aop__second_uint32.o GB_concat_full.o GB_AxB__any_min_fp32.o GxB_Context_engage.o GB_AxB__lor_gt_int64.o GB_unop__log10_fp32_fp32.o GB_aop__bor_int32.o GB_convert_s2b_test.o GB_as__uint16.o GB_AxB__plus_minus_uint64.o GB_AxB_saxbit_generic_firsti64.o GxB_Vector_import_Full.o GB_dup_worker.o GB_unop__identity_int8_int64.o GB_sel__nonzombie_bool.o GB_ew__iseq_fc32.o GB_AxB__plus_second_uint64.o GB_red__times_int8.o GB_convert_full_to_bitmap.o GB_unop__identity_uint8_int64.o GB_AxB__any_first_uint64.o GB_AxB__any_plus_fp64.o GB_aop__pow_int32.o GB_ew__gt_int32.o GB_AxB__max_minus_uint8.o GB_unop__identity_uint8_uint64.o GB_ew__lxor_bool.o GB_unop__identity_int16_uint8.o GB_aop__pair_fp64.o GB_bld__first_uint16.o GB_bld__first_uint64.o GB_aop__pow_fp64.o GB_aop__div_fc64.o GB_sel__ne_thunk_fp64.o GB_unop__expm1_fp64_fp64.o GB_aop__pair_fc32.o GB_AxB__land_gt_uint8.o GB_AxB__any_rminus_uint8.o GxB_Vector_select.o GB_emult_bitmap.o GB_aop__eq_bool.o GB_unop__ainv_bool_bool.o GB_bld__second_uint16.o GB_AxB__times_min_uint32.o GB_AxB__plus_pair_uint64.o GB_ew__bxnor_uint16.o GB_unop__lnot_uint64_uint64.o GB_bld__times_int64.o GB_AxB__times_max_int32.o GB_unop__identity_uint32_bool.o GB_bitmap_assign_fullM_accum_whole.o GB_AxB__max_rdiv_uint64.o GB_bitmap_assign_notM_noaccum_whole.o GB_ew__le_int16.o GB_AxB__times_rdiv_fp64.o GB_subassign_one_slice.o GB_subassign_07.o GB_nnz_held.o GB_aop__isge_fp64.o GB_subassign_06s_and_14.o GB_AxB__plus_div_fc32.o GB_AxB__lxor_ge_uint8.o GB_unop__identity_bool_fp32.o GB_unop__identity_int32_int32.o GB_AxB_saxpy3_sym_nhf.o GxB_Matrix_pack_FullC.o GB_memcpy.o GxB_Context_get.o GB_AxB__any_div_uint8.o GB_unop__erf_fp64_fp64.o GB_AxB__any_rminus_int16.o GB_unop__tanh_fc64_fc64.o GrB_Scalar_extractElement.o GB_aop__bxnor_int8.o GB_AxB__eq_le_bool.o GB_split_bitmap.o GB_conform_hyper.o GB_red__land_bool.o GB_AxB_saxpy_generic.o GxB_Matrix_Option_get.o GB_msort_3.o GB_unop__bnot_int64_int64.o GB_AxB__bxnor_bxnor_uint32.o GxB_Matrix_split.o GB_unop__identity_int8_uint64.o GB_AxB__max_minus_fp64.o GB_AxB__land_lt_uint64.o GB_AxB_saxpy3_generic_secondj32.o GxB_Descriptor_get.o GB_unop__exp_fc32_fc32.o GB_AxB__plus_first_uint16.o GB_AxB__lxor_eq_uint32.o GB_AxB__lor_le_uint64.o GB_unop__identity_uint64_fc32.o GB_unop__log2_fp32_fp32.o GB_AxB__any_gt_int8.o GB_unop__identity_uint16_int8.o GB_AxB__plus_rminus_uint64.o GrB_Vector_nvals.o GB_unop__erf_fp32_fp32.o GB_ew__iseq_fp32.o GB_AxB__any_second_fc64.o GB_AxB__min_min_fp64.o GB_ew__min_fp64.o GB_bld__any_uint32.o GB_accum_mask.o GB_ew__pow_int8.o GB_AxB__any_rdiv_uint64.o GB_aop__hypot_fp64.o GxB_Matrix_export_CSC.o GxB_UnaryOp_fprint.o GB_AxB__eq_gt_int8.o GB_AxB__bxor_band_uint64.o GB_sel__le_thunk_int32.o GB_rowscale_jit.o GB_AxB__min_secondj1_int64.o GB_aop__bshift_uint32.o GB_assign_prep.o GB_ew__max_uint64.o GB_AxB__min_firsti_int32.o GB_macrofy_assign.o GB_AxB_saxbit_generic_secondj64.o GB_aop__ge_bool.o GB_ew__minus_int64.o GB_ew__ne_int64.o GB_unop__trunc_fp64_fp64.o GB_aop__eq_uint32.o GB_JITpackage.o GB_masker_phase2.o GB_ew__second_int64.o GB_unop__identity_uint64_fc64.o GxB_Matrix_export_FullC.o GB_unop__bnot_uint64_uint64.o GB_AxB__eq_eq_int16.o GB_unop__asin_fp32_fp32.o GB_sel__gt_thunk_uint8.o GB_unop__identity_uint16_bool.o GB_AxB__max_rdiv_int16.o GB_AxB__plus_pair_int64.o GB_apply_bind2nd_jit.o GxB_Vector_pack_CSC.o GB_unop__cosh_fc32_fc32.o GB_prejit.o GB_aop__isge_int32.o GB_ew__lxor_uint64.o GB_AxB__times_first_fp32.o GB_reduce_to_scalar.o GB_unop__identity_uint8_uint8.o GB_AxB__max_firstj_int32.o GB_ew__iseq_fp64.o GB_AxB__lxor_ge_uint32.o GB_AxB__times_max_fp64.o GB_binop_builtin.o GB_unop__identity_fc32_int64.o GB_macrofy_cast_input.o GB_ew__isle_int8.o GB_AxB__plus_rminus_int64.o GB_AxB__any_le_bool.o GB_AxB__any_ne_uint8.o GB_sel__eq_thunk_uint16.o GB_AxB__max_max_fp64.o GB_aop__isgt_fp32.o GrB_Matrix_free.o GB_AxB__plus_rdiv_fc32.o GB_AxB__max_div_uint32.o GB_bld__min_fp32.o GB_aop__rminus_uint8.o GB_AxB__lxor_gt_fp64.o GB_unop__tanh_fc32_fc32.o GB_AxB__max_rminus_fp32.o GB_ew__isge_int16.o GB_AxB_saxbit_generic_second.o GrB_mxm.o GB_red__any_fc32.o GB_colscale_jit.o GB_AxB__any_ge_int16.o GB_unop__isnan_bool_fc32.o GrB_Semiring_wait.o GxB_Matrix_export_HyperCSC.o GB_AxB_dot3_slice.o GB_AxB__min_rdiv_fp64.o GB_new_bix.o GB_AxB__min_rminus_int8.o GB_select_positional_bitmap.o GB_aop__ge_uint32.o GB_ew__bor_uint64.o GB_shallow_op.o GB_AxB__min_secondj1_int32.o GB_AxB_saxpy3_sym_hf.o GrB_Scalar_free.o GB_AxB__eq_ge_int16.o GB_cumsum.o GB_AxB__min_div_int8.o GB_AxB__eq_gt_fp64.o GB_red__times_uint16.o GxB_Vector_Option_set.o GB_sel__le_thunk_int8.o GrB_Descriptor_wait.o GB_aop__pow_uint8.o GB_qsort_1b.o GB_unop__trunc_fp32_fp32.o GB_AxB_saxbit_generic_firstj32.o GB_Pending_alloc.o GB_unop__identity_uint16_uint16.o GB_ew__ldexp_fp64.o GB_aop__div_int64.o GB_AxB__lxor_le_int16.o GB_AxB__lor_gt_fp32.o GB_unop__identity_uint32_uint16.o GB_aop__eq_uint8.o GB_AxB__lxor_le_fp32.o GB_ew__isne_uint32.o GB_AxB__any_le_uint8.o GB_rowscale.o GB_sel__ge_thunk_uint16.o GB_macrofy_name.o GB_AxB__eq_lt_fp64.o GB_select_generic_phase1.o GB_macrofy_cast_copy.o GB_AxB__eq_le_uint8.o GB_AxB__max_div_int64.o GxB_Matrix_iso.o GB_AxB__plus_max_fp64.o GB_ew__bclr_uint16.o GB_AxB_saxpy3_sym_mhb.o GB_AxB__any_eq_bool.o GB_AxB__plus_div_uint32.o GB_AxB__max_minus_int32.o GB_AxB__times_minus_uint8.o GB_hyper_realloc.o GB_AxB__max_first_int8.o GB_AxB__plus_rminus_fp32.o GB_bld__times_fp64.o GB_AxB_saxpy3_sym_nfh.o GB_unop__asin_fc64_fc64.o GB_AxB__lor_eq_fp32.o GB_aop__islt_int64.o GxB_BinaryOp_ytype_name.o GB_unop__exp2_fp64_fp64.o GB_aop__second_fc32.o GB_aop__first_uint64.o GB_enumify_monoid.o GB_macrofy_binop.o GB_AxB__eq_eq_bool.o GB_AxB__times_min_int16.o GB_AxB__any_rminus_uint32.o GrB_Matrix_extractTuples.o GB_concat_sparse.o GB_AxB__any_min_uint64.o GB_AxB__max_div_uint8.o GB_aliased.o GB_AxB__land_gt_uint64.o GB_AxB__any_firstj_int32.o GB_Iterator_rc_bitmap_next.o GB_unop__identity_int64_int8.o GB_ew__rdiv_int8.o GB_transpose.o GB_AxB__min_times_int16.o GB_unop__ainv_uint16_uint16.o GB_AxB__lor_eq_int8.o GxB_Iterator_new.o GxB_IndexUnaryOp_ytype_name.o GrB_Matrix_exportSize.o GB_AxB__any_plus_fp32.o GB_ew__isle_uint32.o GB_unop__identity_bool_int16.o GB_unop__identity_fp32_fc64.o GxB_Matrix_pack_HyperCSC.o GB_subassign_17.o GB_aop__bor_uint16.o GB_aop__pow_int64.o GB_ew__ge_uint64.o GB_AxB__bor_bor_uint16.o GB_AxB__min_minus_int64.o GB_ew__times_uint32.o GB_unop__atan_fp32_fp32.o GB_AxB__band_bxnor_uint32.o GB_zstd.o GB_aop__iseq_int16.o GB_AxB__min_second_int64.o GB_AxB__band_bxnor_uint64.o GB_AxB__plus_rminus_uint8.o GB_AxB__times_min_fp32.o GB_AxB__any_ge_bool.o GB_masker_phase1.o GB_AxB__lxor_second_bool.o GB_subassign.o GB_aop__lt_uint16.o GrB_BinaryOp_new.o GB_aop__ne_fc32.o GB_aop__lt_uint32.o GB_emult_sparsity.o GB_AxB__times_times_uint64.o GB_AxB__lor_lt_bool.o GB_AxB__lor_ge_fp32.o GB_unop__sin_fp32_fp32.o GB_omp.o GB_AxB__plus_first_int8.o GB_ew__isne_uint8.o GB_aop__le_int16.o GB_aop__land_int64.o GB_ew__lxor_int16.o GB_red__any_uint8.o GB_AxB__lor_lt_int16.o GB_unop__identity_int32_uint64.o GB_AxB__plus_plus_int32.o GB_AxB__eq_eq_uint32.o GB_bld__second_int32.o GB_AxB__plus_land_uint32.o GB_AxB__plus_times_int16.o GB_demacrofy_name.o GB_AxB__times_div_uint64.o GB_AxB__times_max_uint16.o GrB_IndexUnaryOp_new.o GB_select_column.o GB_aop__isge_int64.o GB_AxB__times_first_fp64.o GB_bld__second_fp64.o GrB_Matrix_ncols.o GB_aop__iseq_fp32.o GB_red__times_int32.o GB_AxB__times_times_int8.o GB_ew__bxnor_int32.o GB_AxB__any_first_bool.o GB_split.o GB_AxB__land_ne_int8.o GB_unop__sqrt_fp32_fp32.o GB_subref_phase3.o GB_AxB__any_times_uint16.o GrB_Vector_reduce.o GB_unop__log_fc64_fc64.o GB_unop__identity_int8_fc64.o GB_aop__times_int16.o GB_aop__pow_int8.o GB_red__min_uint64.o GB_AxB__land_eq_uint16.o GB_unop__cimag_fp32_fc32.o GB_AxB__min_minus_int8.o GB_sel__ne_thunk_int8.o GB_unop__identity_fc64_fc32.o GB_AxB__any_min_fp64.o GB_red__max_fp32.o GB_AxB__plus_times_uint32.o GB_serialize_method.o GB_aop__first_int64.o GB_AxB__max_plus_uint64.o GB_AxB__land_ge_fp64.o GB_AxB__any_div_int32.o GB_unop__identity_uint64_uint16.o GB_aop__minus_int64.o GB_AxB__plus_min_fp64.o GB_ew__ne_int16.o GB_AxB__times_second_int64.o GB_red__max_uint16.o GB_AxB__any_times_uint64.o GB_AxB__any_firsti_int32.o GB_unop__cos_fp64_fp64.o GB_AxB__lor_eq_uint8.o GB_red__plus_fc64.o GB_sel__ge_thunk_uint64.o GB_AxB__min_rdiv_int32.o GB_AxB__land_eq_fp32.o GB_AxB__any_div_fc64.o GxB_Vector_type.o GrB_Matrix_new.o GB_subref_phase0.o GB_macrofy_monoid.o GB_unop__asinh_fc32_fc32.o GB_ew__bclr_uint64.o GB_AxB__plus_first_fp32.o GB_ew__bor_int16.o GB_AxB__plus_minus_uint32.o GB_AxB__lxor_eq_fp64.o GB_AxB__land_le_int8.o GB_AxB__max_rminus_int8.o GB_ew__bor_uint16.o GB_AxB__plus_second_uint32.o GB_AxB__eq_ge_fp32.o GB_shallow_copy.o GB_bld__any_int16.o GB_unop__atan_fc32_fc32.o GB_AxB__any_first_uint32.o GB_unop__floor_fp32_fp32.o GB_encodify_user_type.o GrB_finalize.o GB_unop__exp_fc64_fc64.o GxB_Matrix_import_BitmapC.o GB_ew__isgt_int16.o GB_AxB__land_ge_uint16.o GB_add_phase2.o GB_bld__max_fp64.o GB_as__uint8.o GxB_Matrix_reshapeDup.o GB_unop__round_fp64_fp64.o GB_AxB__times_min_int64.o GB_AxB__bxnor_bxor_uint64.o GB_sel__nonzombie_fc64.o GB_ew__lt_fp32.o GB_ew__gt_uint32.o GxB_Matrix_fprint.o GB_ew__lor_uint8.o GB_bitmap_assign_to_full.o GB_unop__identity_bool_int64.o GB_aop__min_fp64.o GB_ew__lt_uint64.o GB_emult_iso.o GB_AxB__min_min_uint16.o GB_aop__bor_uint64.o GB_ew__bset_uint16.o GB_ew__min_fp32.o GB_unop__identity_uint32_fp32.o GB_AxB__min_max_int16.o GB_ew__lor_bool.o GB_AxB__max_div_int16.o GB_AxB__lxor_le_uint16.o GB_assign_zombie1.o GB_red__plus_uint16.o GrB_Type_new.o GB_compatible.o GB_unop__log_fc32_fc32.o GrB_Matrix_export.o GB_AxB__min_first_uint8.o GB_AxB__plus_div_int8.o GB_macrofy_typedefs.o GB_bld__land_bool.o GB_subassign_06n.o GB_sel__nonzombie_int64.o GxB_BinaryOp_ztype.o GB_ew__bshift_uint8.o GB_ew__band_uint16.o GB_unop__sinh_fc64_fc64.o GB_ew__max_uint32.o GB_AxB__min_rminus_int16.o GB_unop__identity_fc32_fc64.o GB_AxB__lor_lt_fp32.o GxB_Context_fprint.o GB_aop__isne_uint32.o GB_unop__cosh_fc64_fc64.o GB_emult_02.o GB_ew__lxor_int64.o GB_AxB__lor_lt_int64.o GB_unop__identity_int64_fc64.o GB_AxB__land_eq_fp64.o GB_flip_binop.o GB_aop__bclr_uint16.o GB_AxB__max_times_uint64.o GB_ew__minus_fp64.o GB_AxB__plus_minus_uint8.o GB_AxB__land_eq_int32.o GB_xalloc_memory.o GxB_Context_new.o GB_bld__plus_fp64.o GB_ew__lor_uint32.o GB_unop__tan_fc64_fc64.o GB_ew__second_fp64.o GB_AxB__plus_second_uint8.o GB_unop__minv_int64_int64.o GB_AxB__times_rminus_int16.o GB_bld__first_int8.o GB_AxB__lor_eq_int32.o GB_ew__le_int32.o GB_unop__identity_uint32_int64.o GB_AxB__max_max_uint16.o GB_aop__lt_int32.o GB_red__min_uint32.o GB_red__times_fp32.o GB_AxB__lor_eq_fp64.o GB_aop__pair_int16.o GB_AxB__eq_ge_int8.o GB_AxB__lxor_gt_uint16.o GB_AxB__eq_gt_int16.o GxB_Matrix_pack_CSC.o GxB_Vector_sort.o GB_qsort_2.o GB_unop__identity_fp32_uint16.o GB_aop__ne_uint8.o GB_aop__ge_uint8.o GB_AxB__bor_band_uint32.o GB_aop__isle_uint32.o GB_ew__le_int64.o GB_bld__min_uint8.o GB_unop__identity_int64_uint32.o GB_sel__ge_thunk_fp32.o GB_ew__pow_uint8.o GB_AxB__plus_pair_fc64.o GB_ew__minus_uint32.o GB_bld__plus_uint8.o GB_concat_bitmap_jit.o GB_AxB__max_rdiv_uint8.o GB_ew__plus_uint32.o GB_unop__identity_fp64_uint64.o GB_unop__atanh_fp64_fp64.o GB_sel__lt_thunk_int16.o GB_emult_02_phase1.o GB_unop__log2_fc64_fc64.o GB_AxB__band_band_uint8.o GB_AxB__plus_pair_uint16.o GxB_SelectOp_fprint.o GB_AxB_saxpy3_generic_firsti64.o GB_aop__gt_uint16.o GB_AxB__any_minus_int64.o GB_AxB__land_ge_int32.o GrB_UnaryOp_wait.o GB_ewise_fulla_jit.o GB_AxB__plus_times_uint64.o GB_AxB__any_second_int64.o GB_red__max_int64.o GB_AxB__lxor_lt_int8.o GB_AxB__land_ge_uint64.o GB_aop__bshift_uint64.o GB_AxB__bxnor_bxor_uint32.o GB_aop__ne_int16.o GB_AxB__times_first_fc32.o GB_add_sparsity.o GB_aop__lxor_int16.o GB_AxB__eq_lt_uint16.o GB_unop__sinh_fc32_fc32.o GB_transplant.o GB_macrofy_input.o GB_AxB__min_min_int32.o GB_ew__bset_int32.o GB_AxB__plus_max_uint16.o GB_as__uint64.o GB_macrofy_cast_output.o GB_aop__div_fp64.o GB_convert_bitmap_to_sparse.o GB_AxB__land_eq_int8.o GB_red__plus_int32.o GB_unop__identity_uint64_int32.o GB_sel__eq_thunk_int32.o GB_bld__times_uint16.o GB_unop__minv_fp64_fp64.o GB_ew__iseq_int16.o GB_AxB__any_lt_fp32.o GB_ew__minus_fc64.o GB_macrofy_defn.o GB_AxB__plus_times_fp32.o GxB_Context_free.o GB_bld__plus_fc64.o GB_bld__min_uint16.o GB_AxB__min_secondj_int64.o GB_ew__second_fc64.o GB_unop__tan_fc32_fc32.o GB_aop__lt_int8.o GB_red__min_uint8.o GB_AxB__plus_lor_uint16.o GB_transpose_op.o GB_AxB__times_min_int8.o GB_red__max_int8.o GB_AxB__times_div_int32.o GB_ew__isgt_uint32.o GB_enumify_identity.o GB_ew__rdiv_fp64.o GB_AxB__plus_rdiv_uint8.o GB_AxB__min_max_uint8.o GB_apply.o GB_bld__second_uint64.o GxB_Global_Option_set.o GxB_Matrix_deserialize.o GB_AxB__bxnor_band_uint16.o GB_ew__bxnor_uint64.o GB_AxB__any_plus_fc32.o GB_AxB__band_bor_uint8.o GB_aop__bclr_int32.o GB_aop__isge_int8.o GB_AxB__any_minus_fp32.o GB_UnaryOp_check.o GB_unop__abs_fp64_fp64.o GB_AxB__times_rdiv_int16.o GB_unop__round_fc64_fc64.o GxB_Matrix_memoryUsage.o GB_ew__plus_uint8.o GB_aop__times_fp32.o GB_aop__times_uint8.o GB_AxB_saxpy3_sym_fs.o GB_AxB__times_max_fp32.o GB_AxB__max_max_int32.o GB_AxB__land_ne_fp64.o GB_unop__identity_int8_uint32.o GB_AxB__lxor_gt_int32.o GB_bld__second_int16.o GB_AxB_saxpy3_slice_balanced.o GB_aop__pair_uint64.o GB_AxB__lxor_lxor_bool.o GB_as__int32.o GB_init.o GB_assign_zombie2.o GB_ew__eq_fp64.o GB_unop__identity_fp32_int32.o GB_unop__acosh_fc32_fc32.o GB_AxB__max_minus_int16.o GxB_Semiring_multiply.o GB_convert_full_to_sparse.o GxB_Semiring_fprint.o GB_ew__rminus_int64.o GB_AxB__any_min_int32.o GB_AxB__min_plus_int16.o GB_aop__minus_fp32.o GB_AxB_saxpy3_sym_mss.o GB_AxB__min_min_int8.o GB_bld__plus_int16.o GB_ew__bset_int8.o GB_unop__log1p_fc64_fc64.o GB_aop__bclr_uint8.o GB_AxB__any_rdiv_int64.o GB_AxB__land_le_uint16.o GB_aop__isge_uint64.o GB_bld__plus_uint16.o GB_ew__bshift_uint16.o GB_red__plus_int8.o GB_ew__isne_fc64.o GB_serialize_to_blob.o GB_add_phase1.o GB_aop__min_int64.o GB_unop__signum_fp32_fp32.o GB_sel__eq_thunk_fc32.o GB_aop__gt_int32.o GB_AxB_saxpy3_flopcount.o GB_unop__cos_fc32_fc32.o GB_AxB__times_rminus_uint32.o GB_aop__plus_int16.o GrB_Matrix_eWiseAdd.o GB_ew__pair_uint64.o GB_AxB__max_times_int32.o GB_assign_burble.o GB_ew__band_int8.o GB_subref_phase2.o GB_AxB__lor_land_bool.o GB_AxB__land_le_fp64.o GB_ew__rdiv_fc64.o GB_AxB__max_times_uint32.o GB_convert_any_to_sparse.o GB_ew__isgt_uint8.o GB_aop__max_int32.o GB_aop__second_fp64.o GB_AxB__min_max_uint16.o GB_AxB_saxbit_generic_unflipped.o GB_AxB__min_second_int16.o GB_Iterator_attach.o GB_AxB__min_plus_uint32.o GB_ew__islt_uint16.o GB_AxB__times_plus_fp32.o GB_select_phase1_jit.o GB_aop__bxor_uint16.o GB_AxB__land_lt_int8.o GB_AxB__plus_max_int32.o GB_split_sparse_jit.o GB_aop__bclr_int8.o GB_unop__ainv_int8_int8.o GB_AxB__band_bor_uint64.o GB_AxB__lxor_ne_uint32.o GB_AxB__bxnor_bor_uint64.o GB_unop__frexpe_fp32_fp32.o GB_ew__bxnor_uint32.o GB_ew__isgt_fp32.o GrB_Matrix_wait.o GB_AxB__any_minus_uint8.o GB_aop__remainder_fp64.o GxB_Matrix_serialize.o GB_ew__isne_int64.o GB_AxB__lor_ne_uint64.o GB_as__fp32.o GB_unop__abs_fp64_fc64.o GB_aop__gt_fp64.o GB_sel__lt_thunk_uint32.o GB_unop__round_fc32_fc32.o GB_AxB__max_max_int8.o GrB_Scalar_clear.o GB_AxB__plus_lor_int32.o GB_aop__plus_fc64.o GB_aop__le_bool.o GB_aop__max_uint64.o GB_unop__identity_fc64_uint64.o GB_unop__atanh_fc64_fc64.o GB_AxB__any_ne_int16.o GB_ew__lor_fp64.o GB_unop__identity_fp32_int8.o GB_AxB__eq_gt_uint16.o GB_helper.o GrB_Matrix_removeElement.o GB_aop__pow_fc64.o GB_bitmap_assign.o GB_macrofy_id.o GB_aop__rminus_int16.o GB_bld__min_int32.o GB_aop__lxor_uint32.o GB_AxB__plus_lor_int8.o GB_AxB__any_div_fp64.o GxB_colIterator.o GB_subassign_08n_slice.o GB_bld__second_fp32.o GxB_Vector_export_Full.o GxB_Matrix_import_CSR.o GB_add_phase0.o GB_aop__lor_uint64.o GB_encodify_mxm.o GB_AxB__lxor_le_uint32.o GB_AxB__any_ge_uint32.o GB_cpu_features_support.o GB_ew__rdiv_int32.o GB_AxB__plus_lxor_uint64.o GB_ew__land_uint16.o GB_ew__iseq_uint32.o GB_aop__gt_int8.o GB_AxB__any_lt_int8.o GB_AxB__times_rminus_uint8.o GB_unop__identity_int16_uint32.o GB_aop__pair_uint16.o GB_AxB__max_times_uint8.o GB_aop__isge_uint8.o GB_unop__isfinite_bool_fc64.o GB_aop__isgt_uint16.o GB_AxB__times_plus_int64.o GB_select_sparse.o GB_subassign_24.o GxB_SelectOp_ttype.o GB_red__any_uint64.o GB_Scalar_reduce.o GB_AxB__eq_lt_int8.o GB_AxB__any_eq_uint16.o GB_bld__first_fp64.o GB_AxB__min_plus_uint8.o GB_AxB__any_le_int16.o GB_red__any_int16.o GB_AxB__times_times_fc32.o GxB_Matrix_pack_CSR.o GB_ew__lxor_int8.o GB_aop__eq_int16.o GB_subassign_12_and_20.o GB_AxB_saxpy3_generic_first.o GB_AxB__any_eq_uint32.o GB_AxB__lxor_ne_uint8.o GB_aop__le_uint32.o GB_ew__bshift_int32.o GB_red__plus_int64.o GrB_Matrix_apply.o GB_serialize.o GB_aop__plus_uint64.o GB_AxB__any_ne_fp64.o GB_AxB__eq_le_int16.o GB_ew__land_int64.o GxB_Col_subassign.o GB_enumify_binop.o GB_AxB__min_first_int16.o GxB_Matrix_import_FullR.o GB_unop__isnan_bool_fp64.o GrB_Monoid_free.o GB_AxB__times_div_int64.o GB_apply_op.o GB_AxB__lxor_ge_int16.o GrB_Col_assign.o GB_aop__times_int64.o GB_ew__min_int32.o GB_unop__sin_fc32_fc32.o GB_AxB__max_firstj1_int32.o GB_as__int8.o GB_AxB__times_firsti_int64.o GB_aop__bget_int8.o GB_aop__bget_int32.o GB_ew__gt_fp32.o GB_AxB__min_div_uint16.o GB_ew__pair_int64.o GB_ew__islt_int32.o GxB_Type_size.o GB_aop__bxnor_int32.o GB_sel__le_thunk_uint16.o GB_ew__islt_uint32.o GB_unop__atanh_fc32_fc32.o GB_ew__min_int8.o GB_aop__times_uint32.o GB_aop__bset_int64.o GB_unop__identity_int64_int16.o GB_AxB__plus_min_int8.o GxB_Desc_get.o GB_unop__identity_bool_int32.o GB_bld__second_fc64.o GB_AxB__lxor_lt_fp64.o GB_AxB__eq_ne_uint8.o GB_AxB__lor_le_fp32.o GrB_Vector_new.o GB_as__fc64.o GB_AxB__times_first_uint64.o GxB_Matrix_subassign_scalar.o GB_AxB__any_gt_int32.o GB_aop__ge_int16.o GB_AxB__any_lxor_bool.o GB_AxB__bxor_bxnor_uint32.o GB_ew__iseq_uint8.o GB_aop__div_uint8.o GB_convert_s2b_jit.o GB_aop__land_int16.o GB_aop__band_int64.o GB_AxB__lor_ne_fp32.o GB_ew__pow_int32.o GrB_vxm.o GxB_Matrix_pack_HyperCSR.o GB_aop__isgt_uint64.o GB_AxB__eq_gt_int32.o GB_AxB__eq_lxor_bool.o GB_AxB__max_rminus_uint64.o GB_subref.o GB_aop__max_fp32.o GB_unop__minv_fc32_fc32.o GB_aop__min_int8.o GB_unop__identity_uint64_fp64.o GB_aop__lt_fp64.o GB_macrofy_type.o GB_unop__acosh_fp32_fp32.o GB_ew__isne_int16.o GB_AxB__bxor_band_uint16.o GB_AxB__lor_ge_uint64.o GB_aop__le_uint8.o GB_ew__bshift_int8.o GrB_Matrix_setElement.o GB_AxB__plus_firstj1_int32.o GB_unop__isinf_bool_fc32.o GB_ew__land_int32.o GxB_BinaryOp_xtype_name.o GB_AxB__max_rdiv_uint32.o GB_AxB__plus_minus_fc32.o GB_AxB_saxpy3_sym_mfs.o GB_AxB__plus_second_int64.o GB_AxB__plus_div_int16.o GB_bld__min_uint64.o GB_aop__lor_fp32.o GB_bld__times_fp32.o GB_AxB__plus_second_fc32.o GB_AxB__times_rminus_int8.o GB_select_generic_phase2.o GB_AxB__any_max_uint64.o GB_AxB__any_first_fc32.o GB_AxB__plus_lxor_fp32.o GB_aop__plus_fp32.o GB_aop__copysign_fp32.o GB_macrofy_preface.o GB_ew__times_uint16.o GB_unop__isnan_bool_fc64.o GB_AxB__max_min_fp64.o GB_AxB__any_ne_int8.o GB_AxB__times_first_uint32.o GB_AxB__lor_first_bool.o GB_AxB__times_div_fp32.o GB_ew__plus_fc64.o GB_ew__isne_fp32.o GB_aop__times_fc64.o GB_sel__le_thunk_uint32.o GB_AxB__times_secondj_int64.o GB_ew__lor_int32.o GB_aop__rminus_int8.o GB_subassign_03.o GB_ew__ne_uint8.o GB_AxB__max_plus_uint16.o GB_AxB__max_secondj1_int64.o GB_ew__bset_uint32.o GB_AxB__plus_rdiv_uint64.o GB_red__times_uint64.o GB_ew__minus_uint64.o GB_aop__rdiv_int16.o GB_nnz_full.o GB_AxB__lxor_eq_int8.o GB_AxB_saxpy_sparsity.o GB_unop__identity_int8_int8.o GB_ew__second_uint64.o GB_aop__iseq_int64.o GB_bitmap_assign_noM_accum.o GB_add_iso.o GB_AxB__max_max_int64.o GB_AxB__eq_eq_uint16.o GB_aop__ge_int32.o GB_ew__bor_int64.o GB_aop__isle_int16.o GrB_IndexUnaryOp_wait.o GB_subref_slice.o GB_ew__ne_fp32.o GB_Scalar_check.o GB_SelectOp_check.o GB_unop__identity_uint8_int32.o GB_unop__identity_fp32_fc32.o GB_red__times_int16.o GB_unop__tgamma_fp32_fp32.o GB_unop__identity_int16_fc64.o GB_AxB__times_rdiv_fp32.o GB_ew__isge_uint8.o GB_AxB__plus_land_uint16.o GB_aop__second_uint16.o GB_unop__identity_fc32_uint64.o GxB_Matrix_import_HyperCSR.o GB_AxB__times_rminus_fp64.o GB_unop__identity_int16_uint16.o GB_aop__second_int64.o GB_macrofy_apply.o GB_AxB__any_le_int8.o GB_enumify_cuda_atomic.o GxB_Matrix_concat.o GB_unop__sqrt_fc32_fc32.o GB_aop__eq_int8.o GB_AxB__times_div_int16.o GB_ew__isne_int32.o GB_Operator_check.o GB_unop__identity_int32_fp64.o GB_eslice.o GB_unop__ceil_fc64_fc64.o GB_sel__lt_thunk_uint8.o GB_AxB__any_div_int64.o GB_AxB__times_min_uint16.o GB_AxB__bxnor_band_uint64.o GB_AxB__eq_le_int8.o GB_AxB__min_div_fp32.o GB_ew__bclr_int16.o GB_AxB__min_first_int8.o GB_AxB__plus_div_int32.o GxB_Vector_iso.o GB_ew__bxor_uint8.o GB_AxB__times_minus_int8.o GB_AxB__lor_gt_bool.o GB_ew__lt_bool.o GB_AxB__max_second_uint8.o GB_AxB__lxor_ge_int8.o GB_AxB__plus_secondj1_int64.o GrB_Monoid_new.o GB_AxB__times_second_int8.o GB_AxB__plus_firsti_int32.o GB_AxB__any_firstj1_int64.o GB_unop__signum_fp64_fp64.o GB_AxB__times_plus_fc64.o GB_Descriptor_get.o GB_AxB__eq_ge_uint16.o GB_selectop_to_idxunop.o GB_AxB__any_rminus_int32.o GB_unop__exp_fp32_fp32.o GB_AxB__min_plus_int8.o GB_AxB__max_div_int8.o GB_AxB__any_pair_iso.o GB_AxB__land_gt_int64.o GrB_Vector_extractTuples.o GrB_Matrix_diag.o GB_bitmap_assign_noM_noaccum_whole.o GB_transpose_method.o GB_AxB__times_rdiv_int32.o GB_aop__div_uint64.o GB_split_full.o GB_AxB__plus_pair_fp32.o GxB_Matrix_export_BitmapR.o GB_aop__iseq_fp64.o GB_bld__any_bool.o GB_AxB__plus_first_uint32.o GB_ew__isle_int32.o GB_aop__ne_fp64.o GB_ew__rdiv_int64.o GB_aop__lxor_fp64.o GB_sel__eq_thunk_bool.o GB_aop__ge_int8.o GB_AxB__plus_lxor_uint8.o GB_unop__frexpe_fp64_fp64.o GB_aop__bor_int16.o GB_AxB__any_eq_int64.o GB_red__plus_fc32.o GB_ew__ne_int32.o GB_ew__times_int32.o GB_AxB__any_ge_uint8.o GB_bld__eq_bool.o GB_AxB__lxor_le_fp64.o GB_AxB__any_gt_fp32.o GB_encodify_assign.o GB_ew__pair_fc64.o GB_ew__rdiv_uint64.o GB_AxB__bxnor_bor_uint16.o GB_ew__gt_int16.o GB_aop__ldexp_fp32.o GB_aop__islt_uint64.o GB_AxB_saxpy3_sym_hb.o GB_AxB__lor_gt_uint8.o GB_AxB__bxor_bxnor_uint8.o GB_AxB__lxor_le_uint8.o GB_AxB__times_times_int64.o GB_AxB__bxor_bor_uint8.o GB_ew__lt_uint32.o GB_AxB__any_first_int8.o GB_AxB__times_rminus_fc64.o GB_ew__isne_int8.o GB_AxB__eq_lt_int32.o GB_aop__min_uint32.o GB_AxB__min_max_uint64.o GB_emult_bitmap_jit.o GB_AxB__max_min_uint8.o GB_AxB__eq_eq_int32.o GB_aop__lxor_uint8.o GxB_Matrix_unpack_BitmapC.o GB_ew__minus_fp32.o GB_AxB__times_max_int16.o GB_unop__lnot_bool_bool.o GB_AxB__land_lt_uint32.o GB_bld__plus_fp32.o GB_AxB__min_minus_uint32.o GB_unop__identity_bool_uint16.o GB_ew__second_fp32.o GB_subassign_11.o GB_subassign_02.o GB_aop__pow_uint64.o GB_positional_idxunop_ijflip.o GB_AxB__plus_land_int32.o GB_aop__bset_uint16.o GB_AxB__min_minus_uint64.o GB_unop__abs_fp32_fp32.o GB_unop__identity_int16_int32.o GB_unop__exp2_fc64_fc64.o GB_AxB__min_minus_int16.o GB_AxB__any_rminus_int8.o GB_AxB__max_div_int32.o GB_AxB__min_second_uint64.o GrB_Scalar_dup.o GB_aop__bget_uint16.o GB_red__min_fp32.o GB_aop__eq_uint64.o GB_AxB__max_second_int64.o GB_AxB__any_max_uint8.o GB_AxB__any_times_fc64.o GB_unop__identity_fc32_fp32.o GB_ew__bget_int16.o GB_AxB__any_rdiv_int16.o GB_AxB__times_rdiv_int8.o GB_AxB__any_plus_int64.o GB_AxB__bor_band_uint8.o GB_ew__first_fp64.o GB_AxB__plus_first_uint8.o GB_AxB__any_ge_int32.o GB_aop__land_uint64.o GB_ew__lxor_uint16.o GB_ew__div_uint16.o GB_AxB__lor_lt_uint16.o GB_bitmap_M_scatter_whole.o GB_aop__isne_int8.o GB_unop__identity_fp32_int64.o GB_aop__ne_fc64.o GB_macrofy_reduce.o GB_apply_bind1st_jit.o GB_ew__times_int8.o GB_aop__plus_uint8.o GB_AxB__bxor_bor_uint16.o GB_AxB__any_ge_uint16.o GB_AxB__eq_ge_int32.o GB_AxB__any_le_int64.o GB_aop__rdiv_uint16.o GB_red__times_uint32.o GB_ew__ne_fc64.o GB_ew__eq_uint64.o GB_AxB_saxbit_generic_firstj64.o GrB_Descriptor_new.o GB_AxB__any_eq_int8.o GB_AxB__times_plus_int16.o GB_AxB_saxpy3_sym_nsf.o GB_unop__identity_uint16_uint32.o GB_ew__iseq_fc64.o GB_convert_any_to_bitmap.o GB_ew__lt_uint8.o GB_unop__minv_int16_int16.o GB_AxB_saxpy3_sym_msf.o GxB_Matrix_sort.o GB_AxB__eq_ne_int32.o GB_aop__second_int32.o GB_unop__carg_fp32_fc32.o GB_unop__identity_fp32_uint32.o GB_matvec_type_name.o GB_sel__ge_thunk_uint32.o GB_split_bitmap_jit.o GB_unop__identity_uint64_uint64.o GxB_Row_subassign.o GB_subassign_01.o GB_as__int16.o GB_AxB__plus_minus_int64.o GB_ew__gt_bool.o GB_AxB__times_minus_uint64.o GB_unop__identity_fp64_int8.o GB_ew__le_uint16.o GB_AxB__bor_bxor_uint64.o GB_unop__identity_fp64_uint8.o GB_AxB__plus_secondj_int64.o GB_unop__tanh_fp64_fp64.o GB_enumify_mask.o GB_AxB__any_firstj_int64.o GB_macrofy_query.o GrB_Matrix_build.o GB_AxB__plus_land_int8.o GrB_BinaryOp_wait.o GB_AxB__any_rminus_fc32.o GB_Matrix_new.o GB_memset.o GB_unop__identity_int8_int16.o GB_bitwise.o GB_sel__eq_thunk_uint8.o GrB_Scalar_wait.o GB_AxB__bxnor_bxnor_uint8.o GB_ew__rdiv_fp32.o GB_AxB__any_minus_uint16.o GB_AxB__plus_rminus_fc32.o GrB_Matrix_eWiseMult.o GB_unop__identity_int32_bool.o GB_aop__islt_fp32.o GB_Scalar_wrap.o GB_transpose_bind1st_jit.o GB_AxB__any_second_uint16.o GB_conform.o GB_AxB__times_min_int32.o GB_aop__rminus_fc32.o GB_ew__bxor_int16.o GB_unop__minv_uint16_uint16.o GB_deserialize.o GB_AxB__min_div_int16.o GB_AxB__any_ge_int8.o GB_AxB__min_rdiv_uint64.o GB_unop__acosh_fp64_fp64.o GB_aop__rminus_fp64.o GB_AxB__lor_eq_int64.o GxB_Desc_set.o GB_ew__first_fc64.o GB_aop__bor_uint32.o GB_aop__lor_int16.o GB_AxB__eq_ne_fp64.o GB_AxB__min_rminus_uint32.o GB_AxB_dot4_jit.o GB_unop__identity_uint16_int16.o GB_AxB__land_ne_fp32.o GB_aop__lor_uint16.o GB_AxB__max_plus_int32.o GB_ew__bget_int64.o GB_jitifyer.o GB_op_name_and_defn.o GB_AxB__plus_plus_fc32.o GB_AxB__lxor_ge_int64.o GB_aop__pow_fp32.o GB_unop__cbrt_fp32_fp32.o GB_AxB__max_plus_fp64.o GB_ew__max_int64.o GB_AxB__min_minus_fp32.o GB_select_bitmap.o GB_cast_factory.o GB_aop__minus_int8.o GB_AxB__plus_firsti_int64.o GB_ew__remainder_fp64.o GB_unop__abs_uint16_uint16.o GB_AxB__min_second_fp32.o GB_subassign_08n.o GxB_Matrix_select.o GB_aop__second_int8.o GB_AxB_saxpy3_sym_sf.o GB_AxB_saxbit_generic_secondj32.o GB_aop__times_fc32.o GB_AxB__eq_ge_bool.o GB_ew__lxor_int32.o GB_unop__conj_fc64_fc64.o GB_AxB__lor_lt_int32.o GB_AxB__plus_max_int8.o GB_ew__div_fc32.o GxB_Context_set.o GB_AxB__any_le_fp64.o GB_AxB_saxpy3_sym_mbs.o GB_transpose_ix.o GB_macrofy_select.o GB_AxB__max_plus_uint8.o GB_AxB__times_max_uint32.o GB_aop__rdiv_fc32.o GB_aop__le_fp64.o GB_ew__first_fp32.o GB_aop__land_fp32.o GB_unop__isfinite_bool_fp32.o GB_AxB_saxpy3_sym_nhb.o GB_AxB__lor_le_int16.o GB_AxB__band_bxnor_uint8.o GB_AxB__any_ge_int64.o GB_unop__identity_int32_uint8.o GB_unop__identity_int64_int64.o GB_AxB__eq_le_fp64.o GB_red__min_int64.o GB_ew__pair_int16.o GB_AxB__eq_ne_int8.o GB_AxB__land_le_fp32.o GB_aop__isge_fp32.o GB_AxB__bxor_bxor_uint32.o GB_AxB__times_minus_fp64.o GB_bld__first_fc32.o GB_as__bool.o GB_AxB__bxor_band_uint32.o GB_AxB__lxor_ge_fp64.o GB_AxB__times_div_int8.o GB_AxB__times_max_int64.o GB_AxB__times_second_fp64.o GB_AxB__lxor_lt_uint64.o GB_ew__bget_uint32.o GB_unop__cimag_fp64_fc64.o GxB_Vector_unpack_CSC.o GB_ew__lt_int32.o GB_aop__lxor_int32.o GB_AxB__lor_gt_uint16.o GB_ew__rdiv_uint32.o GB_unop__signum_fc32_fc32.o GB_AxB__max_div_fp64.o GxB_Vector_subassign.o GB_ew__rminus_uint16.o GB_unop__identity_bool_int8.o GB_AxB__lxor_gt_uint32.o GB_aop__remainder_fp32.o GB_ek_slice_merge2.o GB_ew__plus_int64.o GB_ew__bxnor_int64.o GB_aop__bor_uint8.o GxB_Matrix_import_CSC.o GB_AxB__lor_ne_int16.o GB_unop__asin_fp64_fp64.o GB_AxB__any_rdiv_uint16.o GB_AxB__eq_ge_uint8.o GB_ew__isne_uint16.o GB_unop_identity.o GB_AxB__land_lt_uint8.o GB_aop__ldexp_fp64.o GB_bld__times_int8.o GB_bld__second_bool.o GB_aop__min_uint16.o GB_cover_finish.o GB_aop__ge_fp64.o GB_ew__islt_fp32.o GB_AxB__any_minus_int32.o GB_aop__max_int16.o GB_aop__lt_uint64.o GB_sel__nonzombie_int8.o GB_aop__div_int8.o GB_unop__acos_fc64_fc64.o GB_AxB__times_plus_uint32.o GB_AxB__any_second_int32.o GxB_Monoid_operator.o GB_red__max_uint64.o GB_sel__ge_thunk_int16.o GB_AxB__plus_min_int16.o GB_sel__nonzombie_int16.o GB_ew__ne_int8.o GB_unop__lnot_int8_int8.o GB_AxB__any_div_fp32.o GB_AxB__min_second_int32.o GB_sel__ge_thunk_int8.o GB_werk_push.o GB_AxB__lor_lt_int8.o GB_unop__identity_uint8_int16.o GB_AxB__max_first_uint32.o GB_aop__bshift_int64.o GB_AxB__min_second_fp64.o GB_ew__eq_uint16.o GB_sel__le_thunk_int16.o GB_AxB__times_max_uint8.o GB_unop__conj_fc32_fc32.o GB_ew__isne_fp64.o GB_AxB__min_rdiv_fp32.o GB_ew__first_fc32.o GrB_Vector_eWiseAdd.o GB_AxB__plus_lxor_int16.o GB_aop__eq_fc64.o GB_AxB_iso.o GB_cast_array.o GB_unop__identity_fc32_int16.o GB_AxB__lxor_eq_int64.o GB_sort.o GB_AxB__times_times_uint32.o GrB_IndexUnaryOp_free.o GB_sel__ne_thunk_fc32.o GB_unop__identity_uint32_int8.o GB_unop__identity_fc64_uint8.o GB_Context.o GB_unop__floor_fp64_fp64.o GB_file.o GB_select_positional_phase1.o GB_AxB__lxor_gt_int8.o GB_bld__first_fp32.o GB_Monoid_new.o GB_subassign_06d.o GB_AxB__times_minus_fc64.o GB_unop__ainv_uint64_uint64.o GB_ew__bget_uint8.o GB_unop__cosh_fp64_fp64.o GB_emult_08_phase2.o GB_sel__ne_thunk_int32.o GB_bld__second_uint32.o GB_unop__minv_bool_bool.o GB_bitmap_assign_M_accum_whole.o GB_AxB__max_rdiv_fp32.o GB_ew__bxor_uint32.o GB_aop__band_uint8.o GB_aop__islt_uint16.o GB_AxB__plus_div_uint8.o GB_ew__le_int8.o GB_unop__lnot_uint8_uint8.o GB_subassign_05d.o GB_bitmap_assign_noM_noaccum.o GB_ew__bset_uint64.o GB_transpose_unop_jit.o GB_enumify_select.o GB_AxB_semiring_builtin.o GB_AxB__max_min_int64.o GB_AxB_saxpy3_sym_mbb.o GB_aop__plus_int64.o GB_red__plus_uint64.o GB_ew__second_int16.o GB_AxB__lxor_pair_bool.o GB_bld__times_int16.o GB_ew__isle_fp64.o GB_unop__acosh_fc64_fc64.o GB_AxB__any_secondj_int32.o GB_ew__second_uint16.o GB_AxB__bor_bxnor_uint16.o GB_ew__ge_uint16.o GB_AxB__any_div_uint16.o GB_AxB_saxpy3_sym_mhf.o GB_unop__log2_fp64_fp64.o GB_AxB__any_minus_int8.o GB_ew__plus_fp32.o GB_AxB_saxpy3_generic_flipped.o GB_AxB__any_rminus_fp64.o GB_ew__hypot_fp32.o GB_ew__times_fp64.o GB_AxB__times_plus_uint8.o GB_AxB__any_second_int8.o GB_ew__le_uint64.o GxB_Vector_diag.o GB_unop__abs_bool_bool.o GB_AxB__times_firsti1_int32.o GrB_UnaryOp_new.o GB_AxB__lor_gt_int32.o GB_AxB__lor_le_fp64.o GB_aop__iseq_fc32.o GB_BinaryOp_compatible.o GB_AxB__lxor_lor_bool.o GB_AxB__any_max_int32.o GB_ew__rminus_int32.o GB_AxB__max_rminus_fp64.o GrB_Semiring_free.o GB_AxB__any_min_int16.o GB_AxB__any_eq_fp64.o GB_AxB__land_land_bool.o GB_select_positional_phase2.o GB_unop__identity_uint32_uint64.o GB_Op_free.o GB_aop__bxor_uint64.o GB_AxB__any_rdiv_int32.o GB_AxB__plus_plus_uint16.o GB_AxB__times_first_int16.o GB_ew__land_int8.o GB_AxB__bxnor_band_uint32.o GB_aop__ge_int64.o GB_as__uint32.o GB_calloc_memory.o GxB_Matrix_unpack_BitmapR.o GB_AxB__times_rminus_int64.o GB_aop__min_int32.o GB_AxB__eq_eq_fp64.o GB_Pending_free.o GB_AxB__land_eq_uint64.o GB_ew__bclr_uint8.o GB_aop__times_int8.o GB_transplant_conform.o GB_AxB__max_max_uint64.o GB_AxB__times_rdiv_uint32.o GB_ew__pair_uint32.o GB_AxB__times_div_uint16.o GxB_Type_new.o GxB_UnaryOp_ztype.o GB_encodify_user_op.o GB_AxB__min_rminus_uint16.o GB_AxB__plus_times_int64.o GB_ew__band_uint64.o GB_unop__minv_int32_int32.o GB_select_value_iso.o GB_AxB__plus_div_fc64.o GB_subassigner.o GB_AxB__plus_land_fp64.o GB_unop__identity_fp32_uint64.o GB_ew__cmplx_fp64.o GB_aop__lt_fp32.o GB_ek_slice_merge1.o GB_unop__identity_int16_fp64.o GB_bld__second_uint8.o GB_AxB__land_ge_int16.o GB_AxB__lxor_ne_int64.o GB_ew__bxnor_uint8.o GB_ew__ge_bool.o GB_ew__eq_int32.o GB_ew__div_int64.o GB_AxB__any_times_int64.o GB_unop__sin_fp64_fp64.o GB_unop__identity_uint16_uint64.o GB_aop__plus_uint16.o GB_aop__rminus_uint32.o GB_unop__round_fp32_fp32.o GB_extract.o GB_AxB__bxnor_bor_uint8.o GB_bld__plus_int32.o GB_sel__lt_thunk_int64.o GB_red__any_bool.o GxB_Matrix_build_Scalar.o GB_bld__min_int16.o GB_sel__ge_thunk_int64.o GB_AxB__any_ge_fp64.o GB_AxB_saxpy3_generic_unflipped.o GB_ew__atan2_fp32.o GB_Type_check.o GB_AxB__any_max_int16.o GB_aop__gt_uint64.o GB_Semiring_new.o GB_ew__isle_int16.o GB_reshape.o GB_unop__abs_int32_int32.o GB_unop__identity_int8_bool.o GB_aop__band_uint16.o GB_aop__max_uint32.o GB_red__eq_bool.o GB_AxB__any_times_int8.o GB_AxB__eq_ge_fp64.o GB_AxB__min_div_uint8.o GB_subassign_scalar.o GB_ew__islt_int64.o GB_AxB__lor_gt_int8.o GB_aop__lxor_int64.o GrB_Vector_extractElement.o GB_ew__isne_uint64.o GB_macrofy_string.o GB_ew__rminus_int8.o GB_binop_rename.o GB_AxB_saxbit_generic_firsti32.o GB_AxB__plus_max_uint64.o GB_AxB_dot3.o GB_AxB__plus_first_fc32.o GB_convert_to_nonfull.o GB_aop__minus_fp64.o GxB_Vector_subassign_scalar.o GB_emult.o GB_AxB__any_rdiv_int8.o GB_ew__lt_int64.o GB_aop__lor_uint32.o GB_bld__times_uint64.o GxB_IndexUnaryOp_new.o GB_ew__iseq_int64.o GB_AxB__plus_rminus_int16.o GB_unop__identity_bool_fp64.o GB_ew__div_int32.o GB_AxB__plus_lxor_uint32.o GB_aop__ne_uint32.o GB_AxB__lxor_gt_uint64.o GB_ew__gt_uint16.o GB_aop__hypot_fp32.o GB_AxB__lor_le_uint32.o GB_red__plus_fp32.o GB_AxB__plus_firstj1_int64.o GB_bld__min_uint32.o GB_AxB__plus_lor_uint64.o GB_sel__gt_thunk_fp64.o GB_unop_code_iso.o GB_bld__max_uint16.o GB_AxB__land_lor_bool.o GB_AxB__times_min_fp64.o GB_unop__abs_uint32_uint32.o GB_AxB_saxpy3_generic_firstj32.o GB_red__any_uint32.o GB_ew__first_int8.o GB_aop__bset_int8.o GB_sel__lt_thunk_fp64.o GB_matvec_check.o GB_unop__identity_uint16_uint8.o GB_AxB__eq_le_uint32.o GB_ops.o GB_code_check.o GB_aop__le_int64.o GB_unop__identity_int8_uint8.o GB_AxB__any_plus_int16.o GB_ew__eq_int8.o GB_ew__ne_uint16.o GB_unop__identity_int32_uint32.o GB_ew__iseq_int32.o GxB_Matrix_eWiseUnion.o GB_subassign_zombie.o GB_AxB__lor_le_uint8.o GB_aop__plus_uint32.o GB_unop__trunc_fc64_fc64.o GxB_Type_fprint.o GB_AxB__times_plus_uint64.o GB_AxB__lor_le_bool.o GB_assign_zombie3.o GB_convert_s2b.o GB_AxB__min_firstj1_int64.o GB_AxB__any_lor_bool.o GB_AxB_saxbit_generic_flipped.o GB_make_shallow.o GB_unop__identity_fc64_int32.o GB_unop__identity_fp64_bool.o GB_aop__lor_bool.o GB_AxB__min_rminus_int32.o GB_AxB__plus_plus_uint64.o GB_AxB__times_secondj1_int64.o GB_unop__minv_int8_int8.o GB_unop__identity_fp64_fc64.o GB_aop__max_uint8.o GB_AxB__times_firsti_int32.o GB_aop__bclr_int64.o GB_AxB__max_max_fp32.o GB_ew__max_uint8.o GB_AxB__lor_ge_int16.o GB_unop__identity_fp32_int16.o GB_AxB__times_minus_int16.o GB_AxB__lxor_gt_fp32.o GB_aop__min_fp32.o GB_ew__land_uint64.o GB_AxB__times_times_uint16.o GB_AxB__lor_eq_int16.o GB_convert_sparse_to_hyper.o GB_aop__bset_int32.o GB_unop__identity_fp32_fp32.o GB_sel__nonzombie_fp64.o GB_cast_matrix.o GB_AxB__bxor_bxor_uint8.o GB_AxB__max_firsti1_int64.o GB_unop__lnot_uint32_uint32.o GB_ew__bshift_uint64.o GB_ew__min_uint32.o GB_bitmap_subref.o GB_aop__lor_uint8.o GrB_Vector_extract.o GB_AxB_saxpy3_sym_mbf.o GB_ew__ne_fp64.o GB_aop__minus_fc64.o GB_ew__second_int8.o GB_ew__lxor_fp64.o GB_ew__lxor_uint8.o GB_ew__ge_int8.o GB_emult_04.o GB_aop__iseq_int8.o GB_aop__second_fc64.o GB_emult_08_phase0.o GB_Matrix_check.o GB_aop__band_int32.o GB_red__times_fc32.o GB_ew__bclr_int8.o GrB_Semiring_new.o GB_unop__identity_int64_uint16.o GB_AxB__land_lt_bool.o GB_aop__isgt_uint32.o GB_AxB__times_second_fc32.o GB_aop__rdiv_fp64.o GxB_Matrix_import_BitmapR.o GB_unop__lgamma_fp32_fp32.o GB_unop__identity_uint16_fc32.o GB_ew__ldexp_fp32.o GB_cpu_features_impl.o GB_AxB__max_rminus_uint32.o GB_aop__bxnor_uint64.o GB_unop__minv_uint8_uint8.o GB_AxB__any_lt_uint64.o GB_sel__le_thunk_uint8.o GB_AxB__lor_eq_bool.o GB_reduce_to_scalar_iso.o GB_phybix_free.o GB_unop__exp_fp64_fp64.o GB_aop__bxnor_uint8.o GB_sel__gt_thunk_int64.o GB_AxB__lor_ge_int64.o GB_sel__eq_thunk_uint32.o GB_unop__floor_fc32_fc32.o GB_unop__ainv_fp32_fp32.o GB_unop__ceil_fp64_fp64.o GB_enumify_apply.o GB_unop__cos_fc64_fc64.o GB_ew__bclr_int32.o GB_AxB_saxpy3_symbolic.o GB_memoryUsage.o GB_unop__identity_uint8_int8.o GB_unop__ainv_int16_int16.o GB_unop__sin_fc64_fc64.o GrB_Matrix_resize.o GrB_Vector_wait.o GB_AxB__any_le_fp32.o GB_convert_bitmap_worker.o GB_unop__identity_fc32_uint8.o GB_hyper_hash_build.o GB_ewise_fulla.o GB_ew__pow_uint64.o GB_unop_iso.o GB_AxB__plus_firsti1_int64.o GB_AxB__lor_eq_uint16.o GB_red__max_uint32.o GB_AxB__eq_gt_uint64.o GB_macrofy_user_op.o GB_sel__eq_thunk_int16.o GB_AxB__plus_pair_int32.o GB_AxB__plus_lor_fp32.o GB_unop__identity_int32_fc64.o GB_aop__rminus_int64.o GrB_kronecker.o GB_unop__ceil_fc32_fc32.o GB_AxB__land_gt_int16.o GB_AxB_saxpy3_sym_nhs.o GB_AxB_saxpy3_jit.o GB_AxB__min_min_uint64.o GB_AxB__any_minus_fp64.o GB_AxB__min_firstj_int64.o GB_AxB__eq_ne_int64.o GB_bld__plus_int64.o GB_aop__div_uint16.o GB_subassigner_method.o GB_AxB__any_second_fp64.o GB_aop__bshift_uint16.o GB_AxB__max_min_fp32.o GB_ew__minus_int16.o GB_bitmap_assign_M_noaccum.o GB_AxB__any_min_int8.o GxB_Vector_unpack_Full.o GB_AxB__times_first_uint8.o GB_unop__identity_uint8_bool.o GB_aop__bor_int64.o GB_AxB__lor_ge_bool.o GB_AxB__plus_rminus_uint32.o GB_aop__band_uint64.o GB_AxB__lxor_ge_bool.o GB_aop__max_int64.o GB_AxB__lor_eq_uint32.o GB_AxB__plus_firstj_int64.o GB_AxB__eq_second_bool.o GB_aop__band_int8.o GB_phy_free.o GB_red__plus_fp64.o GB_sel__ne_thunk_uint64.o GB_bld__times_fc32.o GB_ew__lor_int16.o GB_aop__isgt_uint8.o GB_ew__rdiv_uint16.o GB_Vector_diag.o GB_AxB__band_bxor_uint32.o GB_AxB__any_rminus_uint16.o GB_AxB__lxor_le_bool.o GB_ew__bxor_uint64.o GB_AxB__any_min_uint8.o GB_AxB__max_rminus_uint8.o GB_AxB__plus_rdiv_fc64.o GB_aop__rdiv_fc64.o GB_aop__eq_int64.o GB_AxB__times_times_int16.o GB_unop__identity_uint8_fp64.o GB_ew__minus_int32.o GB_unop__log2_fc32_fc32.o GB_unop__atan_fp64_fp64.o GB_AxB__times_div_fc32.o GB_AxB__any_plus_uint32.o GB_convert_hyper_to_sparse_test.o GB_AxB__eq_ne_int16.o GB_ew__second_int32.o GB_unop__identity_uint32_fc64.o GB_unop__bnot_int8_int8.o GB_AxB__eq_le_int64.o GxB_Monoid_terminal_new.o GB_ew__ge_int32.o GB_unop__lgamma_fp64_fp64.o GB_ew__div_fp32.o GB_AxB__eq_le_fp32.o GB_task_cumsum.o GB_AxB__band_band_uint64.o GB_ewise_fulln.o GB_AxB__lxor_ne_int16.o GB_AxB__max_plus_int64.o GB_AxB__lxor_first_bool.o GxB_Matrix_Option_set.o GB_aop__rminus_fc64.o GB_bld__max_int8.o GB_aop__pow_uint16.o GB_sel__eq_thunk_fp32.o GB_unop__identity_fc64_fp64.o GB_unop__identity_fc32_int32.o GB_AxB__min_div_uint64.o GB_unop__identity_bool_fc64.o GB_sel__ne_thunk_uint8.o GB_select_phase2_jit.o GB_AxB__land_ne_uint8.o GB_sel__le_thunk_uint64.o GB_AxB__land_gt_uint16.o GB_AxB__lor_ge_uint32.o GB_dup.o GB_ew__eq_bool.o GB_as__fc32.o GB_unop__floor_fc64_fc64.o GB_AxB__max_second_int16.o GB_AxB__min_rminus_fp32.o GB_emult_03.o GB_AxB__max_firsti_int64.o GB_unop__log_fp64_fp64.o GB_unop__identity_int8_fp64.o GB_ew__bshift_int16.o GB_aop__second_int16.o GB_aop__iseq_uint64.o GB_AxB__any_minus_fc64.o GrB_Matrix_assign_scalar.o GB_code_type.o GB_AxB__lor_gt_fp64.o GB_ew__times_fc32.o GB_aop__first_bool.o GB_emult_03_jit.o GB_aop__iseq_uint32.o GB_binop_second.o GB_AxB__land_lxor_bool.o GB_aop__lxor_bool.o GB_AxB__land_ne_uint16.o GB_clear.o GB_ew__bor_uint32.o GB_AxB__land_gt_bool.o GrB_error.o GB_emult_08_phase1.o GB_AxB__any_rdiv_fp64.o GB_aop__isge_uint16.o GB_bld__max_uint32.o GB_AxB__land_ne_uint64.o GB_unop__identity_fp64_int64.o GB_AxB__band_bxor_uint8.o GB_assign_describe.o GB_bix_free.o GB_ew__bxor_int8.o GB_bix_alloc.o GB_AxB__plus_times_fc32.o GB_Monoid_check.o GB_AxB_dot4.o GB_AxB__land_lt_int16.o GB_AxB__min_minus_uint16.o GB_AxB__eq_gt_fp32.o GB_aop__div_int32.o GB_ew__minus_int8.o GB_AxB__min_rminus_uint8.o GB_AxB__any_secondj1_int64.o GB_aop__bshift_int32.o GB_ew__times_fc64.o GB_bld__plus_int8.o GB_AxB__max_plus_int8.o GB_Context_check.o GB_code_size.o GB_unop__identity_uint8_fc64.o GB_AxB__any_firsti1_int32.o GB_AxB__max_secondj_int64.o GB_ew__pair_fp32.o GB_AxB__eq_lt_uint64.o GB_unop__acos_fc32_fc32.o GB_unop__acos_fp64_fp64.o GB_aop__eq_uint16.o GB_AxB__plus_minus_int16.o GB_AxB__eq_lor_bool.o GB_IndexUnaryOp_check.o GB_AxB__min_second_int8.o GB_AxB__plus_second_int16.o GB_AxB_saxpy3_sym_mfb.o GB_ew__land_fp32.o GB_sel__nonzombie_int32.o GB_encodify_ewise.o GB_AxB_meta_adotb_control.o GB_unop__identity_int8_fc32.o GB_aop__pair_fp32.o GB_aop__islt_int32.o GB_AxB__any_rminus_int64.o GB_aop__first_uint32.o GB_AxB__land_le_int64.o GB_ew__isge_fp32.o GB_AxB_saxpy4.o GB_unop__log1p_fc32_fc32.o GB_user_type_jit.o GB_aop__div_uint32.o GB_AxB__max_div_uint64.o GB_AxB__land_gt_uint32.o GB_unop__abs_fp32_fc32.o GB_bld__second_fc32.o GB_AxB__bxor_bor_uint64.o GB_unop__identity_uint64_bool.o GB_unop__identity_int64_fp32.o GB_aop__rdiv_int32.o GrB_Type_free.o GB_ew__isle_int64.o GB_AxB__max_first_int64.o GB_bitmap_assign_M_accum.o GB_AxB__min_rdiv_uint16.o GB_copy_user_user.o GB_unop__identity_int64_bool.o GB_AxB__bxor_band_uint8.o GB_ew__remainder_fp32.o GB_unop__identity_int32_fc32.o GB_AxB__min_max_int64.o GB_ew__times_int64.o GB_unop__erfc_fp32_fp32.o GB_ew__rminus_fc64.o GB_unop__sinh_fp64_fp64.o GB_AxB__min_minus_int32.o GrB_Matrix_select.o GB_unop__identity_fc32_fp64.o GxB_Matrix_subassign.o GB_ew__rdiv_uint8.o GB_AxB__min_second_uint8.o GB_unop__lnot_fp64_fp64.o GB_AxB__min_secondj_int32.o GxB_BinaryOp_new.o GB_AxB__any_rdiv_fc64.o GB_AxB__lor_ne_int8.o GB_ew__ge_fp64.o GB_unop__frexpx_fp32_fp32.o GB_ew__max_int16.o GrB_Vector_dup.o GB_ew__bget_uint64.o GB_AxB__max_times_uint16.o GB_unop__ainv_int64_int64.o GB_aop__isne_int16.o GxB_deserialize_type_name.o GB_matvec_type.o GB_sel__le_thunk_fp32.o GB_aop__bshift_int8.o GB_ew__min_int16.o GB_AxB__lor_second_bool.o GB_unop__asinh_fc64_fc64.o GB_AxB__lor_gt_int16.o GB_unop__tan_fp64_fp64.o GB_AxB__eq_eq_int64.o GB_AxB__bor_bxnor_uint32.o GB_AxB__any_div_uint32.o GB_deserialize_from_blob.o GB_unop__identity_bool_fc32.o GrB_BinaryOp_free.o GB_AxB__max_rdiv_int64.o GB_AxB__times_times_uint8.o GB_positional_offset.o GB_bld__max_int32.o GB_unop__atan_fc64_fc64.o GB_unop__identity_uint64_uint8.o GB_AxB__max_first_int32.o GrB_Vector_clear.o GB_aop__atan2_fp64.o GB_bitmap_assign_notM_noaccum.o GxB_Vector_pack_Full.o GB_AxB__plus_land_int64.o GB_Semiring_check.o GrB_Scalar_nvals.o GB_ew__eq_fc64.o GB_AxB__times_first_fc64.o GB_unop__identity_int16_int64.o GB_ew__first_int16.o GB_aop__islt_int8.o GxB_Descriptor_fprint.o GB_AxB__max_first_uint8.o GB_bitmap_assign_noM_accum_whole.o GB_aop__first_uint8.o GrB_Matrix_import.o GB_subassign_05e.o GB_AxB__max_first_fp32.o GB_convert_any_to_iso.o GB_AxB__max_minus_uint32.o GB_AxB__bxor_bxnor_uint16.o GB_AxB__plus_rdiv_int16.o GB_AxB__min_rminus_fp64.o GxB_Monoid_terminal.o GB_all_aliased.o GB_AxB__max_second_uint32.o GB_aop__isgt_int16.o GB_AxB__lxor_lt_uint16.o GB_bitmap_M_scatter.o GB_Global.o GB_AxB__max_firsti_int32.o GB_AxB__max_times_int8.o GB_unop__exp2_fc32_fc32.o GB_add.o GB_ew__le_uint32.o GB_unop__identity_bool_uint8.o GB_AxB__band_band_uint16.o GB_ew__plus_uint64.o GB_bld__first_fc64.o GB_unop__isinf_bool_fp32.o GB_aop__cmplx_fp32.o GxB_pack_HyperHash.o GB_AxB__lor_ne_uint16.o GB_unop__tan_fp32_fp32.o GB_mxm.o GB_AxB__plus_minus_fp32.o GB_transpose_in_place.o GB_AxB__times_min_uint8.o GB_unop__identity_int8_int32.o GB_macrofy_nvals.o GB_unop__asinh_fp32_fp32.o GB_bld__any_uint64.o GB_AxB__plus_second_fp32.o GB_AxB__land_ge_int64.o GB_ew__div_uint8.o GB_block.o GB_unop__tgamma_fp64_fp64.o GB_AxB__any_first_fp32.o GB_AxB__any_eq_uint64.o GB_AxB__any_minus_uint32.o GB_aop__pair_uint8.o GB_sel__nonzombie_uint8.o GB_AxB__any_rdiv_fp32.o GB_AxB__any_second_uint32.o GB_aop__bxor_int16.o GB_positional_binop_ijflip.o GB_unop__ainv_uint32_uint32.o GB_ew__bxor_int32.o GrB_Matrix_deserialize.o GxB_Scalar_type.o GB_AxB__min_min_int64.o GB_ew__bset_int64.o GB_aop__ne_uint64.o GB_AxB__lor_lt_uint8.o GB_AxB__any_first_fc64.o GB_unop__abs_int8_int8.o GxB_Vector_export_Bitmap.o GB_AxB__lor_lt_fp64.o GB_encodify_apply.o GB_AxB__plus_first_fp64.o GB_AxB__bor_bxnor_uint8.o GB_unop__trunc_fc32_fc32.o GB_subassign_25.o GB_AxB__min_times_uint8.o GB_unop__lnot_int32_int32.o GB_aop__rdiv_uint8.o GB_ew__ge_int16.o GB_aop__isle_int64.o GB_AxB__times_rdiv_int64.o GxB_Vector_export_CSC.o GB_AxB__lor_le_uint16.o GB_Matrix_free.o GB_ew__band_int64.o GB_AxB__plus_lor_uint8.o GB_AxB__times_plus_int8.o GxB_Iterator_get.o GB_unop__identity_uint8_uint32.o GB_hyper_shallow.o GxB_init.o GB_ew__isgt_uint64.o GB_bld__first_int32.o GxB_IndexUnaryOp_xtype_name.o GB_aop__second_uint64.o GB_unop__log_fp32_fp32.o GB_red__any_uint16.o GB_aop__minus_int16.o GB_encodify_select.o GB_AxB__bxnor_bxor_uint8.o GB_unop__identity_uint8_uint16.o GxB_Matrix_import_HyperCSC.o GB_ew__max_fp32.o GB_aop__eq_fc32.o GB_ew__pair_fc32.o GB_AxB__plus_land_int16.o GB_aop__isne_fp32.o GB_ew__lt_fp64.o GB_AxB_saxpy3_sym_mfh.o GB_AxB__plus_min_int32.o GrB_Row_assign.o GB_unop__expm1_fc64_fc64.o GB_ew__le_uint8.o GB_Iterator_rc_seek.o GB_AxB__lxor_lt_fp32.o GB_AxB_dot2n_jit.o GB_AxB__plus_min_uint32.o GB_ew__ge_uint8.o GB_AxB__max_min_uint64.o GB_AxB__max_times_int16.o GB_AxB__times_minus_fc32.o GB_ew__isle_uint8.o GB_builder.o GB_unop_new.o GB_ew__lor_fp32.o GB_unop__identity_uint64_int8.o GB_AxB__plus_times_int8.o GB_AxB__lxor_gt_int64.o GB_unop__identity_uint16_int64.o GB_AxB__max_secondj_int32.o GxB_Vector_build_Scalar.o GB_AxB__times_rdiv_fc64.o GxB_BinaryOp_ztype_name.o GB_ew__copysign_fp32.o GB_bld__any_fp64.o GB_AxB__eq_ge_int64.o GB_AxB_dot3_one_slice.o GB_AxB__any_second_uint8.o GB_add_jit.o GB_AxB__min_min_fp32.o GB_sel__lt_thunk_int32.o GB_ew__bxnor_int8.o GB_ew__pow_fp32.o GB_AxB__lor_gt_uint32.o GB_enumify_reduce.o GB_AxB__plus_rdiv_fp32.o GB_ew__rminus_int16.o GB_unop__acos_fp32_fp32.o GB_ew__rminus_uint32.o GB_AxB__any_second_uint64.o GB_apply_unop_jit.o GB_AxB__max_min_int16.o GxB_IndexUnaryOp_ztype_name.o GB_aop__isle_fp32.o GB_AxB__lxor_land_bool.o GB_AxB__any_rdiv_uint32.o GB_AxB__land_ne_int32.o GB_nvals.o GB_bld__max_fp32.o GB_AxB__plus_max_fp32.o GB_transpose_cast.o GB_aop__gt_int64.o GB_AxB__any_lt_int64.o GB_build_jit.o GB_AxB__times_rminus_uint64.o GB_AxB__plus_first_fc64.o GxB_Vector_pack_Bitmap.o GB_AxB__min_second_uint16.o GrB_Matrix_exportHint.o GB_aop__band_int16.o GB_ew__isge_int32.o GB_unop__identity_fp32_fp64.o GB_AxB__any_max_fp32.o GB_aop__fmod_fp32.o GB_unop__identity_int16_int8.o GB_AxB__any_plus_uint16.o GB_AxB_dot2.o GB_concat_hyper.o GB_red__times_fp64.o GB_ew__isge_fp64.o GB_AxB__eq_lt_int64.o GB_AxB__eq_le_int32.o GB_AxB__min_plus_uint64.o GB_AxB_saxpy3_sym_ss.o GB_unop__identity_int16_int16.o GB_AxB__plus_max_int64.o GB_bld__any_uint8.o GB_AxB__plus_rminus_fc64.o GB_ew__div_int8.o GB_AxB__lxor_ne_uint64.o GB_unop__identity_fc32_bool.o GB_unop__log10_fp64_fp64.o GB_ew__eq_uint32.o GB_aop__lor_int32.o GB_slice_vector.o GB_unop__identity_int8_fp32.o GB_AxB__any_ne_uint64.o GB_sel__ge_thunk_fp64.o GB_AxB__plus_lxor_int32.o GB_unop__sinh_fp32_fp32.o GB_aop__eq_fp64.o GB_unop__expm1_fc32_fc32.o GB_sel__lt_thunk_uint64.o GB_AxB__plus_div_fp64.o GB_AxB__lor_le_int32.o GB_AxB__any_first_uint8.o GB_AxB_saxpy3_sym_nsh.o GB_ew__pair_int8.o GB_AxB_saxpy3_sym_nss.o GB_unop__abs_int64_int64.o GB_AxB__bxnor_bor_uint32.o GB_bld__max_int16.o GB_Matrix_diag.o GB_AxB_saxpy3_sym_msh.o GB_aop__bget_int64.o GB_unop__isfinite_bool_fp64.o GB_AxB__min_first_int32.o GB_red__any_int32.o GxB_rowIterator.o GB_ew__min_uint64.o GB_AxB__times_firstj1_int64.o GB_is_diagonal.o GB_AxB__plus_pair_int16.o GB_unop__minv_uint64_uint64.o GrB_Matrix_extractElement.o GB_unop__ainv_uint8_uint8.o GB_aop__bget_uint64.o GB_AxB__times_max_int8.o GB_bld__any_fc64.o GB_aop__lxor_uint64.o GB_select_bitmap_jit.o GB_AxB__times_rdiv_fc32.o GB_unjumble.o GB_ew__rminus_uint8.o GB_sel__eq_thunk_fc64.o GxB_Type_from_name.o GxB_Vector_eWiseUnion.o GB_aop__plus_fc32.o GB_AxB__land_lt_uint16.o GB_AxB__plus_lor_fp64.o GB_ew__bxor_uint16.o GB_AxB__lxor_le_uint64.o GB_AxB__any_rdiv_uint8.o GxB_Matrix_reshape.o GB_red__times_int64.o GB_AxB__min_times_int32.o GB_ew__iseq_uint64.o GB_AxB__plus_rminus_uint16.o GB_AxB_saxpy3_generic_firsti32.o GB_AxB__any_eq_int32.o GB_subassign_15.o GB_aop__islt_fp64.o GB_ew__ge_uint32.o GB_AxB__min_times_fp64.o GB_AxB__min_max_fp32.o GB_AxB_saxpy4_jit.o GB_AxB_saxpy3_sym_sb.o GrB_Matrix_assign.o GrB_Matrix_serializeSize.o GB_aop__div_fp32.o GB_ew__div_fp64.o GB_mask.o GB_unop__abs_uint64_uint64.o GB_nnz_max.o GB_AxB__band_bxnor_uint16.o GB_AxB__plus_min_uint64.o GB_AxB__min_plus_fp32.o GB_ew__atan2_fp64.o GB_ew__gt_fp64.o GB_ew__bclr_int64.o GB_AxB__min_firsti1_int64.o GB_AxB__land_ge_int8.o GxB_Matrix_unpack_CSR.o GB_ew__lor_int64.o GB_aop__le_uint64.o GB_ew__bshift_int64.o GB_subassign_08s_and_16.o GB_ew__eq_uint8.o GB_aop__lor_int8.o GB_AxB__plus_lxor_uint16.o GB_unop__identity_fc64_uint16.o GB_AxB__times_firstj_int32.o GB_unop__identity_fc64_int16.o GB_unop__signum_fc64_fc64.o GxB_Global_Option_get.o GB_AxB__plus_lxor_int8.o GB_AxB_saxpy3_sym_nfs.o GB_enumify_assign.o GB_AxB__plus_plus_int64.o GB_AxB__plus_plus_fp32.o GB_AxB__lor_le_int8.o GB_aop__max_uint16.o GB_sel__gt_thunk_uint32.o GB_AxB__max_times_fp64.o GxB_Matrix_pack_FullR.o GB_AxB_saxpy3_sym_nhh.o GB_AxB__eq_eq_uint8.o GB_AxB__times_div_uint32.o GB_aop__isgt_int32.o GB_AxB__max_firstj1_int64.o GB_AxB_saxbit.o GB_AxB__any_firstj1_int32.o GB_aop__first_int8.o GB_AxB__times_rminus_fp32.o GB_unop__identity_int16_fc32.o GB_red__any_int8.o GB_AxB__bor_bxor_uint16.o GB_AxB__max_rminus_int32.o GB_AxB_saxpy3_sym_hh.o GB_aop__bxor_int64.o GB_ew__first_uint64.o GB_unop__cos_fp32_fp32.o GB_AxB__lor_ge_uint16.o GB_unop__identity_fp64_int32.o GB_subassign_jit.o GB_red__times_uint8.o GB_ew__lt_uint16.o GB_ew__land_uint8.o GB_AxB_saxpy3_generic_firstj64.o GB_unop__log10_fc64_fc64.o GrB_Vector_size.o GB_AxB__plus_pair_fp64.o GB_AxB__lor_lxor_bool.o GB_assign_scalar.o GB_bitmap_assign_M_noaccum_whole.o GrB_Matrix_extract.o GB_concat_sparse_jit.o GB_AxB__lxor_ne_fp32.o GB_AxB_dot.o GB_AxB__plus_rdiv_uint16.o GB_AxB_saxpy5_jit.o GB_AxB__any_min_uint32.o GB_aop__iseq_uint16.o GB_AxB__any_times_fp32.o GxB_SelectOp_xtype.o GB_AxB_saxpy3_slice_quick.o GrB_Vector_resize.o GB_ew__pow_int64.o GB_AxB_saxbit_jit.o GB_bld__max_int64.o GB_sel__lt_thunk_fp32.o GB_aop__band_uint32.o GB_AxB__eq_gt_int64.o GB_AxB__times_first_int64.o GB_aop__isne_uint8.o GxB_Matrix_unpack_HyperCSR.o GB_bld__lor_bool.o GB_transpose_bucket.o GB_unop__minv_uint32_uint32.o GB_subassign_05.o GxB_Matrix_unpack_HyperCSC.o GB_ew__ge_int64.o GB_AxB__times_plus_fc32.o GB_AxB__min_max_int8.o GB_aop__minus_fc32.o GB_AxB__min_rdiv_int16.o GB_AxB__min_div_int32.o GxB_Vector_import_CSC.o GB_aop__div_int16.o GB_AxB__plus_times_fp64.o GB_AxB__land_lt_int32.o GB_aop__bshift_int16.o GB_AxB__plus_lor_int64.o GB_AxB__any_div_int8.o GB_AxB__bxnor_band_uint8.o GB_bitmap_expand_to_hyper.o GxB_Scalar_type_name.o GB_AxB__times_first_int8.o GB_sel__gt_thunk_uint64.o GB_bld__plus_uint64.o GB_AxB__plus_rminus_int32.o GB_unop__log1p_fp32_fp32.o GB_aop__bclr_uint32.o GB_aop__land_bool.o GB_sel__ge_thunk_uint8.o GB_aop__pair_int64.o GB_msort_2.o GB_kroner.o GB_as__fp64.o GB_AxB_saxpy4_tasks.o GB_AxB__band_bxor_uint16.o GB_AxB__band_bor_uint16.o GB_sel__ne_thunk_int64.o GB_AxB__times_div_uint8.o GB_aop__isgt_int8.o GB_ew__rdiv_int16.o GB_enumify_mxm.o GB_unop__identity_int64_fc32.o GrB_Type_wait.o GB_AxB__land_ne_int64.o GB_split_full_jit.o GB_aop__islt_int16.o GB_ew__second_bool.o GB_AxB__plus_plus_int8.o GB_AxB__bor_bor_uint32.o GB_aop__first_uint16.o GB_AxB__plus_land_uint8.o GB_ew__band_int32.o GB_macrofy_ewise.o GB_bld__any_int32.o GB_AxB__plus_pair_uint32.o GB_AxB__any_le_uint32.o GB_aop__rminus_uint64.o GB_AxB__any_plus_int32.o GB_AxB__bxnor_bxnor_uint64.o GB_sel__ne_thunk_uint16.o GB_ew__le_fp64.o GB_AxB__min_first_uint32.o GB_aop__bset_uint8.o GB_AxB__eq_ne_uint64.o GB_enumify_build.o GB_reduce_to_vector.o GB_unop__abs_int16_int16.o GB_AxB__lxor_eq_uint64.o GB_unop__creal_fp32_fc32.o GB_unop__identity_fp64_uint16.o GB_unop__identity_uint32_int32.o GB_aop__le_fp32.o GB_AxB__land_ne_int16.o GB_macrofy_sparsity.o GB_bld__min_int8.o GB_AxB__land_le_uint8.o GrB_Vector_free.o GB_AxB_saxpy3_generic_second.o GB_AxB__any_max_int8.o GB_aop__pow_int16.o GB_is_shallow.o GB_Descriptor_check.o GB_binop_pattern.o GB_AxB__min_div_int64.o GB_AxB__any_land_bool.o GB_AxB__bxnor_bxnor_uint16.o GB_aop__plus_int8.o GB_sel__le_thunk_int64.o GB_unop__identity_uint16_fp64.o GB_AxB__lor_ge_int32.o GB_subassign_symbolic.o GB_AxB__times_second_uint8.o GB_AxB__min_firsti_int64.o GB_subassign_13.o GB_sel__nonzombie_fc32.o GB_AxB__any_times_uint32.o GB_ix_realloc.o GrB_Vector_assign_scalar.o GB_AxB__any_le_uint64.o GB_ew__pow_fp64.o GB_enumify_unop.o GB_AxB__max_secondj1_int32.o GB_ew__div_fc64.o GxB_Vector_deserialize.o GB_build.o GB_ew__ne_fc32.o GB_AxB__min_plus_int64.o GB_user_op_jit.o GB_AxB_saxpy3_sym_nsb.o GB_AxB__land_eq_int16.o GB_AxB__plus_times_fc64.o GB_ew__second_uint32.o GB_aop__iseq_int32.o GB_math.o GB_unop__atanh_fp32_fp32.o GB_AxB_saxpy3_sym_msb.o GB_AxB__plus_rdiv_int64.o GB_AxB__lor_ne_uint8.o GB_ew__bor_int32.o GxB_Scalar_fprint.o GB_unop__bnot_uint8_uint8.o GB_AxB__min_firstj_int32.o GB_unop__ceil_fp32_fp32.o GB_AxB__lor_lor_bool.o GB_aop__isge_int16.o GB_AxB__max_firstj_int64.o GB_AxB__times_minus_uint32.o GB_AxB__lxor_ge_uint64.o GB_ijlength.o GB_aop__min_uint8.o GB_bld__max_uint8.o GxB_Iterator_free.o GxB_Monoid_identity.o GB_AxB__any_gt_bool.o GB_AxB__plus_first_int32.o GxB_Type_name.o GB_unop__identity_fc32_uint32.o GB_AxB__bor_bor_uint8.o GxB_Vector_Iterator.o GB_AxB_meta.o GB_ew__pair_fp64.o GB_AxB__max_minus_uint16.o GB_AxB__any_plus_int8.o GB_ew__first_uint32.o GB_aop__bset_uint32.o GB_casting.o GB_aop__isle_uint16.o GB_ew__gt_int8.o GB_AxB__max_second_uint16.o GB_unop__identity_fc64_int8.o GB_ew__first_int64.o GB_AxB__any_plus_uint8.o GxB_Vector_unpack_Bitmap.o GrB_Scalar_new.o GB_AxB__max_plus_uint32.o GB_unop__identity_uint16_fc64.o GxB_BinaryOp_xtype.o GB_AxB_saxpy3_sym_mhh.o GB_unop__minv_fp32_fp32.o GB_unop__log1p_fp64_fp64.o GB_AxB_dot3_jit.o GB_aop__ge_uint64.o GB_unop__identity_uint32_int16.o GB_ew__copysign_fp64.o GB_sel__gt_thunk_fp32.o GB_AxB_saxpy3.o GB_AxB__plus_secondj1_int32.o GB_AxB__any_firsti1_int64.o GB_AxB__lxor_eq_uint8.o GB_AxB__lor_ne_fp64.o GB_unop__identity_int32_fp32.o GB_aop__first_int32.o GB_aop__lt_int16.o GB_AxB__lor_ge_int8.o GB_AxB__bor_bxnor_uint64.o GB_AxB__any_minus_fc32.o GB_AxB__any_div_uint64.o GB_nvec_nonempty.o GB_AxB__any_div_int16.o GxB_UnaryOp_new.o GB_AxB__land_gt_int32.o GB_AxB__any_second_fc32.o GB_AxB__min_times_uint16.o GB_AxB__any_ne_fp32.o GB_aop__max_fp64.o GB_AxB__plus_first_int64.o GB_ew__minus_uint8.o GB_concat_bitmap.o GB_AxB__any_gt_uint64.o GB_aop__rminus_fp32.o GxB_Matrix_unpack_FullR.o GB_AxB__any_times_fp64.o GB_ew__second_uint8.o GB_ew__minus_uint16.o GB_subassign_10_and_18.o GB_AxB__any_min_int64.o GB_AxB_saxpy3_sym_nbs.o GB_positional_unop_ijflip.o GB_AxB__lxor_eq_bool.o GB_ew__bor_int8.o GB_AxB__lxor_eq_fp32.o GB_AxB__plus_div_uint64.o GB_AxB_saxpy3_sym_mff.o GB_Mask_compatible.o GB_ew__ne_uint64.o GB_AxB__lor_eq_uint64.o GB_aop__lor_fp64.o GB_AxB__lxor_le_int64.o GB_AxB__plus_second_uint16.o GB_unop__identity_uint64_fp32.o GB_bld__first_int16.o GB_AxB__plus_lxor_fp64.o GB_AxB__min_first_uint64.o GB_unop__identity_uint8_fc32.o GB_aop__copysign_fp64.o GB_aop__islt_uint32.o GB_expand_iso.o GB_ew__rminus_fp64.o GB_ew__fmod_fp64.o GB_AxB__times_times_int32.o GB_AxB__times_first_int32.o GB_AxB__bor_band_uint16.o GB_ew__pair_uint8.o GB_AxB__lxor_ne_fp64.o GB_aop__times_uint64.o GB_AxB__land_le_bool.o GB_red__any_fp64.o GB_AxB__plus_rminus_int8.o GrB_mxv.o GxB_Matrix_pack_BitmapC.o GB_BinaryOp_check.o GB_aop__eq_fp32.o GB_ew__isle_uint64.o GB_AxB__max_minus_fp32.o GB_AxB__land_ne_uint32.o GB_AxB__times_times_fp32.o GB_AxB_saxpy3_sym_bs.o GB_convert_sparse_to_hyper_test.o GB_pslice.o GB_AxB__max_rdiv_uint16.o GB_bld__any_int64.o GB_ew__bget_int8.o GB_aop__pow_uint32.o GB_ew__cmplx_fp32.o GB_convert_hyper_to_sparse.o GxB_BinaryOp_ytype.o GB_AxB__min_first_fp32.o GB_sel__eq_thunk_int64.o GB_macrofy_family.o GB_AxB__times_minus_fp32.o GB_emult_04_jit.o GB_macrofy_mxm.o GB_aop__bxnor_uint32.o GB_AxB__lxor_ge_fp32.o GB_AxB__plus_pair_fc32.o GB_AxB__min_second_uint32.o GB_AxB__times_second_fp32.o GrB_Matrix_dup.o GB_AxB__land_gt_int8.o GB_AxB__max_second_int32.o GB_AxB__times_firstj1_int32.o GB_AxB__lxor_lt_int16.o GB_AxB__bxor_bxor_uint16.o GB_aop__isle_int8.o GxB_Vector_fprint.o GB_aop__isne_uint16.o GB_AxB__max_div_fp32.o GB_aop__bshift_uint8.o GB_ew__rminus_fc32.o GB_aop__isle_uint8.o GB_AxB__eq_gt_uint8.o GB_AxB__land_le_int32.o GB_AxB__eq_eq_uint64.o GB_aop__land_uint32.o GB_unop_one.o GB_AxB__any_rdiv_fc32.o GB_unop__tanh_fp32_fp32.o GrB_Matrix_clear.o GB_AxB__min_rminus_int64.o GB_ew__lor_uint16.o GB_red__any_fp32.o GB_AxB__land_le_uint32.o GB_aop__isge_uint32.o GB_aop__land_int32.o GB_aop__ge_fp32.o GB_ew__min_uint16.o GB_AxB__plus_land_uint64.o GB_AxB__any_plus_uint64.o GB_AxB__times_second_int32.o GB_ew__gt_uint64.o GB_unop__identity_int16_uint64.o GB_aop__land_fp64.o GB_aop__islt_uint8.o GB_red__min_uint16.o GB_AxB__land_le_int16.o GB_AxB__min_max_int32.o GB_AxB__min_first_int64.o GB_new.o GB_red__max_int16.o GB_selector.o GB_serialize_array.o GB_aop__isgt_fp64.o GB_bld__times_int32.o GB_AxB__any_first_uint16.o GxB_Vector_import_Bitmap.o GB_AxB__min_max_fp64.o GB_macrofy_bytes.o GB_convert_any_to_non_iso.o GrB_Descriptor_free.o GB_enumify_terminal.o GB_ew__eq_fc32.o GB_ew__land_int16.o GB_AxB__any_ge_uint64.o GB_unop__identity_fp64_fp64.o GB_red__any_fc64.o GB_AxB__plus_minus_int32.o GB_AxB__min_rdiv_int8.o GrB_Matrix_reduce.o GB_AxB__any_secondj1_int32.o GB_AxB__plus_second_int32.o GB_qsort_3.o GB_ew__plus_uint16.o GB_aop__times_uint16.o GB_AxB__any_first_int32.o GB_AxB__land_eq_bool.o GB_AxB__eq_ge_uint64.o GB_AxB__plus_div_fp32.o GB_AxB__min_minus_uint8.o GB_AxB_saxpy3_sym_fh.o GB_I_inverse.o GB_red__lxor_bool.o GB_bld__min_fp64.o GB_ew__lt_int16.o GB_AxB__max_minus_int8.o GB_AxB__max_rminus_int16.o GB_AxB__any_max_fp64.o GB_transpose_bind2nd_jit.o GB_split_sparse.o GB_AxB__max_second_int8.o GB_unop__cosh_fp32_fp32.o GB_AxB__max_rminus_uint16.o GB_aop__minus_uint64.o GB_sel__ne_thunk_fp32.o GB_AxB__any_rminus_fp32.o GB_status_code.o GB_AxB__times_minus_int64.o GB_kron.o GB_ew__plus_int16.o GxB_Matrix_type.o GB_AxB__min_rdiv_uint32.o GB_aop__land_uint8.o GB_ew__bset_int16.o GB_AxB__any_rminus_fc64.o GxB_Matrix_export_FullR.o GB_AxB__max_rdiv_int32.o GB_red__times_fc64.o GB_AxB__land_lt_fp64.o GB_red__plus_int16.o GB_ew__isle_fp32.o GB_unop__ainv_fp64_fp64.o GB_sparsity_control.o GB_AxB__lxor_lt_bool.o GB_sel__lt_thunk_int8.o GxB_IndexUnaryOp_fprint.o GB_msort_1.o GB_ew__gt_int64.o GB_AxB__plus_rminus_fp64.o GB_aop__gt_fp32.o GB_bld__first_uint32.o GB_AxB__any_times_int16.o GB_ew__times_fp32.o GrB_Vector_assign.o GB_ew__band_int16.o GB_AxB__plus_first_uint64.o GB_ew__max_int32.o GB_AxB__min_rdiv_uint8.o GB_unop__identity_int64_uint64.o GB_bld__min_int64.o GB_aop__isne_int32.o GB_ew__isgt_uint16.o GB_unop__lnot_fp32_fp32.o GB_macrofy_unop.o GB_AxB__eq_land_bool.o GB_union_jit.o GB_AxB__any_eq_fp32.o GB_AxB__plus_rdiv_int8.o GB_AxB__min_times_uint64.o GB_convert_bitmap_to_sparse_test.o GB_AxB__lxor_gt_uint8.o GB_aop__minus_int32.o GB_AxB__any_max_uint16.o GB_aop__bclr_int16.o GB_AxB__max_times_int64.o GB_ew__isge_int8.o GB_aop__ne_fp32.o GB_AxB__plus_minus_int8.o GB_AxB_saxpy3_sym_nbh.o GB_unop__identity_bool_uint64.o GB_aop__lt_bool.o GB_AxB_saxpy3_sym_mbh.o GB_ew__isgt_int64.o GB_ew__plus_fc32.o GB_AxB__plus_second_int8.o GB_AxB__eq_eq_fp32.o GB_AxB__any_minus_uint64.o GB_AxB__band_bxor_uint64.o GB_AxB__max_min_uint16.o GB_AxB__min_times_uint32.o GB_unop__identity_fc32_int8.o GB_unop__identity_int32_int64.o GB_AxB__max_max_int16.o GB_aop__lt_uint8.o GB_red__min_int32.o GrB_Vector_setElement.o GB_unop__abs_uint8_uint8.o GxB_Matrix_unpack_FullC.o GB_bitmap_assign_notM_accum.o GB_AxB__lxor_gt_int16.o GxB_UnaryOp_xtype_name.o GB_aop__bset_int16.o GB_AxB__plus_land_fp32.o GB_ew__pair_int32.o GB_AxB__plus_rdiv_int32.o GB_sel__nonzombie_uint64.o GB_AxB__bor_bxor_uint8.o GB_ew__isge_uint32.o GB_unop__identity_int16_fp32.o GB_unop__identity_int8_uint16.o GB_bld__any_fc32.o GB_AxB__lxor_lt_uint32.o GB_AxB__any_first_int64.o GB_red__lor_bool.o GB_AxB__land_ge_fp32.o GB_extract_vector_list.o GB_aop__isle_int32.o GB_AxB__lor_ge_fp64.o GB_unop__creal_fp64_fc64.o GB_ew__bor_uint8.o GB_macrofy_cast_expression.o GB_AxB__lor_lt_uint64.o GB_AxB__min_min_int16.o GB_ew__isne_fc32.o GB_AxB__plus_pair_int8.o GB_AxB__max_rdiv_int8.o GB_ew__plus_int32.o GB_AxB__land_ge_bool.o GB_AxB__bxor_bor_uint32.o GB_AxB_saxpy3_sym_bh.o GB_AxB__any_eq_int16.o GB_AxB__any_ge_fp32.o GB_AxB__land_eq_uint32.o GxB_Scalar_memoryUsage.o GB_AxB__max_minus_uint64.o GB_aop__rdiv_uint64.o GB_AxB__times_second_int16.o GB_unop__carg_fp64_fc64.o GB_aop__gt_int16.o GB_AxB__any_lt_int16.o GB_ijsort.o GB_AxB__times_rminus_uint16.o GB_AxB__eq_ne_uint32.o GB_ew__min_uint8.o GB_ew__max_uint16.o GB_reduce_worker_iso.o GB_hyper_hash_free.o GB_AxB__times_max_uint64.o GB_unop__identity_uint64_uint32.o GB_ew__max_int8.o GrB_Vector_build.o GB_ewise_fulln_jit.o GB_AxB__lor_ne_uint32.o GB_ew__pow_fc32.o GrB_Scalar_setElement.o GB_subassign_09.o GB_macrofy_user_type.o GB_unop__identity_int16_bool.o GB_AxB__any_rminus_uint64.o GB_macrofy_mask.o GB_ew__bget_uint16.o GB_AxB__min_plus_uint16.o GrB_Col_extract.o GB_callback.o GB_unop__identity_int64_uint8.o GB_AxB__lxor_gt_bool.o GB_AxB__eq_gt_bool.o GB_AxB__max_plus_int16.o GB_as__int64.o GB_AxB__times_second_fc64.o GB_aop__pair_int8.o GB_AxB__lxor_ne_uint16.o GB_bld__times_uint32.o GB_AxB__times_second_uint32.o GB_aop__second_fp32.o GB_wait.o GB_ew__lor_int8.o GB_AxB__any_max_uint32.o GB_AxB__plus_secondj_int32.o GB_aop__max_int8.o GB_AxB_saxpy3_generic_secondj64.o GB_masker.o GB_AxB_saxpy.o GB_AxB__any_plus_fc64.o GB_bitmap_assign_fullM_accum.o GB_sel__lt_thunk_uint16.o GB_unop__identity_fc64_fc64.o GB_sel__nonzombie_uint16.o GB_red__min_int8.o GrB_Vector_apply.o GB_bld__plus_uint32.o GB_AxB__plus_lor_int16.o GB_ew__isgt_int32.o GB_ew__second_fc32.o GB_AxB__land_ge_uint32.o GB_aop__bget_int16.o GB_AxB__any_gt_uint16.o GB_ew__islt_int8.o GB_AxB_dot2_jit.o GB_AxB__any_lt_bool.o GB_bld__second_int64.o GB_unop__isnan_bool_fp32.o GB_AxB__lxor_lt_uint8.o GB_ew__bxor_int64.o GB_aop__first_fp64.o GB_aop__ne_uint16.o GB_AxB__times_firstj_int64.o GB_AxB__min_plus_fp64.o GB_aop__lxor_uint16.o GB_unop__asin_fc32_fc32.o GB_AxB__plus_min_uint16.o GxB_Semiring_add.o GB_AxB__plus_min_int64.o GB_AxB__land_gt_fp64.o GB_unop__bnot_int16_int16.o GB_AxB__min_min_uint32.o GB_AxB__times_rdiv_uint64.o GB_AxB__min_times_fp32.o GB_ew__plus_int8.o GB_reduce_to_scalar_jit.o GB_masker_sparsity.o GB_AxB__max_min_int32.o GxB_Vector_memoryUsage.o GB_AxB__land_eq_uint8.o GB_red__plus_uint32.o GB_unop__identity_fc32_uint16.o GB_unop__identity_fp32_bool.o GB_ew__hypot_fp64.o GB_ew__iseq_uint16.o GB_ew__land_bool.o GB_unop__identity_fc64_bool.o GxB_BinaryOp_fprint.o GB_AxB__plus_plus_int16.o GB_bld__second_int8.o GB_aop__minus_uint8.o GB_aop__iseq_fc64.o GB_unop__ainv_fc64_fc64.o GB_ew__band_uint32.o GB_unop__identity_fp64_uint32.o GB_ewise_slice.o GB_ew__isge_uint64.o GB_red__max_uint8.o GB_sel__nonzombie_fp32.o GrB_Vector_eWiseMult.o GB_ew__minus_fc32.o GB_AxB__eq_le_uint64.o GB_aop__gt_bool.o GB_ew__div_int16.o GB_unop__identity_int32_int16.o GB_aop__le_uint16.o GB_AxB__times_times_fp64.o GB_red__max_int32.o GxB_Matrix_Iterator.o GB_AxB__plus_times_uint8.o GrB_UnaryOp_free.o GB_ew__lxor_fp32.o GxB_Matrix_pack_BitmapR.o GB_unop__bnot_uint16_uint16.o GB_red__max_fp64.o GB_aop__ne_int64.o GB_unop__cbrt_fp64_fp64.o GB_AxB__times_rminus_int32.o GB_AxB__eq_lt_bool.o GB_bld__first_bool.o GB_ew__first_bool.o GB_aop__isne_fc32.o GB_unop__erfc_fp64_fp64.o GB_AxB__max_max_uint32.o GB_AxB__min_times_int8.o GB_aop__rdiv_fp32.o GB_AxB__times_firsti1_int64.o GB_AxB__any_min_uint16.o GB_ew__isgt_int8.o GB_unop__identity_fc32_fc32.o GB_AxB__land_ge_uint8.o GB_select_generic_bitmap.o GB_aop__pair_int32.o GB_AxB__min_plus_int32.o GB_ew__islt_int16.o GB_subassign_04.o GB_AxB__eq_lt_int16.o GB_aop__bxnor_int16.o GB_ew__first_uint16.o GB_unop__frexpx_fp64_fp64.o GB_AxB__lor_gt_uint64.o GB_AxB__lxor_eq_int16.o GxB_Matrix_import_FullC.o GB_AxB__lxor_ne_int32.o GB_ew__rminus_uint64.o GB_AxB__any_gt_int64.o GB_aop__first_fc64.o GB_AxB__any_times_int32.o GB_AxB__max_second_fp64.o GB_ew__bset_uint8.o GrB_Monoid_wait.o GB_AxB__lor_ne_int64.o GB_AxB__max_min_int8.o GxB_Vector_serialize.o GB_AxB__any_gt_int16.o GB_red__plus_uint8.o GB_ew__le_fp32.o GB_sel__eq_thunk_uint64.o GB_AxB__min_max_uint32.o GB_concat_full_jit.o GB_aop__min_uint64.o GB_unop__exp2_fp32_fp32.o GB_ew__gt_uint8.o GB_aop__gt_uint32.o GB_AxB__any_lt_uint32.o GB_ew__pow_int16.o GB_AxB__any_ne_uint32.o GB_ew__isge_uint16.o GB_aop__rdiv_int64.o GB_AxB__any_ne_int64.o GB_ew__div_uint64.o GB_ew__band_uint8.o GxB_Monoid_fprint.o GB_AxB__max_times_fp32.o GB_unop__identity_uint8_fp32.o GxB_Matrix_export_BitmapC.o GrB_Vector_removeElement.o GB_colscale.o GB_unop__ainv_fc32_fc32.o GB_AxB__eq_lt_uint32.o GB_aop__bxor_int32.o GB_aop__div_fc32.o GB_select.o GB_AxB__any_second_fp32.o GB_AxB__plus_max_uint32.o GB_unop__identity_uint32_fp64.o GB_aop__lor_int64.o GB_setElement.o GB_ew__min_int64.o GB_AxB__lxor_le_int32.o GxB_Matrix_type_name.o GB_macrofy_output.o GB_AxB__plus_lxor_int64.o GB_sel__gt_thunk_uint16.o GxB_Matrix_export_HyperCSR.o GB_AxB__times_times_fc64.o GB_unop__sqrt_fp64_fp64.o GB_subassign_23.o GB_AxB__any_times_uint8.o GB_AxB__lor_le_int64.o GB_AxB__times_div_fp64.o GB_aop__cmplx_fp64.o GB_ew__islt_uint64.o GB_ew__fmod_fp32.o GB_AxB_saxpy5.o GB_AxB__plus_minus_fp64.o GB_AxB__max_max_uint8.o GB_ew__islt_uint8.o GB_sel__ne_thunk_int16.o GB_unop__identity_uint16_fp32.o GB_AxB__plus_lor_uint32.o GB_AxB_saxbit_generic_first.o GB_AxB__plus_second_fp64.o GB_red__any_int64.o GB_aop__ne_int32.o GB_AxB__any_first_fp64.o GB_aop__bget_uint32.o GB_AxB__any_ne_uint16.o GB_unop__identity_int64_int32.o GB_unop__identity_fp32_uint8.o GB_nnz.o GB_AxB__min_min_uint8.o GB_AxB__plus_max_int16.o GB_AxB__plus_rdiv_uint32.o GB_AxB__bxor_bxnor_uint64.o GB_AxB__lxor_ne_int8.o GB_aop__rminus_uint16.o GB_aop__lxor_fp32.o GB_AxB__bxnor_bxor_uint16.o GB_AxB_saxpy3_sym_hs.o GB_aop__first_int16.o GB_AxB__eq_ne_uint16.o GB_emult_02_jit.o GB_AxB__min_minus_fp64.o GB_ew__bxnor_int16.o GB_AxB__lxor_eq_uint16.o GB_ew__times_uint64.o GB_macrofy_build.o GB_enumify_ewise.o GB_AxB__eq_first_bool.o GB_AxB__eq_ne_fp32.o GB_AxB__min_firstj1_int32.o GB_ew__first_uint8.o GB_aop__pow_fc32.o GB_AxB__band_bor_uint32.o GB_aop__gt_uint8.o GB_AxB__any_lt_uint8.o GB_AxB__max_rdiv_fp64.o GB_AxB__times_first_uint16.o GB_AxB__plus_plus_uint32.o GB_AxB__times_secondj1_int32.o GB_assign.o GB_ew__first_int32.o GB_enumify_sparsity.o GB_subassign_19.o GB_aop__ne_int8.o GB_aop__rdiv_uint32.o GB_AxB__eq_lt_fp32.o GB_aop__lxor_int8.o GB_AxB__eq_lt_uint8.o GB_AxB__eq_eq_int8.o GB_werk_pop.o GB_unop__identity_fp64_fc32.o GB_AxB__any_le_uint16.o GB_AxB__max_plus_fp32.o GB_Pending_realloc.o GB_unop__identity_uint32_uint8.o GB_ew__max_fp64.o GB_AxB__plus_max_uint8.o GB_unop__identity_fc64_uint32.o GB_ew__div_uint32.o GB_aop__isne_fp64.o GB_AxB__max_firsti1_int32.o GB_assign_zombie4.o GB_ew__bshift_uint32.o GB_unop__isfinite_bool_fc32.o GB_ew__rminus_fp32.o GB_AxB__lxor_le_int8.o GB_bld__times_uint8.o GB_unop__identity_bool_uint32.o GB_ew__iseq_int8.o GB_AxB__eq_le_uint16.o GxB_UnaryOp_ztype_name.o GB_malloc_memory.o GB_ew__pow_uint16.o GB_AxB__min_first_uint16.o GB_AxB__max_minus_int64.o GB_check_if_iso.o GB_convert_any_to_hyper.o GB_AxB__times_minus_uint16.o GB_aop__isgt_int64.o GB_AxB__max_first_int16.o GB_unop__isinf_bool_fc64.o GB_AxB__lxor_ge_uint16.o GB_ew__isge_int64.o GB_lz4.o GxB_unpack_HyperHash.o GB_AxB__times_second_uint16.o GB_AxB__plus_minus_fc64.o GB_AxB__max_rminus_int64.o GB_bld__any_fp32.o GB_aop__bget_uint8.o GB_bld__max_uint64.o GB_aop__bxnor_uint16.o GB_AxB__plus_second_fc64.o GB_free_memory.o GB_AxB__times_minus_int32.o GB_red__min_fp64.o GB_aop__bxor_uint32.o GB_AxB__max_div_uint16.o GB_aop__bxnor_int64.o GB_aop__le_int8.o GrB_Vector_select.o GB_AxB__any_lt_int32.o GB_aop__iseq_uint8.o GB_aop__bset_uint64.o GB_AxB__plus_times_int32.o GB_AxB__plus_rdiv_fp64.o GB_aop__first_fc32.o GB_unop__minv_fc64_fc64.o GB_sel__gt_thunk_int32.o GB_serialize_free_blocks.o GB_AxB__any_lt_fp64.o GB_AxB__times_plus_fp64.o GB_bld__first_int64.o GB_ew__eq_fp32.o GB_aop__isle_fp64.o GrB_init.o GB_AxB__any_gt_uint32.o GB_import.o GB_AxB__any_max_int64.o GB_aop__ge_uint16.o GB_bld__lxor_bool.o GB_Vector_check.o GB_unop__identity_int32_int8.o GB_AxB__max_first_uint16.o GB_encodify_build.o GB_ew__plus_fp64.o GB_AxB__plus_plus_uint8.o GB_ew__pow_uint32.o GB_aop__bxor_int8.o GB_AxB__any_ne_int32.o GB_AxB__plus_firsti1_int32.o GB_unop__expm1_fp32_fp32.o GB_AxB__eq_gt_uint32.o GB_aop__fmod_fp64.o GB_sel__gt_thunk_int16.o GB_AxB__any_div_fc32.o GB_AxB_saxpy3_sym_mhs.o GB_AxB__lor_ge_uint8.o GB_aop__rminus_int32.o GrB_getVersion.o GB_ew__land_fp64.o GB_realloc_memory.o GB_ew__bclr_uint32.o GB_aop__times_int32.o GxB_Vector_Option_get.o GB_AxB__land_lt_int64.o GB_unop__identity_int32_uint16.o GB_subassign_22.o GB_unop__bnot_int32_int32.o GB_bld__first_uint8.o GB_AxB__plus_first_int16.o GB_AxB__lxor_eq_int32.o GB_unop__lnot_int16_int16.o GB_aop__times_fp64.o GrB_Matrix_serialize.o GxB_UnaryOp_xtype.o GB_AxB__land_le_uint64.o GB_boolean_rename_op.o GB_export.o GB_aop__isne_fc64.o GB_ew__land_uint32.o GB_ijproperties.o GB_AxB__plus_min_uint8.o GB_ek_slice.o GB_AxB__plus_div_uint16.o GB_aop__pair_uint32.o GB_emult_generic.o GB_unop__identity_fp64_int16.o GB_ew__times_int16.o GB_sel__ne_thunk_uint32.o GB_ew__ge_fp32.o GB_unop__sqrt_fc64_fc64.o GB_ew__lxor_uint32.o GB_entry_check.o GB_AxB__bor_bor_uint64.o GB_AxB__times_div_fc64.o GB_extractTuples.o GB_AxB__any_le_int32.o GB_ew__eq_int64.o GB_subassign_IxJ_slice.o GB_AxB__min_times_int64.o GB_aop__eq_int32.o GB_aop__land_int8.o GB_AxB__plus_div_int64.o GB_unop__identity_fc64_int64.o GB_ew__isgt_fp64.o GB_AxB__min_firsti1_int32.o GB_AxB__times_min_uint64.o GB_AxB__times_rdiv_uint16.o GB_sel__gt_thunk_int8.o GB_encodify_reduce.o GB_unop__bnot_uint32_uint32.o GB_AxB__min_div_uint32.o GB_ew__isle_uint16.o GB_unop__lnot_uint16_uint16.o GrB_Matrix_nvals.o GB_aop__atan2_fp32.o GB_AxB__any_gt_uint8.o GB_AxB__band_band_uint32.o GB_AxB__land_first_bool.o GB_binop_new.o GB_bld__any_uint16.o GB_AxB__lxor_ge_int32.o GB_AxB__any_first_int16.o GB_bitmap_assign_fullM_noaccum.o GB_AxB__times_secondj_int32.o  -o libgraphblas_tcov.so -lm -ldl
[?1h=[?1h=[?1h=[?1h=Building with 'gcc'.
[?1h=[?1h=[?1h=[?1h=[?1h=MEX completed successfully.
[?1h=[?1h=[?1h=Building with 'gcc'.
[?1h=[?1h=[?1h=[?1h=MEX completed successfully.

Compiling GraphBLAS tests
please wait [[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=.[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=[?1h=]
usage:
[nthreads format hyper_switch name version date about license compiledate compiletime api api_about chunk bitmap_switch] = GB_mex_init

JIT init 198: 4
bitmap_switch [0] = 0.04 for vectors and matrices with 1 row or column
bitmap_switch [1] = 0.05 for matrices with min dimension 2 to 2
bitmap_switch [2] = 0.06 for matrices with min dimension 3 to 4
bitmap_switch [3] = 0.08 for matrices with min dimension 5 to 8
bitmap_switch [4] = 0.1 for matrices with min dimension 9 to 16
bitmap_switch [5] = 0.2 for matrices with min dimension 17 to 32
bitmap_switch [6] = 0.3 for matrices with min dimension 33 to 64
bitmap_switch [7] = 0.4 for matrices with min dimension > 64

JIT init 198: 4
jit: -4

JIT init 198: 4
jit: -4

JIT init 198: 4

======== test: test247     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) 
   0.000123 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) 
   1.69e-05 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) 
   3.6e-05 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 
   0.00162 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 
   0.00114 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 (nthreads 16 fine hash: 64) 
   0.00224 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 (nthreads 16 fine hash: 64) 
   0.00227 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 (nthreads 16 fine hash: 64) (sparse saxpy) 
   0.00634 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 (nthreads 16 fine hash: 64) (sparse saxpy) 
   0.00598 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 (nthreads 16 fine hash: 64) (sparse saxpy) 
   0.00148 sec ]
 [ GrB_Matrix_wait (wait:matrix 0 zombies, 0 pending, jumbled) 
   5.98e-05 sec ]
 [ GxB_set 
   5.96e-06 sec ]
err: 0

test247: all tests passed
27-Apr 20:51:42 test247         0.2 sec   162: 21357 of 21586   1.1%   682.83/s [malloc] [cover]
jit: 0

======== test: test247     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) 
   4.91e-05 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) 
   1.29e-05 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) 
   2.19e-05 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 
   0.00231 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 
   0.00134 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 (nthreads 16 fine hash: 64) 
   0.00567 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 (nthreads 16 fine hash: 64) 
   0.00333 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 (nthreads 16 fine hash: 64) (sparse saxpy) 
   0.00968 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 (nthreads 16 fine hash: 64) (sparse saxpy) 
   0.00405 sec ]
 [ GrB_mxm C=A*B, saxpy (S = S*S, anz: 3285 bnz: 9952) axbwork 10020 (nthreads 16 fine hash: 64) (sparse saxpy) 
   0.00138 sec ]
 [ GrB_Matrix_wait (wait:matrix 0 zombies, 0 pending, jumbled) 
   5.29e-05 sec ]
 [ GxB_set 
   2.15e-06 sec ]
err: 0

test247: all tests passed
27-Apr 20:51:42 test247         0.0 sec     1: 21355 of 21586   1.1%    21.21/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test246     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
..............................................................................................................................................................................................................................................................................
test246: all tests passed
27-Apr 20:51:53 test246        11.6 sec   157: 21198 of 21586   1.8%    13.59/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test01      [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

  10x10 GraphBLAS int32_t matrix, hypersparse by col
  A before set, no entries, memory: 240 bytes


  10x10 GraphBLAS int32_t matrix, hypersparse by col
  A after set, no entries, memory: 4.3 KB
  iso value:   314159
  pending tuples: 1 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  int32_t size: 4
    row: 0 col: 0 
  pending operator: implicit 2nd


  10x10 GraphBLAS int32_t matrix, hypersparse by col
  A after remove, 1 entry, memory: 256 bytes
  iso value:   314159
  pending tuples: 0 max pending: 0 zombies: 1

    (0,0) zombie


  10x10 GraphBLAS int32_t matrix, hypersparse by col
  A after set again, no entries, memory: 5.4 KB
  pending tuples: 1 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  int32_t size: 4
    row: 0 col: 0   99099
  pending operator: implicit 2nd


  10x1 GraphBLAS int32_t vector, sparse by col
  victor before set, no entries, memory: 232 bytes


  10x1 GraphBLAS int32_t vector, sparse by col
  victor after set, no entries, memory: 2.3 KB
  iso value:   44
  pending tuples: 1 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  int32_t size: 4
    row: 0 col: 0 
  pending operator: implicit 2nd


  10x1 GraphBLAS int32_t vector, sparse by col
  victor remove set, 1 entry, memory: 248 bytes
  iso value:   44
  pending tuples: 0 max pending: 0 zombies: 1

    (0,0) zombie


  10x1 GraphBLAS int32_t vector, sparse by col
  victor after set again, no entries, memory: 3.3 KB
  pending tuples: 1 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  int32_t size: 4
    row: 0 col: 0   88
  pending operator: implicit 2nd


  1x1 GraphBLAS int32_t scalar, sparse by col
  scalar before set, no entries, memory: 232 bytes


  1x1 GraphBLAS int32_t scalar, full by col
  scalar after set, 1 entry, memory: 224 bytes
  iso value:   404

    (0,0)   404

  1x1 GraphBLAS int32_t scalar, full by col
  scalar after extract, 1 entry, memory: 224 bytes
  iso value:   404

    (0,0)   404

  1x1 GraphBLAS int32_t scalar, bitmap by col
  scalar after remove, no entries, memory: 232 bytes
  iso value:   404


  1x1 GraphBLAS int32_t scalar, bitmap by col
  scalar after wait, 1 entry, memory: 232 bytes

    (0,0)   707


  1x1 GraphBLAS int32_t scalar, sparse by col
  sparsity control: sparse only
  scalar with zombie, 1 entry, memory: 248 bytes
  pending tuples: 0 max pending: 0 zombies: 1

    (0,0) zombie


  1x1 GraphBLAS int32_t scalar, sparse by col
  sparsity control: sparse only
  scalar after extract, no entries, memory: 248 bytes

expected error: 
Slice:  0 0 0 0 0 0 0 0 0 0 10

  10x10 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  valid matrix, 100 entries, memory: 1.1 KB
  iso value:   3

    (0,0)   3
    (1,0)   3
    (2,0)   3
    (3,0)   3
    (4,0)   3
    (5,0)   3
    (6,0)   3
    (7,0)   3
    (8,0)   3
    (9,0)   3
    (0,1)   3
    (1,1)   3
    (2,1)   3
    (3,1)   3
    (4,1)   3
    (5,1)   3
    (6,1)   3
    (7,1)   3
    (8,1)   3
    (9,1)   3
    (0,2)   3
    (1,2)   3
    (2,2)   3
    (3,2)   3
    (4,2)   3
    (5,2)   3
    (6,2)   3
    (7,2)   3
    (8,2)   3
    ...

  10x10 GraphBLAS int32_t matrix invalid structure

  10x10 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: 999 invalid

  10x10 GraphBLAS int32_t matrix, full (jumbled) by col
  full matrix cannot be jumbled, 100 entries, memory: 224 bytes
  iso value:   3
  full matrix cannot be jumbled

  10x10 GraphBLAS int32_t matrix, full by col
  invalid full matrix structure

  10x10 GraphBLAS int32_t matrix, full by col
  full matrix cannot have zombies, 100 entries, memory: 224 bytes
  iso value:   3
  pending tuples: 0 max pending: 0 zombies: 1
  full matrix cannot have zombies

  10x10 GraphBLAS int32_t matrix, full by col
  full matrix cannot have pending tuples, 100 entries, memory: 5.3 KB
  iso value:   3
  pending tuples: 0 max pending: 256 zombies: 0
  full matrix cannot have pending tuples

  10x10 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  invalid bitmap matrix structure

  10x10 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  invalid bitmap, no entries, memory: 716 bytes
  invalid bitmap count: 1 exist but A->nvals = 0

  10x10 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  valid matrix, 1 entry, memory: 324 bytes
  iso value:   12345

    (0,0)   12345

  10x10 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  invalid bitmap, 1 entry, memory: 324 bytes
  iso value:   12345

    invalid bitmap 3

  10x10 GraphBLAS int32_t matrix, hypersparse by col
  invalid nvec_nonempty, no entries, memory: 240 bytes
  invalid count of non-empty vectors

  10x10 GraphBLAS int32_t matrix, hypersparse by col
  valid matrix with 1 pending, no entries, memory: 4.3 KB
  iso value:   12345
  pending tuples: 1 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  int32_t size: 4
    row: 0 col: 0 
  pending operator: implicit 2nd

  10x10 GraphBLAS int32_t matrix, hypersparse by col
  invalid pending type, no entries, memory: 4.3 KB
  iso value:   12345
  pending tuples: 1 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  int32_t size: 4
  matrix has an invalid Pending->type
 [ GrB_extract (C dense) 
   6.48e-05 sec ]

  10x0 GraphBLAS int32_t matrix, full by col
  C = A (:,1:0:1), no entries, memory: 224 bytes

 [ GrB_extract (C dense) 
   1.79e-05 sec ]

  0x10 GraphBLAS int32_t matrix, full by col
  C = A (1:0:1,:), no entries, memory: 224 bytes

expected error: GraphBLAS error: GrB_EMPTY_OBJECT
function: GrB_Matrix_apply_BinaryOp2nd_Scalar (C, M, accum, op, A, y, desc)
Scalar must contain an entry

    GraphBLAS Descriptor: descriptor 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: descriptor 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = Gustavson 

    GraphBLAS Descriptor: descriptor 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = saxpy     

    GraphBLAS Descriptor: invalid 
    d.out      = default   
    d.mask     = replace    (invalid value for this field)
    d.in0      = default   
    d.in1      = default   
    d.axb      = saxpy     
    Descriptor field set to an invalid value

  10x10 GraphBLAS int32_t matrix, hypersparse by col
  empty, no entries, memory: 248 bytes

expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_build_INT32 (C, I, J, X, nvals, dup)
Positional op z=firsti(x,y) not supported as dup op

vector bitmap switch: 0.04

error expected: GraphBLAS error: GrB_NOT_IMPLEMENTED
function: GrB_Matrix_reduce_BinaryOp (w, M, accum, op, A, desc)
Invalid binary operator: z=firsti(x,y) has no equivalent monoid


  3x3 GraphBLAS wild matrix, sparse by col
  sparsity control: sparse only
  wild matrix, 9 entries, memory: 384 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]

  3x3 GraphBLAS wild matrix, sparse (jumbled) by col
  sparsity control: sparse only
  wild matrix jumbled, 9 entries, memory: 384 bytes
  iso value: [user-defined value]

    (1,0) [user-defined value]
    (0,0) [user-defined value]
    (2,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]

  3x3 GraphBLAS wild matrix, sparse by col
  sparsity control: sparse only
  wild matrix unjumbled, 9 entries, memory: 384 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]

  1152921504606846976x1152921504606846976 GraphBLAS float matrix, hypersparse by col
  huge matrix, 1 entry, memory: 528 bytes
  iso value:    3

    (0,0)    3

 ======================== split/concat tests:  [ GxB_set 
   9.54e-07 sec ]
 [ GrB_assign (C iso assign) (pending: 0) Method 21: (C full) = scalar (full to sparse) (sparse to hyper) 
   3.48e-05 sec ]
 [ GxB_Matrix_split (iso split) (sparse/hyper split) (iso sparse split) (iso sparse split) (iso sparse split) (iso sparse split) 
   7.8e-05 sec ]

  5x12 GraphBLAS wild matrix, hypersparse by col
  sparsity control: hypersparse only
  Tiles [0], 60 entries, memory: 960 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    (4,5) [user-defined value]
    (0,6) [user-defined value]
    (1,6) [user-defined value]
    (2,6) [user-defined value]
    (3,6) [user-defined value]
    (4,6) [user-defined value]
    (0,7) [user-defined value]
    (1,7) [user-defined value]
    (2,7) [user-defined value]
    (3,7) [user-defined value]
    (4,7) [user-defined value]
    (0,8) [user-defined value]
    (1,8) [user-defined value]
    (2,8) [user-defined value]
    (3,8) [user-defined value]
    (4,8) [user-defined value]
    (0,9) [user-defined value]
    (1,9) [user-defined value]
    (2,9) [user-defined value]
    (3,9) [user-defined value]
    (4,9) [user-defined value]
    (0,10) [user-defined value]
    (1,10) [user-defined value]
    (2,10) [user-defined value]
    (3,10) [user-defined value]
    (4,10) [user-defined value]
    (0,11) [user-defined value]
    (1,11) [user-defined value]
    (2,11) [user-defined value]
    (3,11) [user-defined value]
    (4,11) [user-defined value]


  5x8 GraphBLAS wild matrix, hypersparse by col
  sparsity control: hypersparse only
  Tiles [1], 40 entries, memory: 736 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    (4,5) [user-defined value]
    (0,6) [user-defined value]
    (1,6) [user-defined value]
    (2,6) [user-defined value]
    (3,6) [user-defined value]
    (4,6) [user-defined value]
    (0,7) [user-defined value]
    (1,7) [user-defined value]
    (2,7) [user-defined value]
    (3,7) [user-defined value]
    (4,7) [user-defined value]


  15x12 GraphBLAS wild matrix, hypersparse by col
  sparsity control: hypersparse only
  Tiles [2], 180 entries, memory: 1.9 KB
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (5,0) [user-defined value]
    (6,0) [user-defined value]
    (7,0) [user-defined value]
    (8,0) [user-defined value]
    (9,0) [user-defined value]
    (10,0) [user-defined value]
    (11,0) [user-defined value]
    (12,0) [user-defined value]
    (13,0) [user-defined value]
    (14,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (5,1) [user-defined value]
    (6,1) [user-defined value]
    (7,1) [user-defined value]
    (8,1) [user-defined value]
    (9,1) [user-defined value]
    (10,1) [user-defined value]
    (11,1) [user-defined value]
    (12,1) [user-defined value]
    (13,1) [user-defined value]
    (14,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (5,2) [user-defined value]
    (6,2) [user-defined value]
    (7,2) [user-defined value]
    (8,2) [user-defined value]
    (9,2) [user-defined value]
    (10,2) [user-defined value]
    (11,2) [user-defined value]
    (12,2) [user-defined value]
    (13,2) [user-defined value]
    (14,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (5,3) [user-defined value]
    (6,3) [user-defined value]
    (7,3) [user-defined value]
    (8,3) [user-defined value]
    (9,3) [user-defined value]
    (10,3) [user-defined value]
    (11,3) [user-defined value]
    (12,3) [user-defined value]
    (13,3) [user-defined value]
    (14,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (5,4) [user-defined value]
    (6,4) [user-defined value]
    (7,4) [user-defined value]
    (8,4) [user-defined value]
    (9,4) [user-defined value]
    (10,4) [user-defined value]
    (11,4) [user-defined value]
    (12,4) [user-defined value]
    (13,4) [user-defined value]
    (14,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    (4,5) [user-defined value]
    (5,5) [user-defined value]
    (6,5) [user-defined value]
    (7,5) [user-defined value]
    (8,5) [user-defined value]
    (9,5) [user-defined value]
    (10,5) [user-defined value]
    (11,5) [user-defined value]
    (12,5) [user-defined value]
    (13,5) [user-defined value]
    (14,5) [user-defined value]
    (0,6) [user-defined value]
    (1,6) [user-defined value]
    (2,6) [user-defined value]
    (3,6) [user-defined value]
    (4,6) [user-defined value]
    (5,6) [user-defined value]
    (6,6) [user-defined value]
    (7,6) [user-defined value]
    (8,6) [user-defined value]
    (9,6) [user-defined value]
    (10,6) [user-defined value]
    (11,6) [user-defined value]
    (12,6) [user-defined value]
    (13,6) [user-defined value]
    (14,6) [user-defined value]
    (0,7) [user-defined value]
    (1,7) [user-defined value]
    (2,7) [user-defined value]
    (3,7) [user-defined value]
    (4,7) [user-defined value]
    (5,7) [user-defined value]
    (6,7) [user-defined value]
    (7,7) [user-defined value]
    (8,7) [user-defined value]
    (9,7) [user-defined value]
    (10,7) [user-defined value]
    (11,7) [user-defined value]
    (12,7) [user-defined value]
    (13,7) [user-defined value]
    (14,7) [user-defined value]
    (0,8) [user-defined value]
    (1,8) [user-defined value]
    (2,8) [user-defined value]
    (3,8) [user-defined value]
    (4,8) [user-defined value]
    (5,8) [user-defined value]
    (6,8) [user-defined value]
    (7,8) [user-defined value]
    (8,8) [user-defined value]
    (9,8) [user-defined value]
    (10,8) [user-defined value]
    (11,8) [user-defined value]
    (12,8) [user-defined value]
    (13,8) [user-defined value]
    (14,8) [user-defined value]
    (0,9) [user-defined value]
    (1,9) [user-defined value]
    (2,9) [user-defined value]
    (3,9) [user-defined value]
    (4,9) [user-defined value]
    (5,9) [user-defined value]
    (6,9) [user-defined value]
    (7,9) [user-defined value]
    (8,9) [user-defined value]
    (9,9) [user-defined value]
    (10,9) [user-defined value]
    (11,9) [user-defined value]
    (12,9) [user-defined value]
    (13,9) [user-defined value]
    (14,9) [user-defined value]
    (0,10) [user-defined value]
    (1,10) [user-defined value]
    (2,10) [user-defined value]
    (3,10) [user-defined value]
    (4,10) [user-defined value]
    (5,10) [user-defined value]
    (6,10) [user-defined value]
    (7,10) [user-defined value]
    (8,10) [user-defined value]
    (9,10) [user-defined value]
    (10,10) [user-defined value]
    (11,10) [user-defined value]
    (12,10) [user-defined value]
    (13,10) [user-defined value]
    (14,10) [user-defined value]
    (0,11) [user-defined value]
    (1,11) [user-defined value]
    (2,11) [user-defined value]
    (3,11) [user-defined value]
    (4,11) [user-defined value]
    (5,11) [user-defined value]
    (6,11) [user-defined value]
    (7,11) [user-defined value]
    (8,11) [user-defined value]
    (9,11) [user-defined value]
    (10,11) [user-defined value]
    (11,11) [user-defined value]
    (12,11) [user-defined value]
    (13,11) [user-defined value]
    (14,11) [user-defined value]


  15x8 GraphBLAS wild matrix, hypersparse by col
  sparsity control: hypersparse only
  Tiles [3], 120 entries, memory: 1.3 KB
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (5,0) [user-defined value]
    (6,0) [user-defined value]
    (7,0) [user-defined value]
    (8,0) [user-defined value]
    (9,0) [user-defined value]
    (10,0) [user-defined value]
    (11,0) [user-defined value]
    (12,0) [user-defined value]
    (13,0) [user-defined value]
    (14,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (5,1) [user-defined value]
    (6,1) [user-defined value]
    (7,1) [user-defined value]
    (8,1) [user-defined value]
    (9,1) [user-defined value]
    (10,1) [user-defined value]
    (11,1) [user-defined value]
    (12,1) [user-defined value]
    (13,1) [user-defined value]
    (14,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (5,2) [user-defined value]
    (6,2) [user-defined value]
    (7,2) [user-defined value]
    (8,2) [user-defined value]
    (9,2) [user-defined value]
    (10,2) [user-defined value]
    (11,2) [user-defined value]
    (12,2) [user-defined value]
    (13,2) [user-defined value]
    (14,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (5,3) [user-defined value]
    (6,3) [user-defined value]
    (7,3) [user-defined value]
    (8,3) [user-defined value]
    (9,3) [user-defined value]
    (10,3) [user-defined value]
    (11,3) [user-defined value]
    (12,3) [user-defined value]
    (13,3) [user-defined value]
    (14,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (5,4) [user-defined value]
    (6,4) [user-defined value]
    (7,4) [user-defined value]
    (8,4) [user-defined value]
    (9,4) [user-defined value]
    (10,4) [user-defined value]
    (11,4) [user-defined value]
    (12,4) [user-defined value]
    (13,4) [user-defined value]
    (14,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    (4,5) [user-defined value]
    (5,5) [user-defined value]
    (6,5) [user-defined value]
    (7,5) [user-defined value]
    (8,5) [user-defined value]
    (9,5) [user-defined value]
    (10,5) [user-defined value]
    (11,5) [user-defined value]
    (12,5) [user-defined value]
    (13,5) [user-defined value]
    (14,5) [user-defined value]
    (0,6) [user-defined value]
    (1,6) [user-defined value]
    (2,6) [user-defined value]
    (3,6) [user-defined value]
    (4,6) [user-defined value]
    (5,6) [user-defined value]
    (6,6) [user-defined value]
    (7,6) [user-defined value]
    (8,6) [user-defined value]
    (9,6) [user-defined value]
    (10,6) [user-defined value]
    (11,6) [user-defined value]
    (12,6) [user-defined value]
    (13,6) [user-defined value]
    (14,6) [user-defined value]
    (0,7) [user-defined value]
    (1,7) [user-defined value]
    (2,7) [user-defined value]
    (3,7) [user-defined value]
    (4,7) [user-defined value]
    (5,7) [user-defined value]
    (6,7) [user-defined value]
    (7,7) [user-defined value]
    (8,7) [user-defined value]
    (9,7) [user-defined value]
    (10,7) [user-defined value]
    (11,7) [user-defined value]
    (12,7) [user-defined value]
    (13,7) [user-defined value]
    (14,7) [user-defined value]

 [ GxB_set 
   9.54e-07 sec ]
 [ GxB_Matrix_concat (iso bitmap concat) (bitmap to sparse) (sparse to hyper) 
   6.1e-05 sec ]
 [ GxB_Matrix_concat 
   4.05e-06 sec ]
expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{0,0} of type [wild]
cannot be typecast to output of type [float]

 [ GxB_Matrix_concat 
   3.1e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
C is 100-by-100 but Tiles{:,:} is 20-by-20

 [ GxB_Matrix_concat 
   2.86e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 15-by-100; its column
dimension must match all other matrices Tiles{:,1}, which is 8

 [ GxB_Matrix_concat 
   2.86e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 100-by-8; its row
dimension must match all other matrices Tiles{1,:}, which is 15

 [ GxB_Matrix_concat 
   0 sec ]
 [ GxB_set 
   9.54e-07 sec ]
 [ GxB_Matrix_split (iso wait:A 0 zombies, 20 pending) (iso build) (iso split) (sparse/hyper split) (iso sparse split) (iso sparse split) (iso sparse split) (iso sparse split) 
   8.8e-05 sec ]

  5x12 GraphBLAS wild matrix, hypersparse by col
  sparsity control: hypersparse only
  Tiles [0], 5 entries, memory: 408 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,1) [user-defined value]
    (2,2) [user-defined value]
    (3,3) [user-defined value]
    (4,4) [user-defined value]


  5x8 GraphBLAS wild matrix, hypersparse by col
  sparsity control: hypersparse only
  Tiles [1], no entries, memory: 312 bytes
  iso value: [user-defined value]


  15x12 GraphBLAS wild matrix, hypersparse by col
  sparsity control: hypersparse only
  Tiles [2], 7 entries, memory: 456 bytes
  iso value: [user-defined value]

    (0,5) [user-defined value]
    (1,6) [user-defined value]
    (2,7) [user-defined value]
    (3,8) [user-defined value]
    (4,9) [user-defined value]
    (5,10) [user-defined value]
    (6,11) [user-defined value]


  15x8 GraphBLAS wild matrix, hypersparse by col
  sparsity control: hypersparse only
  Tiles [3], 8 entries, memory: 480 bytes
  iso value: [user-defined value]

    (7,0) [user-defined value]
    (8,1) [user-defined value]
    (9,2) [user-defined value]
    (10,3) [user-defined value]
    (11,4) [user-defined value]
    (12,5) [user-defined value]
    (13,6) [user-defined value]
    (14,7) [user-defined value]

 [ GxB_set 
   0 sec ]
 [ GxB_Matrix_concat (iso sparse concat) (sparse to hyper) 
   3.81e-05 sec ]
 [ GxB_Matrix_concat 
   3.1e-06 sec ]
expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{0,0} of type [wild]
cannot be typecast to output of type [float]

 [ GxB_Matrix_concat 
   1.91e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
C is 100-by-100 but Tiles{:,:} is 20-by-20

 [ GxB_Matrix_concat 
   2.86e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 15-by-100; its column
dimension must match all other matrices Tiles{:,1}, which is 8

 [ GxB_Matrix_concat 
   1.91e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 100-by-8; its row
dimension must match all other matrices Tiles{1,:}, which is 15

 [ GxB_Matrix_concat 
   0 sec ]
 [ GxB_set (hyper to sparse) 
   7.15e-06 sec ]
 [ GrB_assign (C iso assign) (pending: 0) Method 21: (C full) = scalar (full to sparse) 
   2.41e-05 sec ]
 [ GxB_Matrix_split (iso split) (sparse/hyper split) (iso sparse split) (iso sparse split) (iso sparse split) (iso sparse split) 
   6.39e-05 sec ]

  5x12 GraphBLAS wild matrix, sparse by col
  sparsity control: sparse only
  Tiles [0], 60 entries, memory: 864 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    (4,5) [user-defined value]
    (0,6) [user-defined value]
    (1,6) [user-defined value]
    (2,6) [user-defined value]
    (3,6) [user-defined value]
    (4,6) [user-defined value]
    (0,7) [user-defined value]
    (1,7) [user-defined value]
    (2,7) [user-defined value]
    (3,7) [user-defined value]
    (4,7) [user-defined value]
    (0,8) [user-defined value]
    (1,8) [user-defined value]
    (2,8) [user-defined value]
    (3,8) [user-defined value]
    (4,8) [user-defined value]
    (0,9) [user-defined value]
    (1,9) [user-defined value]
    (2,9) [user-defined value]
    (3,9) [user-defined value]
    (4,9) [user-defined value]
    (0,10) [user-defined value]
    (1,10) [user-defined value]
    (2,10) [user-defined value]
    (3,10) [user-defined value]
    (4,10) [user-defined value]
    (0,11) [user-defined value]
    (1,11) [user-defined value]
    (2,11) [user-defined value]
    (3,11) [user-defined value]
    (4,11) [user-defined value]


  5x8 GraphBLAS wild matrix, sparse by col
  sparsity control: sparse only
  Tiles [1], 40 entries, memory: 672 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    (4,5) [user-defined value]
    (0,6) [user-defined value]
    (1,6) [user-defined value]
    (2,6) [user-defined value]
    (3,6) [user-defined value]
    (4,6) [user-defined value]
    (0,7) [user-defined value]
    (1,7) [user-defined value]
    (2,7) [user-defined value]
    (3,7) [user-defined value]
    (4,7) [user-defined value]


  15x12 GraphBLAS wild matrix, sparse by col
  sparsity control: sparse only
  Tiles [2], 180 entries, memory: 1.8 KB
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (5,0) [user-defined value]
    (6,0) [user-defined value]
    (7,0) [user-defined value]
    (8,0) [user-defined value]
    (9,0) [user-defined value]
    (10,0) [user-defined value]
    (11,0) [user-defined value]
    (12,0) [user-defined value]
    (13,0) [user-defined value]
    (14,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (5,1) [user-defined value]
    (6,1) [user-defined value]
    (7,1) [user-defined value]
    (8,1) [user-defined value]
    (9,1) [user-defined value]
    (10,1) [user-defined value]
    (11,1) [user-defined value]
    (12,1) [user-defined value]
    (13,1) [user-defined value]
    (14,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (5,2) [user-defined value]
    (6,2) [user-defined value]
    (7,2) [user-defined value]
    (8,2) [user-defined value]
    (9,2) [user-defined value]
    (10,2) [user-defined value]
    (11,2) [user-defined value]
    (12,2) [user-defined value]
    (13,2) [user-defined value]
    (14,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (5,3) [user-defined value]
    (6,3) [user-defined value]
    (7,3) [user-defined value]
    (8,3) [user-defined value]
    (9,3) [user-defined value]
    (10,3) [user-defined value]
    (11,3) [user-defined value]
    (12,3) [user-defined value]
    (13,3) [user-defined value]
    (14,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (5,4) [user-defined value]
    (6,4) [user-defined value]
    (7,4) [user-defined value]
    (8,4) [user-defined value]
    (9,4) [user-defined value]
    (10,4) [user-defined value]
    (11,4) [user-defined value]
    (12,4) [user-defined value]
    (13,4) [user-defined value]
    (14,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    (4,5) [user-defined value]
    (5,5) [user-defined value]
    (6,5) [user-defined value]
    (7,5) [user-defined value]
    (8,5) [user-defined value]
    (9,5) [user-defined value]
    (10,5) [user-defined value]
    (11,5) [user-defined value]
    (12,5) [user-defined value]
    (13,5) [user-defined value]
    (14,5) [user-defined value]
    (0,6) [user-defined value]
    (1,6) [user-defined value]
    (2,6) [user-defined value]
    (3,6) [user-defined value]
    (4,6) [user-defined value]
    (5,6) [user-defined value]
    (6,6) [user-defined value]
    (7,6) [user-defined value]
    (8,6) [user-defined value]
    (9,6) [user-defined value]
    (10,6) [user-defined value]
    (11,6) [user-defined value]
    (12,6) [user-defined value]
    (13,6) [user-defined value]
    (14,6) [user-defined value]
    (0,7) [user-defined value]
    (1,7) [user-defined value]
    (2,7) [user-defined value]
    (3,7) [user-defined value]
    (4,7) [user-defined value]
    (5,7) [user-defined value]
    (6,7) [user-defined value]
    (7,7) [user-defined value]
    (8,7) [user-defined value]
    (9,7) [user-defined value]
    (10,7) [user-defined value]
    (11,7) [user-defined value]
    (12,7) [user-defined value]
    (13,7) [user-defined value]
    (14,7) [user-defined value]
    (0,8) [user-defined value]
    (1,8) [user-defined value]
    (2,8) [user-defined value]
    (3,8) [user-defined value]
    (4,8) [user-defined value]
    (5,8) [user-defined value]
    (6,8) [user-defined value]
    (7,8) [user-defined value]
    (8,8) [user-defined value]
    (9,8) [user-defined value]
    (10,8) [user-defined value]
    (11,8) [user-defined value]
    (12,8) [user-defined value]
    (13,8) [user-defined value]
    (14,8) [user-defined value]
    (0,9) [user-defined value]
    (1,9) [user-defined value]
    (2,9) [user-defined value]
    (3,9) [user-defined value]
    (4,9) [user-defined value]
    (5,9) [user-defined value]
    (6,9) [user-defined value]
    (7,9) [user-defined value]
    (8,9) [user-defined value]
    (9,9) [user-defined value]
    (10,9) [user-defined value]
    (11,9) [user-defined value]
    (12,9) [user-defined value]
    (13,9) [user-defined value]
    (14,9) [user-defined value]
    (0,10) [user-defined value]
    (1,10) [user-defined value]
    (2,10) [user-defined value]
    (3,10) [user-defined value]
    (4,10) [user-defined value]
    (5,10) [user-defined value]
    (6,10) [user-defined value]
    (7,10) [user-defined value]
    (8,10) [user-defined value]
    (9,10) [user-defined value]
    (10,10) [user-defined value]
    (11,10) [user-defined value]
    (12,10) [user-defined value]
    (13,10) [user-defined value]
    (14,10) [user-defined value]
    (0,11) [user-defined value]
    (1,11) [user-defined value]
    (2,11) [user-defined value]
    (3,11) [user-defined value]
    (4,11) [user-defined value]
    (5,11) [user-defined value]
    (6,11) [user-defined value]
    (7,11) [user-defined value]
    (8,11) [user-defined value]
    (9,11) [user-defined value]
    (10,11) [user-defined value]
    (11,11) [user-defined value]
    (12,11) [user-defined value]
    (13,11) [user-defined value]
    (14,11) [user-defined value]


  15x8 GraphBLAS wild matrix, sparse by col
  sparsity control: sparse only
  Tiles [3], 120 entries, memory: 1.3 KB
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (5,0) [user-defined value]
    (6,0) [user-defined value]
    (7,0) [user-defined value]
    (8,0) [user-defined value]
    (9,0) [user-defined value]
    (10,0) [user-defined value]
    (11,0) [user-defined value]
    (12,0) [user-defined value]
    (13,0) [user-defined value]
    (14,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (5,1) [user-defined value]
    (6,1) [user-defined value]
    (7,1) [user-defined value]
    (8,1) [user-defined value]
    (9,1) [user-defined value]
    (10,1) [user-defined value]
    (11,1) [user-defined value]
    (12,1) [user-defined value]
    (13,1) [user-defined value]
    (14,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (5,2) [user-defined value]
    (6,2) [user-defined value]
    (7,2) [user-defined value]
    (8,2) [user-defined value]
    (9,2) [user-defined value]
    (10,2) [user-defined value]
    (11,2) [user-defined value]
    (12,2) [user-defined value]
    (13,2) [user-defined value]
    (14,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (5,3) [user-defined value]
    (6,3) [user-defined value]
    (7,3) [user-defined value]
    (8,3) [user-defined value]
    (9,3) [user-defined value]
    (10,3) [user-defined value]
    (11,3) [user-defined value]
    (12,3) [user-defined value]
    (13,3) [user-defined value]
    (14,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (5,4) [user-defined value]
    (6,4) [user-defined value]
    (7,4) [user-defined value]
    (8,4) [user-defined value]
    (9,4) [user-defined value]
    (10,4) [user-defined value]
    (11,4) [user-defined value]
    (12,4) [user-defined value]
    (13,4) [user-defined value]
    (14,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    (4,5) [user-defined value]
    (5,5) [user-defined value]
    (6,5) [user-defined value]
    (7,5) [user-defined value]
    (8,5) [user-defined value]
    (9,5) [user-defined value]
    (10,5) [user-defined value]
    (11,5) [user-defined value]
    (12,5) [user-defined value]
    (13,5) [user-defined value]
    (14,5) [user-defined value]
    (0,6) [user-defined value]
    (1,6) [user-defined value]
    (2,6) [user-defined value]
    (3,6) [user-defined value]
    (4,6) [user-defined value]
    (5,6) [user-defined value]
    (6,6) [user-defined value]
    (7,6) [user-defined value]
    (8,6) [user-defined value]
    (9,6) [user-defined value]
    (10,6) [user-defined value]
    (11,6) [user-defined value]
    (12,6) [user-defined value]
    (13,6) [user-defined value]
    (14,6) [user-defined value]
    (0,7) [user-defined value]
    (1,7) [user-defined value]
    (2,7) [user-defined value]
    (3,7) [user-defined value]
    (4,7) [user-defined value]
    (5,7) [user-defined value]
    (6,7) [user-defined value]
    (7,7) [user-defined value]
    (8,7) [user-defined value]
    (9,7) [user-defined value]
    (10,7) [user-defined value]
    (11,7) [user-defined value]
    (12,7) [user-defined value]
    (13,7) [user-defined value]
    (14,7) [user-defined value]

 [ GxB_set (hyper to sparse) 
   7.87e-06 sec ]
 [ GxB_Matrix_concat (iso bitmap concat) (bitmap to sparse) 
   3.19e-05 sec ]
 [ GxB_Matrix_concat 
   3.1e-06 sec ]
expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{0,0} of type [wild]
cannot be typecast to output of type [float]

 [ GxB_Matrix_concat 
   3.1e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
C is 100-by-100 but Tiles{:,:} is 20-by-20

 [ GxB_Matrix_concat 
   3.1e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 15-by-100; its column
dimension must match all other matrices Tiles{:,1}, which is 8

 [ GxB_Matrix_concat 
   3.1e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 100-by-8; its row
dimension must match all other matrices Tiles{1,:}, which is 15

 [ GxB_Matrix_concat 
   0 sec ]
 [ GxB_set (hyper to sparse) 
   6.91e-06 sec ]
 [ GxB_Matrix_split (iso wait:A 0 zombies, 20 pending) (iso build) (hyper to sparse) (iso split) (sparse/hyper split) (iso sparse split) (iso sparse split) (iso sparse split) (iso sparse split) 
   7.08e-05 sec ]

  5x12 GraphBLAS wild matrix, sparse by col
  sparsity control: sparse only
  Tiles [0], 5 entries, memory: 424 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,1) [user-defined value]
    (2,2) [user-defined value]
    (3,3) [user-defined value]
    (4,4) [user-defined value]


  5x8 GraphBLAS wild matrix, sparse by col
  sparsity control: sparse only
  Tiles [1], no entries, memory: 360 bytes
  iso value: [user-defined value]


  15x12 GraphBLAS wild matrix, sparse by col
  sparsity control: sparse only
  Tiles [2], 7 entries, memory: 440 bytes
  iso value: [user-defined value]

    (0,5) [user-defined value]
    (1,6) [user-defined value]
    (2,7) [user-defined value]
    (3,8) [user-defined value]
    (4,9) [user-defined value]
    (5,10) [user-defined value]
    (6,11) [user-defined value]


  15x8 GraphBLAS wild matrix, sparse by col
  sparsity control: sparse only
  Tiles [3], 8 entries, memory: 416 bytes
  iso value: [user-defined value]

    (7,0) [user-defined value]
    (8,1) [user-defined value]
    (9,2) [user-defined value]
    (10,3) [user-defined value]
    (11,4) [user-defined value]
    (12,5) [user-defined value]
    (13,6) [user-defined value]
    (14,7) [user-defined value]

 [ GxB_set (hyper to sparse) 
   5.96e-06 sec ]
 [ GxB_Matrix_concat (iso sparse concat) 
   2.31e-05 sec ]
 [ GxB_Matrix_concat 
   2.86e-06 sec ]
expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{0,0} of type [wild]
cannot be typecast to output of type [float]

 [ GxB_Matrix_concat 
   2.15e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
C is 100-by-100 but Tiles{:,:} is 20-by-20

 [ GxB_Matrix_concat 
   1.91e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 15-by-100; its column
dimension must match all other matrices Tiles{:,1}, which is 8

 [ GxB_Matrix_concat 
   3.1e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 100-by-8; its row
dimension must match all other matrices Tiles{1,:}, which is 15

 [ GxB_Matrix_concat 
   0 sec ]
 [ GxB_set (jit: undefined) 
   2.31e-05 sec ]
 [ GrB_assign (C iso assign) Method:bit6:whole C = scalar (full to bitmap) 
   2.81e-05 sec ]
 [ GxB_Matrix_split (iso split) (bitmap split) 
   2.5e-05 sec ]

  5x12 GraphBLAS wild matrix, bitmap by col
  sparsity control: bitmap only
  Tiles [0], 60 entries, memory: 340 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    (4,5) [user-defined value]
    (0,6) [user-defined value]
    (1,6) [user-defined value]
    (2,6) [user-defined value]
    (3,6) [user-defined value]
    (4,6) [user-defined value]
    (0,7) [user-defined value]
    (1,7) [user-defined value]
    (2,7) [user-defined value]
    (3,7) [user-defined value]
    (4,7) [user-defined value]
    (0,8) [user-defined value]
    (1,8) [user-defined value]
    (2,8) [user-defined value]
    (3,8) [user-defined value]
    (4,8) [user-defined value]
    (0,9) [user-defined value]
    (1,9) [user-defined value]
    (2,9) [user-defined value]
    (3,9) [user-defined value]
    (4,9) [user-defined value]
    (0,10) [user-defined value]
    (1,10) [user-defined value]
    (2,10) [user-defined value]
    (3,10) [user-defined value]
    (4,10) [user-defined value]
    (0,11) [user-defined value]
    (1,11) [user-defined value]
    (2,11) [user-defined value]
    (3,11) [user-defined value]
    (4,11) [user-defined value]


  5x8 GraphBLAS wild matrix, bitmap by col
  sparsity control: bitmap only
  Tiles [1], 40 entries, memory: 320 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    (4,5) [user-defined value]
    (0,6) [user-defined value]
    (1,6) [user-defined value]
    (2,6) [user-defined value]
    (3,6) [user-defined value]
    (4,6) [user-defined value]
    (0,7) [user-defined value]
    (1,7) [user-defined value]
    (2,7) [user-defined value]
    (3,7) [user-defined value]
    (4,7) [user-defined value]


  15x12 GraphBLAS wild matrix, bitmap by col
  sparsity control: bitmap only
  Tiles [2], 180 entries, memory: 460 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (5,0) [user-defined value]
    (6,0) [user-defined value]
    (7,0) [user-defined value]
    (8,0) [user-defined value]
    (9,0) [user-defined value]
    (10,0) [user-defined value]
    (11,0) [user-defined value]
    (12,0) [user-defined value]
    (13,0) [user-defined value]
    (14,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (5,1) [user-defined value]
    (6,1) [user-defined value]
    (7,1) [user-defined value]
    (8,1) [user-defined value]
    (9,1) [user-defined value]
    (10,1) [user-defined value]
    (11,1) [user-defined value]
    (12,1) [user-defined value]
    (13,1) [user-defined value]
    (14,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (5,2) [user-defined value]
    (6,2) [user-defined value]
    (7,2) [user-defined value]
    (8,2) [user-defined value]
    (9,2) [user-defined value]
    (10,2) [user-defined value]
    (11,2) [user-defined value]
    (12,2) [user-defined value]
    (13,2) [user-defined value]
    (14,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (5,3) [user-defined value]
    (6,3) [user-defined value]
    (7,3) [user-defined value]
    (8,3) [user-defined value]
    (9,3) [user-defined value]
    (10,3) [user-defined value]
    (11,3) [user-defined value]
    (12,3) [user-defined value]
    (13,3) [user-defined value]
    (14,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (5,4) [user-defined value]
    (6,4) [user-defined value]
    (7,4) [user-defined value]
    (8,4) [user-defined value]
    (9,4) [user-defined value]
    (10,4) [user-defined value]
    (11,4) [user-defined value]
    (12,4) [user-defined value]
    (13,4) [user-defined value]
    (14,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    (4,5) [user-defined value]
    (5,5) [user-defined value]
    (6,5) [user-defined value]
    (7,5) [user-defined value]
    (8,5) [user-defined value]
    (9,5) [user-defined value]
    (10,5) [user-defined value]
    (11,5) [user-defined value]
    (12,5) [user-defined value]
    (13,5) [user-defined value]
    (14,5) [user-defined value]
    (0,6) [user-defined value]
    (1,6) [user-defined value]
    (2,6) [user-defined value]
    (3,6) [user-defined value]
    (4,6) [user-defined value]
    (5,6) [user-defined value]
    (6,6) [user-defined value]
    (7,6) [user-defined value]
    (8,6) [user-defined value]
    (9,6) [user-defined value]
    (10,6) [user-defined value]
    (11,6) [user-defined value]
    (12,6) [user-defined value]
    (13,6) [user-defined value]
    (14,6) [user-defined value]
    (0,7) [user-defined value]
    (1,7) [user-defined value]
    (2,7) [user-defined value]
    (3,7) [user-defined value]
    (4,7) [user-defined value]
    (5,7) [user-defined value]
    (6,7) [user-defined value]
    (7,7) [user-defined value]
    (8,7) [user-defined value]
    (9,7) [user-defined value]
    (10,7) [user-defined value]
    (11,7) [user-defined value]
    (12,7) [user-defined value]
    (13,7) [user-defined value]
    (14,7) [user-defined value]
    (0,8) [user-defined value]
    (1,8) [user-defined value]
    (2,8) [user-defined value]
    (3,8) [user-defined value]
    (4,8) [user-defined value]
    (5,8) [user-defined value]
    (6,8) [user-defined value]
    (7,8) [user-defined value]
    (8,8) [user-defined value]
    (9,8) [user-defined value]
    (10,8) [user-defined value]
    (11,8) [user-defined value]
    (12,8) [user-defined value]
    (13,8) [user-defined value]
    (14,8) [user-defined value]
    (0,9) [user-defined value]
    (1,9) [user-defined value]
    (2,9) [user-defined value]
    (3,9) [user-defined value]
    (4,9) [user-defined value]
    (5,9) [user-defined value]
    (6,9) [user-defined value]
    (7,9) [user-defined value]
    (8,9) [user-defined value]
    (9,9) [user-defined value]
    (10,9) [user-defined value]
    (11,9) [user-defined value]
    (12,9) [user-defined value]
    (13,9) [user-defined value]
    (14,9) [user-defined value]
    (0,10) [user-defined value]
    (1,10) [user-defined value]
    (2,10) [user-defined value]
    (3,10) [user-defined value]
    (4,10) [user-defined value]
    (5,10) [user-defined value]
    (6,10) [user-defined value]
    (7,10) [user-defined value]
    (8,10) [user-defined value]
    (9,10) [user-defined value]
    (10,10) [user-defined value]
    (11,10) [user-defined value]
    (12,10) [user-defined value]
    (13,10) [user-defined value]
    (14,10) [user-defined value]
    (0,11) [user-defined value]
    (1,11) [user-defined value]
    (2,11) [user-defined value]
    (3,11) [user-defined value]
    (4,11) [user-defined value]
    (5,11) [user-defined value]
    (6,11) [user-defined value]
    (7,11) [user-defined value]
    (8,11) [user-defined value]
    (9,11) [user-defined value]
    (10,11) [user-defined value]
    (11,11) [user-defined value]
    (12,11) [user-defined value]
    (13,11) [user-defined value]
    (14,11) [user-defined value]


  15x8 GraphBLAS wild matrix, bitmap by col
  sparsity control: bitmap only
  Tiles [3], 120 entries, memory: 400 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (5,0) [user-defined value]
    (6,0) [user-defined value]
    (7,0) [user-defined value]
    (8,0) [user-defined value]
    (9,0) [user-defined value]
    (10,0) [user-defined value]
    (11,0) [user-defined value]
    (12,0) [user-defined value]
    (13,0) [user-defined value]
    (14,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (5,1) [user-defined value]
    (6,1) [user-defined value]
    (7,1) [user-defined value]
    (8,1) [user-defined value]
    (9,1) [user-defined value]
    (10,1) [user-defined value]
    (11,1) [user-defined value]
    (12,1) [user-defined value]
    (13,1) [user-defined value]
    (14,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (5,2) [user-defined value]
    (6,2) [user-defined value]
    (7,2) [user-defined value]
    (8,2) [user-defined value]
    (9,2) [user-defined value]
    (10,2) [user-defined value]
    (11,2) [user-defined value]
    (12,2) [user-defined value]
    (13,2) [user-defined value]
    (14,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (5,3) [user-defined value]
    (6,3) [user-defined value]
    (7,3) [user-defined value]
    (8,3) [user-defined value]
    (9,3) [user-defined value]
    (10,3) [user-defined value]
    (11,3) [user-defined value]
    (12,3) [user-defined value]
    (13,3) [user-defined value]
    (14,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (5,4) [user-defined value]
    (6,4) [user-defined value]
    (7,4) [user-defined value]
    (8,4) [user-defined value]
    (9,4) [user-defined value]
    (10,4) [user-defined value]
    (11,4) [user-defined value]
    (12,4) [user-defined value]
    (13,4) [user-defined value]
    (14,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    (4,5) [user-defined value]
    (5,5) [user-defined value]
    (6,5) [user-defined value]
    (7,5) [user-defined value]
    (8,5) [user-defined value]
    (9,5) [user-defined value]
    (10,5) [user-defined value]
    (11,5) [user-defined value]
    (12,5) [user-defined value]
    (13,5) [user-defined value]
    (14,5) [user-defined value]
    (0,6) [user-defined value]
    (1,6) [user-defined value]
    (2,6) [user-defined value]
    (3,6) [user-defined value]
    (4,6) [user-defined value]
    (5,6) [user-defined value]
    (6,6) [user-defined value]
    (7,6) [user-defined value]
    (8,6) [user-defined value]
    (9,6) [user-defined value]
    (10,6) [user-defined value]
    (11,6) [user-defined value]
    (12,6) [user-defined value]
    (13,6) [user-defined value]
    (14,6) [user-defined value]
    (0,7) [user-defined value]
    (1,7) [user-defined value]
    (2,7) [user-defined value]
    (3,7) [user-defined value]
    (4,7) [user-defined value]
    (5,7) [user-defined value]
    (6,7) [user-defined value]
    (7,7) [user-defined value]
    (8,7) [user-defined value]
    (9,7) [user-defined value]
    (10,7) [user-defined value]
    (11,7) [user-defined value]
    (12,7) [user-defined value]
    (13,7) [user-defined value]
    (14,7) [user-defined value]

 [ GxB_set (jit: undefined) 
   3e-05 sec ]
 [ GxB_Matrix_concat (iso bitmap concat) 
   6.89e-05 sec ]
 [ GxB_Matrix_concat 
   4.05e-06 sec ]
expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{0,0} of type [wild]
cannot be typecast to output of type [float]

 [ GxB_Matrix_concat 
   3.1e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
C is 100-by-100 but Tiles{:,:} is 20-by-20

 [ GxB_Matrix_concat 
   2.86e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 15-by-100; its column
dimension must match all other matrices Tiles{:,1}, which is 8

 [ GxB_Matrix_concat 
   2.86e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 100-by-8; its row
dimension must match all other matrices Tiles{1,:}, which is 15

 [ GxB_Matrix_concat 
   9.54e-07 sec ]
 [ GxB_set (jit: undefined) 
   8.11e-06 sec ]
 [ GxB_Matrix_split (iso split) (bitmap split) 
   2.22e-05 sec ]

  5x12 GraphBLAS wild matrix, bitmap by col
  sparsity control: bitmap only
  Tiles [0], 5 entries, memory: 340 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,1) [user-defined value]
    (2,2) [user-defined value]
    (3,3) [user-defined value]
    (4,4) [user-defined value]


  5x8 GraphBLAS wild matrix, bitmap by col
  sparsity control: bitmap only
  Tiles [1], no entries, memory: 320 bytes
  iso value: [user-defined value]


  15x12 GraphBLAS wild matrix, bitmap by col
  sparsity control: bitmap only
  Tiles [2], 7 entries, memory: 460 bytes
  iso value: [user-defined value]

    (0,5) [user-defined value]
    (1,6) [user-defined value]
    (2,7) [user-defined value]
    (3,8) [user-defined value]
    (4,9) [user-defined value]
    (5,10) [user-defined value]
    (6,11) [user-defined value]


  15x8 GraphBLAS wild matrix, bitmap by col
  sparsity control: bitmap only
  Tiles [3], 8 entries, memory: 400 bytes
  iso value: [user-defined value]

    (7,0) [user-defined value]
    (8,1) [user-defined value]
    (9,2) [user-defined value]
    (10,3) [user-defined value]
    (11,4) [user-defined value]
    (12,5) [user-defined value]
    (13,6) [user-defined value]
    (14,7) [user-defined value]

 [ GxB_set (jit: undefined) 
   8.11e-06 sec ]
 [ GxB_Matrix_concat (iso sparse concat) (bitmap to sparse) (bitmap to sparse) (bitmap to sparse) (sparse to bitmap) 
   7.61e-05 sec ]
 [ GxB_Matrix_concat 
   3.1e-06 sec ]
expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{0,0} of type [wild]
cannot be typecast to output of type [float]

 [ GxB_Matrix_concat 
   3.1e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
C is 100-by-100 but Tiles{:,:} is 20-by-20

 [ GxB_Matrix_concat 
   2.86e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 15-by-100; its column
dimension must match all other matrices Tiles{:,1}, which is 8

 [ GxB_Matrix_concat 
   5.96e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 100-by-8; its row
dimension must match all other matrices Tiles{1,:}, which is 15

 [ GxB_Matrix_concat 
   0 sec ]
 [ GxB_set (jit: undefined) 
   1.5e-05 sec ]
 [ GrB_assign (C iso assign) Method:bit6:whole C = scalar 
   2.22e-05 sec ]
 [ GxB_Matrix_split (iso split) (full split) 
   1.22e-05 sec ]

  5x12 GraphBLAS wild matrix, full by col
  sparsity control: full
  Tiles [0], 60 entries, memory: 280 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    ...

  5x8 GraphBLAS wild matrix, full by col
  sparsity control: full
  Tiles [1], 40 entries, memory: 280 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (4,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
    (4,3) [user-defined value]
    (0,4) [user-defined value]
    (1,4) [user-defined value]
    (2,4) [user-defined value]
    (3,4) [user-defined value]
    (4,4) [user-defined value]
    (0,5) [user-defined value]
    (1,5) [user-defined value]
    (2,5) [user-defined value]
    (3,5) [user-defined value]
    ...

  15x12 GraphBLAS wild matrix, full by col
  sparsity control: full
  Tiles [2], 180 entries, memory: 280 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (5,0) [user-defined value]
    (6,0) [user-defined value]
    (7,0) [user-defined value]
    (8,0) [user-defined value]
    (9,0) [user-defined value]
    (10,0) [user-defined value]
    (11,0) [user-defined value]
    (12,0) [user-defined value]
    (13,0) [user-defined value]
    (14,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (5,1) [user-defined value]
    (6,1) [user-defined value]
    (7,1) [user-defined value]
    (8,1) [user-defined value]
    (9,1) [user-defined value]
    (10,1) [user-defined value]
    (11,1) [user-defined value]
    (12,1) [user-defined value]
    (13,1) [user-defined value]
    ...

  15x8 GraphBLAS wild matrix, full by col
  sparsity control: full
  Tiles [3], 120 entries, memory: 280 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (4,0) [user-defined value]
    (5,0) [user-defined value]
    (6,0) [user-defined value]
    (7,0) [user-defined value]
    (8,0) [user-defined value]
    (9,0) [user-defined value]
    (10,0) [user-defined value]
    (11,0) [user-defined value]
    (12,0) [user-defined value]
    (13,0) [user-defined value]
    (14,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (4,1) [user-defined value]
    (5,1) [user-defined value]
    (6,1) [user-defined value]
    (7,1) [user-defined value]
    (8,1) [user-defined value]
    (9,1) [user-defined value]
    (10,1) [user-defined value]
    (11,1) [user-defined value]
    (12,1) [user-defined value]
    (13,1) [user-defined value]
    ...
 [ GxB_set (jit: undefined) 
   9.06e-06 sec ]
 [ GxB_Matrix_concat (iso full concat) 
   8.11e-06 sec ]
 [ GxB_Matrix_concat 
   2.15e-06 sec ]
expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{0,0} of type [wild]
cannot be typecast to output of type [float]

 [ GxB_Matrix_concat 
   4.05e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
C is 100-by-100 but Tiles{:,:} is 20-by-20

 [ GxB_Matrix_concat 
   1.91e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 15-by-100; its column
dimension must match all other matrices Tiles{:,1}, which is 8

 [ GxB_Matrix_concat 
   2.15e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 100-by-8; its row
dimension must match all other matrices Tiles{1,:}, which is 15

 [ GxB_Matrix_concat 
   0 sec ]
 [ GxB_set (jit: undefined) 
   7.87e-06 sec ]
 [ GxB_Matrix_split (iso split) (bitmap split) 
   3.81e-05 sec ]

  5x12 GraphBLAS wild matrix, bitmap by col
  sparsity control: full
  Tiles [0], 5 entries, memory: 340 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,1) [user-defined value]
    (2,2) [user-defined value]
    (3,3) [user-defined value]
    (4,4) [user-defined value]


  5x8 GraphBLAS wild matrix, bitmap by col
  sparsity control: full
  Tiles [1], no entries, memory: 320 bytes
  iso value: [user-defined value]


  15x12 GraphBLAS wild matrix, bitmap by col
  sparsity control: full
  Tiles [2], 7 entries, memory: 460 bytes
  iso value: [user-defined value]

    (0,5) [user-defined value]
    (1,6) [user-defined value]
    (2,7) [user-defined value]
    (3,8) [user-defined value]
    (4,9) [user-defined value]
    (5,10) [user-defined value]
    (6,11) [user-defined value]


  15x8 GraphBLAS wild matrix, bitmap by col
  sparsity control: full
  Tiles [3], 8 entries, memory: 400 bytes
  iso value: [user-defined value]

    (7,0) [user-defined value]
    (8,1) [user-defined value]
    (9,2) [user-defined value]
    (10,3) [user-defined value]
    (11,4) [user-defined value]
    (12,5) [user-defined value]
    (13,6) [user-defined value]
    (14,7) [user-defined value]

 [ GxB_set (jit: undefined) 
   9.06e-06 sec ]
 [ GxB_Matrix_concat (iso sparse concat) (bitmap to sparse) (bitmap to sparse) (bitmap to sparse) (sparse to bitmap) 
   7.58e-05 sec ]
 [ GxB_Matrix_concat 
   3.1e-06 sec ]
expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{0,0} of type [wild]
cannot be typecast to output of type [float]

 [ GxB_Matrix_concat 
   3.1e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
C is 100-by-100 but Tiles{:,:} is 20-by-20

 [ GxB_Matrix_concat 
   2.86e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 15-by-100; its column
dimension must match all other matrices Tiles{:,1}, which is 8

 [ GxB_Matrix_concat 
   2.86e-06 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_concat (C, Tiles, m, n, desc)
Input matrix Tiles{1,1} is 100-by-8; its row
dimension must match all other matrices Tiles{1,:}, which is 15

 [ GxB_Matrix_concat 
   0 sec ]


testing C<C,struct> = scalar for user-defined type:
 [ GrB_Matrix_wait (iso wait:matrix 0 zombies, 20 pending) (iso build) (hyper to sparse) 
   3.6e-05 sec ]
 [ GrB_assign (C iso assign) (pending: 0) Method 05f: C<C,struct> = scalar 
   1.81e-05 sec ]
expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_diag (C, v, k, desc)
Input matrix is 10-by-20 but must be 10-by-10

expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Matrix_diag (C, v, k, desc)
Input matrix is 5-by-5 but must be 10-by-10

expected error: GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GxB_Vector_diag (v, A, k, desc)
Input vector must have size 5

expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxB_Matrix_diag (C, v, k, desc)
Input vector of type [float] cannot be typecast to output of type [wild]

expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxB_Vector_diag (v, A, k, desc)
Input matrix of type [wild] cannot be typecast to output of type [float]


All errors printed above were expected.
GB_mex_about2: all tests passed

in /home/davis/master/GraphBLAS/Test/GB_mex_about.c
expected error: [-3]

JIT init 198: 4
in /home/davis/master/GraphBLAS/Test/GB_mex_about.c:
sizeof (struct GB_Type_opaque) 184
sizeof (struct GB_UnaryOp_opaque) 224
sizeof (struct GB_BinaryOp_opaque) 224
sizeof (struct GB_SelectOp_opaque) 224
sizeof (struct GB_Monoid_opaque) 64
sizeof (struct GB_Semiring_opaque) 64
sizeof (struct GB_Vector_opaque) 216
sizeof (struct GB_Matrix_opaque) 216
sizeof (struct GB_Descriptor_opaque) 64
1 1
1 1
1 1
2 2
2 2
4 4
4 4
8 8
8 8
4 4
8 8
info is -3

    GraphBLAS UnaryOp: LNOT (built-in): z=not(x)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype bool size: 1
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype bool size: 1

    GraphBLAS UnaryOp: LNOT_FP32 (built-in): z=not(x)
    GraphBLAS type: ztype float size: 4
    GraphBLAS type: xtype float size: 4
    GraphBLAS type: ztype float size: 4
    GraphBLAS type: xtype float size: 4

    GraphBLAS BinaryOp: ISEQ_INT32 (built-in): z=iseq(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4

    GraphBLAS BinaryOp: EQ_INT32 (built-in): z=eq(x,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4

    GraphBLAS Monoid: plus uint16 monoid (user-defined; same as built-in):
    GraphBLAS BinaryOp: monoid->op (built-in): z=plus(x,y)
    GraphBLAS type: ztype uint16_t size: 2
    GraphBLAS type: xtype uint16_t size: 2
    GraphBLAS type: ytype uint16_t size: 2
    identity: [   0 ] 
id is 0

    GraphBLAS BinaryOp: plus op from monoid (built-in): z=plus(x,y)
    GraphBLAS type: ztype uint16_t size: 2
    GraphBLAS type: xtype uint16_t size: 2
    GraphBLAS type: ytype uint16_t size: 2

    GraphBLAS Monoid: mangled monoid, no identity (user-defined; same as built-in):
    GraphBLAS BinaryOp: monoid->op (built-in): z=plus(x,y)
    GraphBLAS type: ztype uint16_t size: 2
    GraphBLAS type: xtype uint16_t size: 2
    GraphBLAS type: ytype uint16_t size: 2
    Identity value is missing

    GraphBLAS Monoid: max int16 monoid (user-defined; same as built-in):
    GraphBLAS BinaryOp: monoid->op (built-in): z=max(x,y)
    GraphBLAS type: ztype int16_t size: 2
    GraphBLAS type: xtype int16_t size: 2
    GraphBLAS type: ytype int16_t size: 2
    identity: [   -32768 ] terminal: [   32767 ]
id1 is -32768

    GraphBLAS BinaryOp: plus op from monoid (built-in): z=max(x,y)
    GraphBLAS type: ztype int16_t size: 2
    GraphBLAS type: xtype int16_t size: 2
    GraphBLAS type: ytype int16_t size: 2

    GraphBLAS Semiring: 
new sem (user-defined): (max,times)
    GraphBLAS Monoid: semiring->add (user-defined; same as built-in):
    GraphBLAS BinaryOp: monoid->op (built-in): z=max(x,y)
    GraphBLAS type: ztype int16_t size: 2
    GraphBLAS type: xtype int16_t size: 2
    GraphBLAS type: ytype int16_t size: 2
    identity: [   -32768 ] terminal: [   32767 ]

    GraphBLAS BinaryOp: semiring->multiply (built-in): z=times(x,y)
    GraphBLAS type: ztype int16_t size: 2
    GraphBLAS type: xtype int16_t size: 2
    GraphBLAS type: ytype int16_t size: 2

    GraphBLAS Monoid: sem mm (user-defined; same as built-in):
    GraphBLAS BinaryOp: monoid->op (built-in): z=max(x,y)
    GraphBLAS type: ztype int16_t size: 2
    GraphBLAS type: xtype int16_t size: 2
    GraphBLAS type: ytype int16_t size: 2
    identity: [   -32768 ] terminal: [   32767 ]

    GraphBLAS BinaryOp: sem mult (built-in): z=times(x,y)
    GraphBLAS type: ztype int16_t size: 2
    GraphBLAS type: xtype int16_t size: 2
    GraphBLAS type: ytype int16_t size: 2
    GraphBLAS type: matrix Gunk type is: double size: 8
    GraphBLAS type: victor type is: uint32_t size: 4
and its size of type is 4

    GraphBLAS Descriptor: 
---------------------------------- Duh: 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   
got outp 0
got mask 0
got inp0 0
got inp1 0

    GraphBLAS Descriptor: 
------------------------------- Duh set sort: 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got sort 1

    GraphBLAS Descriptor: 
------------------------------- Duh set sort: 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got sort 1

    GraphBLAS Descriptor: 
------------------------------- Duh set: 
    d.out      = default   
    d.mask     = default   
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got outp 0
got mask 0
got inp0 3
got inp1 0

    GraphBLAS Descriptor: 
------------------------------- Duh set: 
    d.out      = default   
    d.mask     = default   
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got outp 0
got mask 0
got inp0 3
got inp1 0

    GraphBLAS Descriptor: 
-----Duh set mask 
    d.out      = default   
    d.mask     = complement
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got outp 0
got mask 2
got inp0 3
got inp1 0

    GraphBLAS Descriptor: 
-----Duh set mask 
    d.out      = default   
    d.mask     = complement
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got outp 0
got mask 2
got inp0 3
got inp1 0

    GraphBLAS Descriptor: 
-----Duh set out 
    d.out      = replace   
    d.mask     = complement
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got outp 1
got mask 2
got inp0 3
got inp1 0

    GraphBLAS Descriptor: 
-----Duh set out 
    d.out      = replace   
    d.mask     = complement
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got outp 1
got mask 2
got inp0 3
got inp1 0

    GraphBLAS Descriptor: 
-----Duh set mask structural 
    d.out      = replace   
    d.mask     = structural complement
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got outp 1
got mask 6
got inp0 3
got inp1 0

    GraphBLAS Descriptor: 
-----Duh set mask structural 
    d.out      = replace   
    d.mask     = structural complement
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got outp 1
got mask 6
got inp0 3
got inp1 0

    GraphBLAS Descriptor: 
-----Duh set mask back 
    d.out      = replace   
    d.mask     = default   
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got outp 1
got mask 0
got inp0 3
got inp1 0

    GraphBLAS Descriptor: 
-----Duh set mask back 
    d.out      = replace   
    d.mask     = default   
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got outp 1
got mask 0
got inp0 3
got inp1 0
GraphBLAS error: GrB_INVALID_VALUE
function: GxB_Desc_set (desc, field, value)
invalid descriptor value [1] for GrB_INP1 field;
must be GxB_DEFAULT [0] or GrB_TRAN [3]

    GraphBLAS Descriptor: 
-----Duh set in1 
    d.out      = replace   
    d.mask     = default   
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got outp 1
got mask 0
got inp0 3
got inp1 0
GraphBLAS error: GrB_INVALID_VALUE
function: GxB_Desc_set_INT32 (desc, field, value)
invalid descriptor value [1] for GrB_INP1 field;
must be GxB_DEFAULT [0] or GrB_TRAN [3]

    GraphBLAS Descriptor: 
-----Duh set in1 
    d.out      = replace   
    d.mask     = default   
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   
    d.sort     = true
got outp 1
got mask 0
got inp0 3
got inp1 0
    GraphBLAS type: user Complex type double complex size: 16
size is 16
Spec: 2.0.0 (2000000): 2.0
Spec Date: Nov 15, 2021
About the spec:
GraphBLAS C API, by Aydin Buluc, Timothy Mattson, Scott McMillan,
Jose' Moreira, Carl Yang, and Benjamin Brock.  Based on 'GraphBLAS
Mathematics by Jeremy Kepner.  See also 'Graph Algorithms in the Language
of Linear Algebra,' edited by J. Kepner and J. Gilbert, SIAM, 2011.

date: Nov 15, 2021
URL: http://graphblas.org
Spec Version (2.0.0)
library info:
name: SuiteSparse:GraphBLAS
date: (DRAFT9) Apr 25, 2023
about:
SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2023, All Rights Reserved.
http://suitesparse.com  Dept of Computer Sci. & Eng, Texas A&M University.

license:
SuiteSparse:GraphBLAS, Timothy A. Davis, (c) 2017-2023, All Rights Reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use SuiteSparse:GraphBLAS except in compliance with the License.  You
may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Version (8.0.0)
Implementation: (8000000)
compile date: Apr 27 2023
compile time: 20:47:01
with OpenMP: 1
URL: http://faculty.cse.tamu.edu/davis/GraphBLAS
The spec is >= version 1.0.0
The spec is < version 2.3.0
This implementation is >= version 1.0.0
gpu count: 0
gpu control: -1
built-in types:
    GraphBLAS type: bool bool size: 1
    GraphBLAS type: int8 int8_t size: 1
    GraphBLAS type: uint8 uint8_t size: 1
    GraphBLAS type: int16 int16_t size: 2
    GraphBLAS type: uint16 uint16_t size: 2
    GraphBLAS type: int32 int32_t size: 4
    GraphBLAS type: uint32 uint32_t size: 4
    GraphBLAS type: int64 int64_t size: 8
    GraphBLAS type: uint64 uint64_t size: 8
    GraphBLAS type: fp32 float size: 4
    GraphBLAS type: fp64 double size: 8

printing built-in types:
  1
  22
  44
  909
  777
  3203
  8080
  -987
  987
   3.14
   99.4
[user-defined value]
Check status codes
   0 : GrB_SUCCESS
   1 : GrB_NO_VALUE
  -1 : GrB_UNINITIALIZED_OBJECT
  -2 : GrB_NULL_POINTER
  -3 : GrB_INVALID_VALUE
  -4 : GrB_INVALID_INDEX
  -5 : GrB_DOMAIN_MISMATCH
  -6 : GrB_DIMENSION_MISMATCH
  -7 : GrB_OUTPUT_NOT_EMPTY
  -8 : GrB_NOT_IMPLEMENTED
-101 : GrB_PANIC
-102 : GrB_OUT_OF_MEMORY
-103 : GrB_INSUFFICIENT_SPACE
-104 : GrB_INVALID_OBJECT
-105 : GrB_INDEX_OUT_OF_BOUNDS
-106 : GrB_EMPTY_OBJECT
 911 : unknown GrB_Info value!
hyper_switch 0.0625 csc 1
bitmap_switch [0]: 0.04
bitmap_switch [1]: 0.05
bitmap_switch [2]: 0.06
bitmap_switch [3]: 0.08
bitmap_switch [4]: 0.1
bitmap_switch [5]: 0.2
bitmap_switch [6]: 0.3
bitmap_switch [7]: 0.4
mode: 0
# threads: 4
chunk: 1

  10000x10000 GraphBLAS bool matrix, hypersparse by col
  A, 1 entry, memory: 528 bytes
  iso value:   1

    (0,0)   1


  10000x10000 GraphBLAS bool matrix, hypersparse by col
  B, 1 entry, memory: 528 bytes
  iso value:   1

    (0,0)   1


  10000x10000 GraphBLAS bool matrix, hypersparse by col
  Q, no entries, memory: 0 bytes


div_bool monoid:

    GraphBLAS Monoid: mono (user-defined):
    GraphBLAS BinaryOp: monoid->op (built-in): z=first(x,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype bool size: 1
    identity: [   0 ] 

rdiv_bool monoid:

    GraphBLAS Monoid: mono (user-defined):
    GraphBLAS BinaryOp: monoid->op (built-in): z=second(x,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: ytype bool size: 1
    identity: [   0 ] 

isgt_bool monoid:

    GraphBLAS Monoid: mono (user-defined):
    GraphBLAS BinaryOp: monoid->op (built-in): z=gt(x,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype bool size: 1
    GraphBLAS type: ytype bool size: 1
    identity: [   0 ] 

islt_bool monoid:

    GraphBLAS Monoid: mono (user-defined):
    GraphBLAS BinaryOp: monoid->op (built-in): z=lt(x,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype bool size: 1
    GraphBLAS type: ytype bool size: 1
    identity: [   0 ] 

isge_bool monoid:

    GraphBLAS Monoid: mono (user-defined):
    GraphBLAS BinaryOp: monoid->op (built-in): z=ge(x,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype bool size: 1
    GraphBLAS type: ytype bool size: 1
    identity: [   0 ] 

isle_bool monoid:

    GraphBLAS Monoid: mono (user-defined):
    GraphBLAS BinaryOp: monoid->op (built-in): z=le(x,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype bool size: 1
    GraphBLAS type: ytype bool size: 1
    identity: [   0 ] 

  10x10 GraphBLAS user_int matrix, sparse by col
  A, 10 entries, memory: 504 bytes

    (0,0) [user-defined value]
    (1,1) [user-defined value]
    (2,2) [user-defined value]
    (3,3) [user-defined value]
    (4,4) [user-defined value]
    (5,5) [user-defined value]
    (6,6) [user-defined value]
    (7,7) [user-defined value]
    (8,8) [user-defined value]
    (9,9) [user-defined value]


  10x10 GraphBLAS int16_t matrix, sparse by col
  B, 10 entries, memory: 504 bytes

    (0,0)   0
    (1,1)   1
    (2,2)   2
    (3,3)   3
    (4,4)   4
    (5,5)   5
    (6,6)   6
    (7,7)   7
    (8,8)   8
    (9,9)   9


  1x1 GraphBLAS user_int scalar, sparse by col
  thunk, no entries, memory: 232 bytes

Expected error: info: -8

Expected error: info: -8

Expected error: info: -8

Expected error: info: -8

Expected error: info: -8

Expected error: info: -5


  10x10 GraphBLAS bool matrix, sparse by col
  A, 10 entries, memory: 484 bytes

    (0,0)   0
    (1,1)   1
    (2,2)   0
    (3,3)   1
    (4,4)   0
    (5,5)   1
    (6,6)   0
    (7,7)   1
    (8,8)   0
    (9,9)   1


============== B = select (A > 0)

  10x10 GraphBLAS bool matrix, sparse by col
  B, 5 entries, memory: 352 bytes
  iso value:   1

    (1,1)   1
    (3,3)   1
    (5,5)   1
    (7,7)   1
    (9,9)   1


============== B = select (A >= 0)

  10x10 GraphBLAS bool matrix, sparse by col
  B, 10 entries, memory: 394 bytes

    (0,0)   0
    (1,1)   1
    (2,2)   0
    (3,3)   1
    (4,4)   0
    (5,5)   1
    (6,6)   0
    (7,7)   1
    (8,8)   0
    (9,9)   1


============== B = select (A < 0)

  10x10 GraphBLAS bool matrix, hypersparse by col
  B, no entries, memory: 240 bytes


============== B = select (A <= 0)

  10x10 GraphBLAS bool matrix, sparse by col
  B, 5 entries, memory: 352 bytes
  iso value:   0

    (0,0)   0
    (2,2)   0
    (4,4)   0
    (6,6)   0
    (8,8)   0

did setEL loop
expected error: GraphBLAS error: GrB_INVALID_INDEX
function: GrB_Vector_removeElement (v, i)
Row index 9999 out of range; must be < 43
expected error: GraphBLAS error: GrB_INVALID_INDEX
function: GrB_Matrix_removeElement (C, row, col)
Column index 9999 out of range; must be < 8
expected error: GraphBLAS error: GrB_INVALID_INDEX
function: GrB_Matrix_removeElement (C, row, col)
Row index 9999 out of range; must be < 8

  8x8 GraphBLAS double matrix, hypersparse by col
  A, no entries, memory: 6.3 KB
  pending tuples: 1 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  double size: 8
    row: 0 col: 0    2

    GraphBLAS BinaryOp: pending operator: (built-in): z=plus(x,y)
    GraphBLAS type: ztype double size: 8
    GraphBLAS type: xtype double size: 8
    GraphBLAS type: ytype double size: 8


  8x8 GraphBLAS double matrix, hypersparse by col
  A, 1 entry, memory: 256 bytes

    (0,0)    3


  8x8 GraphBLAS double matrix, hypersparse by col
  A, 1 entry, memory: 528 bytes

    (0,0)    3

testing removeElement
removeElement: OK

  1x1 GraphBLAS double scalar, full by col
  scalar2, 1 entry, memory: 224 bytes
  iso value:    1.25

    (0,0)    1.25

  2x1 GraphBLAS double scalar, full by col
  scalar2, 2 entries, memory: 224 bytes
  iso value:    1.25

    (0,0)    1.25
    (1,0)    1.25
    GrB_Scalar is invalid [scalar2]

  1x1 GraphBLAS double scalar, full by col
  scalar2, 1 entry, memory: 224 bytes
  iso value:    1.25

    (0,0)    1.25

    GraphBLAS Descriptor: T1     
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: T0     
    d.out      = default   
    d.mask     = default   
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: T0T1   
    d.out      = default   
    d.mask     = default   
    d.in0      = transpose 
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: C      
    d.out      = default   
    d.mask     = complement
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: CT1    
    d.out      = default   
    d.mask     = complement
    d.in0      = default   
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: CT0    
    d.out      = default   
    d.mask     = complement
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: CT0T1  
    d.out      = default   
    d.mask     = complement
    d.in0      = transpose 
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: S      
    d.out      = default   
    d.mask     = structure 
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: ST1    
    d.out      = default   
    d.mask     = structure 
    d.in0      = default   
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: ST0    
    d.out      = default   
    d.mask     = structure 
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: ST0T1  
    d.out      = default   
    d.mask     = structure 
    d.in0      = transpose 
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: SC     
    d.out      = default   
    d.mask     = structural complement
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: SCT1   
    d.out      = default   
    d.mask     = structural complement
    d.in0      = default   
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: SCT0   
    d.out      = default   
    d.mask     = structural complement
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: SCT0T1 
    d.out      = default   
    d.mask     = structural complement
    d.in0      = transpose 
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: R      
    d.out      = replace   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: RT1    
    d.out      = replace   
    d.mask     = default   
    d.in0      = default   
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: RT0    
    d.out      = replace   
    d.mask     = default   
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: RT0T1  
    d.out      = replace   
    d.mask     = default   
    d.in0      = transpose 
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: RC     
    d.out      = replace   
    d.mask     = complement
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: RCT1   
    d.out      = replace   
    d.mask     = complement
    d.in0      = default   
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: RCT0   
    d.out      = replace   
    d.mask     = complement
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: RCT0T1 
    d.out      = replace   
    d.mask     = complement
    d.in0      = transpose 
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: RS     
    d.out      = replace   
    d.mask     = structure 
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: RST1   
    d.out      = replace   
    d.mask     = structure 
    d.in0      = default   
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: RST0   
    d.out      = replace   
    d.mask     = structure 
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: RST0T1 
    d.out      = replace   
    d.mask     = structure 
    d.in0      = transpose 
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: RSC    
    d.out      = replace   
    d.mask     = structural complement
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: RSCT1  
    d.out      = replace   
    d.mask     = structural complement
    d.in0      = default   
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: RSCT0  
    d.out      = replace   
    d.mask     = structural complement
    d.in0      = transpose 
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: RSCT0T1 
    d.out      = replace   
    d.mask     = structural complement
    d.in0      = transpose 
    d.in1      = transpose 
    d.axb      = default   

    GraphBLAS Descriptor: Duh 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = saxpy     

    GraphBLAS Descriptor: Duh 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = hash      

    GraphBLAS Descriptor: Duh 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = Gustavson 

    GraphBLAS Descriptor: Duh 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = dot       
burble: 0

    GraphBLAS SelectOp: tril: C=tril(A,k)

    GraphBLAS SelectOp: triu: C=triu(A,k)

    GraphBLAS SelectOp: diag: C=diag(A,k)

    GraphBLAS SelectOp: offidiag: C=offdiag(A,k)

    GraphBLAS SelectOp: nonzero: C=nonzero(A,k)

    GraphBLAS SelectOp: eq_zero: C=eq_zero(A,k)

    GraphBLAS SelectOp: gt_zero: C=gt_zero(A,k)

    GraphBLAS SelectOp: ge_zero: C=ge_zero(A,k)

    GraphBLAS SelectOp: lt_zero: C=lt_zero(A,k)

    GraphBLAS SelectOp: le_zero: C=le_zero(A,k)

    GraphBLAS SelectOp: ne_thunk: C=ne_thunk(A,k)

    GraphBLAS SelectOp: eq_thunk: C=eq_thunk(A,k)

    GraphBLAS SelectOp: gt_thunk: C=gt_thunk(A,k)

    GraphBLAS SelectOp: ge_thunk: C=ge_thunk(A,k)

    GraphBLAS SelectOp: lt_thunk: C=lt_thunk(A,k)

    GraphBLAS SelectOp: le_thunk: C=le_thunk(A,k)

  2199023254528x2199023254528 GraphBLAS double matrix, full by col
  A iso full, 4.8357e+24 entries, memory: 224 bytes
  iso value:    1

    (0,0)    1
    (1,0)    1
    (2,0)    1
    (3,0)    1
    (4,0)    1
    (5,0)    1
    (6,0)    1
    (7,0)    1
    (8,0)    1
    (9,0)    1
    (10,0)    1
    (11,0)    1
    (12,0)    1
    (13,0)    1
    (14,0)    1
    (15,0)    1
    (16,0)    1
    (17,0)    1
    (18,0)    1
    (19,0)    1
    (20,0)    1
    (21,0)    1
    (22,0)    1
    (23,0)    1
    (24,0)    1
    (25,0)    1
    (26,0)    1
    (27,0)    1
    (28,0)    1
    ...
expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_setElement_BOOL (C, row, col, x)
Input scalar of type [bool]
cannot be typecast to entry of type [user_int]
expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_setElement_INT8 (C, row, col, x)
Input scalar of type [int8_t]
cannot be typecast to entry of type [user_int]
expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_setElement_INT16 (C, row, col, x)
Input scalar of type [int16_t]
cannot be typecast to entry of type [user_int]
expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_setElement_INT32 (C, row, col, x)
Input scalar of type [int32_t]
cannot be typecast to entry of type [user_int]
expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_setElement_INT64 (C, row, col, x)
Input scalar of type [int64_t]
cannot be typecast to entry of type [user_int]
expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_setElement_UINT8 (C, row, col, x)
Input scalar of type [uint8_t]
cannot be typecast to entry of type [user_int]
expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_setElement_UINT16 (C, row, col, x)
Input scalar of type [uint16_t]
cannot be typecast to entry of type [user_int]
expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_setElement_UINT32 (C, row, col, x)
Input scalar of type [uint32_t]
cannot be typecast to entry of type [user_int]
expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_setElement_UINT64 (C, row, col, x)
Input scalar of type [uint64_t]
cannot be typecast to entry of type [user_int]
expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_setElement_FP32 (C, row, col, x)
Input scalar of type [float]
cannot be typecast to entry of type [user_int]
expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_setElement_FP64 (C, row, col, x)
Input scalar of type [double]
cannot be typecast to entry of type [user_int]
expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxM_Matrix_setElement_FC32 (C, row, col, x)
Input scalar of type [float complex]
cannot be typecast to entry of type [user_int]
expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxM_Matrix_setElement_FC64 (C, row, col, x)
Input scalar of type [double complex]
cannot be typecast to entry of type [user_int]
Test GrB_error:

  10x10 GraphBLAS user_int matrix, hypersparse by col
  A, no entries, memory: 4.3 KB
  iso value: [user-defined value]
  pending tuples: 1 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  user-defined: [user_int] size: 2
    typedef int16_t user_int ;
    row: 3 col: 7 
  pending operator: implicit 2nd


All errors printed above were expected.
GB_mex_about: all tests passed


JIT init 198: 4

JIT init 198: 4
nmalloc 0 at start
nmalloc 34 after complex init
rand seed----------------------------------------------------
nmalloc 34 befor 2nd start
nmalloc 0 after Complex_finialize
GrB_init-----------------------------------------------------

JIT init 198: 4
nmalloc 0 at 2nd start, reinit complex with builtin: 1
nmalloc 0 after 2nd complex init
GrB_Type-----------------------------------------------------
    GraphBLAS type: new type user-defined: [int] size: 4

----------------------------------tcode: 0
    GraphBLAS type: GB_code_type: double complex size: 16

----------------------------------tcode: 1
    GraphBLAS type: GB_code_type: bool size: 1

----------------------------------tcode: 2
    GraphBLAS type: GB_code_type: int8_t size: 1

----------------------------------tcode: 3
    GraphBLAS type: GB_code_type: uint8_t size: 1

----------------------------------tcode: 4
    GraphBLAS type: GB_code_type: int16_t size: 2

----------------------------------tcode: 5
    GraphBLAS type: GB_code_type: uint16_t size: 2

----------------------------------tcode: 6
    GraphBLAS type: GB_code_type: int32_t size: 4

----------------------------------tcode: 7
    GraphBLAS type: GB_code_type: uint32_t size: 4

----------------------------------tcode: 8
    GraphBLAS type: GB_code_type: int64_t size: 8

----------------------------------tcode: 9
    GraphBLAS type: GB_code_type: uint64_t size: 8

----------------------------------tcode: 10
    GraphBLAS type: GB_code_type: float size: 4

----------------------------------tcode: 11
    GraphBLAS type: GB_code_type: double size: 8

----------------------------------tcode: 12
    GraphBLAS type: GB_code_type: float complex size: 8

----------------------------------tcode: 13
    GraphBLAS type: GB_code_type: double complex size: 16

----------------------------------tcode: 14
    GraphBLAS type: GB_code_type: double complex size: 16
GrB_UnaryOp--------------------------------------------------

    GraphBLAS UnaryOp: new unary opzz (user-defined): z=f1(x)
    GraphBLAS type: ztype double size: 8
    GraphBLAS type: xtype uint32_t size: 4
GrB_BinaryOp-------------------------------------------------

    GraphBLAS BinaryOp: new binary opxx (user-defined): z=f2(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype uint8_t size: 1
    GraphBLAS type: ytype int16_t size: 2
GrB_Monoid---------------------------------------------------
GrB_Semiring-------------------------------------------------
User defined (complex) --------------------------------------
Complex_finalize:
Complex_init (true): using builtin complex
Complex_finalize again:
Complex_init (false): user-defined complex
GrB_Vector---------------------------------------------------

  1x1 GraphBLAS int32_t scalar, full by col
  a_scalar, 1 entry, memory: 224 bytes
  iso value:   42

    (0,0)   42

  1x1 GraphBLAS int scalar, sparse by col
  a_scalar, no entries, memory: 232 bytes

    GraphBLAS type: T user-defined: [int] size: 4
error expected: -5
GrB_Vector---------------------------------------------------

  32x1 GraphBLAS uint16_t vector, bitmap by col
  vector 18:28, 12 entries, memory: 312 bytes

    (0,0)   12
    (18,0)   0
    (19,0)   1
    (20,0)   2
    (21,0)   3
    (22,0)   4
    (23,0)   5
    (24,0)   6
    (25,0)   7
    (26,0)   8
    (27,0)   9
    (28,0)   10

nvals 12

  32x1 GraphBLAS uint16_t vector, bitmap by col
  vector 18:28, 12 entries, memory: 312 bytes

    (0,0)   12
    (18,0)   0
    (19,0)   1
    (20,0)   2
    (21,0)   3
    (22,0)   4
    (23,0)   5
    (24,0)   6
    (25,0)   7
    (26,0)   8
    (27,0)   9
    (28,0)   10


  32x1 GraphBLAS uint16_t vector, bitmap by col
  zz ok vector, 12 entries, memory: 312 bytes

    (0,0)   12
    (18,0)   0
    (19,0)   1
    (20,0)   2
    (21,0)   3
    (22,0)   4
    (23,0)   5
    (24,0)   6
    (25,0)   7
    (26,0)   8
    (27,0)   9
    (28,0)   10

GrB_Vector_build---------------------------------------------
build udt:
info -5 expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrB_Vector_build_UDT (w, I, X, nvals, dup)
Operator [plus] for assembling duplicates has type [double],
cannot be typecast to entries in output of type [user_int]

  10x1 GraphBLAS user_int vector, sparse by col
  v, no entries, memory: 232 bytes


  10x1 GraphBLAS double vector, sparse by col
  v clear, no entries, memory: 232 bytes

GraphBLAS error: GrB_INVALID_VALUE
function: GrB_Vector_build_FP64 (w, I, X, nvals, dup)
nvals cannot be GxB_RANGE, GxB_STRIDE, or GxB_BACKWARDS
expected error, index out of bounds:


  10x1 GraphBLAS double vector invalid object
GrB_Vector_setElement----------------------------------------
GrB_Vector_extractElement------------------------------------
GrB_Vector_extractTuples-------------------------------------
GrB_Matrix---------------------------------------------------
GrB_Matrix_build---------------------------------------------
info -5 expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_build_UDT (C, I, J, X, nvals, dup)
Operator [plus] for assembling duplicates has type [double],
cannot be typecast to entries in output of type [user_int]
GrB_Matrix_setElement----------------------------------------
GrB_Matrix_extractElement------------------------------------

  10x5 GraphBLAS double matrix, hypersparse by row
  A, 1 entry, memory: 6.4 KB
  pending tuples: 1 max pending: 256 zombies: 0

    (2,0)    22.8
  pending tuples:
    GraphBLAS type:  double size: 8
    row: 4 col: 0    44.9
  pending operator: implicit 2nd


  10x5 GraphBLAS double matrix, sparse by col
  A, 2 entries, memory: 296 bytes

    (2,0)    22.8
    (4,0)    44.9

GrB_Matrix_extractTuples-------------------------------------
GrB_Descriptor-----------------------------------------------
GraphBLAS error: GrB_INVALID_VALUE
function: GxB_Desc_set (desc, field, value)
invalid descriptor value [-1] for GrB_OUTP field;
must be GxB_DEFAULT [0] or GrB_REPLACE [1]
GraphBLAS error: GrB_INVALID_VALUE
function: GxB_Desc_set (desc, field, value)
invalid descriptor value [-1] for GrB_MASK field;
must be GxB_DEFAULT [0], GrB_COMP [2],
GrB_STRUCTURE [4], or GrB_COMP+GrB_STRUCTURE [6]
GraphBLAS error: GrB_INVALID_VALUE
function: GxB_Desc_set (desc, field, value)
invalid descriptor value [-1] for GrB_INP0 field;
must be GxB_DEFAULT [0] or GrB_TRAN [3]
GraphBLAS error: GrB_INVALID_VALUE
function: GxB_Desc_set (desc, field, value)
invalid descriptor value [-1] for GrB_INP1 field;
must be GxB_DEFAULT [0] or GrB_TRAN [3]
GraphBLAS error: GrB_INVALID_VALUE
function: GxB_Desc_set_INT32 (desc, field, value)
invalid descriptor value [-1] for GrB_OUTP field;
must be GxB_DEFAULT [0] or GrB_REPLACE [1]
GraphBLAS error: GrB_INVALID_VALUE
function: GxB_Desc_set_INT32 (desc, field, value)
invalid descriptor value [-1] for GrB_MASK field;
must be GxB_DEFAULT [0], GrB_COMP [2],
GrB_STRUCTURE [4], or GrB_COMP+GrB_STRUCTURE [6]
GraphBLAS error: GrB_INVALID_VALUE
function: GxB_Desc_set_INT32 (desc, field, value)
invalid descriptor value [-1] for GrB_INP0 field;
must be GxB_DEFAULT [0] or GrB_TRAN [3]
GraphBLAS error: GrB_INVALID_VALUE
function: GxB_Desc_set_INT32 (desc, field, value)
invalid descriptor value [-1] for GrB_INP1 field;
must be GxB_DEFAULT [0] or GrB_TRAN [3]
GraphBLAS error: GrB_INVALID_VALUE
function: GrB_Descriptor_set (desc, field, value)
invalid descriptor value [-1] for GrB_AxB_METHOD field;
must be GxB_DEFAULT [0], GxB_AxB_GUSTAVSON [1001]
GxB_AxB_DOT [1003], GxB_AxB_HASH [1004] or GxB_AxB_SAXPY [1005]
GraphBLAS error: GrB_INVALID_VALUE
function: GrB_Descriptor_set (desc, field, value)
invalid descriptor value [-1] for GrB_OUTP field;
must be GxB_DEFAULT [0] or GrB_REPLACE [1]
GraphBLAS error: GrB_INVALID_VALUE
function: GrB_Descriptor_set (desc, field, value)
invalid descriptor value [-1] for GrB_MASK field;
must be GxB_DEFAULT [0], GrB_COMP [2],
GrB_STRUCTURE [4], or GrB_COMP+GrB_STRUCTURE [6]
GraphBLAS error: GrB_INVALID_VALUE
function: GrB_Descriptor_set (desc, field, value)
invalid descriptor value [-1] for GrB_INP0 field;
must be GxB_DEFAULT [0] or GrB_TRAN [3]
GraphBLAS error: GrB_INVALID_VALUE
function: GrB_Descriptor_set (desc, field, value)
invalid descriptor value [-1] for GrB_INP1 field;
must be GxB_DEFAULT [0] or GrB_TRAN [3]
GraphBLAS error: GrB_INVALID_VALUE
function: GrB_Descriptor_set (desc, field, value)
invalid descriptor value [-1] for GrB_AxB_METHOD field;
must be GxB_DEFAULT [0], GxB_AxB_GUSTAVSON [1001]
GxB_AxB_DOT [1003], GxB_AxB_HASH [1004] or GxB_AxB_SAXPY [1005]

    GraphBLAS Descriptor: new descriptor 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: new descriptor (default) 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: new descriptor (dot) 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = dot       

    GraphBLAS Descriptor: new descriptor (Gustavson) 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = Gustavson 

    GraphBLAS Descriptor: new descriptor (still Gustavson) 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = Gustavson 

    GraphBLAS Descriptor: new descriptor (default) 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   

    GraphBLAS Descriptor: new descriptor (dot) 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = dot       

    GraphBLAS Descriptor: new descriptor (Gustavson) 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = Gustavson 

    GraphBLAS Descriptor: new descriptor (still Gustavson) 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = Gustavson 

    GraphBLAS Descriptor: invalid 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = unknown    (invalid value for this field)
    Descriptor field set to an invalid value

    GraphBLAS Descriptor: invalid 
    d.out      = unknown    (invalid value for this field)
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   
    Descriptor field set to an invalid value

    GraphBLAS Descriptor: invalid 
    d.out      = hash       (invalid value for this field)
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   
    Descriptor field set to an invalid value

    GraphBLAS Descriptor: invalid 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = transpose  (invalid value for this field)
    Descriptor field set to an invalid value
create test matrices-----------------------------------------
complex vector:
GrB_mxm------------------------------------------------------
last error was [GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrB_mxm (C, M, accum, semiring, A, B, desc)
M of type [mycx] cannot be typecast to boolean]

  1x1152921504606846976 GraphBLAS double matrix, sparse by row
  huge row, no entries, memory: 232 bytes

GrB_eWise ---------------------------------------------------
GrB_kronecker -----------------------------------------------
GrB_extract -------------------------------------------------
GxB_subassign -----------------------------------------------

  3x4 GraphBLAS double matrix, bitmap by col
  A, 7 entries, memory: 324 bytes

    (0,0)    0.230336
    (1,0)    0.629655
    (0,1)    0.825397
    (1,1)    0.674999
    (0,2)    0.815877
    (2,2)    0.666813
    (1,3)    0.814555

GrB_assign---------------------------------------------------

  3x4 GraphBLAS double matrix, bitmap by col
  A, 8 entries, memory: 324 bytes

    (0,0)    1.26719
    (1,0)    1.51611
    (0,1)    2.03707
    (1,1)    2.28599
    (2,1)    0.137173
    (0,2)    0.815877
    (2,2)    0.666813
    (1,3)    0.814555


  5x1 GraphBLAS bool vector, sparse by col
  v5, no entries, memory: 232 bytes


  5x1 GraphBLAS double vector, sparse by col
  v, no entries, memory: 232 bytes

mask wrong size:
GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GrB_Col_assign (C, M, accum, u, Rows, nRows, col, desc)
Mask vector m length is 5; must match the number of rows of C (3)

  3x4 GraphBLAS double matrix, bitmap by col
  A, 8 entries, memory: 324 bytes

    (0,0)    1.26719
    (1,0)    1.51611
    (0,1)    2.03707
    (1,1)    2.28599
    (2,1)    0.137173
    (0,2)    0.815877
    (2,2)    0.666813
    (1,3)    0.814555


  5x5 GraphBLAS bool matrix, hypersparse by row
  A5, no entries, memory: 240 bytes

mask wrong size:
GraphBLAS error: GrB_DIMENSION_MISMATCH
function: GrB_Matrix_assign (C, M, accum, A, Rows, nRows, Cols, nCols, desc)
Mask M is 5-by-5; must match result C (3-by-4)

  5x5 GraphBLAS float matrix, full by row
  A5 with 2nd:fp32, 25 entries, memory: 316 bytes

    (0,0)    42
    (0,1)    42
    (0,2)    42
    (0,3)    42
    (0,4)    42
    (1,0)    42
    (1,1)    42
    (1,2)    42
    (1,3)    42
    (1,4)    42
    (2,0)    42
    (2,1)    42
    (2,2)    42
    (2,3)    42
    (2,4)    42
    (3,0)    42
    (3,1)    42
    (3,2)    42
    (3,3)    42
    (3,4)    42
    (4,0)    42
    (4,1)    42
    (4,2)    42
    (4,3)    42
    (4,4)    42


  5x5 GraphBLAS float matrix, full by row
  A5 with 2nd:bool, 25 entries, memory: 316 bytes

    (0,0)    1
    (0,1)    1
    (0,2)    1
    (0,3)    1
    (0,4)    1
    (1,0)    1
    (1,1)    1
    (1,2)    1
    (1,3)    1
    (1,4)    1
    (2,0)    1
    (2,1)    1
    (2,2)    1
    (2,3)    1
    (2,4)    1
    (3,0)    1
    (3,1)    1
    (3,2)    1
    (3,3)    1
    (3,4)    1
    (4,0)    1
    (4,1)    1
    (4,2)    1
    (4,3)    1
    (4,4)    1


  5x5 GraphBLAS float matrix, full by row
  A5 done, 25 entries, memory: 316 bytes

    (0,0)    1
    (0,1)    1
    (0,2)    1
    (0,3)    1
    (0,4)    1
    (1,0)    1
    (1,1)    1
    (1,2)    1
    (1,3)    1
    (1,4)    1
    (2,0)    1
    (2,1)    1
    (2,2)    1
    (2,3)    1
    (2,4)    1
    (3,0)    1
    (3,1)    1
    (3,2)    1
    (3,3)    1
    (3,4)    1
    (4,0)    1
    (4,1)    1
    (4,2)    1
    (4,3)    1
    (4,4)    1

GrB_apply----------------------------------------------------
GrB_reduce (to scalar)---------------------------------------
GrB_reduce (to vector)---------------------------------------
GrB_transpose------------------------------------------------

-------------- GB_entry_check:
   4.5

All GB_entry_check tests passed (errors expected)

-------------- GB_Type_check:
unknown code: [unknown type!]
unknown info: [unknown GrB_Info value!]

All GB_Type_check tests passed (errors expected)

-------------- GB_UnaryOp_check:

All GB_UnaryOp_check tests passed (errors expected)

-------------- GB_BinaryOp_check:

All GB_BinaryOp_check tests passed (errors expected)

-------------- GB_Monoid_check:

All GB_Monoid_check tests passed (errors expected)

-------------- GB_Semiring_check:

All GB_Semiring_check tests passed (errors expected)

-------------- GB_Descriptor_check:

All GB_Descriptor_check tests passed (errors expected)

-------------- GB_Vector_check:

All GB_Vector_check tests passed (errors expected)

-------------- GB_Matrix_check:

  10x4 GraphBLAS double matrix, hypersparse by row
  valid pending pi, 1 entry, memory: 256 bytes

    (0,0)    1


  10x4 GraphBLAS double matrix, hypersparse by row
  valid pending pi again, 1 entry, memory: 256 bytes

    (0,0)    1

nvals 1

========================================== valid pi

  10x4 GraphBLAS double matrix, hypersparse by row
  valid pi, 1 entry, memory: 528 bytes

    (0,0)    1


===================================================

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  A empty, no entries, memory: 304 bytes


  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  with bool pending, no entries, memory: 4.6 KB
  pending tuples: 1 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  bool size: 1
    row: 0 col: 0   1

    GraphBLAS BinaryOp: pending operator: (built-in): z=second(x,y)
    GraphBLAS type: ztype double size: 8
    GraphBLAS type: ytype double size: 8


  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  with pi pending, 1 entry, memory: 6.4 KB
  pending tuples: 1 max pending: 256 zombies: 0

    (0,0)    1
  pending tuples:
    GraphBLAS type:  double size: 8
    row: 3 col: 3    3.14159
  pending operator: implicit 2nd


  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  with pi and 9.0909 pending, 1 entry, memory: 6.4 KB
  pending tuples: 2 max pending: 256 zombies: 0

    (0,0)    1
  pending tuples:
    GraphBLAS type:  double size: 8
    row: 3 col: 3    3.14159
    row: 2 col: 1    9.0909
  pending operator: implicit 2nd


  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  ->i is NULL, invalid matrix

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  ->p [0] = 1 invalid

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  ->p [1] = -1 invalid

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  ->p [4] = 1002 invalid

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  negative zombies, 3 entries, memory: 400 bytes
  pending tuples: 0 max pending: 0 zombies: -1
  invalid number of zombies: -1 must be >= 0 and <= # entries (3)

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  too many zombies, 3 entries, memory: 400 bytes
  pending tuples: 0 max pending: 0 zombies: 1000
  invalid number of zombies: 1000 must be >= 0 and <= # entries (3)

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  row index invalid, 3 entries, memory: 400 bytes

    (0,-1)   index (0,-1) out of range

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  bad zombies, 3 entries, memory: 400 bytes
  pending tuples: 0 max pending: 0 zombies: 1

    (0,0)    1
    (2,1)    9.0909
    (3,3)    3.14159
  invalid zombie count: 0 exist but A->nzombies = 1

========================================== valid [pi 7.1]

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  valid pending [pi 7.1], 3 entries, memory: 6.5 KB
  pending tuples: 1 max pending: 256 zombies: 0

    (0,0)    1
    (2,1)    9.0909
    (3,3)    3.14159
  pending tuples:
    GraphBLAS type:  double size: 8
    row: 1 col: 0    7.1
  pending operator: implicit 2nd


===================================================

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  negative pending, 3 entries, memory: 6.5 KB
  pending tuples: -1 max pending: 256 zombies: 0

  invalid pending count

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  missing pending, 3 entries, memory: 4.5 KB
  pending tuples: 1 max pending: 256 zombies: 0

    (0,0)    1
    (2,1)    9.0909
    (3,3)    3.14159
  invalid pending tuples

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  bad pending tuple, 3 entries, memory: 6.5 KB
  pending tuples: 1 max pending: 256 zombies: 0

    (0,0)    1
    (2,1)    9.0909
    (3,3)    3.14159
  pending tuples:
    GraphBLAS type:  double size: 8
    row: 1070 col: 0    7.1
    tuple (1070,0) out of range

====================================== valid [pi 7.1 11.4]

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  valid pending [pi 7.1 11.4], 3 entries, memory: 6.5 KB
  pending tuples: 2 max pending: 256 zombies: 0

    (0,0)    1
    (2,1)    9.0909
    (3,3)    3.14159
  pending tuples:
    GraphBLAS type:  double size: 8
    row: 1 col: 0    7.1
    row: 0 col: 1    11.4
  pending operator: implicit 2nd


=========================================================
matrix check with jumbled pending tuples:

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  invalid operator, 3 entries, memory: 6.5 KB
  pending tuples: 2 max pending: 256 zombies: 0

    (0,0)    1
    (2,1)    9.0909
    (3,3)    3.14159
  pending tuples:
    GraphBLAS type:  double size: 8
    row: 1 col: 0    7.1
    row: 0 col: 1    11.4

    GraphBLAS BinaryOp: pending operator:  uninititialized object
  invalid pending operator

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  valid pending [pi 7.1 11.4], 3 entries, memory: 6.5 KB
  pending tuples: 2 max pending: 256 zombies: 0

    (0,0)    1
    (2,1)    9.0909
    (3,3)    3.14159
  pending tuples:
    GraphBLAS type:  double size: 8
    row: 1 col: 0    7.1
    row: 0 col: 1    11.4
  pending operator: implicit 2nd


=========================================================

###### get nvals; assemble the pending tuples ##### 

====================================== valid [pi 7.1 11.4]

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  valid [pi 7 11.4], 5 entries, memory: 384 bytes

    (0,0)    1
    (0,1)    11.4
    (1,0)    7.1
    (2,1)    9.0909
    (3,3)    3.14159


=========================================================

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  jumbled, 5 entries, memory: 384 bytes

    (0,1)    1
    (0,0)    11.4 index (0,0) invalid
jumbled info -105
jumbled info -104

  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  OK, 5 entries, memory: 384 bytes

    (0,0)    1
    (0,1)    11.4
    (1,0)    7.1
    (2,1)    9.0909
    (3,3)    3.14159


  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  valid zombie, 5 entries, memory: 384 bytes
  pending tuples: 0 max pending: 0 zombies: 1

    (0,0) zombie
    (0,1)    11.4
    (1,0)    7.1
    (2,1)    9.0909
    (3,3)    3.14159


  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  no more zombie, 5 entries, memory: 384 bytes

    (0,0)    99099
    (0,1)    11.4
    (1,0)    7.1
    (2,1)    9.0909
    (3,3)    3.14159


  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  valid zombie, 5 entries, memory: 384 bytes
  pending tuples: 0 max pending: 0 zombies: 1

    (0,0) zombie
    (0,1)    11.4
    (1,0)    7.1
    (2,1)    9.0909
    (3,3)    3.14159


  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  again no more zombie, 4 entries, memory: 368 bytes

    (0,1)    11.4
    (1,0)    7.1
    (2,1)    9.0909
    (3,3)    3.14159


  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  valid, no pending, 4 entries, memory: 368 bytes

    (0,1)    11.4
    (1,0)    7.1
    (2,1)    9.0909
    (3,3)    3.14159


  10x4 GraphBLAS double matrix, hypersparse by row
  sparsity control: hypersparse only
  A now hyper, 4 entries, memory: 352 bytes

    (0,1)    11.4
    (1,0)    7.1
    (2,1)    9.0909
    (3,3)    3.14159


  10x4 GraphBLAS double matrix, sparse by row
  sparsity control: sparse only
  A now sparse, 4 entries, memory: 368 bytes

    (0,1)    11.4
    (1,0)    7.1
    (2,1)    9.0909
    (3,3)    3.14159


  10x4 GraphBLAS double matrix, hypersparse by row
  sparsity control: hypersparse only
  A now hyper, 4 entries, memory: 352 bytes

    (0,1)    11.4
    (1,0)    7.1
    (2,1)    9.0909
    (3,3)    3.14159


  10x4 GraphBLAS double matrix, hypersparse by row
  sparsity control: hypersparse only
  A with bad nvec_nonempty, 4 entries, memory: 352 bytes

 index (1,0) invalid
hratio: 0.75 0.75 0
default bswitch [0] = 0.04
default bswitch [1] = 0.05
default bswitch [2] = 0.06
default bswitch [3] = 0.08
default bswitch [4] = 0.1
default bswitch [5] = 0.2
default bswitch [6] = 0.3
default bswitch [7] = 0.4
77.33
error expected (A format null):
error expected (A format null):
error expected:
error expected:
error expected:
error expected:
error expected (bad field):
error expected (bad field):
error expected (bad field):
error expected:
error expected:
error expected:
error expected:
error expected:
error expected:

  10x4 GraphBLAS double matrix, sparse by col
  sparsity control: hypersparse only
  invalid sparse matrix structure

  10x4 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  h restored, 4 entries, memory: 336 bytes


  10x4 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  invalid hypersparse matrix structure

  10x4 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  nvec restored, 4 entries, memory: 336 bytes


  10x4 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  ->h [0] = -1 invalid

  10x4 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  h[0] restored, 4 entries, memory: 336 bytes


  11x11 GraphBLAS bool matrix, hypersparse by row
  Eleven, no entries, memory: 4.3 KB
  iso value:   1
  pending tuples: 11 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  bool size: 1
    row: 0 col: 0 
    row: 0 col: 1 
    row: 0 col: 2 
    row: 0 col: 3 
    row: 0 col: 4 
    row: 0 col: 5 
    row: 0 col: 6 
    row: 0 col: 7 
    row: 0 col: 8 
    row: 0 col: 9 
    row: 0 col: 10 
  pending operator: implicit 2nd

  11x11 GraphBLAS bool matrix, hypersparse by row
  Eleven, 11 entries, memory: 336 bytes
  iso value:   1

    (0,0)   1
    (0,1)   1
    (0,2)   1
    (0,3)   1
    (0,4)   1
    (0,5)   1
    (0,6)   1
    (0,7)   1
    (0,8)   1
    (0,9)   1
    (0,10)   1

  11x11 GraphBLAS bool matrix, hypersparse by row
  Eleven, 11 entries, memory: 336 bytes
  iso value:   1


  11x11 GraphBLAS bool matrix, hypersparse by row
  Eleven, 11 entries, memory: 336 bytes
  iso value: 


  11x11 GraphBLAS bool matrix, hypersparse by row
  Eleven, 11 entries, memory: 336 bytes
  iso value:   1


  11x11 GraphBLAS bool matrix, hypersparse by row
  Eleven, 11 entries, memory: 336 bytes
  iso value:   1

    (0,0)   1
    (0,1)   1
    (0,2)   1
    (0,3)   1
    (0,4)   1
    (0,5)   1
    (0,6)   1
    (0,7)   1
    (0,8)   1
    (0,9)   1
    (0,10)   1

  11x11 GraphBLAS bool matrix, hypersparse by row
  Eleven, 11 entries, memory: 336 bytes
  iso value:   1

    (0,0)   1
    (0,1)   1
    (0,2)   1
    (0,3)   1
    (0,4)   1
    (0,5)   1
    (0,6)   1
    (0,7)   1
    (0,8)   1
    (0,9)   1
    (0,10)   1


Eleven invalid hypersparse:

  11x11 GraphBLAS bool matrix, hypersparse by row
  A->h is too small!

  11x11 GraphBLAS bool matrix, hypersparse by row
  A->h is too small!

  11x11 GraphBLAS bool matrix, full by row
  Eleven, 121 entries, memory: 224 bytes
  iso value:   1

    (0,0)   1
    (0,1)   1
    (0,2)   1
    (0,3)   1
    (0,4)   1
    (0,5)   1
    (0,6)   1
    (0,7)   1
    (0,8)   1
    (0,9)   1
    (0,10)   1
    (1,0)   1
    (1,1)   1
    (1,2)   1
    (1,3)   1
    (1,4)   1
    (1,5)   1
    (1,6)   1
    (1,7)   1
    (1,8)   1
    (1,9)   1
    (1,10)   1
    (2,0)   1
    (2,1)   1
    (2,2)   1
    (2,3)   1
    (2,4)   1
    (2,5)   1
    (2,6)   1
    ...

All GB_Matrix_check tests passed (errors expected)

  10x4 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A with one pending, 4 entries, memory: 6.4 KB
  pending tuples: 1 max pending: 256 zombies: 0

    (1,0)    7.1
    (0,1)    11.4
    (2,1)    9.0909
    (3,3)    3.14159
  pending tuples:
    GraphBLAS type:  double size: 8
    row: 3 col: 2    32.4
  pending operator: implicit 2nd


  10x4 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A with no pending, 5 entries, memory: 768 bytes

    (1,0)    7.1
    (0,1)    11.4
    (2,1)    9.0909
    (3,2)    32.4
    (3,3)    3.14159


  10x4 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A blocking mode, 5 entries, memory: 768 bytes

    (1,0)    7.1
    (0,1)    11.4
    (2,1)    9.0909
    (3,2)    32.4
    (3,3)    99.4


All blocking/nonblocking mode tests passed

  10x4 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A for ix_realloc, 5 entries, memory: 768 bytes

    (1,0)    7.1
    (0,1)    11.4
    (2,1)    9.0909
    (3,2)    32.4
    (3,3)    99.4


  10x4 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A pattern 1, 5 entries, memory: 768 bytes

    (1,0)    7.1
    (0,1)    11.4
    (2,1)    9.0909
    (3,2)    32.4
    (3,3)    99.4


  10x4 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A pattern 2, 5 entries, memory: 928 bytes

    (1,0)    7.1
    (0,1)    11.4
    (2,1)    9.0909
    (3,2)    32.4
    (3,3)    99.4


  10x4 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A for shallow op, 5 entries, memory: 928 bytes

    (1,0)    7.1
    (0,1)    11.4
    (2,1)    9.0909
    (3,2)    32.4
    (3,3)    99.4


  1x1 GraphBLAS float matrix, sparse by col
  Q empty, float, no entries, memory: 0 bytes

free A:
free B:
free C:
free E:
free F:
free v:
free u:
free z:

GrB_extract ============================================

  12x1 GraphBLAS double vector, bitmap by col
  start u , 10 entries, memory: 324 bytes

    (0,0)    821.557
    (1,0)    36.2943
    (2,0)    1.4534
    (3,0)    51.1414
    (5,0)    77.1552
    (6,0)    204.801
    (8,0)    652.001
    (9,0)    183.725
    (10,0)    19.5076
    (11,0)    329.759


  12x1 GraphBLAS double vector, bitmap by col
  start v , 10 entries, memory: 324 bytes

    (0,0)    821.557
    (1,0)    36.2943
    (2,0)    1.4534
    (3,0)    51.1414
    (5,0)    77.1552
    (6,0)    204.801
    (8,0)    652.001
    (9,0)    183.725
    (10,0)    19.5076
    (11,0)    329.759


  12x1 GraphBLAS double vector, bitmap by col
  u to check, 10 entries, memory: 324 bytes

    (0,0)    821.557
    (1,0)    36.2943
    (2,0)    1.4534
    (3,0)    51.1414
    (5,0)    77.1552
    (6,0)    204.801
    (8,0)    652.001
    (9,0)    183.725
    (10,0)    19.5076
    (11,0)    329.759


  12x1 GraphBLAS double vector, bitmap by col
  v to check, 10 entries, memory: 324 bytes

    (0,0)    821.557
    (1,0)    36.2943
    (2,0)    1.4534
    (3,0)    51.1414
    (5,0)    77.1552
    (6,0)    204.801
    (8,0)    652.001
    (9,0)    183.725
    (10,0)    19.5076
    (11,0)    329.759


  12x1 GraphBLAS double vector, bitmap by col
  v, 10 entries, memory: 324 bytes

    (0,0)    0.337293
    (1,0)    2.27776
    (2,0)    11.1243
    (4,0)    4.4319
    (6,0)    0.347899
    (7,0)    0.45809
    (8,0)    1.45361
    (9,0)    0.00843494
    (10,0)    2.65766
    (11,0)    27.4598


  12x1 GraphBLAS double vector, bitmap by col
  u, 10 entries, memory: 324 bytes

    (0,0)    0.337293
    (1,0)    2.27776
    (2,0)    11.1243
    (4,0)    4.4319
    (6,0)    0.347899
    (7,0)    0.45809
    (8,0)    1.45361
    (9,0)    0.00843494
    (10,0)    2.65766
    (11,0)    27.4598


  12x1 GraphBLAS double vector, bitmap by col
  v, 10 entries, memory: 324 bytes

    (0,0)    -11.1243
    (2,0)    -1.45361
    (3,0)    -0.45809
    (4,0)    -27.4598
    (5,0)    -4.4319
    (7,0)    -2.65766
    (8,0)    -0.337293
    (9,0)    -2.27776
    (10,0)    -0.00843494
    (11,0)    -0.347899


  12x1 GraphBLAS double vector, bitmap by col
  u, 10 entries, memory: 324 bytes

    (0,0)    -11.1243
    (2,0)    -1.45361
    (3,0)    -0.45809
    (4,0)    -27.4598
    (5,0)    -4.4319
    (7,0)    -2.65766
    (8,0)    -0.337293
    (9,0)    -2.27776
    (10,0)    -0.00843494
    (11,0)    -0.347899


GrB_extract ============================================

  12x1 GraphBLAS double vector, bitmap by col
  start u , 10 entries, memory: 324 bytes

    (0,0)    6.25689e+15
    (2,0)    1.33383e+15
    (3,0)    1.89642e+15
    (4,0)    5.57684e+14
    (5,0)    1.21263e+16
    (7,0)    5.40986e+15
    (8,0)    8.62748e+13
    (9,0)    7.476e+12
    (10,0)    1.4665e+14
    (11,0)    9.06608e+08


  12x1 GraphBLAS double vector, bitmap by col
  start v , 10 entries, memory: 324 bytes

    (0,0)    6.25689e+15
    (2,0)    1.33383e+15
    (3,0)    1.89642e+15
    (4,0)    5.57684e+14
    (5,0)    1.21263e+16
    (7,0)    5.40986e+15
    (8,0)    8.62748e+13
    (9,0)    7.476e+12
    (10,0)    1.4665e+14
    (11,0)    9.06608e+08


  12x1 GraphBLAS double vector, bitmap by col
  u to check, 10 entries, memory: 324 bytes

    (0,0)    6.25689e+15
    (2,0)    1.33383e+15
    (3,0)    1.89642e+15
    (4,0)    5.57684e+14
    (5,0)    1.21263e+16
    (7,0)    5.40986e+15
    (8,0)    8.62748e+13
    (9,0)    7.476e+12
    (10,0)    1.4665e+14
    (11,0)    9.06608e+08


  12x1 GraphBLAS double vector, bitmap by col
  v to check, 10 entries, memory: 324 bytes

    (0,0)    6.25689e+15
    (2,0)    1.33383e+15
    (3,0)    1.89642e+15
    (4,0)    5.57684e+14
    (5,0)    1.21263e+16
    (7,0)    5.40986e+15
    (8,0)    8.62748e+13
    (9,0)    7.476e+12
    (10,0)    1.4665e+14
    (11,0)    9.06608e+08


  12x1 GraphBLAS double vector, full by col
  v, 12 entries, memory: 312 bytes

    (0,0)    880848
    (1,0)    2.43015e+06
    (2,0)    79504
    (3,0)    5.9743e+06
    (4,0)    0.349378
    (5,0)    372627
    (6,0)    1.6954e+07
    (7,0)    258255
    (8,0)    5.58291e+06
    (9,0)    5094.77
    (10,0)    5094.77
    (11,0)    0.349378


  12x1 GraphBLAS double vector, full by col
  u, 12 entries, memory: 312 bytes

    (0,0)    880848
    (1,0)    2.43015e+06
    (2,0)    79504
    (3,0)    5.9743e+06
    (4,0)    0.349378
    (5,0)    372627
    (6,0)    1.6954e+07
    (7,0)    258255
    (8,0)    5.58291e+06
    (9,0)    5094.77
    (10,0)    5094.77
    (11,0)    0.349378


  12x1 GraphBLAS double vector, full by col
  v, 12 entries, memory: 312 bytes

    (0,0)    -79504
    (1,0)    -5.9743e+06
    (2,0)    -5.58291e+06
    (3,0)    -258255
    (4,0)    -0.349378
    (5,0)    -0.349378
    (6,0)    -372627
    (7,0)    -5094.77
    (8,0)    -880848
    (9,0)    -2.43015e+06
    (10,0)    -5094.77
    (11,0)    -1.6954e+07


  12x1 GraphBLAS double vector, full by col
  u, 12 entries, memory: 312 bytes

    (0,0)    -79504
    (1,0)    -5.9743e+06
    (2,0)    -5.58291e+06
    (3,0)    -258255
    (4,0)    -0.349378
    (5,0)    -0.349378
    (6,0)    -372627
    (7,0)    -5094.77
    (8,0)    -880848
    (9,0)    -2.43015e+06
    (10,0)    -5094.77
    (11,0)    -1.6954e+07


GrB_extract ============================================

  12x1 GraphBLAS double vector, full by col
  start u , 12 entries, memory: 312 bytes

    (0,0)    -79504
    (1,0)    5.36713e+71
    (2,0)    -5.58291e+06
    (3,0)    1.50347e+51
    (4,0)    1.63724e+44
    (5,0)    -0.349378
    (6,0)    -372627
    (7,0)    -5094.77
    (8,0)    -880848
    (9,0)    -2.43015e+06
    (10,0)    2.7124e+58
    (11,0)    -1.6954e+07


  12x1 GraphBLAS double vector, full by col
  start v , 12 entries, memory: 312 bytes

    (0,0)    -79504
    (1,0)    5.36713e+71
    (2,0)    -5.58291e+06
    (3,0)    1.50347e+51
    (4,0)    1.63724e+44
    (5,0)    -0.349378
    (6,0)    -372627
    (7,0)    -5094.77
    (8,0)    -880848
    (9,0)    -2.43015e+06
    (10,0)    2.7124e+58
    (11,0)    -1.6954e+07


  12x1 GraphBLAS double vector, full by col
  u to check, 12 entries, memory: 312 bytes

    (0,0)    -79504
    (1,0)    5.36713e+71
    (2,0)    -5.58291e+06
    (3,0)    1.50347e+51
    (4,0)    1.63724e+44
    (5,0)    -0.349378
    (6,0)    -372627
    (7,0)    -5094.77
    (8,0)    -880848
    (9,0)    -2.43015e+06
    (10,0)    2.7124e+58
    (11,0)    -1.6954e+07


  12x1 GraphBLAS double vector, full by col
  v to check, 12 entries, memory: 312 bytes

    (0,0)    -79504
    (1,0)    5.36713e+71
    (2,0)    -5.58291e+06
    (3,0)    1.50347e+51
    (4,0)    1.63724e+44
    (5,0)    -0.349378
    (6,0)    -372627
    (7,0)    -5094.77
    (8,0)    -880848
    (9,0)    -2.43015e+06
    (10,0)    2.7124e+58
    (11,0)    -1.6954e+07


  12x1 GraphBLAS double vector, full by col
  v, 12 entries, memory: 312 bytes

    (0,0)    -79504
    (1,0)    -29670
    (2,0)    -5.58291e+06
    (3,0)    -29670
    (4,0)    -91.8849
    (5,0)    -91.8849
    (6,0)    -372627
    (7,0)    -47.7385
    (8,0)    -880848
    (9,0)    -24011.4
    (10,0)    -47.7385
    (11,0)    -1.6954e+07


  12x1 GraphBLAS double vector, full by col
  u, 12 entries, memory: 312 bytes

    (0,0)    -79504
    (1,0)    -29670
    (2,0)    -5.58291e+06
    (3,0)    -29670
    (4,0)    -91.8849
    (5,0)    -91.8849
    (6,0)    -372627
    (7,0)    -47.7385
    (8,0)    -880848
    (9,0)    -24011.4
    (10,0)    -47.7385
    (11,0)    -1.6954e+07


  12x1 GraphBLAS double vector, full by col
  v, 12 entries, memory: 312 bytes

    (0,0)    -79504
    (1,0)    29670
    (2,0)    -5.58291e+06
    (3,0)    47.7385
    (4,0)    1.6954e+07
    (5,0)    -91.8849
    (6,0)    -372627
    (7,0)    -47.7385
    (8,0)    -880848
    (9,0)    -24011.4
    (10,0)    24011.4
    (11,0)    -1.6954e+07


  12x1 GraphBLAS double vector, full by col
  u, 12 entries, memory: 312 bytes

    (0,0)    -79504
    (1,0)    29670
    (2,0)    -5.58291e+06
    (3,0)    47.7385
    (4,0)    1.6954e+07
    (5,0)    -91.8849
    (6,0)    -372627
    (7,0)    -47.7385
    (8,0)    -880848
    (9,0)    -24011.4
    (10,0)    24011.4
    (11,0)    -1.6954e+07


----------------------------- nthreads

----------------------------- import/export

  12x12 GraphBLAS double matrix, bitmap by col
  A to import/export, 94 entries, memory: 1.5 KB

    (0,0)    5.70695e+20
    (1,0)    -24011.4
    (2,0)    -5.58291e+06
    (3,0)    -29670
    (4,0)    -91.8849
    (5,0)    -103875
    (8,0)    6.68941e+21
    (9,0)    -129164
    (10,0)    -47.7385
    (11,0)    5.50359e+24
    (0,1)    8.10778e+21
    (1,1)    8.78032e+23
    (3,1)    -1316.53
    (5,1)    -618.248
    (6,1)    -30552.3
    (8,1)    -2.32089e+17
    (9,1)    9.49377e+23
    (10,1)    2.85353e+25
    (0,2)    -5.58291e+06
    (2,2)    -3.12163e+28
    (4,2)    -750.477
    (5,2)    -3.68311e+06
    (7,2)    -198783
    (9,2)    -30552.3
    (0,3)    -29670
    (1,3)    -1316.53
    (3,3)    8.08229e+20
    (5,3)    3.98145e+23
    (6,3)    -99121.2
    (7,3)    2.7988e+17
    (9,3)    3.68097e+24
    (0,4)    -2384.76
    (2,4)    -750.477
    (4,4)    3.15406e+22
    (5,4)    -5.96257
    (6,4)    -4.14935e+06
    (8,4)    -1.65667
    (10,4)    -167.268
    (0,5)    -0.349378
    (1,5)    1.84666e+23
    (2,5)    -39.4471
    (3,5)    3.93233e+23
    (4,5)    -5.96257
    (5,5)    -1.65667
    (7,5)    1.62408e+20
    (8,5)    -1.3075e+06
    (9,5)    1.501e+28
    (10,5)    -0.0338679
    (1,6)    -5.38515e+06
    (2,6)    2.57395e+27
    (3,6)    -365233
    (4,6)    -4.14935e+06
    (6,6)    -59731.2
    (7,6)    2.97553e+18
    (8,6)    -129164
    (10,6)    -207.484
    (2,7)    -198783
    (3,7)    -4.66699
    (6,7)    -891.777
    (7,7)    -3.46458e+16
    (8,7)    5.44432e+29
    (9,7)    6.8555e+29
    (10,7)    -8.21612e-05
    (0,8)    6.68941e+21
    (1,8)    5.58291e+06
    (4,8)    2.80448e+15
    (5,8)    -3.18231e+06
    (6,8)    -129164
    (7,8)    5.44432e+29
    (8,8)    -3.68311e+06
    (9,8)    -4.53492e+06
    (10,8)    -7.82353e+21
    (11,8)    4.56913e+14
    (0,9)    3.69887e+22
    (1,9)    8.09708e+24
    (2,9)    -30552.3
    (4,9)    8.80765e+23
    (5,9)    2.33703e+26
    (8,9)    -4.53492e+06
    (10,9)    4.54628e+22
    (11,9)    9.19161e+24
    (0,10)    -47.7385
    (1,10)    2.85353e+25
    (2,10)    2.22615e+23
    (4,10)    -0.960076
    (5,10)    -33.1062
    (6,10)    -207.484
    (7,10)    -8.21612e-05
    (9,10)    4.54628e+22
    (10,10)    -2.84418
    (11,10)    1.63904e+20
    (0,11)    -1.6954e+07
    (8,11)    -4.14935e+06
    (11,11)    30552.3

    GraphBLAS type: type of A double size: 8
Ax_size 752
exported row 0
   col 0 value 5.70695e+20
   col 1 value 8.10778e+21
   col 2 value -5.58291e+06
   col 3 value -29670
   col 4 value -2384.76
   col 5 value -0.349378
   col 8 value 6.68941e+21
   col 9 value 3.69887e+22
   col 10 value -47.7385
   col 11 value -1.6954e+07
exported row 0
   col 0 value -24011.4
   col 1 value 8.78032e+23
   col 3 value -1316.53
   col 5 value 1.84666e+23
   col 6 value -5.38515e+06
   col 8 value 5.58291e+06
   col 9 value 8.09708e+24
   col 10 value 2.85353e+25
exported row 0
   col 0 value -5.58291e+06
   col 2 value -3.12163e+28
   col 4 value -750.477
   col 5 value -39.4471
   col 6 value 2.57395e+27
   col 7 value -198783
   col 9 value -30552.3
   col 10 value 2.22615e+23
exported row 0
   col 0 value -29670
   col 1 value -1316.53
   col 3 value 8.08229e+20
   col 5 value 3.93233e+23
   col 6 value -365233
   col 7 value -4.66699
exported row 0
   col 0 value -91.8849
   col 2 value -750.477
   col 4 value 3.15406e+22
   col 5 value -5.96257
   col 6 value -4.14935e+06
   col 8 value 2.80448e+15
   col 9 value 8.80765e+23
   col 10 value -0.960076
exported row 0
   col 0 value -103875
   col 1 value -618.248
   col 2 value -3.68311e+06
   col 3 value 3.98145e+23
   col 4 value -5.96257
   col 5 value -1.65667
   col 8 value -3.18231e+06
   col 9 value 2.33703e+26
   col 10 value -33.1062
exported row 0
   col 1 value -30552.3
   col 3 value -99121.2
   col 4 value -4.14935e+06
   col 6 value -59731.2
   col 7 value -891.777
   col 8 value -129164
   col 10 value -207.484
exported row 0
   col 2 value -198783
   col 3 value 2.7988e+17
   col 5 value 1.62408e+20
   col 6 value 2.97553e+18
   col 7 value -3.46458e+16
   col 8 value 5.44432e+29
   col 10 value -8.21612e-05
exported row 0
   col 0 value 6.68941e+21
   col 1 value -2.32089e+17
   col 4 value -1.65667
   col 5 value -1.3075e+06
   col 6 value -129164
   col 7 value 5.44432e+29
   col 8 value -3.68311e+06
   col 9 value -4.53492e+06
   col 11 value -4.14935e+06
exported row 0
   col 0 value -129164
   col 1 value 9.49377e+23
   col 2 value -30552.3
   col 3 value 3.68097e+24
   col 5 value 1.501e+28
   col 7 value 6.8555e+29
   col 8 value -4.53492e+06
   col 10 value 4.54628e+22
exported row 0
   col 0 value -47.7385
   col 1 value 2.85353e+25
   col 4 value -167.268
   col 5 value -0.0338679
   col 6 value -207.484
   col 7 value -8.21612e-05
   col 8 value -7.82353e+21
   col 9 value 4.54628e+22
   col 10 value -2.84418
exported row 0
   col 0 value 5.50359e+24
   col 8 value 4.56913e+14
   col 9 value 9.19161e+24
   col 10 value 1.63904e+20
   col 11 value 30552.3

  12x12 GraphBLAS double matrix, sparse by row
  A imported, 94 entries, memory: 1.8 KB

    (0,0)    5.70695e+20
    (0,1)    8.10778e+21
    (0,2)    -5.58291e+06
    (0,3)    -29670
    (0,4)    -2384.76
    (0,5)    -0.349378
    (0,8)    6.68941e+21
    (0,9)    3.69887e+22
    (0,10)    -47.7385
    (0,11)    -1.6954e+07
    (1,0)    -24011.4
    (1,1)    8.78032e+23
    (1,3)    -1316.53
    (1,5)    1.84666e+23
    (1,6)    -5.38515e+06
    (1,8)    5.58291e+06
    (1,9)    8.09708e+24
    (1,10)    2.85353e+25
    (2,0)    -5.58291e+06
    (2,2)    -3.12163e+28
    (2,4)    -750.477
    (2,5)    -39.4471
    (2,6)    2.57395e+27
    (2,7)    -198783
    (2,9)    -30552.3
    (2,10)    2.22615e+23
    (3,0)    -29670
    (3,1)    -1316.53
    (3,3)    8.08229e+20
    (3,5)    3.93233e+23
    (3,6)    -365233
    (3,7)    -4.66699
    (4,0)    -91.8849
    (4,2)    -750.477
    (4,4)    3.15406e+22
    (4,5)    -5.96257
    (4,6)    -4.14935e+06
    (4,8)    2.80448e+15
    (4,9)    8.80765e+23
    (4,10)    -0.960076
    (5,0)    -103875
    (5,1)    -618.248
    (5,2)    -3.68311e+06
    (5,3)    3.98145e+23
    (5,4)    -5.96257
    (5,5)    -1.65667
    (5,8)    -3.18231e+06
    (5,9)    2.33703e+26
    (5,10)    -33.1062
    (6,1)    -30552.3
    (6,3)    -99121.2
    (6,4)    -4.14935e+06
    (6,6)    -59731.2
    (6,7)    -891.777
    (6,8)    -129164
    (6,10)    -207.484
    (7,2)    -198783
    (7,3)    2.7988e+17
    (7,5)    1.62408e+20
    (7,6)    2.97553e+18
    (7,7)    -3.46458e+16
    (7,8)    5.44432e+29
    (7,10)    -8.21612e-05
    (8,0)    6.68941e+21
    (8,1)    -2.32089e+17
    (8,4)    -1.65667
    (8,5)    -1.3075e+06
    (8,6)    -129164
    (8,7)    5.44432e+29
    (8,8)    -3.68311e+06
    (8,9)    -4.53492e+06
    (8,11)    -4.14935e+06
    (9,0)    -129164
    (9,1)    9.49377e+23
    (9,2)    -30552.3
    (9,3)    3.68097e+24
    (9,5)    1.501e+28
    (9,7)    6.8555e+29
    (9,8)    -4.53492e+06
    (9,10)    4.54628e+22
    (10,0)    -47.7385
    (10,1)    2.85353e+25
    (10,4)    -167.268
    (10,5)    -0.0338679
    (10,6)    -207.484
    (10,7)    -8.21612e-05
    (10,8)    -7.82353e+21
    (10,9)    4.54628e+22
    (10,10)    -2.84418
    (11,0)    5.50359e+24
    (11,8)    4.56913e+14
    (11,9)    9.19161e+24
    (11,10)    1.63904e+20
    (11,11)    30552.3


  12x12 GraphBLAS double matrix, hypersparse by col
  A still OK, 94 entries, memory: 1.9 KB


  12x12 GraphBLAS double matrix, sparse by row
  A also OK, 94 entries, memory: 1.8 KB


  12x12 GraphBLAS double matrix, sparse by col
  A here too OK, 94 entries, memory: 1.8 KB


  12x12 GraphBLAS double matrix, hypersparse by row
  A yet still OK, 94 entries, memory: 1.9 KB


  12x12 GraphBLAS double matrix, hypersparse by col
  A yet again OK, 94 entries, memory: 1.9 KB


  12x1 GraphBLAS double vector, full by col
  u to import/export, 12 entries, memory: 312 bytes

    (0,0)    -79504
    (1,0)    29670
    (2,0)    -5.58291e+06
    (3,0)    47.7385
    (4,0)    1.6954e+07
    (5,0)    -91.8849
    (6,0)    -372627
    (7,0)    -47.7385
    (8,0)    -880848
    (9,0)    -24011.4
    (10,0)    24011.4
    (11,0)    -1.6954e+07

    GraphBLAS type: type of u double size: 8
nvals 12
   col 0 value -79504
   col 1 value 29670
   col 2 value -5.58291e+06
   col 3 value 47.7385
   col 4 value 1.6954e+07
   col 5 value -91.8849
   col 6 value -372627
   col 7 value -47.7385
   col 8 value -880848
   col 9 value -24011.4
   col 10 value 24011.4
   col 11 value -1.6954e+07

  12x1 GraphBLAS double vector, sparse by col
  u imported, 12 entries, memory: 424 bytes

    (0,0)    -79504
    (1,0)    29670
    (2,0)    -5.58291e+06
    (3,0)    47.7385
    (4,0)    1.6954e+07
    (5,0)    -91.8849
    (6,0)    -372627
    (7,0)    -47.7385
    (8,0)    -880848
    (9,0)    -24011.4
    (10,0)    24011.4
    (11,0)    -1.6954e+07


  12x1 GraphBLAS double vector, sparse by col
  u still OK, 12 entries, memory: 424 bytes


  12x1 GraphBLAS double vector, sparse by col
  u still OK, 12 entries, memory: 424 bytes

    (0,0)    -79504
    (1,0)    29670
    (2,0)    -5.58291e+06
    (3,0)    47.7385
    (4,0)    1.6954e+07
    (5,0)    -91.8849
    (6,0)    -372627
    (7,0)    -47.7385
    (8,0)    -880848
    (9,0)    -24011.4
    (10,0)    24011.4
    (11,0)    -1.6954e+07



free all: nmalloc 0
nmalloc 0 before complex_finalize
nmalloc 0 done
nmalloc 0 all freed
nmalloc 0 all freed
nmalloc 0 after finalize

check errlog.txt for errors tested
All error-handling tests passed (all errors above were expected)

JIT init 198: 4

Burble with standard printf/flush:
 [ GrB_Matrix_nvals 
   9.54e-07 sec ]

Burble with myprintf/myflush:
[[myprintf: [ GrB_Matrix_nvals ]]myflush
[[myprintf:
   0 sec ]
]]myflush

default memory pool limits:
expected error: [GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrB_Matrix_reduce_BinaryOp (w, M, accum, op, A, desc)
Invalid binary operator: z=lt(x,y); all types of x,y,z must be the same
]
expected error: [GraphBLAS error: GrB_NOT_IMPLEMENTED
function: GrB_Matrix_reduce_BinaryOp (w, M, accum, op, A, desc)
Invalid binary operator: z=div(x,y) has no equivalent monoid
]

  10x10 GraphBLAS float matrix, hypersparse by col
  C ok, no entries, memory: 240 bytes


  10x10 GraphBLAS float matrix, hypersparse by col
  C iso invald, no entries, memory: 240 bytes
  invalid iso matrix

  1x1 GraphBLAS float scalar, sparse by col
  scalar init, no entries, memory: 232 bytes

expected error: [GraphBLAS error: GrB_EMPTY_OBJECT
function: GxB_Matrix_build_Scalar (C, I, J, scalar, nvals)
Scalar value is missing]
expected error: [GraphBLAS error: GrB_EMPTY_OBJECT
function: GxB_Vector_build_Scalar (w, I, scalar, nvals)
Scalar value is missing]

  1x1 GraphBLAS float scalar, full by col
  scalar set, 1 entry, memory: 224 bytes
  iso value:    3

    (0,0)    3

  1x1 GraphBLAS float scalar, sparse by col
  sparsity control: sparse only
  scalar, 1 entry, memory: 248 bytes
  iso value:    3

    (0,0)    3

expected error: [GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_build_UINT64 (C, I, J, X, nvals, dup)
Value(s) of type [uint64_t] cannot be typecast to matrix of type [int]
]
expected error: [GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxB_Matrix_build_Scalar (C, I, J, scalar, nvals)
Value(s) of type [float] cannot be typecast to matrix of type [int]
]

  10x10 GraphBLAS float matrix, sparse by col
  C to export, 8 entries, memory: 376 bytes
  iso value:    1

    (0,1)    1
    (1,2)    1
    (2,3)    1
    (3,4)    1
    (4,5)    1
    (5,6)    1
    (6,7)    1
    (7,8)    1


  10x10 GraphBLAS float matrix, sparse by col
  C imported sparse, 8 entries, memory: 376 bytes
  iso value:    1

    (0,1)    1
    (1,2)    1
    (2,3)    1
    (3,4)    1
    (4,5)    1
    (5,6)    1
    (6,7)    1
    (7,8)    1


  10x10 GraphBLAS float matrix, hypersparse by col
  C imported hyper, 8 entries, memory: 424 bytes
  iso value:    1

    (0,1)    1
    (1,2)    1
    (2,3)    1
    (3,4)    1
    (4,5)    1
    (5,6)    1
    (6,7)    1
    (7,8)    1

  10x10 GraphBLAS float matrix, sparse by col
  C imported non-iso, 100 entries, memory: 1.5 KB

    (0,0)    1
    (1,0)    1
    (2,0)    1
    (3,0)    1
    (4,0)    1
    (5,0)    1
    (6,0)    1
    (7,0)    1
    (8,0)    1
    (9,0)    1
    (0,1)    1
    (1,1)    1
    (2,1)    1
    (3,1)    1
    (4,1)    1
    (5,1)    1
    (6,1)    1
    (7,1)    1
    (8,1)    1
    (9,1)    1
    (0,2)    1
    (1,2)    1
    (2,2)    1
    (3,2)    1
    (4,2)    1
    (5,2)    1
    (6,2)    1
    (7,2)    1
    (8,2)    1
    ...

  10x10 GraphBLAS float matrix, sparse by col
  C imported iso, 100 entries, memory: 1.1 KB
  iso value:    1

    (0,0)    1
    (1,0)    1
    (2,0)    1
    (3,0)    1
    (4,0)    1
    (5,0)    1
    (6,0)    1
    (7,0)    1
    (8,0)    1
    (9,0)    1
    (0,1)    1
    (1,1)    1
    (2,1)    1
    (3,1)    1
    (4,1)    1
    (5,1)    1
    (6,1)    1
    (7,1)    1
    (8,1)    1
    (9,1)    1
    (0,2)    1
    (1,2)    1
    (2,2)    1
    (3,2)    1
    (4,2)    1
    (5,2)    1
    (6,2)    1
    (7,2)    1
    (8,2)    1
    ...
    GraphBLAS type: My4x64 user-defined: [my4x64] size: 32
    typedef struct { int64_t stuff [4] ; } my4x64 ;

################# sparsity_control 1

  4x4 GraphBLAS my4x64 matrix, hypersparse by col
  sparsity control: hypersparse only
  C stuff, 12 entries, memory: 768 bytes

    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (0,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (3,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
C(0,1) = [0, 1, 32, 99]
C(0,2) = [0, 2, 32, 99]
C(0,3) = [0, 3, 32, 99]
C(1,0) = [1, 0, 32, 99]
C(1,2) = [1, 2, 32, 99]
C(1,3) = [1, 3, 32, 99]
C(2,0) = [2, 0, 32, 99]
C(2,1) = [2, 1, 32, 99]
C(2,3) = [2, 3, 32, 99]
C(3,0) = [3, 0, 32, 99]
C(3,1) = [3, 1, 32, 99]
C(3,2) = [3, 2, 32, 99]

================ Tile 0

  2x2 GraphBLAS my4x64 matrix, hypersparse by col
  sparsity control: hypersparse only
  Tile, 2 entries, memory: 336 bytes

    (1,0) [user-defined value]
    (0,1) [user-defined value]

Tile(0,1) = [0, 1, 32, 99]
Tile(1,0) = [1, 0, 32, 99]

================ Tile 1

  2x2 GraphBLAS my4x64 matrix, hypersparse by col
  sparsity control: hypersparse only
  Tile, 4 entries, memory: 416 bytes

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]

Tile(0,0) = [0, 2, 32, 99]
Tile(0,1) = [0, 3, 32, 99]
Tile(1,0) = [1, 2, 32, 99]
Tile(1,1) = [1, 3, 32, 99]

================ Tile 2

  2x2 GraphBLAS my4x64 matrix, hypersparse by col
  sparsity control: hypersparse only
  Tile, 4 entries, memory: 416 bytes

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]

Tile(0,0) = [2, 0, 32, 99]
Tile(0,1) = [2, 1, 32, 99]
Tile(1,0) = [3, 0, 32, 99]
Tile(1,1) = [3, 1, 32, 99]

================ Tile 3

  2x2 GraphBLAS my4x64 matrix, hypersparse by col
  sparsity control: hypersparse only
  Tile, 2 entries, memory: 336 bytes

    (1,0) [user-defined value]
    (0,1) [user-defined value]

Tile(0,1) = [2, 3, 32, 99]
Tile(1,0) = [3, 2, 32, 99]

################# sparsity_control 2

  4x4 GraphBLAS my4x64 matrix, sparse by col
  sparsity control: sparse only
  C stuff, 12 entries, memory: 736 bytes

    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (0,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (3,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
C(0,1) = [0, 1, 32, 99]
C(0,2) = [0, 2, 32, 99]
C(0,3) = [0, 3, 32, 99]
C(1,0) = [1, 0, 32, 99]
C(1,2) = [1, 2, 32, 99]
C(1,3) = [1, 3, 32, 99]
C(2,0) = [2, 0, 32, 99]
C(2,1) = [2, 1, 32, 99]
C(2,3) = [2, 3, 32, 99]
C(3,0) = [3, 0, 32, 99]
C(3,1) = [3, 1, 32, 99]
C(3,2) = [3, 2, 32, 99]

================ Tile 0

  2x2 GraphBLAS my4x64 matrix, sparse by col
  sparsity control: sparse only
  Tile, 2 entries, memory: 320 bytes

    (1,0) [user-defined value]
    (0,1) [user-defined value]

Tile(0,1) = [0, 1, 32, 99]
Tile(1,0) = [1, 0, 32, 99]

================ Tile 1

  2x2 GraphBLAS my4x64 matrix, sparse by col
  sparsity control: sparse only
  Tile, 4 entries, memory: 400 bytes

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]

Tile(0,0) = [0, 2, 32, 99]
Tile(0,1) = [0, 3, 32, 99]
Tile(1,0) = [1, 2, 32, 99]
Tile(1,1) = [1, 3, 32, 99]

================ Tile 2

  2x2 GraphBLAS my4x64 matrix, sparse by col
  sparsity control: sparse only
  Tile, 4 entries, memory: 400 bytes

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]

Tile(0,0) = [2, 0, 32, 99]
Tile(0,1) = [2, 1, 32, 99]
Tile(1,0) = [3, 0, 32, 99]
Tile(1,1) = [3, 1, 32, 99]

================ Tile 3

  2x2 GraphBLAS my4x64 matrix, sparse by col
  sparsity control: sparse only
  Tile, 2 entries, memory: 320 bytes

    (1,0) [user-defined value]
    (0,1) [user-defined value]

Tile(0,1) = [2, 3, 32, 99]
Tile(1,0) = [3, 2, 32, 99]

################# sparsity_control 4

  4x4 GraphBLAS my4x64 matrix, bitmap by col
  sparsity control: bitmap only
  C stuff, 12 entries, memory: 744 bytes

    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (0,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (3,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
C(0,1) = [0, 1, 32, 99]
C(0,2) = [0, 2, 32, 99]
C(0,3) = [0, 3, 32, 99]
C(1,0) = [1, 0, 32, 99]
C(1,2) = [1, 2, 32, 99]
C(1,3) = [1, 3, 32, 99]
C(2,0) = [2, 0, 32, 99]
C(2,1) = [2, 1, 32, 99]
C(2,3) = [2, 3, 32, 99]
C(3,0) = [3, 0, 32, 99]
C(3,1) = [3, 1, 32, 99]
C(3,2) = [3, 2, 32, 99]

================ Tile 0

  2x2 GraphBLAS my4x64 matrix, bitmap by col
  sparsity control: bitmap only
  Tile, 2 entries, memory: 352 bytes

    (1,0) [user-defined value]
    (0,1) [user-defined value]

Tile(0,1) = [0, 1, 32, 99]
Tile(1,0) = [1, 0, 32, 99]

================ Tile 1

  2x2 GraphBLAS my4x64 matrix, bitmap by col
  sparsity control: bitmap only
  Tile, 4 entries, memory: 352 bytes

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]

Tile(0,0) = [0, 2, 32, 99]
Tile(0,1) = [0, 3, 32, 99]
Tile(1,0) = [1, 2, 32, 99]
Tile(1,1) = [1, 3, 32, 99]

================ Tile 2

  2x2 GraphBLAS my4x64 matrix, bitmap by col
  sparsity control: bitmap only
  Tile, 4 entries, memory: 352 bytes

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]

Tile(0,0) = [2, 0, 32, 99]
Tile(0,1) = [2, 1, 32, 99]
Tile(1,0) = [3, 0, 32, 99]
Tile(1,1) = [3, 1, 32, 99]

================ Tile 3

  2x2 GraphBLAS my4x64 matrix, bitmap by col
  sparsity control: bitmap only
  Tile, 2 entries, memory: 352 bytes

    (1,0) [user-defined value]
    (0,1) [user-defined value]

Tile(0,1) = [2, 3, 32, 99]
Tile(1,0) = [3, 2, 32, 99]

################# sparsity_control 8

  4x4 GraphBLAS my4x64 matrix, full by col
  sparsity control: full
  C stuff, 16 entries, memory: 728 bytes

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]
C(0,0) = [0, 0, 32, 99]
C(0,1) = [0, 1, 32, 99]
C(0,2) = [0, 2, 32, 99]
C(0,3) = [0, 3, 32, 99]
C(1,0) = [1, 0, 32, 99]
C(1,1) = [1, 1, 32, 99]
C(1,2) = [1, 2, 32, 99]
C(1,3) = [1, 3, 32, 99]
C(2,0) = [2, 0, 32, 99]
C(2,1) = [2, 1, 32, 99]
C(2,2) = [2, 2, 32, 99]
C(2,3) = [2, 3, 32, 99]
C(3,0) = [3, 0, 32, 99]
C(3,1) = [3, 1, 32, 99]
C(3,2) = [3, 2, 32, 99]
C(3,3) = [3, 3, 32, 99]

================ Tile 0

  2x2 GraphBLAS my4x64 matrix, full by col
  sparsity control: full
  Tile, 4 entries, memory: 344 bytes

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]

Tile(0,0) = [0, 0, 32, 99]
Tile(0,1) = [0, 1, 32, 99]
Tile(1,0) = [1, 0, 32, 99]
Tile(1,1) = [1, 1, 32, 99]

================ Tile 1

  2x2 GraphBLAS my4x64 matrix, full by col
  sparsity control: full
  Tile, 4 entries, memory: 344 bytes

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]

Tile(0,0) = [0, 2, 32, 99]
Tile(0,1) = [0, 3, 32, 99]
Tile(1,0) = [1, 2, 32, 99]
Tile(1,1) = [1, 3, 32, 99]

================ Tile 2

  2x2 GraphBLAS my4x64 matrix, full by col
  sparsity control: full
  Tile, 4 entries, memory: 344 bytes

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]

Tile(0,0) = [2, 0, 32, 99]
Tile(0,1) = [2, 1, 32, 99]
Tile(1,0) = [3, 0, 32, 99]
Tile(1,1) = [3, 1, 32, 99]

================ Tile 3

  2x2 GraphBLAS my4x64 matrix, full by col
  sparsity control: full
  Tile, 4 entries, memory: 344 bytes

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]

Tile(0,0) = [2, 2, 32, 99]
Tile(0,1) = [2, 3, 32, 99]
Tile(1,0) = [3, 2, 32, 99]
Tile(1,1) = [3, 3, 32, 99]

  4x4 GraphBLAS my4x64 matrix, full by col
  sparsity control: full
  C stuff iso, 16 entries, memory: 248 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]

  4x4 GraphBLAS my4x64 matrix, full by col
  C stuff iso imported, 16 entries, memory: 728 bytes

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]

C(0,0) = [3, 3, 32, 99]
C(0,1) = [3, 3, 32, 99]
C(0,2) = [3, 3, 32, 99]
C(0,3) = [3, 3, 32, 99]
C(1,0) = [3, 3, 32, 99]
C(1,1) = [3, 3, 32, 99]
C(1,2) = [3, 3, 32, 99]
C(1,3) = [3, 3, 32, 99]
C(2,0) = [3, 3, 32, 99]
C(2,1) = [3, 3, 32, 99]
C(2,2) = [3, 3, 32, 99]
C(2,3) = [3, 3, 32, 99]
C(3,0) = [3, 3, 32, 99]
C(3,1) = [3, 3, 32, 99]
C(3,2) = [3, 3, 32, 99]
C(3,3) = [3, 3, 32, 99]

  4x4 GraphBLAS my4x64 matrix, sparse by col
  sparsity control: sparse only
  C stuff sparse non-iso, 16 entries, memory: 544 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]


  4x4 GraphBLAS my4x64 matrix, sparse (jumbled) by col
  sparsity control: sparse only
  C stuff jumbled, 16 entries, memory: 1.0 KB

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]


  4x4 GraphBLAS my4x64 matrix, sparse by col
  sparsity control: sparse only
  C stuff wait, 16 entries, memory: 1.0 KB

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]


  4x4 GraphBLAS my4x64 matrix, sparse by col
  sparsity control: sparse only
  C stuff non iso, 16 entries, memory: 1.0 KB

    (0,0) [user-defined value]
    (1,0) [user-defined value]
    (2,0) [user-defined value]
    (3,0) [user-defined value]
    (0,1) [user-defined value]
    (1,1) [user-defined value]
    (2,1) [user-defined value]
    (3,1) [user-defined value]
    (0,2) [user-defined value]
    (1,2) [user-defined value]
    (2,2) [user-defined value]
    (3,2) [user-defined value]
    (0,3) [user-defined value]
    (1,3) [user-defined value]
    (2,3) [user-defined value]
    (3,3) [user-defined value]


  10x10 GraphBLAS float matrix, full by col
  C iso full, 100 entries, memory: 224 bytes
  iso value:    1

    (0,0)    1
    (1,0)    1
    (2,0)    1
    (3,0)    1
    (4,0)    1
    (5,0)    1
    (6,0)    1
    (7,0)    1
    (8,0)    1
    (9,0)    1
    (0,1)    1
    (1,1)    1
    (2,1)    1
    (3,1)    1
    (4,1)    1
    (5,1)    1
    (6,1)    1
    (7,1)    1
    (8,1)    1
    (9,1)    1
    (0,2)    1
    (1,2)    1
    (2,2)    1
    (3,2)    1
    (4,2)    1
    (5,2)    1
    (6,2)    1
    (7,2)    1
    (8,2)    1
    ...

  10x10 GraphBLAS float matrix, full by col
  C non-iso full, 100 entries, memory: 616 bytes

    (0,0)    2
    (1,0)    1
    (2,0)    1
    (3,0)    1
    (4,0)    1
    (5,0)    1
    (6,0)    1
    (7,0)    1
    (8,0)    1
    (9,0)    1
    (0,1)    1
    (1,1)    1
    (2,1)    1
    (3,1)    1
    (4,1)    1
    (5,1)    1
    (6,1)    1
    (7,1)    1
    (8,1)    1
    (9,1)    1
    (0,2)    1
    (1,2)    1
    (2,2)    1
    (3,2)    1
    (4,2)    1
    (5,2)    1
    (6,2)    1
    (7,2)    1
    (8,2)    1
    ...

  4x4 GraphBLAS float matrix, full by col
  A iso, 16 entries, memory: 224 bytes
  iso value:    1

    (0,0)    1
    (1,0)    1
    (2,0)    1
    (3,0)    1
    (0,1)    1
    (1,1)    1
    (2,1)    1
    (3,1)    1
    (0,2)    1
    (1,2)    1
    (2,2)    1
    (3,2)    1
    (0,3)    1
    (1,3)    1
    (2,3)    1
    (3,3)    1

  10x10 GraphBLAS float matrix, hypersparse by col
  C iso with pending, no entries, memory: 4.3 KB
  iso value:    1
  pending tuples: 16 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  float size: 4
    row: 1 col: 1 
    row: 2 col: 1 
    row: 3 col: 1 
    row: 4 col: 1 
    row: 1 col: 2 
    row: 2 col: 2 
    row: 3 col: 2 
    row: 4 col: 2 
    row: 1 col: 3 
    row: 2 col: 3 
    row: 3 col: 3 
    row: 4 col: 3 
    row: 1 col: 4 
    row: 2 col: 4 
    row: 3 col: 4 
    row: 4 col: 4 
  pending operator: implicit 2nd

  2x2 GraphBLAS float matrix, bitmap by col
  A non-iso, 4 entries, memory: 240 bytes

    (0,0)    1.1
    (1,0)    2.1
    (0,1)    1.2
    (1,1)    2.2

  10x10 GraphBLAS float matrix, bitmap by col
  C non-iso, 16 entries, memory: 716 bytes

    (1,1)    1.1
    (2,1)    2.1
    (3,1)    1
    (4,1)    1
    (1,2)    1.2
    (2,2)    2.2
    (3,2)    1
    (4,2)    1
    (1,3)    1
    (2,3)    1
    (3,3)    1
    (4,3)    1
    (1,4)    1
    (2,4)    1
    (3,4)    1
    (4,4)    1

  100x100 GraphBLAS float matrix, hypersparse by col
  C iso, 2 entries, memory: 264 bytes
  iso value:    1

    (0,0)    1
    (1,0)    1

  100x100 GraphBLAS float matrix, hypersparse by col
  A iso, 2 entries, memory: 264 bytes
  iso value:    1

    (0,0)    1
    (1,0)    1

  100x100 GraphBLAS float matrix, hypersparse by col
  C iso, C<M>=op(A), 2 entries, memory: 4.6 KB
  iso value:    1
  pending tuples: 2 max pending: 256 zombies: 0

    (0,0)    1
    (1,0)    1
  pending tuples:
    GraphBLAS type:  float size: 4
    row: 0 col: 2 
    row: 1 col: 2 
  pending operator: implicit 2nd

  10x10 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap only
  C for C<M>=A, 3 entries, memory: 716 bytes

    (0,0)    1.1
    (3,3)    9.7
    (4,4)    9.9

  2x2 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap only
  A for C<M>=A, 2 entries, memory: 240 bytes

    (0,0)    1.1
    (0,1)    1.2

  10x10 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap only
  C after C<M>=A, 2 entries, memory: 716 bytes

    (1,1)    1.1
    (1,2)    1.2

    GraphBLAS Descriptor: descriptor !M 
    d.out      = default   
    d.mask     = complement
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   

  100x1 GraphBLAS float vector, sparse by col
  w after first setElement, no entries, memory: 2.3 KB
  iso value:    0
  pending tuples: 1 max pending: 256 zombies: 0
  pending tuples:
    GraphBLAS type:  float size: 4
    row: 0 col: 0 
  pending operator: implicit 2nd

  100x1 GraphBLAS float vector, sparse by col
  w before extractElement, 2 entries, memory: 3.4 KB
  pending tuples: 2 max pending: 256 zombies: 0

    (0,0)    2
    (1,0)    -1
  pending tuples:
    GraphBLAS type:  float size: 4
    row: 2 col: 0    2
    row: 2 col: 0    3
  pending operator: implicit 2nd

  100x1 GraphBLAS float vector, sparse by col
  w after extractElement, 3 entries, memory: 268 bytes

    (0,0)    2
    (1,0)    -1
    (2,0)    3

  10x10 GraphBLAS float matrix, hypersparse by col
  C before transpose, 1 entry, memory: 5.4 KB
  pending tuples: 1 max pending: 256 zombies: 0

    (2,4)    8.25
  pending tuples:
    GraphBLAS type:  float size: 4
    row: 1 col: 3    9.5
  pending operator: implicit 2nd

  10x10 GraphBLAS float matrix, sparse by col
  C after transpose, 2 entries, memory: 328 bytes

    (3,1)    9.5
    (4,2)    8.25

----------------- ntasks: 1
task:   0 kfirst: 0 klast: 3 pfirst:  0 plast: 11

----------------- ntasks: 2
task:   0 kfirst: 0 klast: 1 pfirst:  0 plast:  5
task:   1 kfirst: 2 klast: 3 pfirst:  6 plast: 11

----------------- ntasks: 3
task:   0 kfirst: 0 klast: 1 pfirst:  0 plast:  3
task:   1 kfirst: 1 klast: 2 pfirst:  4 plast:  7
task:   2 kfirst: 2 klast: 3 pfirst:  8 plast: 11

----------------- ntasks: 4
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast:  2
task:   1 kfirst: 1 klast: 1 pfirst:  3 plast:  5
task:   2 kfirst: 2 klast: 2 pfirst:  6 plast:  8
task:   3 kfirst: 3 klast: 3 pfirst:  9 plast: 11

----------------- ntasks: 5
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast:  1
task:   1 kfirst: 0 klast: 1 pfirst:  2 plast:  3
task:   2 kfirst: 1 klast: 2 pfirst:  4 plast:  6
task:   3 kfirst: 2 klast: 2 pfirst:  7 plast:  8
task:   4 kfirst: 3 klast: 3 pfirst:  9 plast: 11

----------------- ntasks: 6
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast:  1
task:   1 kfirst: 0 klast: 1 pfirst:  2 plast:  3
task:   2 kfirst: 1 klast: 1 pfirst:  4 plast:  5
task:   3 kfirst: 2 klast: 2 pfirst:  6 plast:  7
task:   4 kfirst: 2 klast: 3 pfirst:  8 plast:  9
task:   5 kfirst: 3 klast: 3 pfirst: 10 plast: 11

----------------- ntasks: 7
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast:  0
task:   1 kfirst: 0 klast: 0 pfirst:  1 plast:  2
task:   2 kfirst: 1 klast: 1 pfirst:  3 plast:  4
task:   3 kfirst: 1 klast: 1 pfirst:  5 plast:  5
task:   4 kfirst: 2 klast: 2 pfirst:  6 plast:  7
task:   5 kfirst: 2 klast: 3 pfirst:  8 plast:  9
task:   6 kfirst: 3 klast: 3 pfirst: 10 plast: 11

----------------- ntasks: 8
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast:  0
task:   1 kfirst: 0 klast: 0 pfirst:  1 plast:  2
task:   2 kfirst: 1 klast: 1 pfirst:  3 plast:  3
task:   3 kfirst: 1 klast: 1 pfirst:  4 plast:  5
task:   4 kfirst: 2 klast: 2 pfirst:  6 plast:  6
task:   5 kfirst: 2 klast: 2 pfirst:  7 plast:  8
task:   6 kfirst: 3 klast: 3 pfirst:  9 plast:  9
task:   7 kfirst: 3 klast: 3 pfirst: 10 plast: 11

----------------- ntasks: 9
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast:  0
task:   1 kfirst: 0 klast: 0 pfirst:  1 plast:  1
task:   2 kfirst: 0 klast: 1 pfirst:  2 plast:  3
task:   3 kfirst: 1 klast: 1 pfirst:  4 plast:  4
task:   4 kfirst: 1 klast: 1 pfirst:  5 plast:  5
task:   5 kfirst: 2 klast: 2 pfirst:  6 plast:  7
task:   6 kfirst: 2 klast: 2 pfirst:  8 plast:  8
task:   7 kfirst: 3 klast: 3 pfirst:  9 plast:  9
task:   8 kfirst: 3 klast: 3 pfirst: 10 plast: 11

----------------- ntasks: 10
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast:  0
task:   1 kfirst: 0 klast: 0 pfirst:  1 plast:  1
task:   2 kfirst: 0 klast: 0 pfirst:  2 plast:  2
task:   3 kfirst: 1 klast: 1 pfirst:  3 plast:  3
task:   4 kfirst: 1 klast: 1 pfirst:  4 plast:  5
task:   5 kfirst: 2 klast: 2 pfirst:  6 plast:  6
task:   6 kfirst: 2 klast: 2 pfirst:  7 plast:  7
task:   7 kfirst: 2 klast: 2 pfirst:  8 plast:  8
task:   8 kfirst: 3 klast: 3 pfirst:  9 plast:  9
task:   9 kfirst: 3 klast: 3 pfirst: 10 plast: 11

----------------- ntasks: 11
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast:  0
task:   1 kfirst: 0 klast: 0 pfirst:  1 plast:  1
task:   2 kfirst: 0 klast: 0 pfirst:  2 plast:  2
task:   3 kfirst: 1 klast: 1 pfirst:  3 plast:  3
task:   4 kfirst: 1 klast: 1 pfirst:  4 plast:  4
task:   5 kfirst: 1 klast: 1 pfirst:  5 plast:  5
task:   6 kfirst: 2 klast: 2 pfirst:  6 plast:  6
task:   7 kfirst: 2 klast: 2 pfirst:  7 plast:  7
task:   8 kfirst: 2 klast: 2 pfirst:  8 plast:  8
task:   9 kfirst: 3 klast: 3 pfirst:  9 plast:  9
task:  10 kfirst: 3 klast: 3 pfirst: 10 plast: 11

----------------- ntasks: 12
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast:  0
task:   1 kfirst: 0 klast: 0 pfirst:  1 plast:  1
task:   2 kfirst: 0 klast: 0 pfirst:  2 plast:  2
task:   3 kfirst: 1 klast: 1 pfirst:  3 plast:  3
task:   4 kfirst: 1 klast: 1 pfirst:  4 plast:  4
task:   5 kfirst: 1 klast: 1 pfirst:  5 plast:  5
task:   6 kfirst: 2 klast: 2 pfirst:  6 plast:  6
task:   7 kfirst: 2 klast: 2 pfirst:  7 plast:  7
task:   8 kfirst: 2 klast: 2 pfirst:  8 plast:  8
task:   9 kfirst: 3 klast: 3 pfirst:  9 plast:  9
task:  10 kfirst: 3 klast: 3 pfirst: 10 plast: 10
task:  11 kfirst: 3 klast: 3 pfirst: 11 plast: 11

----------------- ntasks: 13
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast: -1
task:   1 kfirst: 0 klast: 0 pfirst:  0 plast:  0
task:   2 kfirst: 0 klast: 0 pfirst:  1 plast:  1
task:   3 kfirst: 0 klast: 0 pfirst:  2 plast:  2
task:   4 kfirst: 1 klast: 1 pfirst:  3 plast:  3
task:   5 kfirst: 1 klast: 1 pfirst:  4 plast:  4
task:   6 kfirst: 1 klast: 1 pfirst:  5 plast:  5
task:   7 kfirst: 2 klast: 2 pfirst:  6 plast:  6
task:   8 kfirst: 2 klast: 2 pfirst:  7 plast:  7
task:   9 kfirst: 2 klast: 2 pfirst:  8 plast:  8
task:  10 kfirst: 3 klast: 3 pfirst:  9 plast:  9
task:  11 kfirst: 3 klast: 3 pfirst: 10 plast: 10
task:  12 kfirst: 3 klast: 3 pfirst: 11 plast: 11

----------------- ntasks: 14
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast: -1
task:   1 kfirst: 0 klast: 0 pfirst:  0 plast:  0
task:   2 kfirst: 0 klast: 0 pfirst:  1 plast:  1
task:   3 kfirst: 0 klast: 0 pfirst:  2 plast:  2
task:   4 kfirst: 1 klast: 1 pfirst:  3 plast:  3
task:   5 kfirst: 1 klast: 1 pfirst:  4 plast:  4
task:   6 kfirst: 1 klast: 1 pfirst:  5 plast:  5
task:   7 kfirst: 2 klast: 2 pfirst:  6 plast:  5
task:   8 kfirst: 2 klast: 2 pfirst:  6 plast:  6
task:   9 kfirst: 2 klast: 2 pfirst:  7 plast:  7
task:  10 kfirst: 2 klast: 2 pfirst:  8 plast:  8
task:  11 kfirst: 3 klast: 3 pfirst:  9 plast:  9
task:  12 kfirst: 3 klast: 3 pfirst: 10 plast: 10
task:  13 kfirst: 3 klast: 3 pfirst: 11 plast: 11

----------------- ntasks: 15
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast: -1
task:   1 kfirst: 0 klast: 0 pfirst:  0 plast:  0
task:   2 kfirst: 0 klast: 0 pfirst:  1 plast:  1
task:   3 kfirst: 0 klast: 0 pfirst:  2 plast:  2
task:   4 kfirst: 1 klast: 1 pfirst:  3 plast:  3
task:   5 kfirst: 1 klast: 1 pfirst:  4 plast:  3
task:   6 kfirst: 1 klast: 1 pfirst:  4 plast:  4
task:   7 kfirst: 1 klast: 1 pfirst:  5 plast:  5
task:   8 kfirst: 2 klast: 2 pfirst:  6 plast:  6
task:   9 kfirst: 2 klast: 2 pfirst:  7 plast:  7
task:  10 kfirst: 2 klast: 2 pfirst:  8 plast:  7
task:  11 kfirst: 2 klast: 2 pfirst:  8 plast:  8
task:  12 kfirst: 3 klast: 3 pfirst:  9 plast:  9
task:  13 kfirst: 3 klast: 3 pfirst: 10 plast: 10
task:  14 kfirst: 3 klast: 3 pfirst: 11 plast: 11

----------------- ntasks: 16
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast: -1
task:   1 kfirst: 0 klast: 0 pfirst:  0 plast:  0
task:   2 kfirst: 0 klast: 0 pfirst:  1 plast:  1
task:   3 kfirst: 0 klast: 0 pfirst:  2 plast:  2
task:   4 kfirst: 1 klast: 1 pfirst:  3 plast:  2
task:   5 kfirst: 1 klast: 1 pfirst:  3 plast:  3
task:   6 kfirst: 1 klast: 1 pfirst:  4 plast:  4
task:   7 kfirst: 1 klast: 1 pfirst:  5 plast:  5
task:   8 kfirst: 2 klast: 2 pfirst:  6 plast:  5
task:   9 kfirst: 2 klast: 2 pfirst:  6 plast:  6
task:  10 kfirst: 2 klast: 2 pfirst:  7 plast:  7
task:  11 kfirst: 2 klast: 2 pfirst:  8 plast:  8
task:  12 kfirst: 3 klast: 3 pfirst:  9 plast:  8
task:  13 kfirst: 3 klast: 3 pfirst:  9 plast:  9
task:  14 kfirst: 3 klast: 3 pfirst: 10 plast: 10
task:  15 kfirst: 3 klast: 3 pfirst: 11 plast: 11

----------------- ntasks: 17
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast: -1
task:   1 kfirst: 0 klast: 0 pfirst:  0 plast:  0
task:   2 kfirst: 0 klast: 0 pfirst:  1 plast:  1
task:   3 kfirst: 0 klast: 0 pfirst:  2 plast:  1
task:   4 kfirst: 0 klast: 0 pfirst:  2 plast:  2
task:   5 kfirst: 1 klast: 1 pfirst:  3 plast:  3
task:   6 kfirst: 1 klast: 1 pfirst:  4 plast:  3
task:   7 kfirst: 1 klast: 1 pfirst:  4 plast:  4
task:   8 kfirst: 1 klast: 1 pfirst:  5 plast:  5
task:   9 kfirst: 2 klast: 2 pfirst:  6 plast:  6
task:  10 kfirst: 2 klast: 2 pfirst:  7 plast:  6
task:  11 kfirst: 2 klast: 2 pfirst:  7 plast:  7
task:  12 kfirst: 2 klast: 2 pfirst:  8 plast:  8
task:  13 kfirst: 3 klast: 3 pfirst:  9 plast:  8
task:  14 kfirst: 3 klast: 3 pfirst:  9 plast:  9
task:  15 kfirst: 3 klast: 3 pfirst: 10 plast: 10
task:  16 kfirst: 3 klast: 3 pfirst: 11 plast: 11

----------------- ntasks: 18
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast: -1
task:   1 kfirst: 0 klast: 0 pfirst:  0 plast:  0
task:   2 kfirst: 0 klast: 0 pfirst:  1 plast:  1
task:   3 kfirst: 0 klast: 0 pfirst:  2 plast:  1
task:   4 kfirst: 0 klast: 0 pfirst:  2 plast:  2
task:   5 kfirst: 1 klast: 1 pfirst:  3 plast:  3
task:   6 kfirst: 1 klast: 1 pfirst:  4 plast:  3
task:   7 kfirst: 1 klast: 1 pfirst:  4 plast:  4
task:   8 kfirst: 1 klast: 1 pfirst:  5 plast:  5
task:   9 kfirst: 2 klast: 2 pfirst:  6 plast:  5
task:  10 kfirst: 2 klast: 2 pfirst:  6 plast:  6
task:  11 kfirst: 2 klast: 2 pfirst:  7 plast:  7
task:  12 kfirst: 2 klast: 2 pfirst:  8 plast:  7
task:  13 kfirst: 2 klast: 2 pfirst:  8 plast:  8
task:  14 kfirst: 3 klast: 3 pfirst:  9 plast:  9
task:  15 kfirst: 3 klast: 3 pfirst: 10 plast:  9
task:  16 kfirst: 3 klast: 3 pfirst: 10 plast: 10
task:  17 kfirst: 3 klast: 3 pfirst: 11 plast: 11

----------------- ntasks: 19
task:   0 kfirst: 0 klast: 0 pfirst:  0 plast: -1
task:   1 kfirst: 0 klast: 0 pfirst:  0 plast:  0
task:   2 kfirst: 0 klast: 0 pfirst:  1 plast:  0
task:   3 kfirst: 0 klast: 0 pfirst:  1 plast:  1
task:   4 kfirst: 0 klast: 0 pfirst:  2 plast:  2
task:   5 kfirst: 1 klast: 1 pfirst:  3 plast:  2
task:   6 kfirst: 1 klast: 1 pfirst:  3 plast:  3
task:   7 kfirst: 1 klast: 1 pfirst:  4 plast:  4
task:   8 kfirst: 1 klast: 1 pfirst:  5 plast:  4
task:   9 kfirst: 1 klast: 1 pfirst:  5 plast:  5
task:  10 kfirst: 2 klast: 2 pfirst:  6 plast:  5
task:  11 kfirst: 2 klast: 2 pfirst:  6 plast:  6
task:  12 kfirst: 2 klast: 2 pfirst:  7 plast:  7
task:  13 kfirst: 2 klast: 2 pfirst:  8 plast:  7
task:  14 kfirst: 2 klast: 2 pfirst:  8 plast:  8
task:  15 kfirst: 3 klast: 3 pfirst:  9 plast:  9
task:  16 kfirst: 3 klast: 3 pfirst: 10 plast:  9
task:  17 kfirst: 3 klast: 3 pfirst: 10 plast: 10
task:  18 kfirst: 3 klast: 3 pfirst: 11 plast: 11

  10x10 GraphBLAS float matrix, hypersparse by col
  empty C for size, no entries, memory: 240 bytes

size of C: 240 bytes

  100x1 GraphBLAS float vector, sparse by col
  empty w for size, no entries, memory: 232 bytes

size of w: 232 bytes

  1x1 GraphBLAS float scalar, sparse by col
  empty scalar for size, no entries, memory: 232 bytes

size of scalar: 232 bytes

  10x10 GraphBLAS float matrix, hypersparse by col
  non-empty C for size (with pending), 1 entry, memory: 5.4 KB
  pending tuples: 7 max pending: 256 zombies: 0

    (0,1)    0
  pending tuples:
    GraphBLAS type:  float size: 4
    row: 1 col: 2    1
    row: 2 col: 3    2
    row: 3 col: 4    3
    row: 4 col: 5    4
    row: 5 col: 6    5
    row: 6 col: 7    6
    row: 7 col: 8    7
  pending operator: implicit 2nd

size of C: 5480 bytes

  100x1 GraphBLAS float vector, sparse by col
  non-empty w for size (with pending), 1 entry, memory: 3.3 KB
  pending tuples: 7 max pending: 256 zombies: 0

    (0,0)    0
  pending tuples:
    GraphBLAS type:  float size: 4
    row: 1 col: 0    1
    row: 2 col: 0    2
    row: 3 col: 0    3
    row: 4 col: 0    4
    row: 5 col: 0    5
    row: 6 col: 0    6
    row: 7 col: 0    7
  pending operator: implicit 2nd

size of w: 3424 bytes

  1x1 GraphBLAS float scalar, full by col
  non-empty scalar for size, 1 entry, memory: 224 bytes
  iso value:    3

    (0,0)    3
size of scalar: 224 bytes

  10x10 GraphBLAS float matrix, sparse by col
  non-empty C for size (no pending), 8 entries, memory: 496 bytes

    (0,1)    0
    (1,2)    1
    (2,3)    2
    (3,4)    3
    (4,5)    4
    (5,6)    5
    (6,7)    6
    (7,8)    7

size of C: 496 bytes

  100x1 GraphBLAS float vector, bitmap by col
  non-empty w for size (no pending), 8 entries, memory: 716 bytes

    (0,0)    0
    (1,0)    1
    (2,0)    2
    (3,0)    3
    (4,0)    4
    (5,0)    5
    (6,0)    6
    (7,0)    7

size of w: 716 bytes

GB_mex_about3: all tests passed


  1x3 GraphBLAS int32_t matrix, bitmap by row
  A for v5.1.7 test: initial, 3 entries, memory: 236 bytes

    (0,0)   -3
    (0,1)   10
    (0,2)   -4


  1x3 GraphBLAS int32_t matrix, bitmap by row
  A for v5.1.7 test: spones(A), 3 entries, memory: 232 bytes
  iso value:   1

    (0,0)   1
    (0,1)   1
    (0,2)   1


GB_mex_about4: all tests passed, time: 0.000356913


    GraphBLAS IndexUnaryOp: rowindex32 (built-in): z=rowindex(x,i,j,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4

    GraphBLAS IndexUnaryOp: rowindex64 (built-in): z=rowindex(x,i,j,y)
    GraphBLAS type: ztype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: colindex32 (built-in): z=colindex(x,i,j,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4

    GraphBLAS IndexUnaryOp: colindex64 (built-in): z=colindex(x,i,j,y)
    GraphBLAS type: ztype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: diagindex32 (built-in): z=diagindex(x,i,j,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4

    GraphBLAS IndexUnaryOp: diagindex64 (built-in): z=diagindex(x,i,j,y)
    GraphBLAS type: ztype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: tril (built-in): z=tril(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: triu (built-in): z=triu(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: diag (built-in): z=diag(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: offdiag (built-in): z=offdiag(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: colle (built-in): z=colle(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: colgt (built-in): z=colgt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: rowle (built-in): z=rowle(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: rowgt (built-in): z=rowgt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: valueeq_bool (built-in): z=valueeq(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype bool size: 1
    GraphBLAS type: ytype bool size: 1

    GraphBLAS IndexUnaryOp: valueeq_int8 (built-in): z=valueeq(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int8_t size: 1
    GraphBLAS type: ytype int8_t size: 1

    GraphBLAS IndexUnaryOp: valueeq_int16 (built-in): z=valueeq(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int16_t size: 2
    GraphBLAS type: ytype int16_t size: 2

    GraphBLAS IndexUnaryOp: valueeq_int32 (built-in): z=valueeq(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4

    GraphBLAS IndexUnaryOp: valueeq_int64 (built-in): z=valueeq(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: valueeq_uint8 (built-in): z=valueeq(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint8_t size: 1
    GraphBLAS type: ytype uint8_t size: 1

    GraphBLAS IndexUnaryOp: valueeq_uint16 (built-in): z=valueeq(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint16_t size: 2
    GraphBLAS type: ytype uint16_t size: 2

    GraphBLAS IndexUnaryOp: valueeq_uint32 (built-in): z=valueeq(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint32_t size: 4
    GraphBLAS type: ytype uint32_t size: 4

    GraphBLAS IndexUnaryOp: valueeq_uint64 (built-in): z=valueeq(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint64_t size: 8
    GraphBLAS type: ytype uint64_t size: 8

    GraphBLAS IndexUnaryOp: valueeq_fp32 (built-in): z=valueeq(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype float size: 4
    GraphBLAS type: ytype float size: 4

    GraphBLAS IndexUnaryOp: valueeq_fp64 (built-in): z=valueeq(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype double size: 8
    GraphBLAS type: ytype double size: 8

    GraphBLAS IndexUnaryOp: valueeq_fc32 (built-in): z=valueeq(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype float complex size: 8
    GraphBLAS type: ytype float complex size: 8

    GraphBLAS IndexUnaryOp: valueeq_fc64 (built-in): z=valueeq(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype double complex size: 16
    GraphBLAS type: ytype double complex size: 16

    GraphBLAS IndexUnaryOp: valuene_bool (built-in): z=valuene(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype bool size: 1
    GraphBLAS type: ytype bool size: 1

    GraphBLAS IndexUnaryOp: valuene_int8 (built-in): z=valuene(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int8_t size: 1
    GraphBLAS type: ytype int8_t size: 1

    GraphBLAS IndexUnaryOp: valuene_int16 (built-in): z=valuene(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int16_t size: 2
    GraphBLAS type: ytype int16_t size: 2

    GraphBLAS IndexUnaryOp: valuene_int32 (built-in): z=valuene(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4

    GraphBLAS IndexUnaryOp: valuene_int64 (built-in): z=valuene(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: valuene_uint8 (built-in): z=valuene(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint8_t size: 1
    GraphBLAS type: ytype uint8_t size: 1

    GraphBLAS IndexUnaryOp: valuene_uint16 (built-in): z=valuene(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint16_t size: 2
    GraphBLAS type: ytype uint16_t size: 2

    GraphBLAS IndexUnaryOp: valuene_uint32 (built-in): z=valuene(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint32_t size: 4
    GraphBLAS type: ytype uint32_t size: 4

    GraphBLAS IndexUnaryOp: valuene_uint64 (built-in): z=valuene(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint64_t size: 8
    GraphBLAS type: ytype uint64_t size: 8

    GraphBLAS IndexUnaryOp: valuene_fp32 (built-in): z=valuene(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype float size: 4
    GraphBLAS type: ytype float size: 4

    GraphBLAS IndexUnaryOp: valuene_fp64 (built-in): z=valuene(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype double size: 8
    GraphBLAS type: ytype double size: 8

    GraphBLAS IndexUnaryOp: valuene_fc32 (built-in): z=valuene(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype float complex size: 8
    GraphBLAS type: ytype float complex size: 8

    GraphBLAS IndexUnaryOp: valuene_fc64 (built-in): z=valuene(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype double complex size: 16
    GraphBLAS type: ytype double complex size: 16

    GraphBLAS IndexUnaryOp: valuelt_bool (built-in): z=valuelt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype bool size: 1
    GraphBLAS type: ytype bool size: 1

    GraphBLAS IndexUnaryOp: valuelt_int8 (built-in): z=valuelt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int8_t size: 1
    GraphBLAS type: ytype int8_t size: 1

    GraphBLAS IndexUnaryOp: valuelt_int16 (built-in): z=valuelt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int16_t size: 2
    GraphBLAS type: ytype int16_t size: 2

    GraphBLAS IndexUnaryOp: valuelt_int32 (built-in): z=valuelt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4

    GraphBLAS IndexUnaryOp: valuelt_int64 (built-in): z=valuelt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: valuelt_uint8 (built-in): z=valuelt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint8_t size: 1
    GraphBLAS type: ytype uint8_t size: 1

    GraphBLAS IndexUnaryOp: valuelt_uint16 (built-in): z=valuelt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint16_t size: 2
    GraphBLAS type: ytype uint16_t size: 2

    GraphBLAS IndexUnaryOp: valuelt_uint32 (built-in): z=valuelt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint32_t size: 4
    GraphBLAS type: ytype uint32_t size: 4

    GraphBLAS IndexUnaryOp: valuelt_uint64 (built-in): z=valuelt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint64_t size: 8
    GraphBLAS type: ytype uint64_t size: 8

    GraphBLAS IndexUnaryOp: valuelt_fp32 (built-in): z=valuelt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype float size: 4
    GraphBLAS type: ytype float size: 4

    GraphBLAS IndexUnaryOp: valuelt_fp64 (built-in): z=valuelt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype double size: 8
    GraphBLAS type: ytype double size: 8

    GraphBLAS IndexUnaryOp: valuele_bool (built-in): z=valuele(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype bool size: 1
    GraphBLAS type: ytype bool size: 1

    GraphBLAS IndexUnaryOp: valuele_int8 (built-in): z=valuele(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int8_t size: 1
    GraphBLAS type: ytype int8_t size: 1

    GraphBLAS IndexUnaryOp: valuele_int16 (built-in): z=valuele(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int16_t size: 2
    GraphBLAS type: ytype int16_t size: 2

    GraphBLAS IndexUnaryOp: valuele_int32 (built-in): z=valuele(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4

    GraphBLAS IndexUnaryOp: valuele_int64 (built-in): z=valuele(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: valuele_uint8 (built-in): z=valuele(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint8_t size: 1
    GraphBLAS type: ytype uint8_t size: 1

    GraphBLAS IndexUnaryOp: valuele_uint16 (built-in): z=valuele(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint16_t size: 2
    GraphBLAS type: ytype uint16_t size: 2

    GraphBLAS IndexUnaryOp: valuele_uint32 (built-in): z=valuele(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint32_t size: 4
    GraphBLAS type: ytype uint32_t size: 4

    GraphBLAS IndexUnaryOp: valuele_uint64 (built-in): z=valuele(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint64_t size: 8
    GraphBLAS type: ytype uint64_t size: 8

    GraphBLAS IndexUnaryOp: valuele_fp32 (built-in): z=valuele(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype float size: 4
    GraphBLAS type: ytype float size: 4

    GraphBLAS IndexUnaryOp: valuele_fp64 (built-in): z=valuele(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype double size: 8
    GraphBLAS type: ytype double size: 8

    GraphBLAS IndexUnaryOp: valuegt_bool (built-in): z=valuegt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype bool size: 1
    GraphBLAS type: ytype bool size: 1

    GraphBLAS IndexUnaryOp: valuegt_int8 (built-in): z=valuegt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int8_t size: 1
    GraphBLAS type: ytype int8_t size: 1

    GraphBLAS IndexUnaryOp: valuegt_int16 (built-in): z=valuegt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int16_t size: 2
    GraphBLAS type: ytype int16_t size: 2

    GraphBLAS IndexUnaryOp: valuegt_int32 (built-in): z=valuegt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4

    GraphBLAS IndexUnaryOp: valuegt_int64 (built-in): z=valuegt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: valuegt_uint8 (built-in): z=valuegt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint8_t size: 1
    GraphBLAS type: ytype uint8_t size: 1

    GraphBLAS IndexUnaryOp: valuegt_uint16 (built-in): z=valuegt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint16_t size: 2
    GraphBLAS type: ytype uint16_t size: 2

    GraphBLAS IndexUnaryOp: valuegt_uint32 (built-in): z=valuegt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint32_t size: 4
    GraphBLAS type: ytype uint32_t size: 4

    GraphBLAS IndexUnaryOp: valuegt_uint64 (built-in): z=valuegt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint64_t size: 8
    GraphBLAS type: ytype uint64_t size: 8

    GraphBLAS IndexUnaryOp: valuegt_fp32 (built-in): z=valuegt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype float size: 4
    GraphBLAS type: ytype float size: 4

    GraphBLAS IndexUnaryOp: valuegt_fp64 (built-in): z=valuegt(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype double size: 8
    GraphBLAS type: ytype double size: 8

    GraphBLAS IndexUnaryOp: valuege_bool (built-in): z=valuege(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype bool size: 1
    GraphBLAS type: ytype bool size: 1

    GraphBLAS IndexUnaryOp: valuege_int8 (built-in): z=valuege(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int8_t size: 1
    GraphBLAS type: ytype int8_t size: 1

    GraphBLAS IndexUnaryOp: valuege_int16 (built-in): z=valuege(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int16_t size: 2
    GraphBLAS type: ytype int16_t size: 2

    GraphBLAS IndexUnaryOp: valuege_int32 (built-in): z=valuege(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4

    GraphBLAS IndexUnaryOp: valuege_int64 (built-in): z=valuege(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS IndexUnaryOp: valuege_uint8 (built-in): z=valuege(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint8_t size: 1
    GraphBLAS type: ytype uint8_t size: 1

    GraphBLAS IndexUnaryOp: valuege_uint16 (built-in): z=valuege(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint16_t size: 2
    GraphBLAS type: ytype uint16_t size: 2

    GraphBLAS IndexUnaryOp: valuege_uint32 (built-in): z=valuege(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint32_t size: 4
    GraphBLAS type: ytype uint32_t size: 4

    GraphBLAS IndexUnaryOp: valuege_uint64 (built-in): z=valuege(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype uint64_t size: 8
    GraphBLAS type: ytype uint64_t size: 8

    GraphBLAS IndexUnaryOp: valuege_fp32 (built-in): z=valuege(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype float size: 4
    GraphBLAS type: ytype float size: 4

    GraphBLAS IndexUnaryOp: valuege_fp64 (built-in): z=valuege(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype double size: 8
    GraphBLAS type: ytype double size: 8

    GraphBLAS IndexUnaryOp: nothing NULL

    GraphBLAS IndexUnaryOp: plus     IndexUnaryOp has an invalid opcode

    GraphBLAS IndexUnaryOp: banded (user-defined): z=banded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void banded_idx                        
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    if (d < 0) d = -d ;                
    (*z) = (d <= *thunk) ;             
}

    GraphBLAS IndexUnaryOp: upperbanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

    GraphBLAS IndexUnaryOp: upperbanded64 (user-defined): z=upperbanded_idx_int64(x,i,j,y)
    GraphBLAS type: ztype int64_t size: 8
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx_int64                     
(                                              
    int64_t *z,                                
    const int64_t *x,   // unused              
    int64_t i,                                 
    int64_t j,                                 
    const int64_t *thunk                       
)                                              
{                                              
    int64_t d = j-i ;                          
    (*z) = (int64_t) (d >= 0 && d <= *thunk) ; 
}

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A for select:banded, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405

 [ GrB_select (A bitmap) (bitmap select) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/a7/GB_jit__select_bitmap__06fe18866a__banded_idx.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/a7/GB_jit__select_bitmap__06fe18866a__banded_idx.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/a7/libGB_jit__select_bitmap__06fe18866a__banded_idx.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/a7/GB_jit__select_bitmap__06fe18866a__banded_idx.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) 
   0.122 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 486 bytes

    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 486 bytes

    (0,1)   1
    (1,1)   101
    (1,2)   102
    (2,2)   202
    (2,3)   203
    (3,3)   303
    (3,4)   304
    (4,4)   404
    (4,5)   405


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 486 bytes

    (0,1)   100
    (1,1)   101
    (1,2)   201
    (2,2)   202
    (2,3)   302
    (3,3)   303
    (3,4)   403
    (4,4)   404


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 0
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   1.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   8.82e-06 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   6.91e-06 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   2.1e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) (jit: run) 
   3.7e-05 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 632 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A for select:banded, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405

 [ GrB_select (A bitmap) (bitmap select) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/57/GB_jit__select_bitmap__06fe18888a__banded_idx.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/57/GB_jit__select_bitmap__06fe18888a__banded_idx.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/57/libGB_jit__select_bitmap__06fe18888a__banded_idx.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/57/GB_jit__select_bitmap__06fe18888a__banded_idx.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) 
   0.123 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 486 bytes

    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 486 bytes

    (0,1)   1
    (1,1)   101
    (1,2)   102
    (2,2)   202
    (2,3)   203
    (3,3)   303
    (3,4)   304
    (4,4)   404
    (4,5)   405


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 486 bytes

    (0,1)   100
    (1,1)   101
    (1,2)   201
    (2,2)   202
    (2,3)   302
    (3,3)   303
    (3,4)   403
    (4,4)   404


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 1
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   1.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   1e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   7.87e-06 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   2.69e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) (jit: run) 
   3.1e-05 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 752 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A for select:banded, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42

 [ GrB_select (A bitmap) (iso select) (bitmap select) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/bf/GB_jit__select_bitmap__36fe18866a__banded_idx.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/bf/GB_jit__select_bitmap__36fe18866a__banded_idx.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/bf/libGB_jit__select_bitmap__36fe18866a__banded_idx.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/bf/GB_jit__select_bitmap__36fe18866a__banded_idx.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) 
   0.124 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 2
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   1e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   1.22e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   1.1e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   2.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   1.81e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) (jit: run) 
   2.91e-05 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 632 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A for select:banded, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42

 [ GrB_select (A bitmap) (iso select) (bitmap select) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/a6/GB_jit__select_bitmap__36fe18888a__banded_idx.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/a6/GB_jit__select_bitmap__36fe18888a__banded_idx.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/a6/libGB_jit__select_bitmap__36fe18888a__banded_idx.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/a6/GB_jit__select_bitmap__36fe18888a__banded_idx.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) 
   0.195 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 3
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   5.29e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   3.81e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   4.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   9.99e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   0.000149 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) (jit: run) 
   0.000145 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 752 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405

 [ GrB_select (jit: run) (jit: run) (sparse to bitmap) 
   8.89e-05 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 486 bytes

    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 486 bytes

    (0,1)   1
    (1,1)   101
    (1,2)   102
    (2,2)   202
    (2,3)   203
    (3,3)   303
    (3,4)   304
    (4,4)   404
    (4,5)   405


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 486 bytes

    (0,1)   100
    (1,1)   101
    (1,2)   201
    (2,2)   202
    (2,3)   302
    (3,3)   303
    (3,4)   403
    (4,4)   404


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 4
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   4.89e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   6.7e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.91e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   4.29e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   5.79e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.72e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   3.22e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) 
   5.01e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   0.000103 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   0.000363 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   0.00024 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 632 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405

 [ GrB_select (jit: run) (jit: run) (sparse to bitmap) 
   0.00012 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 486 bytes

    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 486 bytes

    (0,1)   1
    (1,1)   101
    (1,2)   102
    (2,2)   202
    (2,3)   203
    (3,3)   303
    (3,4)   304
    (4,4)   404
    (4,5)   405


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 486 bytes

    (0,1)   100
    (1,1)   101
    (1,2)   201
    (2,2)   202
    (2,3)   302
    (3,3)   303
    (3,4)   403
    (4,4)   404


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 5
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   3.22e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   4.29e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.19e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.31e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.41e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   3e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   3e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) 
   6.39e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   8.7e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   0.000302 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   0.000109 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 752 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42

 [ GrB_select (iso select) (jit: run) (jit: run) (sparse to bitmap) 
   4.2e-05 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 6
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.31e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   1.5e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.91e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   5.7e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   5.79e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   4.98e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   3.19e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) 
   6.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) 
   4.51e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   7.2e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   5.89e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   6.6e-05 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 632 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42

 [ GrB_select (iso select) (jit: run) (jit: run) (sparse to bitmap) 
   5.2e-05 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 7
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.91e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.5e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.81e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.91e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.69e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.1e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   8.49e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   5.39e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) 
   6.29e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) 
   4.98e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   9.89e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   0.000161 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   8.3e-05 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 752 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A for select:banded, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405

 [ GrB_select (A bitmap) (bitmap select) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/3c/GB_jit__select_bitmap__06fe68866a__banded_idx_32.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/3c/GB_jit__select_bitmap__06fe68866a__banded_idx_32.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/3c/libGB_jit__select_bitmap__06fe68866a__banded_idx_32.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/3c/GB_jit__select_bitmap__06fe68866a__banded_idx_32.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) 
   0.18 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 486 bytes

    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 486 bytes

    (0,1)   1
    (1,1)   101
    (1,2)   102
    (2,2)   202
    (2,3)   203
    (3,3)   303
    (3,4)   304
    (4,4)   404
    (4,5)   405


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 486 bytes

    (0,1)   100
    (1,1)   101
    (1,2)   201
    (2,2)   202
    (2,3)   302
    (3,3)   303
    (3,4)   403
    (4,4)   404


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 8
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   1.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   1.29e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   1.41e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   3.31e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 366 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) (jit: run) 
   4.1e-05 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 632 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A for select:banded, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405

 [ GrB_select (A bitmap) (bitmap select) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/4d/GB_jit__select_bitmap__06fe68888a__banded_idx_32.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/4d/GB_jit__select_bitmap__06fe68888a__banded_idx_32.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/4d/libGB_jit__select_bitmap__06fe68888a__banded_idx_32.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/4d/GB_jit__select_bitmap__06fe68888a__banded_idx_32.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) 
   0.182 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 486 bytes

    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 486 bytes

    (0,1)   1
    (1,1)   101
    (1,2)   102
    (2,2)   202
    (2,3)   203
    (3,3)   303
    (3,4)   304
    (4,4)   404
    (4,5)   405


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 486 bytes

    (0,1)   100
    (1,1)   101
    (1,2)   201
    (2,2)   202
    (2,3)   302
    (3,3)   303
    (3,4)   403
    (4,4)   404


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 9
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   4.01e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   2.1e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   2.19e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) 
   4.79e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 486 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (bitmap/full transpose) (jit: run) 
   7.1e-05 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 752 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A for select:banded, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42

 [ GrB_select (A bitmap) (iso select) (bitmap select) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/f1/GB_jit__select_bitmap__36fe68866a__banded_idx_32.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/f1/GB_jit__select_bitmap__36fe68866a__banded_idx_32.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/f1/libGB_jit__select_bitmap__36fe68866a__banded_idx_32.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/f1/GB_jit__select_bitmap__36fe68866a__banded_idx_32.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) 
   0.186 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 10
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   2.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   1.5e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   1.79e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   6.7e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   5.51e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) (jit: run) 
   8.2e-05 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 632 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A for select:banded, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42

 [ GrB_select (A bitmap) (iso select) (bitmap select) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/8a/GB_jit__select_bitmap__36fe68888a__banded_idx_32.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/8a/GB_jit__select_bitmap__36fe68888a__banded_idx_32.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/8a/libGB_jit__select_bitmap__36fe68888a__banded_idx_32.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/8a/GB_jit__select_bitmap__36fe68888a__banded_idx_32.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) 
   0.177 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 11
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   3.79e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   2.31e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   2.19e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   6.51e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) 
   4.48e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  A, 29 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (bitmap/full transpose) (jit: run) 
   8.3e-05 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 752 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405

 [ GrB_select (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/27/GB_jit__select_phase1__06fe688665__banded_idx_32.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/27/GB_jit__select_phase1__06fe688665__banded_idx_32.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/27/libGB_jit__select_phase1__06fe688665__banded_idx_32.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/27/GB_jit__select_phase1__06fe688665__banded_idx_32.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/28/GB_jit__select_phase2__06fe688665__banded_idx_32.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/28/GB_jit__select_phase2__06fe688665__banded_idx_32.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/28/libGB_jit__select_phase2__06fe688665__banded_idx_32.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/28/GB_jit__select_phase2__06fe688665__banded_idx_32.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) (sparse to bitmap) 
   0.398 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 486 bytes

    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 486 bytes

    (0,1)   1
    (1,1)   101
    (1,2)   102
    (2,2)   202
    (2,3)   203
    (3,3)   303
    (3,4)   304
    (4,4)   404
    (4,5)   405


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 486 bytes

    (0,1)   100
    (1,1)   101
    (1,2)   201
    (2,2)   202
    (2,3)   302
    (3,3)   303
    (3,4)   403
    (4,4)   404


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 12
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.88e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.81e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   6.2e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   4.79e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   3.29e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) 
   5.51e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   9.3e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   5.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 620 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   8.11e-05 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 632 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405

 [ GrB_select (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/c6/GB_jit__select_phase1__06fe688885__banded_idx_32.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/c6/GB_jit__select_phase1__06fe688885__banded_idx_32.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/c6/libGB_jit__select_phase1__06fe688885__banded_idx_32.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/c6/GB_jit__select_phase1__06fe688885__banded_idx_32.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/e6/GB_jit__select_phase2__06fe688885__banded_idx_32.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/e6/GB_jit__select_phase2__06fe688885__banded_idx_32.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/e6/libGB_jit__select_phase2__06fe688885__banded_idx_32.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/e6/GB_jit__select_phase2__06fe688885__banded_idx_32.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) (sparse to bitmap) 
   0.373 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 486 bytes

    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 486 bytes

    (0,1)   1
    (1,1)   101
    (1,2)   102
    (2,2)   202
    (2,3)   203
    (3,3)   303
    (3,4)   304
    (4,4)   404
    (4,5)   405


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 486 bytes

    (0,1)   100
    (1,1)   101
    (1,2)   201
    (2,2)   202
    (2,3)   302
    (3,3)   303
    (3,4)   403
    (4,4)   404


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 13
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.38e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.19e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.98e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.69e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   2.1e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   3.41e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   3.7e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) 
   1.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) 
   3.81e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   8.11e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   9.11e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 736 bytes

    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   0.00012 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 752 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42

 [ GrB_select (iso select) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/f2/GB_jit__select_phase1__36fe688665__banded_idx_32.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/f2/GB_jit__select_phase1__36fe688665__banded_idx_32.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/f2/libGB_jit__select_phase1__36fe688665__banded_idx_32.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/f2/GB_jit__select_phase1__36fe688665__banded_idx_32.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/54/GB_jit__select_phase2__36fe688665__banded_idx_32.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/54/GB_jit__select_phase2__36fe688665__banded_idx_32.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/54/libGB_jit__select_phase2__36fe688665__banded_idx_32.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/54/GB_jit__select_phase2__36fe688665__banded_idx_32.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) (sparse to bitmap) 
   0.385 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 14
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.29e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.1e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.72e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   3.29e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   3e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   1.81e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   1.1e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   1.5e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) 
   7.39e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) 
   7.2e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   9.8e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   7.89e-05 sec ]
dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   6.91e-05 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 632 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42

 [ GrB_select (iso select) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/2a/GB_jit__select_phase1__36fe688885__banded_idx_32.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/2a/GB_jit__select_phase1__36fe688885__banded_idx_32.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/2a/libGB_jit__select_phase1__36fe688885__banded_idx_32.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/2a/GB_jit__select_phase1__36fe688885__banded_idx_32.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) (jit: compile and load) (jit: /usr/bin/gcc -DGB_JIT_RUNTIME=1  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC  -I/home/davis/.SuiteSparse/GraphBLAS/8.0.0/src  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/ff/GB_jit__select_phase2__36fe688885__banded_idx_32.o -c /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/ff/GB_jit__select_phase2__36fe688885__banded_idx_32.c    ; /usr/bin/gcc  -DGBMATLAB=1  -Wundef  -std=c11 -lm -Wno-pragmas  -fexcess-precision=fast  -fcx-limited-range  -fno-math-errno  -fwrapv  -O3 -DNDEBUG -fopenmp  -fPIC   -shared  -o /home/davis/.SuiteSparse/GraphBLAS/8.0.0/lib/ff/libGB_jit__select_phase2__36fe688885__banded_idx_32.so /home/davis/.SuiteSparse/GraphBLAS/8.0.0/c/ff/GB_jit__select_phase2__36fe688885__banded_idx_32.o  -lm -ldl /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so /usr/lib/x86_64-linux-gnu/libpthread.so   ) (sparse to bitmap) 
   0.379 sec ]

  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 13 entries, memory: 254 bytes
  iso value:   42

    (1,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = apply:banded (A), 29 entries, memory: 486 bytes

    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (0,5)   0
    (1,5)   0
    (2,5)   0
    (3,5)   0
    (4,5)   1


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = upper_banded (A), 9 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42
    (4,5)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = upper_banded (A'), 8 entries, memory: 254 bytes
  iso value:   42

    (0,1)   42
    (1,1)   42
    (1,2)   42
    (2,2)   42
    (2,3)   42
    (3,3)   42
    (3,4)   42
    (4,4)   42


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

=======================================MALLOC DEBUG ON 15
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.38e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.41e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.69e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   1.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   3e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) 
   2.69e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) 
   5.6e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) 
   3.72e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   6.29e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   4.1e-05 sec ]
dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, sparse by col
  E, 29 entries, memory: 525 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0

dump stuff:

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A, 29 entries, memory: 512 bytes
  iso value:   42

    (1,0)   42
    (2,0)   42
    (3,0)   42
    (4,0)   42
    (0,1)   42
    (1,1)   42
    (2,1)   42
    (3,1)   42
    (4,1)   42
    (0,2)   42
    (1,2)   42
    (2,2)   42
    (3,2)   42
    (4,2)   42
    (0,3)   42
    (1,3)   42
    (2,3)   42
    (3,3)   42
    (4,3)   42
    (0,4)   42
    (1,4)   42
    (2,4)   42
    (3,4)   42
    (4,4)   42
    (0,5)   42
    (1,5)   42
    (2,5)   42
    (3,5)   42
    (4,5)   42


    GraphBLAS IndexUnaryOp: UpperBanded (user-defined): z=upperbanded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void upperbanded_idx                   
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    (*z) = (d >= 0 && d <= *thunk) ;   
}

  6x5 GraphBLAS bool matrix, hypersparse by col
  E, no entries, memory: 240 bytes

 [ GrB_apply (transpose-op) (iso transpose) (4-thread non-atomic bucket transpose) (jit: run) (sparse to bitmap) 
   0.000128 sec ]
MALLOC DEBUG OFF

  6x5 GraphBLAS bool matrix, bitmap by col
  E = apply:upper_banded (A'), 29 entries, memory: 276 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, bitmap by col
  E = apply:upper_banded64 (A'), 29 entries, memory: 486 bytes

    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


  6x5 GraphBLAS int64_t matrix, full by col
  E = apply:upper_banded64 (A'), 30 entries, memory: 456 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (5,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   0
    (3,1)   0
    (4,1)   0
    (5,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   0
    (4,2)   0
    (5,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   0
    (5,3)   0
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1
    (5,4)   0


 0 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 752 bytes

    (0,0)   0
    (1,0)   100
    (2,0)   200
    (3,0)   300
    (4,0)   400
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (3,1)   301
    (4,1)   401
    (0,2)   2
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (4,2)   402
    (0,3)   3
    (1,3)   103
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (0,4)   4
    (1,4)   104
    (2,4)   204
    (3,4)   304
    (4,4)   404
    (0,5)   5
    (1,5)   105
    (2,5)   205
    (3,5)   305
    (4,5)   405


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 486 bytes

    (0,0)   0
    (1,0)   100
    (0,1)   1
    (1,1)   101
    (2,1)   201
    (1,2)   102
    (2,2)   202
    (3,2)   302
    (2,3)   203
    (3,3)   303
    (4,3)   403
    (3,4)   304
    (4,4)   404
    (4,5)   405

C(0,0) = 0
0 
C(0,1) = 1
1 
C(1,0) = 100
100 
C(1,1) = 101
101 
C(1,2) = 102
102 
C(2,1) = 201
201 
C(2,2) = 202
202 
C(2,3) = 203
203 
C(3,2) = 302
302 
C(3,3) = 303
303 
C(3,4) = 304
304 
C(4,3) = 403
403 
C(4,4) = 404
404 
C(4,5) = 405
405 

 1 ##########################################

  5x6 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  A for select:banded, 30 entries, memory: 520 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (2,0)   99
    (3,0)   99
    (4,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (3,1)   99
    (4,1)   99
    (0,2)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (4,2)   99
    (0,3)   99
    (1,3)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (0,4)   99
    (1,4)   99
    (2,4)   99
    (3,4)   99
    (4,4)   99
    (0,5)   99
    (1,5)   99
    (2,5)   99
    (3,5)   99
    (4,5)   99


  5x6 GraphBLAS int64_t matrix, bitmap by col
  C = select:banded (A), 14 entries, memory: 254 bytes
  iso value:   99

    (0,0)   99
    (1,0)   99
    (0,1)   99
    (1,1)   99
    (2,1)   99
    (1,2)   99
    (2,2)   99
    (3,2)   99
    (2,3)   99
    (3,3)   99
    (4,3)   99
    (3,4)   99
    (4,4)   99
    (4,5)   99

C(0,0) = 99
99 
C(0,1) = 99
99 
C(1,0) = 99
99 
C(1,1) = 99
99 
C(1,2) = 99
99 
C(2,1) = 99
99 
C(2,2) = 99
99 
C(2,3) = 99
99 
C(3,2) = 99
99 
C(3,3) = 99
99 
C(3,4) = 99
99 
C(4,3) = 99
99 
C(4,4) = 99
99 
C(4,5) = 99
99 

    GraphBLAS IndexUnaryOp: banded (user-defined): z=banded_idx(x,i,j,y)
    GraphBLAS type: ztype NULL
    IndexUnaryOp has an invalid ztype

    GraphBLAS IndexUnaryOp: banded (user-defined): z=banded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype NULL
    IndexUnaryOp has an invalid ytype

    GraphBLAS IndexUnaryOp: banded (user-defined): z=banded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype unknown type
    IndexUnaryOp has an invalid xtype

    GraphBLAS IndexUnaryOp: banded (user-defined): z=banded_idx(x,i,j,y)
    IndexUnaryOp has a NULL function pointer

    GraphBLAS Operator: banded: invalid opcode

    GraphBLAS IndexUnaryOp: banded (user-defined): z=banded_idx(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: xtype int64_t size: 8
    GraphBLAS type: ytype int64_t size: 8
void banded_idx                        
(                                      
    bool *z,                           
    const int64_t *x,   // unused      
    int64_t i,                         
    int64_t j,                         
    const int64_t *thunk               
)                                      
{                                      
    int64_t d = j-i ;                  
    if (d < 0) d = -d ;                
    (*z) = (d <= *thunk) ;             
}

    GraphBLAS BinaryOp: plus (built-in): z=plus(x,y)
    GraphBLAS type: ztype float size: 4
    GraphBLAS type: xtype float size: 4
    GraphBLAS type: ytype float size: 4

    GraphBLAS UnaryOp: abs (built-in): z=abs(x)
    GraphBLAS type: ztype float size: 4
    GraphBLAS type: xtype float size: 4

    GraphBLAS IndexUnaryOp: tril_idx (built-in): z=tril(x,i,j,y)
    GraphBLAS type: ztype bool size: 1
    GraphBLAS type: ytype int64_t size: 8

    GraphBLAS SelectOp: tril_selectop: C=tril(A,k)

    GraphBLAS Operator: null: NULL

    GraphBLAS BinaryOp: ignore_dup ignore_dup

  4x4 GraphBLAS mytype matrix, bitmap by col
  A of MyType, 1 entry, memory: 240 bytes
  iso value: [user-defined value]

    (2,3) [user-defined value]

error expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrM_Matrix_apply_IndexOp_INT32 (C, M, accum, op, A, thunk, desc)
Incompatible type for z=banded_idx(x,i,j,thunk):
input A of type [mytype]
cannot be typecast to x input of type [int64_t]
error expected: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrB_Matrix_apply_IndexOp_Scalar (C, M, accum, op, A, thunk, desc)
Incompatible type for z=banded_idx(x,i,j,thunk):
input scalar of type [mytype]
cannot be typecast to thunk input of type [int64_t]

  4x4 GraphBLAS mytype matrix, bitmap by col
  C of MyType, 1 entry, memory: 240 bytes
  iso value: [user-defined value]

    (2,3) [user-defined value]

size of mytype: 8

  3x4 GraphBLAS float matrix, bitmap by col
  A for serialize, 2 entries, memory: 276 bytes

    (1,1)    9.1
    (2,2)    1.1


  3x4 GraphBLAS float matrix, bitmap by col
  C from deserialize, 2 entries, memory: 276 bytes

    (1,1)    9.1
    (2,2)    1.1


    GraphBLAS Descriptor: desc with secure import 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   
    d.import   = secure

    GraphBLAS Descriptor: desc with secure import 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   
    d.import   = secure

    GraphBLAS Descriptor: desc with secure & lz4hc+4 
    d.out      = default   
    d.mask     = default   
    d.in0      = default   
    d.in1      = default   
    d.axb      = default   
    d.import   = secure
    d.compression = 2005

  100x100 GraphBLAS float matrix, hypersparse by col
  A conformed, 1 entry, memory: 528 bytes
  iso value:    1

    (0,0)    1


  4x4 GraphBLAS float matrix, full by col
  A iso to export, 16 entries, memory: 224 bytes
  iso value:    2

    (0,0)    2
    (1,0)    2
    (2,0)    2
    (3,0)    2
    (0,1)    2
    (1,1)    2
    (2,1)    2
    (3,1)    2
    (0,2)    2
    (1,2)    2
    (2,2)    2
    (3,2)    2
    (0,3)    2
    (1,3)    2
    (2,3)    2
    (3,3)    2
(1)------------------------------------------------

expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrB_Matrix_select_Scalar (C, M, accum, op, A, thunk, desc)
Incompatible type for C=donothing(A,Thunk):
input A type [double]
cannot be typecast to operator input of type [mytype]
(2)------------------------------------------------

expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrB_Matrix_select_Scalar (C, M, accum, op, A, thunk, desc)
Incompatible type for C=donothing(A,Thunk):
input A type [double]
cannot be typecast to operator input of type [mytype]
(3)------------------------------------------------

expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrB_Matrix_select_Scalar (C, M, accum, op, A, thunk, desc)
Incompatible type for C=donothing(A,Thunk):
input Thunk type [double] and op thunk type [mytype] not compatible
(4)------------------------------------------------

expected error: GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrB_Matrix_select_Scalar (C, M, accum, op, A, thunk, desc)
Output of user-defined IndexUnaryOp donothing is mytype
which cannot be typecasted to bool


  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  A iso select output, 5 entries, memory: 312 bytes
  iso value:    3

    (0,0)    3
    (1,1)    3
    (2,2)    3
    (3,3)    3
    (4,4)    3


  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  A iso select COLLE output, 3 entries, memory: 296 bytes
  iso value:    3

    (0,0)    3
    (1,1)    3
    (2,2)    3


  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  A iso select COLGT output, 10 entries, memory: 352 bytes
  iso value:    3

    (0,3)    3
    (1,3)    3
    (2,3)    3
    (3,3)    3
    (4,3)    3
    (0,4)    3
    (1,4)    3
    (2,4)    3
    (3,4)    3
    (4,4)    3


  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  A iso select ROWGT output, 10 entries, memory: 352 bytes
  iso value:    3

    (3,0)    3
    (4,0)    3
    (3,1)    3
    (4,1)    3
    (3,2)    3
    (4,2)    3
    (3,3)    3
    (4,3)    3
    (3,4)    3
    (4,4)    3


  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  A iso select COLINDEX output, 20 entries, memory: 432 bytes
  iso value:    3

    (0,0)    3
    (1,0)    3
    (2,0)    3
    (3,0)    3
    (4,0)    3
    (0,1)    3
    (1,1)    3
    (2,1)    3
    (3,1)    3
    (4,1)    3
    (0,3)    3
    (1,3)    3
    (2,3)    3
    (3,3)    3
    (4,3)    3
    (0,4)    3
    (1,4)    3
    (2,4)    3
    (3,4)    3
    (4,4)    3


  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  A iso select Banded output, 13 entries, memory: 376 bytes
  iso value:    3

    (0,0)    3
    (1,0)    3
    (0,1)    3
    (1,1)    3
    (2,1)    3
    (1,2)    3
    (2,2)    3
    (3,2)    3
    (2,3)    3
    (3,3)    3
    (4,3)    3
    (3,4)    3
    (4,4)    3


  5x1 GraphBLAS int64_t vector, bitmap by col
  w for select Banded, 5 entries, memory: 264 bytes

    (0,0)   0
    (1,0)   1
    (2,0)   2
    (3,0)   3
    (4,0)   4


  5x1 GraphBLAS int64_t vector, bitmap by col
  w from select Banded output, 2 entries, memory: 264 bytes

    (0,0)   0
    (1,0)   1


  5x1 GraphBLAS int64_t vector, full by col
  w for apply Banded , 5 entries, memory: 224 bytes
  iso value:   3

    (0,0)   3
    (1,0)   3
    (2,0)   3
    (3,0)   3
    (4,0)   3

  5x1 GraphBLAS int64_t vector, full by col
  w from apply Banded output, 5 entries, memory: 256 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0


  5x5 GraphBLAS int64_t matrix, full by col
  A for apply Banded , 25 entries, memory: 224 bytes
  iso value:   3

    (0,0)   3
    (1,0)   3
    (2,0)   3
    (3,0)   3
    (4,0)   3
    (0,1)   3
    (1,1)   3
    (2,1)   3
    (3,1)   3
    (4,1)   3
    (0,2)   3
    (1,2)   3
    (2,2)   3
    (3,2)   3
    (4,2)   3
    (0,3)   3
    (1,3)   3
    (2,3)   3
    (3,3)   3
    (4,3)   3
    (0,4)   3
    (1,4)   3
    (2,4)   3
    (3,4)   3
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  A from apply Banded output, 25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   0
    (3,0)   0
    (4,0)   0
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   0
    (4,1)   0
    (0,2)   0
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   0
    (0,3)   0
    (1,3)   0
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   0
    (1,4)   0
    (2,4)   0
    (3,4)   1
    (4,4)   1


  5x4 GraphBLAS int64_t matrix, full by col
  A iso, 20 entries, memory: 224 bytes
  iso value:   1

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
 [ GrB_apply (in-place-op) 
   3e-05 sec ]

  5x4 GraphBLAS int64_t matrix, full by col
  A after apply rowindex, 20 entries, memory: 376 bytes

    (0,0)   0
    (1,0)   1
    (2,0)   2
    (3,0)   3
    (4,0)   4
    (0,1)   0
    (1,1)   1
    (2,1)   2
    (3,1)   3
    (4,1)   4
    (0,2)   0
    (1,2)   1
    (2,2)   2
    (3,2)   3
    (4,2)   4
    (0,3)   0
    (1,3)   1
    (2,3)   2
    (3,3)   3
    (4,3)   4


GB_mex_about5: all tests passed

expected error:
GraphBLAS error: GrB_EMPTY_OBJECT
function: GxB_Matrix_eWiseUnion (C, M, accum, add, A, alpha, B, beta, desc)
alpha cannot be an empty scalar

expected error:
GraphBLAS error: GrB_EMPTY_OBJECT
function: GxB_Matrix_eWiseUnion (C, M, accum, add, A, alpha, B, beta, desc)
beta cannot be an empty scalar


  1x1 GraphBLAS myint scalar, full by col
  alpha, 1 entry, memory: 224 bytes
  iso value: [user-defined value]

    (0,0) [user-defined value]

  1x1 GraphBLAS double scalar, sparse by col
  beta, no entries, memory: 232 bytes

expected error:
GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxB_Matrix_eWiseUnion (C, M, accum, add, A, alpha, B, beta, desc)
alpha scalar of type [myint]
cannot be typecast to op input of type [double]
expected error:
GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GxB_Matrix_eWiseUnion (C, M, accum, add, A, alpha, B, beta, desc)
beta scalar of type [myint]
cannot be typecast to op input of type [double]
expected error:
GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrB_Matrix_reduce_BinaryOp_Scalar (s, accum, binaryop, A, desc)
Invalid binary operator: z=lt(x,y); all types of x,y,z must be the same

expected error:
GraphBLAS error: GrB_DOMAIN_MISMATCH
function: GrB_Vector_reduce_BinaryOp_Scalar (s, accum, binaryop, u, desc)
Invalid binary operator: z=lt(x,y); all types of x,y,z must be the same

expected error:
GraphBLAS error: GrB_NOT_IMPLEMENTED
function: GrB_Matrix_reduce_BinaryOp_Scalar (s, accum, binaryop, A, desc)
Invalid binary operator: z=div(x,y) has no equivalent monoid

expected error:
GraphBLAS error: GrB_NOT_IMPLEMENTED
function: GrB_Vector_reduce_BinaryOp_Scalar (s, accum, binaryop, u, desc)
Invalid binary operator: z=div(x,y) has no equivalent monoid


GB_mex_about6: all tests passed


  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A valid, 1 entry, memory: 528 bytes
  iso value:    1.2

    (0,0)    1.2


invalid A->p:

  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A->p is too small!

invalid A->h:

  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A->h is too small!

invalid A->Y:

  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A with invalid A->Y, 1 entry, memory: 528 bytes
  iso value:    1.2

    (0,0)    1.2

  hyper_hash invalid
  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A with invalid A->Y (wrong type), 1 entry, memory: 496 bytes
  iso value:    1.2

    (0,0)    1.2

  hyper_hash invalid
  100x100 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  A valid (sparse), 1 entry, memory: 1.0 KB
  iso value:    1.2

    (0,0)    1.2


  100x100 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  A with invalid A->Y (not hyper), 1 entry, memory: 1.2 KB
  iso value:    1.2

    (0,0)    1.2

  hyper_hash invalid

  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A valid (hypersparse), 1 entry, memory: 528 bytes
  iso value:    1.2

    (0,0)    1.2


  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  B valid (shallow hypersparse: print_mem_shallow true), 1 entry, memory: 528 bytes
  iso value:    1.2

    (0,0)    1.2


  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  B valid (shallow hypersparse: print_mem_shallow false), 1 entry, memory: 256 bytes
  iso value:    1.2

    (0,0)    1.2


  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A, 1 entry, memory: 528 bytes
  iso value:    1.2

    (0,0)    1.2


  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  B, 1 entry, memory: 256 bytes
  iso value:    1.2

    (0,0)    1.2


  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A still valid (hypersparse), 1 entry, memory: 528 bytes
  iso value:    1.2

    (0,0)    1.2


  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A hypersparse (pack did nothing), 1 entry, memory: 528 bytes
  iso value:    1.2

    (0,0)    1.2


  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A->Y invalid (not found) , 1 entry, memory: 528 bytes
  iso value:    1.2

    (0,0)    1.2

  hyper_hash invalid

  100x100 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  A->Y invalid (wrong k) , 1 entry, memory: 528 bytes
  iso value:    1.2

    (0,0)    1.2

  hyper_hash invalid

  1048576x1048576 GraphBLAS double matrix, hypersparse by row
  sparsity control: hypersparse only
  A->Y with many collisions, 1024 entries, memory: 68.6 KB

    (0,0)    2
    (1,1)    2
    (2,2)    2
    (3,3)    2
    (1640,1640)    2
    (1641,1641)    2
    (1642,1642)    2
    (1643,1643)    2
    (3280,3280)    2
    (3281,3281)    2
    (3282,3282)    2
    (3283,3283)    2
    (6492,6492)    2
    (6493,6493)    2
    (6494,6494)    2
    (6495,6495)    2
    (8132,8132)    2
    (8133,8133)    2
    (8134,8134)    2
    (8135,8135)    2
    (11344,11344)    2
    (11345,11345)    2
    (11346,11346)    2
    (11347,11347)    2
    (12984,12984)    2
    (12985,12985)    2
    (12986,12986)    2
    (12987,12987)    2
    (16196,16196)    2
    ...

  1048576x1048576 GraphBLAS double matrix, sparse (jumbled) by col
  sparsity control: sparse only
  C<A>=A'*A, 1024 entries, memory: 8.0 MB

    (0,0)    4
    (1,1)    4
    (2,2)    4
    (3,3)    4
    (1640,1640)    4
    (1641,1641)    4
    (1642,1642)    4
    (1643,1643)    4
    (3280,3280)    4
    (3281,3281)    4
    (3282,3282)    4
    (3283,3283)    4
    (6492,6492)    4
    (6493,6493)    4
    (6494,6494)    4
    (6495,6495)    4
    (8132,8132)    4
    (8133,8133)    4
    (8134,8134)    4
    (8135,8135)    4
    (11344,11344)    4
    (11345,11345)    4
    (11346,11346)    4
    (11347,11347)    4
    (12984,12984)    4
    (12985,12985)    4
    (12986,12986)    4
    (12987,12987)    4
    (16196,16196)    4
    ...

avx2: 0 avx512f: 0
GraphBLAS compiled with:
[GNU gcc 7.5.0] [v7.5.0]

GB_mex_about7: all tests passed


  0x0 GraphBLAS int64_t matrix, full by col
  M_0, no entries, memory: 224 bytes
  iso value:   1

  0x1 GraphBLAS int64_t vector, full by col
  v_0, no entries, memory: 224 bytes
  iso value:   1

  0x1 GraphBLAS int64_t vector, full by col
  v_1, no entries, memory: 224 bytes
  iso value:   1

GB_mex_about8: all tests passed

compiler: GNU gcc 7.5.0 7.5.0
 [ GrB_transpose (transpose) 
   2.41e-05 sec ]
test time 0.000183105 sec, max threads 4

GB_mex_about10: all tests passed

    GraphBLAS type: (256-byte big type) user-defined: [bigtype] size: 256
    typedef struct { double stuff [32] ; } bigtype

    GraphBLAS UnaryOp: f1 (user-defined): z=f1(x)
    GraphBLAS type: ztype double size: 8
    GraphBLAS type: xtype double size: 8
void f1 (void *z, const void *x) { (*((double *)z)) = 2*(*(double *)x) ; } 

    GraphBLAS BinaryOp: f2 (user-defined): z=f2(x,y)
    GraphBLAS type: ztype double size: 8
    GraphBLAS type: xtype double size: 8
    GraphBLAS type: ytype double size: 8
void f2 (void *z, const void *x, const void *y) { (*((double *)z)) = 2*(*(double *)x) + 1 ; }   

    GraphBLAS IndexUnaryOp: i1 (user-defined): z=i1(x,i,j,y)
    GraphBLAS type: ztype double size: 8
    GraphBLAS type: xtype double size: 8
    GraphBLAS type: ytype double size: 8
void i1 (void *z, const void *x, GrB_Index i, GrB_Index j,  const void *thunk) { (*((bool *)z)) = (i == j) ; }

  10x10 GraphBLAS float matrix, hypersparse by col
  empty matrix, no entries, memory: 240 bytes


reduce empty matrix to non-opaque scalar via ANY: 0

  1x1 GraphBLAS float scalar, full by col
  scalar == 33, 1 entry, memory: 224 bytes
  iso value:    33

    (0,0)    33

reduce empty matrix to opaque scalar via ANY:

  1x1 GraphBLAS float scalar, sparse by col
  empty scalar, no entries, memory: 232 bytes


GB_mex_about9: all tests passed


test01: all tests passed
27-Apr 20:52:09 test01         16.0 sec  2161: 19037 of 21586  11.8%   135.11/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test245     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test245: all tests passed
27-Apr 20:52:10 test245         1.1 sec    41: 18996 of 21586  12.0%    38.32/s [malloc] [cover]
jit: 0

======== test: test245     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0

test245: all tests passed
27-Apr 20:52:10 test245         0.0 sec     9: 18987 of 21586  12.0%   284.99/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test199     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
 [ GxB_set (sparse to bitmap) 
   8.8e-05 sec ]
 [ GxB_set (sparse to hyper) 
   1.5e-05 sec ]
 [ GrB_Matrix_wait (build hyper hash) 
   2.91e-05 sec ]
 [ GxB_set (sparse to hyper) 
   1.1e-05 sec ]
 [ GrB_Matrix_wait (build hyper hash) 
   1.81e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot2) 
   4.32e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot2) 
   1.88e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot2) 
   1.88e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot2) 
   2.1e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot2) (nthreads: 4 naslice 4 nbslice 9) (dot B<B> = H'*H) 
   6.01e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot2) (nthreads: 4 naslice 4 nbslice 9) (dot B<B> = H'*H) 
   5.39e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot2) (nthreads: 4 naslice 4 nbslice 9) (dot B<B> = H'*H) (expand bitmap/full to hyper) 
   7.82e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot2) (nthreads: 4 naslice 4 nbslice 9) (dot B<B> = H'*H) (expand bitmap/full to hyper) 
   6.6e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot2) (nthreads: 4 naslice 4 nbslice 9) (dot B<B> = H'*H) (expand bitmap/full to hyper) 
   6.39e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot2) (nthreads: 4 naslice 4 nbslice 9) (dot B<B> = H'*H) (expand bitmap/full to hyper) (sparse to bitmap) 
   9.49e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot2) (nthreads: 4 naslice 4 nbslice 9) (dot B<B> = H'*H) (expand bitmap/full to hyper) (sparse to bitmap) 
   7.2e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot2) (nthreads: 4 naslice 4 nbslice 9) (dot B<B> = H'*H) (expand bitmap/full to hyper) (sparse to bitmap) 
   8.3e-05 sec ]
 [ GxB_set (bitmap to sparse) 
   1.19e-05 sec ]
test199: all tests passed
27-Apr 20:52:10 test199         0.0 sec    17: 18970 of 21586  12.1%  1251.01/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test83      [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test83: all tests passed
27-Apr 20:52:10 test83          0.0 sec    21: 18949 of 21586  12.2%   470.43/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test210     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test210: all tests passed
27-Apr 20:52:10 test210         0.0 sec    10: 18939 of 21586  12.3%  1688.33/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test165     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test165: all tests passed
27-Apr 20:52:11 test165         0.0 sec    10: 18929 of 21586  12.3%   453.47/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test219     [malloc] [cover] [nthreads: 1 chunk: 1] jit: 4
 [ GrB_reduce (A dense) 
   8.61e-05 sec ]

test219: all tests passed
27-Apr 20:52:11 test219         0.1 sec     8: 18921 of 21586  12.3%   135.35/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test241     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test241 -------- GrB_mxm swap_rule

test241: all tests passed
27-Apr 20:52:11 test241         0.4 sec    16: 18905 of 21586  12.4%    43.23/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test220     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test220: all tests passed
27-Apr 20:52:11 test220         0.1 sec    58: 18847 of 21586  12.7%   478.59/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test211     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test211: all tests passed
27-Apr 20:52:11 test211         0.1 sec    17: 18830 of 21586  12.8%   214.47/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test202     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test202: all tests passed
27-Apr 20:52:11 test202         0.1 sec    32: 18798 of 21586  12.9%   362.42/s [malloc] [cover]
jit: 0

======== test: test202     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0
test202: all tests passed
27-Apr 20:52:11 test202         0.0 sec     1: 18797 of 21586  12.9%   147.56/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test152     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test152: test binops with C=A+B, all dense

first          .............
second         .............
pair           .............
plus           .............
minus          .............
rminus         .............
times          .............
div            .............
rdiv           .............
iseq           .............
isne           .............
eq             .............
ne             .............
pow            .............
any            .............
oneb           .............
min            ...........
max            ...........
isgt           ...........
islt           ...........
isge           ...........
isle           ...........
gt             ...........
lt             ...........
ge             ...........
le             ...........
or             ...........
and            ...........
xor            ...........
bor            ........
band           ........
bxor           ........
bxnor          ........
bget           ........
bset           ........
bclr           ........
bshift         ........
atan2          ..
hypot          ..
fmod           ..
remainder      ..
ldexp          ..
copysign       ..
cmplx          ..
firsti         ..
firsti1        ..
firstj         ..
firstj1        ..
secondi        ..
secondi1       ..
secondj        ..
secondj1       ..
test152: all tests passed
27-Apr 20:52:15 test152         3.3 sec   843: 17954 of 21586  16.8%   252.56/s [malloc] [cover]
jit: 0

======== test: test152     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0

test152: test binops with C=A+B, all dense

first          .............
second         .............
pair           .............
plus           .............
minus          .............
rminus         .............
times          .............
div            .............
rdiv           .............
iseq           .............
isne           .............
eq             .............
ne             .............
pow            .............
any            .............
oneb           .............
min            ...........
max            ...........
isgt           ...........
islt           ...........
isge           ...........
isle           ...........
gt             ...........
lt             ...........
ge             ...........
le             ...........
or             ...........
and            ...........
xor            ...........
bor            ........
band           ........
bxor           ........
bxnor          ........
bget           ........
bset           ........
bclr           ........
bshift         ........
atan2          ..
hypot          ..
fmod           ..
remainder      ..
ldexp          ..
copysign       ..
cmplx          ..
firsti         ..
firsti1        ..
firstj         ..
firstj1        ..
secondi        ..
secondi1       ..
secondj        ..
secondj1       ..
test152: all tests passed
27-Apr 20:52:16 test152         1.0 sec    12: 17942 of 21586  16.9%    11.80/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test222     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
 [ GxB_set (sparse to hyper) 
   0.000125 sec ]
 [ GrB_Matrix_wait (build hyper hash) 
   4.89e-05 sec ]
 [ GxB_Type_new 
   3.1e-06 sec ]
 [ GrB_select (iso select) (jit: undefined) (jit: undefined) (sparse to bitmap) 
   8.01e-05 sec ]
 [ GxB_set (bitmap to sparse) 
   1.69e-05 sec ]
 [ GxB_set (sparse to hyper) 
   6.7e-05 sec ]
 [ GrB_Matrix_wait (build hyper hash) 
   4.01e-05 sec ]
 [ GxB_Type_new 
   2.86e-06 sec ]
 [ GrB_select (iso select) (jit: undefined) (jit: undefined) (in-place transpose) (iso transpose) (4-thread atomic bucket transpose) (sparse to bitmap) 
   0.000114 sec ]
 [ GxB_set (bitmap to sparse) 
   1.22e-05 sec ]
 [ GxB_set 
   9.06e-06 sec ]
 [ GxB_Type_new 
   3.1e-06 sec ]
 [ GrB_select (iso select) (jit: undefined) (jit: undefined) (sparse to bitmap) 
   6.1e-05 sec ]
 [ GxB_set (bitmap to sparse) 
   1.19e-05 sec ]
 [ GxB_set 
   5.01e-06 sec ]
 [ GxB_Type_new 
   2.15e-06 sec ]
 [ GrB_select (iso select) (jit: undefined) (jit: undefined) (in-place transpose) (iso transpose) (4-thread atomic bucket transpose) (sparse to bitmap) 
   8.51e-05 sec ]
 [ GxB_set (bitmap to sparse) 
   1.1e-05 sec ]
 [ GxB_set (sparse to bitmap) 
   2.1e-05 sec ]
 [ GxB_Type_new 
   2.15e-06 sec ]
 [ GrB_select (A bitmap) (iso select) (bitmap select) (jit: undefined) 
   5.01e-05 sec ]
 [ GxB_set (bitmap to sparse) 
   1.1e-05 sec ]
 [ GxB_set (sparse to bitmap) 
   1.98e-05 sec ]
 [ GxB_Type_new 
   1.91e-06 sec ]
 [ GrB_select (A bitmap) (iso select) (bitmap select) (jit: undefined) (in-place transpose) (iso transpose) (bitmap/full transpose) 
   5.32e-05 sec ]
 [ GxB_set (bitmap to sparse) 
   1e-05 sec ]
 [ GxB_set (sparse to full) 
   1.31e-05 sec ]
 [ GxB_Type_new 
   9.54e-07 sec ]
 [ GrB_select (A full) (iso select) (bitmap select) (jit: undefined) 
   3.6e-05 sec ]
 [ GxB_set (bitmap to sparse) 
   1.19e-05 sec ]
 [ GxB_set (sparse to full) 
   1.22e-05 sec ]
 [ GxB_Type_new 
   1.91e-06 sec ]
 [ GrB_select (A full) (iso select) (bitmap select) (jit: undefined) (in-place transpose) (iso transpose) (bitmap/full transpose) 
   5.01e-05 sec ]
 [ GxB_set (bitmap to sparse) 
   1.31e-05 sec ]

test222: all tests passed
27-Apr 20:52:16 test222         0.1 sec     5: 17937 of 21586  16.9%    93.97/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test240     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test240 -------- GrB_mxm dot4 and saxpy5

test240: all tests passed
27-Apr 20:52:16 test240         0.3 sec    43: 17894 of 21586  17.1%   160.22/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test186     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test186 --------------- C<!M>A*B for all sparsity formats
................
maxerr: 1.68851e-08
test186: all tests passed
27-Apr 20:52:18 test186         2.3 sec    81: 17813 of 21586  17.5%    34.49/s [malloc] [cover]
jit: 0

======== test: test186     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0
test186 --------------- C<!M>A*B for all sparsity formats
................
maxerr: 1.68851e-08
test186: all tests passed
27-Apr 20:52:19 test186         0.3 sec    11: 17802 of 21586  17.5%    32.36/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test186(0)  [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test186 --------------- C<!M>A*B for all sparsity formats
................
maxerr: 1.68851e-08
test186: all tests passed
27-Apr 20:52:19 test186(0)      0.3 sec    10: 17792 of 21586  17.6%    31.21/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test186     [malloc] [cover] [nthreads: 1 chunk: 1] jit: 4
test186 --------------- C<!M>A*B for all sparsity formats
................
maxerr: 1.68851e-08
test186: all tests passed
27-Apr 20:52:19 test186         0.4 sec     3: 17789 of 21586  17.6%     8.38/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test150     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test150: ------- GrB_mxm with typecasting and zombies (dot3)
logical int8 int16 int32 int64 uint8 uint16 uint32 uint64 single double single complex double complex 
test150: all tests passed
27-Apr 20:52:32 test150        12.4 sec    61: 17728 of 21586  17.9%     4.93/s [malloc] [cover]
jit: 0

======== test: test150     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0
test150: ------- GrB_mxm with typecasting and zombies (dot3)
logical int8 int16 int32 int64 uint8 uint16 uint32 uint64 single double single complex double complex 
test150: all tests passed
27-Apr 20:52:32 test150         0.1 sec    10: 17718 of 21586  17.9%    68.72/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test239     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test239: all tests passed
27-Apr 20:52:32 test239         0.1 sec    14: 17704 of 21586  18.0%   169.86/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test235     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test235 -----------GxB_eWiseUnion and GrB_eWiseAdd

test235: all tests passed
27-Apr 20:52:32 test235         0.0 sec    10: 17694 of 21586  18.0%   213.82/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test226     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test226: all tests passed
27-Apr 20:52:32 test226         0.0 sec     8: 17686 of 21586  18.1%   495.36/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test223     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
 [ GxB_set 
   6.79e-05 sec ]
 [ GxB_set 
   5.29e-05 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!S> = S*S) 
   3.41e-05 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!S> = S*S) 
   1.69e-05 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!S> = S*S) axbwork 358321 mwork 1 (use mask) 
   0.000249 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!S> = S*S) axbwork 358321 mwork 1 (use mask) (nthreads 2 coarse: 4) 
   0.000319 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!S> = S*S) axbwork 358321 mwork 1 (use mask) (nthreads 2 coarse: 4) 
   0.000389 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!S> = S*S) axbwork 358321 mwork 1 (use mask) (nthreads 2 coarse: 4) (sparse saxpy) 
   0.00122 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!S> = S*S) axbwork 358321 mwork 1 (use mask) (nthreads 2 coarse: 4) (sparse saxpy) 
   0.00112 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!S> = S*S) axbwork 358321 mwork 1 (use mask) (nthreads 2 coarse: 4) (sparse saxpy) (sparse to hyper) 
   0.00419 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!S> = S*S) axbwork 358321 mwork 1 (use mask) (nthreads 2 coarse: 4) (sparse saxpy) (sparse to hyper) 
   0.00396 sec ]
 [ GrB_mxm C<!M>=A*B, saxpy (S<!S> = S*S) axbwork 358321 mwork 1 (use mask) (nthreads 2 coarse: 4) (sparse saxpy) (sparse to hyper) 
   0.00416 sec ]
 [ GrB_Matrix_wait (wait:matrix 0 zombies, 0 pending, jumbled) (build hyper hash) 
   0.000441 sec ]
 [ GxB_set (hyper to sparse) 
   6.01e-05 sec ]

test223: all tests passed
27-Apr 20:52:32 test223         0.0 sec     2: 17684 of 21586  18.1%    71.38/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test204     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test204: all tests passed
27-Apr 20:52:32 test204         0.1 sec    18: 17666 of 21586  18.2%   287.90/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test203     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test203: all tests passed
27-Apr 20:52:32 test203         0.1 sec    19: 17647 of 21586  18.2%   274.81/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test183     [malloc] [cover] [nthreads: 1 chunk: 1] jit: 4
test183 -----------eWiseMult with hypersparse mask

test183: all tests passed
27-Apr 20:52:32 test183         0.1 sec    12: 17635 of 21586  18.3%   162.48/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test179     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test179: --------------------------------- bitmap select

test179: all tests passed
27-Apr 20:52:33 test179         0.2 sec    21: 17614 of 21586  18.4%    96.88/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test174     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test174: all tests passed
27-Apr 20:52:33 test174         0.1 sec    10: 17604 of 21586  18.4%    77.41/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test155     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test155: all tests passed
27-Apr 20:52:33 test155         0.1 sec    44: 17560 of 21586  18.7%   332.31/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test156     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test156: all tests passed
27-Apr 20:52:34 test156         0.7 sec   119: 17441 of 21586  19.2%   169.38/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test136     [malloc] [cover] [nthreads: 1 chunk: 1] jit: 4
test136: GxB_subassign, special cases
test136: all tests passed
27-Apr 20:52:34 test136         0.1 sec    57: 17384 of 21586  19.5%   433.18/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test02      [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test02: all typecast and copy tests passed
27-Apr 20:52:34 test02          0.6 sec    26: 17358 of 21586  19.6%    45.34/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test109     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test109: terminal monoid with user-defined type

test109: all tests passed
27-Apr 20:52:35 test109         0.4 sec    28: 17330 of 21586  19.7%    66.58/s [malloc] [cover]
jit: 0

======== test: test109     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0

test109: terminal monoid with user-defined type

test109: all tests passed
27-Apr 20:52:35 test109         0.0 sec     4: 17326 of 21586  19.7%  1542.02/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test04      [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

-------------------- simple mask and transpose tests

C =

    0.8147    0.6324    0.9575    0.9572
    0.9058    0.0975    0.9649    0.4854
    0.1270    0.2785    0.1576    0.8003
    0.9134    0.5469    0.9706    0.1419


Z =

    16     2     3    13
     5    11    10     8
     9     7     6    12
     4    14    15     1


Mask =

  4x4 logical array

   1   1   0   0
   0   0   1   1
   0   0   1   1
   1   1   0   0

Use Mask.  C_replace: 0 Mask_comp: 0
C3 <Mask> = C + A' :
Use Mask.  C_replace: 0 Mask_comp: 1
C3 <Mask> = C + A' :
Use Mask.  C_replace: 1 Mask_comp: 0
C3 <Mask> = C + A' :
Use Mask.  C_replace: 1 Mask_comp: 1
C3 <Mask> = C + A' :
No Mask.  C_replace: 0 Mask_comp: 0
C3 <no mask complement:0 replace:0> = C + A' :

D =

     []

No Mask.  C_replace: 0 Mask_comp: 1
C3 <no mask complement:1 replace:0> = C + A' :

D = 

  struct with fields:

    mask: 'complement'

No Mask.  C_replace: 1 Mask_comp: 0
C3 <no mask complement:0 replace:1> = C + A' :

D = 

  struct with fields:

    outp: 'replace'

No Mask.  C_replace: 1 Mask_comp: 1
C3 <no mask complement:1 replace:1> = C + A' :

D = 

  struct with fields:

    mask: 'complement'
    outp: 'replace'


test04: all tests passed
27-Apr 20:52:35 test04          0.1 sec    15: 17311 of 21586  19.8%   149.64/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test207     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test207: all tests passed
27-Apr 20:52:35 test207         0.0 sec     2: 17309 of 21586  19.8%   369.48/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test221     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
 [ GxB_set (sparse to bitmap) 
   0.000102 sec ]
 [ GxB_set (sparse to full) 
   1.29e-05 sec ]
 [ GrB_assign 
   1.69e-05 sec ]
 [ GxB_set (sparse to bitmap) 
   2.19e-05 sec ]
 [ GrB_assign 
   5.01e-06 sec ]
 [ GxB_set (sparse to bitmap) 
   1.69e-05 sec ]
 [ GrB_assign Method:bit5:whole C += A 
   3.1e-05 sec ]
 [ GxB_set (bitmap to full) 
   5.96e-06 sec ]
 [ GxB_Matrix_import_FullC 
   7.87e-06 sec ]
 [ GxB_Matrix_export_FullC 
   1.41e-05 sec ]
 [ GxB_Matrix_import_FullC 
   1.12e-05 sec ]
 [ GxB_Matrix_export_FullC 
   1.22e-05 sec ]
 [ GxB_Matrix_import_FullC 
   4.05e-06 sec ]
 [ GxB_Matrix_export_FullC 
   5.01e-06 sec ]

test221: all tests passed
27-Apr 20:52:35 test221         0.0 sec     2: 17307 of 21586  19.8%   133.33/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test162     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test162: all tests passed
27-Apr 20:52:35 test162         0.1 sec     5: 17302 of 21586  19.8%    73.77/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test159     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

types: int32 double int64
op: firsti
op: firsti1
op: firstj
op: firstj1
op: secondi
op: secondi1
op: secondj
op: secondj1
op: times
op: div
op: first
op: second

types: int32 double int32
op: firsti
op: firsti1
op: firstj
op: firstj1
op: secondi
op: secondi1
op: secondj
op: secondj1
op: times
op: div
op: first
op: second

types: int32 double int64
op: firsti
op: firsti1
op: firstj
op: firstj1
op: secondi
op: secondi1
op: secondj
op: secondj1
op: times
op: div
op: first
op: second

types: int32 double int32
op: firsti
op: firsti1
op: firstj
op: firstj1
op: secondi
op: secondi1
op: secondj
op: secondj1
op: times
op: div
op: first
op: second

test159: all tests passed
27-Apr 20:53:36 test159        60.4 sec   123: 17179 of 21586  20.4%     2.04/s [malloc] [cover]
jit: 0

======== test: test159     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0

types: int32 double int64
op: firsti
op: firsti1
op: firstj
op: firstj1
op: secondi
op: secondi1
op: secondj
op: secondj1
op: times
op: div
op: first
op: second

types: int32 double int32
op: firsti
op: firsti1
op: firstj
op: firstj1
op: secondi
op: secondi1
op: secondj
op: secondj1
op: times
op: div
op: first
op: second

types: int32 double int64
op: firsti
op: firsti1
op: firstj
op: firstj1
op: secondi
op: secondi1
op: secondj
op: secondj1
op: times
op: div
op: first
op: second

types: int32 double int32
op: firsti
op: firsti1
op: firstj
op: firstj1
op: secondi
op: secondi1
op: secondj
op: secondj1
op: times
op: div
op: first
op: second

test159: all tests passed
27-Apr 20:53:38 test159         2.1 sec    55: 17124 of 21586  20.7%    25.73/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test09      [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

-----------duplicate I,J test of GB_mex_subassign
testing error handling, errors expected:

me = 

  MException with properties:

    identifier: 'GB:brutal'
       message: 'unexpected error in mex brutal malloc debug, info: -4'
         cause: {}
         stack: [6x1 struct]
    Correction: []

testing more:

me = 

  MException with properties:

    identifier: 'GB:brutal'
       message: 'unexpected error in mex brutal malloc debug, info: -105'
         cause: {}
         stack: [6x1 struct]
    Correction: []


All tests passed (errors expected)

test09: all tests passed
27-Apr 20:53:38 test09          0.0 sec     5: 17119 of 21586  20.7%   369.25/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test132     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test132 ------------------ testing GrB_setElement and _build

test132: all tests passed
27-Apr 20:53:38 test132         0.1 sec     9: 17110 of 21586  20.7%   132.58/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test141     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test141 ------------ GrB_eWiseAdd with dense matrices

first      .............
second     .............
pair       .............
plus       .............
minus      .............
rminus     .............
times      .............
div        .............
rdiv       .............
iseq       .............
isne       .............
eq         .............
ne         .............
any        .............
oneb       .............
min        ...........
max        ...........
isgt       ...........
islt       ...........
isge       ...........
isle       ...........
gt         ...........
lt         ...........
ge         ...........
le         ...........
or         ...........
and        ...........
xor        ...........
bor        ........
band       ........
bxor       ........
bxnor      ........
bget       ........
bset       ........
bclr       ........
bshift     ........
atan2      ..
hypot      ..
fmod       ..
remainder  ..
ldexp      ..
copysign   ..
cmplx      ..
firsti     ..
firsti1    ..
firstj     ..
firstj1    ..
secondi    ..
secondi1   ..
secondj    ..
secondj1   ..
test141: all tests passed
27-Apr 20:54:11 test141        32.7 sec   528: 16582 of 21586  23.2%    16.14/s [malloc] [cover]
jit: 0

======== test: test141     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0
test141 ------------ GrB_eWiseAdd with dense matrices

first      .............
second     .............
pair       .............
plus       .............
minus      .............
rminus     .............
times      .............
div        .............
rdiv       .............
iseq       .............
isne       .............
eq         .............
ne         .............
any        .............
oneb       .............
min        ...........
max        ...........
isgt       ...........
islt       ...........
isge       ...........
isle       ...........
gt         ...........
lt         ...........
ge         ...........
le         ...........
or         ...........
and        ...........
xor        ...........
bor        ........
band       ........
bxor       ........
bxnor      ........
bget       ........
bset       ........
bclr       ........
bshift     ........
atan2      ..
hypot      ..
fmod       ..
remainder  ..
ldexp      ..
copysign   ..
cmplx      ..
firsti     ..
firsti1    ..
firstj     ..
firstj1    ..
secondi    ..
secondi1   ..
secondj    ..
secondj1   ..
test141: all tests passed
27-Apr 20:54:14 test141         3.5 sec    90: 16492 of 21586  23.6%    25.56/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: testc2(1,1)  [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
All complex A'*B tests passed, maxerr 1.38778e-16
All complex A+B tests passed, maxerr 0
testc2: all complex A*B, A'*B, A*B', A'*B' tests passed, maxerr 1.17631e-15
27-Apr 20:54:15 testc2(1,1)     1.0 sec    49: 16443 of 21586  23.8%    48.14/s [malloc] [cover]
jit: 0

======== test: testc2(1,1)  [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0
All complex A'*B tests passed, maxerr 1.38778e-16
All complex A+B tests passed, maxerr 0
testc2: all complex A*B, A'*B, A*B', A'*B' tests passed, maxerr 1.17631e-15
27-Apr 20:54:15 testc2(1,1)     0.1 sec     2: 16441 of 21586  23.8%    37.00/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test214     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   3.6e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.6e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   2.5e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.31e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.6e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   0.000645 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   0.000108 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   9.2e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   0.000116 sec ]
 [ GxB_set (bitmap to sparse) 
   3.1e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.6e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.1e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.22e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.19e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.29e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   4.91e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   9.08e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   9.01e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   0.000114 sec ]
 [ GxB_set (bitmap to sparse) 
   3e-05 sec ]
 [ GxB_Matrix_import_FullC 
   2.86e-06 sec ]
 [ GxB_Matrix_export_FullC 
   4.05e-06 sec ]
 [ GxB_Matrix_import_FullC 
   9.54e-07 sec ]
 [ GxB_Matrix_export_FullC 
   9.54e-07 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.88e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.19e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.22e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.12e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.31e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   4.89e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   9.61e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   9.2e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   0.000117 sec ]
 [ GxB_set (bitmap to sparse) 
   3.19e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.6e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.1e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.1e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.19e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.29e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   4.82e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   9.08e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   9.01e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   0.000147 sec ]
 [ GxB_set (bitmap to sparse) 
   3.1e-05 sec ]
 [ GxB_Matrix_import_FullC 
   1.91e-06 sec ]
 [ GxB_Matrix_export_FullC 
   2.15e-06 sec ]
 [ GxB_Matrix_import_FullC 
   9.54e-07 sec ]
 [ GxB_Matrix_export_FullC 
   1.91e-06 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.6e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.1e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.1e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.19e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   1.29e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   4.89e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   9.3e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   0.000137 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   0.000164 sec ]
 [ GxB_set (bitmap to sparse) 
   2.5e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   4.01e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   3.39e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   3.6e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   3.7e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   3.6e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) 
   7.1e-05 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   0.000125 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   0.000124 sec ]
 [ GrB_mxm C<M>=A'*B, masked_dot_product (dot3) (S{S} = S'*S) nthreads 4 ntasks 32 (sparse to bitmap) 
   0.00014 sec ]
 [ GxB_set (bitmap to sparse) 
   2.5e-05 sec ]
 [ GxB_Matrix_import_FullC 
   3.1e-06 sec ]
 [ GxB_Matrix_export_FullC 
   2.86e-06 sec ]
 [ GxB_Matrix_import_FullC 
   1.19e-06 sec ]
 [ GxB_Matrix_export_FullC 
   1.91e-06 sec ]

test214: all tests passed
27-Apr 20:54:15 test214         0.0 sec     4: 16437 of 21586  23.9%   348.89/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test213     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
 [ GrB_assign (C iso assign) (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   6.91e-05 sec ]
 [ GrB_assign (C iso assign) (pending: 0) Method 05: C(:,:)<M> = scalar ; no S 
   4.89e-05 sec ]
 [ GrB_assign (C iso assign) (pending: 0) Method 05: C(:,:)<M> = scalar ; no S (sparse to full) 
   0.018 sec ]
 [ GxB_set 
   1.91e-06 sec ]
 [ GxB_Matrix_import_FullC 
   6.91e-06 sec ]
 [ GxB_Matrix_export_FullC 
   1.1e-05 sec ]
 [ GxB_Matrix_import_FullC 
   4.77e-06 sec ]
 [ GxB_Matrix_export_FullC 
   6.91e-06 sec ]

test213: all tests passed
27-Apr 20:54:15 test213         0.0 sec     2: 16435 of 21586  23.9%    60.53/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test206     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
tril triu diag offdiag nonzero eq_zero gt_zero ge_zero lt_zero le_zero ne_thunk eq_thunk gt_thunk ge_thunk lt_thunk le_thunk tril triu diag offdiag nonzero eq_zero gt_zero ge_zero lt_zero le_zero ne_thunk eq_thunk gt_thunk ge_thunk lt_thunk le_thunk resize

test206: all tests passed
27-Apr 20:54:17 test206         1.9 sec   216: 16219 of 21586  24.9%   116.32/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test212     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
 [ GrB_apply (iso mask: all zero) 
   5.01e-06 sec ]
 [ GxB_set 
   8.8e-05 sec ]
 [ GxB_Matrix_import_FullC 
   4.05e-06 sec ]
 [ GxB_Matrix_export_FullC 
   5.96e-06 sec ]
 [ GxB_Matrix_import_FullC 
   1.91e-06 sec ]
 [ GxB_Matrix_export_FullC 
   1.91e-06 sec ]
 [ GxB_Matrix_import_FullC 
   3.1e-06 sec ]
 [ GxB_Matrix_export_FullC 
   5.01e-06 sec ]
 [ GrB_apply (iso mask: all zero) (shallow-op) 
   1e-05 sec ]
 [ GrB_apply (iso mask: all zero) (shallow-op) 
   3.81e-06 sec ]
 [ GrB_apply (iso mask: all zero) (shallow-op) 
   7.41e-05 sec ]
 [ GrB_apply (iso mask: all zero) (shallow-op) 
   1.5e-05 sec ]
 [ GrB_apply (iso mask: all zero) (shallow-op) (sparse to bitmap) 
   2.91e-05 sec ]
 [ GrB_apply (iso mask: all zero) (shallow-op) (sparse to bitmap) 
   2.38e-05 sec ]
 [ GrB_apply (iso mask: all zero) (shallow-op) (sparse to bitmap) 
   3.79e-05 sec ]
 [ GxB_set (bitmap to sparse) 
   1.29e-05 sec ]
 [ GxB_Matrix_import_FullC 
   9.54e-07 sec ]
 [ GxB_Matrix_export_FullC 
   3.1e-06 sec ]
 [ GxB_Matrix_import_FullC 
   1.91e-06 sec ]
 [ GxB_Matrix_export_FullC 
   1.91e-06 sec ]
 [ GxB_Matrix_import_FullC 
   9.54e-07 sec ]
 [ GxB_Matrix_export_FullC 
   1.91e-06 sec ]
 [ GrB_apply (iso mask: struct) (shallow-op) 
   1.1e-05 sec ]
 [ GrB_apply (iso mask: struct) (shallow-op) 
   3.81e-06 sec ]
 [ GrB_apply (iso mask: struct) (shallow-op) 
   6.7e-05 sec ]
 [ GrB_apply (iso mask: struct) (shallow-op) 
   5.1e-05 sec ]
 [ GrB_apply (iso mask: struct) (shallow-op) masker:(S:S{F}=S) 
   6.39e-05 sec ]
 [ GrB_apply (iso mask: struct) (shallow-op) masker:(S:S{F}=S) 
   6.01e-05 sec ]
 [ GrB_apply (iso mask: struct) (shallow-op) masker:(S:S{F}=S) 
   0.000138 sec ]
 [ GrB_apply (iso mask: struct) (shallow-op) masker:(S:S{F}=S) 
   0.000177 sec ]
 [ GrB_apply (iso mask: struct) (shallow-op) masker:(S:S{F}=S) 
   0.000166 sec ]
 [ GrB_apply (iso mask: struct) (shallow-op) masker:(S:S{F}=S) (sparse to bitmap) 
   0.000227 sec ]
 [ GrB_apply (iso mask: struct) (shallow-op) masker:(S:S{F}=S) (sparse to bitmap) 
   0.000213 sec ]
 [ GrB_apply (iso mask: struct) (shallow-op) masker:(S:S{F}=S) (sparse to bitmap) 
   0.000266 sec ]
 [ GxB_set (bitmap to sparse) 
   8.49e-05 sec ]
 [ GxB_Matrix_import_FullC 
   1.91e-06 sec ]
 [ GxB_Matrix_export_FullC 
   3.81e-06 sec ]
 [ GxB_Matrix_import_FullC 
   9.54e-07 sec ]
 [ GxB_Matrix_export_FullC 
   3.1e-06 sec ]
 [ GxB_Matrix_import_FullC 
   2.15e-06 sec ]
 [ GxB_Matrix_export_FullC 
   3.1e-06 sec ]
 [ GrB_apply (iso mask: struct) 
   4.05e-06 sec ]
 [ GxB_set 
   2.22e-05 sec ]
 [ GxB_Matrix_import_FullC 
   2.86e-06 sec ]
 [ GxB_Matrix_export_FullC 
   3.1e-06 sec ]
 [ GxB_Matrix_import_FullC 
   1.91e-06 sec ]
 [ GxB_Matrix_export_FullC 
   3.1e-06 sec ]
 [ GxB_Matrix_import_FullC 
   2.86e-06 sec ]
 [ GxB_Matrix_export_FullC 
   2.86e-06 sec ]

test212: all tests passed
27-Apr 20:54:17 test212         0.1 sec    10: 16209 of 21586  24.9%   166.32/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test128     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test128: test eWiseMult, eWiseAdd, eWiseUnion, special cases
test128: all tests passed
27-Apr 20:54:17 test128         0.3 sec    61: 16148 of 21586  25.2%   223.59/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test82      [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test82: test GrB_Matrix_extract with index range (hypersparse)

test82: all tests passed
27-Apr 20:54:18 test82          0.1 sec    18: 16130 of 21586  25.3%   257.20/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test229     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test229: ---- test setElement_* for all types
logical: 
int8: 
int16: 
int32: 
int64: 
uint8: 
uint16: 
uint32: 
uint64: 
single: 
double: +++++++++++++++++++++++++++
single complex: 
double complex: 

test229: all tests passed
27-Apr 20:54:20 test229         2.2 sec    22: 16108 of 21586  25.4%    10.04/s [malloc] [cover]
jit: 0

======== test: test229     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0

test229: ---- test setElement_* for all types
logical: 
int8: 
int16: 
int32: 
int64: 
uint8: 
uint16: 
uint32: 
uint64: 
single: 
double: +++++++++++++++++++++++++++
single complex: 
double complex: 

test229: all tests passed
27-Apr 20:54:20 test229         0.7 sec     1: 16107 of 21586  25.4%     1.40/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test144     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test144 ---------------------- test GB_cumsum
test144: all tests passed
27-Apr 20:54:21 test144         0.5 sec     2: 16105 of 21586  25.4%     3.81/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test14      [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test14: reduce to column and scalar
.............
test14: all tests passed
27-Apr 20:55:19 test14         57.5 sec   732: 15373 of 21586  28.8%    12.73/s [malloc] [cover]
jit: 0

======== test: test14      [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0

test14: reduce to column and scalar
.............
test14: all tests passed
27-Apr 20:55:29 test14         10.7 sec     1: 15372 of 21586  28.8%     0.09/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test180     [malloc] [cover] [nthreads: 1 chunk: 1] jit: 4
test180: --------------------------------- assign
...............
test180: all tests passed
27-Apr 20:55:36 test180         6.9 sec   133: 15239 of 21586  29.4%    19.31/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test236     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test236 -----------GxB_Matrix_sort and GxB_Vector_sort
 logical.......................... int8.......................... int16.......................... int32.......................... int64.......................... uint8.......................... uint16.......................... uint32.......................... uint64.......................... single.......................... double.......................... iso.. one_entry. typecast.. large.
test236: all tests passed
27-Apr 20:55:40 test236         4.3 sec    73: 15166 of 21586  29.7%    17.02/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test232     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

--- testing assign with GrB_Scalar
......#........#........#........#........#........#........#........#........#........#........#........#........#..
test232: all tests passed
27-Apr 20:55:44 test232         3.3 sec    22: 15144 of 21586  29.8%     6.71/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test228     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test228 C = serialize (A) for all sparsity formats and all types
logical int8 int16 int32 int64 uint8 uint16 uint32 uint64 single double single complex double complex 
test228: all tests passed
27-Apr 20:55:59 test228        14.9 sec    37: 15107 of 21586  30.0%     2.48/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test154     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

--- testing apply with binaryop and scalar binding

first      .............
second     .............
pair       .............
plus       .............
minus      .............
rminus     .............
times      .............
div        .............
rdiv       .............
iseq       .............
isne       .............
eq         .............
ne         .............
pow        .............
any        .............
oneb       .............
min        ...........
max        ...........
isgt       ...........
islt       ...........
isge       ...........
isle       ...........
gt         ...........
lt         ...........
ge         ...........
le         ...........
or         ...........
and        ...........
xor        ...........
bor        ........
band       ........
bxor       ........
bxnor      ........
bget       ........
bset       ........
bclr       ........
bshift     ........
atan2      ..
hypot      ..
fmod       ..
remainder  ..
ldexp      ..
copysign   ..
cmplx      ..
firsti     ..
firsti1    ..
firstj     ..
firstj1    ..
secondi    ..
secondi1   ..
secondj    ..
secondj1   ..
Number of built-in GraphBLAS operators: 445

test154: all tests passed
27-Apr 20:57:48 test154       108.9 sec  1504: 13603 of 21586  37.0%    13.81/s [malloc] [cover]
jit: 0

======== test: test154     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0

--- testing apply with binaryop and scalar binding

first      .............
second     .............
pair       .............
plus       .............
minus      .............
rminus     .............
times      .............
div        .............
rdiv       .............
iseq       .............
isne       .............
eq         .............
ne         .............
pow        .............
any        .............
oneb       .............
min        ...........
max        ...........
isgt       ...........
islt       ...........
isge       ...........
isle       ...........
gt         ...........
lt         ...........
ge         ...........
le         ...........
or         ...........
and        ...........
xor        ...........
bor        ........
band       ........
bxor       ........
bxnor      ........
bget       ........
bset       ........
bclr       ........
bshift     ........
atan2      ..
hypot      ..
fmod       ..
remainder  ..
ldexp      ..
copysign   ..
cmplx      ..
firsti     ..
firsti1    ..
firstj     ..
firstj1    ..
secondi    ..
secondi1   ..
secondj    ..
secondj1   ..
Number of built-in GraphBLAS operators: 445

test154: all tests passed
27-Apr 20:59:26 test154        98.5 sec     2: 13601 of 21586  37.0%     0.02/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test238     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

 1................................
 2................................
 4................................
 8................................
32................................
test238: all tests passed
27-Apr 20:59:34 test238         8.0 sec    69: 13532 of 21586  37.3%     8.61/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test151b    [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test151b: test bshift operator

int8....
int16....
int32....
int64....
uint8....
uint16....
uint32....
uint64....
test151b: all tests passed
27-Apr 21:00:39 test151b       64.6 sec   191: 13341 of 21586  38.2%     2.96/s [malloc] [cover]
jit: 0

======== test: test151b    [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0
test151b: test bshift operator

int8....
int16....
int32....
int64....
uint8....
uint16....
uint32....
uint64....
test151b: all tests passed
27-Apr 21:01:00 test151b       21.2 sec     1: 13340 of 21586  38.2%     0.05/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test184     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

C2 = 

  struct with fields:

    matrix: [10x10 double]
     class: 'double'
       iso: 0


test184: all tests passed
27-Apr 21:01:03 test184         3.2 sec    38: 13302 of 21586  38.4%    11.95/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test191     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test191 ----------- Tiles = split (A)

d = 0.0001
....................................................
d = 0.01
....................................................
d = 0.2
....................................................
d = 0.8
....................................................
d = Inf
....................................................
test191: all tests passed
27-Apr 21:01:13 test191         9.9 sec    21: 13281 of 21586  38.5%     2.11/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test188     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test188 ----------- C = concat (Tiles)

d = 0.0001
........................................................................................................
d = 0.01
........................................................................................................
d = 0.2
........................................................................................................
d = 0.8
........................................................................................................
d = Inf
........................................................................................................
test188: all tests passed
27-Apr 21:06:34 test188       321.0 sec   229: 13052 of 21586  39.5%     0.71/s [malloc] [cover]
jit: 0

======== test: test188     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 0
test188 ----------- C = concat (Tiles)

d = 0.0001
........................................................................................................
d = 0.01
........................................................................................................
d = 0.2
........................................................................................................
d = 0.8
........................................................................................................
d = Inf
........................................................................................................
test188: all tests passed
27-Apr 21:07:16 test188        41.4 sec     3: 13049 of 21586  39.5%     0.07/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test237     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test237: all tests passed
27-Apr 21:07:17 test237         0.6 sec    16: 13033 of 21586  39.6%    26.95/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test224     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test224: unpack/pack tests
................................................................
test224: all tests passed
27-Apr 21:07:20 test224         3.6 sec    24: 13009 of 21586  39.7%     6.66/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test196     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test196: all tests passed
27-Apr 21:07:23 test196         2.3 sec    11: 12998 of 21586  39.8%     4.86/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test209     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
logical int8 int16 int32 int64 uint8 uint16 uint32 uint64 single double single complex double complex double complex 
test209: all tests passed
27-Apr 21:07:27 test209         4.3 sec    20: 12978 of 21586  39.9%     4.68/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test104     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

test104: export/import tests
................................................................
test104: all tests passed
27-Apr 21:07:40 test104        12.7 sec    40: 12938 of 21586  40.1%     3.15/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test189     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test189 ----------- test large C(I,J)=A
test189: all tests passed
27-Apr 21:07:49 test189         9.1 sec     1: 12937 of 21586  40.1%     0.11/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test194     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4
test194 ----------- V = diag (A,k)

d = 0.0001
................................................................................................................................................................................................................
d = 0.1
................................................................................................................................................................................................................
d = 0.8
................................................................................................................................................................................................................
d = Inf
................................................................................................................................................................................................................
test194: all tests passed
27-Apr 21:08:41 test194        52.3 sec     6: 12931 of 21586  40.1%     0.11/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test76      [malloc] [cover] [nthreads: 1 chunk: 1] jit: 4

-------------- GrB_resize

logical        .........................
int8           .........................
int16          .........................
int32          .........................
int64          .........................
uint8          .........................
uint16         .........................
uint32         .........................
uint64         .........................
single         .........................
double         .........................
single complex .........................
double complex .........................
test76: all tests passed
27-Apr 21:08:50 test76          9.1 sec    15: 12916 of 21586  40.2%     1.65/s [malloc] [cover]
jit: -4

JIT init 198: 4

======== test: test244     [malloc] [cover] [nthreads: 4 chunk: 1] jit: 4

logical        ..................
int8           ..................
int16          ..................
int32          ..................
int64          ..................
uint8          ..................
uint16         ..................
uint32         ..................
uint64         ..................
single         ..................
double         ..................
single complex ..................
double complex ..................
test244: all tests passed
27-Apr 21:09:20 test244        29.8 sec    17: 12899 of 21586  40.2%     0.57/s [malloc] [cover]
[malloc debugging turned off]
jit: -4

JIT init 198: 4

======== test: test201     [cover] [nthreads: 4 chunk: 1] jit: 4
test201: all tests passed
27-Apr 21:09:20 test201         0.0 sec     3: 12896 of 21586  40.3%   349.69/s [cover]
jit: -4

JIT init 198: 4

======== test: test225     [cover] [nthreads: 4 chunk: 1] jit: 4
test225: all tests passed
27-Apr 21:09:20 test225         0.1 sec     4: 12892 of 21586  40.3%    33.11/s [cover]
jit: -4

JIT init 198: 4

======== test: test176     [cover] [nthreads: 4 chunk: 1] jit: 4
test176 ------------ assign/subassign: methods 09, 11

test176: all tests passed
27-Apr 21:09:20 test176         0.1 sec     5: 12887 of 21586  40.3%    83.97/s [cover]
jit: -4

JIT init 198: 4

======== test: test208     [cover] [nthreads: 4 chunk: 1] jit: 4

test208: all tests passed
27-Apr 21:09:20 test208         0.0 sec     5: 12882 of 21586  40.3%   354.38/s [cover]
jit: -4

JIT init 198: 4

======== test: test216     [cover] [nthreads: 4 chunk: 1] jit: 4

test216: all tests passed
27-Apr 21:09:20 test216         0.0 sec     3: 12879 of 21586  40.3%    70.16/s [cover]
jit: -4

JIT init 198: 4

======== test: test142     [cover] [nthreads: 4 chunk: 1] jit: 4
test142 ------------ GrB_assign with dense matrices
logical int8 int16 int32 int64 uint8 uint16 uint32 uint64 single double single complex double complex 
test142: all tests passed
27-Apr 21:10:15 test142        54.3 sec   831: 12048 of 21586  44.2%    15.29/s [cover]
jit: 0

======== test: test142     [cover] [nthreads: 4 chunk: 1] jit: 0
test142 ------------ GrB_assign with dense matrices
logical int8 int16 int32 int64 uint8 uint16 uint32 uint64 single double single complex double complex 
test142: all tests passed
27-Apr 21:10:19 test142         4.2 sec     3: 12045 of 21586  44.2%     0.72/s [cover]
jit: -4

JIT init 198: 4

======== test: test137     [cover] [nthreads: 1 chunk: 1] jit: 4
test137: GrB_eWiseMult with FIRST and SECOND operators
builtin_complex: 0
builtin_complex: 1
test137: all tests passed
27-Apr 21:10:19 test137         0.2 sec     4: 12041 of 21586  44.2%    16.42/s [cover]
jit: 0

======== test: test137     [cover] [nthreads: 1 chunk: 1] jit: 0
test137: GrB_eWiseMult with FIRST and SECOND operators
builtin_complex: 0
builtin_complex: 1
test137: all tests passed
27-Apr 21:10:19 test137         0.0 sec     2: 12039 of 21586  44.2%   440.63/s [cover]
jit: -4

JIT init 198: 4

======== test: test139     [cover] [nthreads: 1 chunk: 1] jit: 4
test139 --------------- merge sort, special cases
test139 --------------- all tests passed
27-Apr 21:10:19 test139         0.3 sec     2: 12037 of 21586  44.2%     7.06/s [cover]
jit: -4

JIT init 198: 4

======== test: test145     [cover] [nthreads: 4 chunk: 1] jit: 4
test145 -------------------- C+=A'*B when C is dense, with dot4
test145: all tests passed
27-Apr 21:10:22 test145         2.4 sec     9: 12028 of 21586  44.3%     3.74/s [cover]
jit: 0

======== test: test145     [cover] [nthreads: 4 chunk: 1] jit: 0
test145 -------------------- C+=A'*B when C is dense, with dot4
test145: all tests passed
27-Apr 21:10:22 test145         0.0 sec     3: 12025 of 21586  44.3%   114.55/s [cover]
jit: -4

JIT init 198: 4

======== test: test172     [cover] [nthreads: 4 chunk: 1] jit: 4
test172:
test172: all tests passed
27-Apr 21:10:22 test172         0.1 sec     3: 12022 of 21586  44.3%    52.55/s [cover]
jit: -4

JIT init 198: 4

======== test: test148     [cover] [nthreads: 4 chunk: 1] jit: 4
test148 ---------------eWiseAdd with alias
test148: all tests passed
27-Apr 21:10:22 test148         0.4 sec     4: 12018 of 21586  44.3%     9.52/s [cover]
jit: -4

JIT init 198: 4

======== test: test157     [cover] [nthreads: 4 chunk: 1] jit: 4

  5x5 GraphBLAS bool matrix, bitmap by col
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse only
  10 entries, memory: 698 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse only
  10 entries, memory: 354 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/hypersparse
  10 entries, memory: 354 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap only
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: sparse/bitmap
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: full
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/full
  10 entries, memory: 698 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/full
  10 entries, memory: 354 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  10 entries, memory: 354 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap/full
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 865 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 489 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 489 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 266 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  50x50 GraphBLAS bool matrix, sparse by col
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 5.1 KB

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 5.1 KB

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 5.1 KB

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 5.1 KB

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 5.1 KB

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 5.1 KB

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  9 entries, memory: 721 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse only
  9 entries, memory: 345 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  9 entries, memory: 345 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap only
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: full
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  9 entries, memory: 721 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/full
  9 entries, memory: 345 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  9 entries, memory: 345 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap/full
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, full by col
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 865 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 489 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 489 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 266 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  50x50 GraphBLAS int8_t matrix, sparse by col
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 5.1 KB

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 5.1 KB

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 5.1 KB

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 5.1 KB

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 5.1 KB

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 5.1 KB

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  11 entries, memory: 750 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse only
  11 entries, memory: 374 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  11 entries, memory: 374 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap only
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: full
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  11 entries, memory: 750 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/full
  11 entries, memory: 374 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  11 entries, memory: 374 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap/full
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, full by col
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 890 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 514 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 514 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 291 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 291 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 291 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 291 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  50x50 GraphBLAS int16_t matrix, sparse by col
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 7.5 KB

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 7.5 KB

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 7.5 KB

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 7.5 KB

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 7.5 KB

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 7.5 KB

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  5x5 GraphBLAS int32_t matrix, bitmap by col
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  9 entries, memory: 748 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  9 entries, memory: 372 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  9 entries, memory: 372 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: full
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  9 entries, memory: 748 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/full
  9 entries, memory: 372 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  9 entries, memory: 372 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap/full
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, full by col
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 940 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 564 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 564 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 341 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  50x50 GraphBLAS int32_t matrix, sparse by col
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 12.4 KB

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 12.4 KB

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 12.4 KB

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 12.4 KB

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 12.4 KB

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 12.4 KB

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  5x5 GraphBLAS int64_t matrix, bitmap by col
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  12 entries, memory: 832 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  12 entries, memory: 456 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  12 entries, memory: 456 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: full
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  12 entries, memory: 832 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/full
  12 entries, memory: 456 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  12 entries, memory: 456 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap/full
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 1.0 KB

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 664 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 664 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 441 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 22.2 KB

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 22.2 KB

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 22.2 KB

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 22.2 KB

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 22.2 KB

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 22.2 KB

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  9 entries, memory: 689 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse only
  9 entries, memory: 345 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  9 entries, memory: 345 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap only
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: full
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  9 entries, memory: 689 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/full
  9 entries, memory: 345 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  9 entries, memory: 345 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap/full
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, full by col
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 865 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 489 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 489 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 266 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  50x50 GraphBLAS uint8_t matrix, sparse by col
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 5.1 KB

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 5.1 KB

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 5.1 KB

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 5.1 KB

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 5.1 KB

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 5.1 KB

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  12 entries, memory: 760 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse only
  12 entries, memory: 384 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  12 entries, memory: 384 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap only
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: full
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  12 entries, memory: 760 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/full
  12 entries, memory: 384 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  12 entries, memory: 384 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap/full
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, full by col
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 890 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 514 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 514 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 291 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 291 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 291 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 291 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  50x50 GraphBLAS uint16_t matrix, sparse by col
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 7.5 KB

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 7.5 KB

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 7.5 KB

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 7.5 KB

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 7.5 KB

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 7.5 KB

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  11 entries, memory: 772 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse only
  11 entries, memory: 396 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  11 entries, memory: 396 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap only
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: full
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  11 entries, memory: 772 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/full
  11 entries, memory: 396 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  11 entries, memory: 396 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap/full
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, full by col
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 940 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 564 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 564 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 341 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  50x50 GraphBLAS uint32_t matrix, sparse by col
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 12.4 KB

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 12.4 KB

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 12.4 KB

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 12.4 KB

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 12.4 KB

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 12.4 KB

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  11 entries, memory: 816 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse only
  11 entries, memory: 440 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  11 entries, memory: 440 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap only
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: full
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  11 entries, memory: 816 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/full
  11 entries, memory: 440 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  11 entries, memory: 440 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap/full
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 1.0 KB

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 664 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 664 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 441 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  50x50 GraphBLAS uint64_t matrix, sparse by col
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 22.2 KB

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 22.2 KB

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 22.2 KB

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 22.2 KB

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 22.2 KB

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 22.2 KB

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  5x5 GraphBLAS float matrix, bitmap by col
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse only
  13 entries, memory: 796 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, sparse by col
  sparsity control: sparse only
  13 entries, memory: 420 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/hypersparse
  13 entries, memory: 420 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap only
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: sparse/bitmap
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: full
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/full
  13 entries, memory: 796 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/full
  13 entries, memory: 420 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  13 entries, memory: 420 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap/full
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, full by col
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 940 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 564 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 564 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 341 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  50x50 GraphBLAS float matrix, sparse by col
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 12.4 KB

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 12.4 KB

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 12.4 KB

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 12.4 KB

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 12.4 KB

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 12.4 KB

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  5x5 GraphBLAS double matrix, bitmap by col
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  9 entries, memory: 784 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  9 entries, memory: 408 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/hypersparse
  9 entries, memory: 408 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap only
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: sparse/bitmap
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: full
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/full
  9 entries, memory: 784 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/full
  9 entries, memory: 408 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  9 entries, memory: 408 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap/full
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 1.0 KB

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 664 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 664 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 441 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  50x50 GraphBLAS double matrix, sparse by col
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 22.2 KB

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 22.2 KB

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 22.2 KB

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 22.2 KB

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 22.2 KB

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 22.2 KB

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  5x5 GraphBLAS float complex matrix, bitmap by col
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse only
  18 entries, memory: 928 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse only
  18 entries, memory: 552 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  18 entries, memory: 552 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap only
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: sparse/bitmap
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: full
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/full
  18 entries, memory: 928 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/full
  18 entries, memory: 552 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  18 entries, memory: 552 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap/full
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 1.0 KB

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 664 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 664 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 441 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse only
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse only
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap only
  10 entries, memory: 22.2 KB

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/bitmap
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, bitmap by col
  sparsity control: full
  10 entries, memory: 22.2 KB

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/full
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/full
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap/full
  10 entries, memory: 22.2 KB

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/bitmap/full
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse only
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse only
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap only
  10 entries, memory: 22.2 KB

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/bitmap
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, bitmap by col
  sparsity control: full
  10 entries, memory: 22.2 KB

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/full
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/full
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap/full
  10 entries, memory: 22.2 KB

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/bitmap/full
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  5x5 GraphBLAS double complex matrix, bitmap by col
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse only
  18 entries, memory: 1.0 KB

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse only
  18 entries, memory: 696 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  18 entries, memory: 696 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap only
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: sparse/bitmap
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: full
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/full
  18 entries, memory: 1.0 KB

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/full
  18 entries, memory: 696 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  18 entries, memory: 696 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap/full
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, full by col
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 1.2 KB

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 864 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 864 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 641 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 641 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 641 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 641 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  50x50 GraphBLAS double complex matrix, sparse by col
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse only
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse only
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap only
  10 entries, memory: 41.7 KB

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/bitmap
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, bitmap by col
  sparsity control: full
  10 entries, memory: 41.7 KB

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/full
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/full
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap/full
  10 entries, memory: 41.7 KB

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/bitmap/full
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse only
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse only
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap only
  10 entries, memory: 41.7 KB

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/bitmap
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, bitmap by col
  sparsity control: full
  10 entries, memory: 41.7 KB

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/full
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/full
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap/full
  10 entries, memory: 41.7 KB

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/bitmap/full
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i
test157: all tests passed
27-Apr 21:10:23 test157         0.4 sec    13: 12005 of 21586  44.4%    34.32/s [cover]
jit: 0

======== test: test157     [cover] [nthreads: 4 chunk: 1] jit: 0

  5x5 GraphBLAS bool matrix, bitmap by col
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse only
  10 entries, memory: 698 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse only
  10 entries, memory: 354 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/hypersparse
  10 entries, memory: 354 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap only
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: sparse/bitmap
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: full
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/full
  10 entries, memory: 698 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/full
  10 entries, memory: 354 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  10 entries, memory: 354 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap/full
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  10 entries, memory: 266 bytes

    (0,0)   1
    (4,0)   1
    (4,2)   1
    (0,3)   1
    (2,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 865 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 489 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 489 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 266 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS bool matrix, full by col
  25 entries, memory: 241 bytes

    (0,0)   1
    (1,0)   1
    (2,0)   1
    (3,0)   1
    (4,0)   1
    (0,1)   1
    (1,1)   1
    (2,1)   1
    (3,1)   1
    (4,1)   1
    (0,2)   1
    (1,2)   1
    (2,2)   1
    (3,2)   1
    (4,2)   1
    (0,3)   1
    (1,3)   1
    (2,3)   1
    (3,3)   1
    (4,3)   1
    (0,4)   1
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   1

  50x50 GraphBLAS bool matrix, sparse by col
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 5.1 KB

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 5.1 KB

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 5.1 KB

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 5.1 KB

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 5.1 KB

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 5.1 KB

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 672 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  50x50 GraphBLAS bool matrix, hypersparse by col
  5 entries, memory: 688 bytes

    (25,6)   1
    (34,7)   1
    (44,12)   1
    (12,27)   1
    (47,42)   1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  9 entries, memory: 721 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse only
  9 entries, memory: 345 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  9 entries, memory: 345 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap only
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: full
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  9 entries, memory: 721 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/full
  9 entries, memory: 345 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  9 entries, memory: 345 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap/full
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  9 entries, memory: 266 bytes

    (1,0)   1
    (2,0)   3
    (3,0)   4
    (3,1)   7
    (0,2)   -8
    (2,2)   -6
    (4,2)   17
    (1,3)   -5
    (4,4)   -1

  5x5 GraphBLAS int8_t matrix, full by col
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 865 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 489 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 489 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 266 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  5x5 GraphBLAS int8_t matrix, full by col
  25 entries, memory: 241 bytes

    (0,0)   0
    (1,0)   2
    (2,0)   9
    (3,0)   1
    (4,0)   8
    (0,1)   5
    (1,1)   9
    (2,1)   0
    (3,1)   4
    (4,1)   1
    (0,2)   9
    (1,2)   0
    (2,2)   7
    (3,2)   8
    (4,2)   8
    (0,3)   0
    (1,3)   3
    (2,3)   2
    (3,3)   8
    (4,3)   4
    (0,4)   9
    (1,4)   1
    (2,4)   2
    (3,4)   1
    (4,4)   1

  50x50 GraphBLAS int8_t matrix, sparse by col
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 5.1 KB

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 5.1 KB

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 5.1 KB

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 5.1 KB

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 5.1 KB

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 5.1 KB

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 672 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  50x50 GraphBLAS int8_t matrix, hypersparse by col
  5 entries, memory: 688 bytes

    (42,3)   -11
    (28,17)   -9
    (7,20)   -2
    (27,25)   -8
    (43,31)   -5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  11 entries, memory: 750 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse only
  11 entries, memory: 374 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  11 entries, memory: 374 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap only
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: full
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  11 entries, memory: 750 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/full
  11 entries, memory: 374 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  11 entries, memory: 374 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap/full
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, bitmap by col
  11 entries, memory: 291 bytes

    (0,0)   3
    (1,0)   -1
    (3,0)   4
    (4,0)   -8
    (1,1)   1
    (4,1)   -3
    (2,2)   -4
    (2,3)   8
    (0,4)   4
    (2,4)   -13
    (4,4)   5

  5x5 GraphBLAS int16_t matrix, full by col
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 890 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 514 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 514 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 291 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 291 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 291 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 291 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  5x5 GraphBLAS int16_t matrix, full by col
  25 entries, memory: 266 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   9
    (3,0)   7
    (4,0)   4
    (0,1)   4
    (1,1)   4
    (2,1)   3
    (3,1)   5
    (4,1)   5
    (0,2)   8
    (1,2)   7
    (2,2)   6
    (3,2)   3
    (4,2)   8
    (0,3)   5
    (1,3)   3
    (2,3)   9
    (3,3)   8
    (4,3)   5
    (0,4)   6
    (1,4)   5
    (2,4)   2
    (3,4)   3
    (4,4)   4

  50x50 GraphBLAS int16_t matrix, sparse by col
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 7.5 KB

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 7.5 KB

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 7.5 KB

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 7.5 KB

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 7.5 KB

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 7.5 KB

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 674 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  50x50 GraphBLAS int16_t matrix, hypersparse by col
  5 entries, memory: 658 bytes

    (11,11)   12
    (9,15)   16
    (8,21)   -10
    (42,21)   -15
    (11,46)   -2

  5x5 GraphBLAS int32_t matrix, bitmap by col
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  9 entries, memory: 748 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  9 entries, memory: 372 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  9 entries, memory: 372 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: full
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  9 entries, memory: 748 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/full
  9 entries, memory: 372 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  9 entries, memory: 372 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap/full
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, bitmap by col
  9 entries, memory: 341 bytes

    (2,0)   -2
    (0,1)   0
    (1,1)   2
    (1,2)   4
    (2,2)   20
    (3,2)   22
    (3,3)   3
    (1,4)   -3
    (2,4)   -22

  5x5 GraphBLAS int32_t matrix, full by col
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 940 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 564 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 564 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 341 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  5x5 GraphBLAS int32_t matrix, full by col
  25 entries, memory: 316 bytes

    (0,0)   7
    (1,0)   0
    (2,0)   2
    (3,0)   3
    (4,0)   6
    (0,1)   1
    (1,1)   7
    (2,1)   1
    (3,1)   6
    (4,1)   4
    (0,2)   7
    (1,2)   7
    (2,2)   9
    (3,2)   8
    (4,2)   3
    (0,3)   6
    (1,3)   1
    (2,3)   0
    (3,3)   7
    (4,3)   5
    (0,4)   4
    (1,4)   9
    (2,4)   6
    (3,4)   6
    (4,4)   8

  50x50 GraphBLAS int32_t matrix, sparse by col
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 12.4 KB

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 12.4 KB

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 12.4 KB

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 12.4 KB

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 12.4 KB

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 12.4 KB

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 684 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  50x50 GraphBLAS int32_t matrix, hypersparse by col
  5 entries, memory: 700 bytes

    (40,1)   5
    (9,8)   0
    (28,24)   -24
    (44,35)   -21
    (11,48)   0

  5x5 GraphBLAS int64_t matrix, bitmap by col
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  12 entries, memory: 832 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  12 entries, memory: 456 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  12 entries, memory: 456 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: full
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  12 entries, memory: 832 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/full
  12 entries, memory: 456 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  12 entries, memory: 456 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap/full
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, bitmap by col
  12 entries, memory: 441 bytes

    (0,0)   3
    (2,0)   -21
    (4,0)   0
    (3,1)   -12
    (4,1)   -5
    (0,2)   -9
    (3,2)   -2
    (4,2)   21
    (2,3)   11
    (0,4)   -1
    (2,4)   -6
    (3,4)   -14

  5x5 GraphBLAS int64_t matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 1.0 KB

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 664 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 664 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 441 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  5x5 GraphBLAS int64_t matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)   9
    (1,0)   0
    (2,0)   7
    (3,0)   2
    (4,0)   4
    (0,1)   5
    (1,1)   9
    (2,1)   4
    (3,1)   9
    (4,1)   3
    (0,2)   7
    (1,2)   6
    (2,2)   5
    (3,2)   6
    (4,2)   6
    (0,3)   1
    (1,3)   1
    (2,3)   9
    (3,3)   1
    (4,3)   0
    (0,4)   5
    (1,4)   8
    (2,4)   6
    (3,4)   1
    (4,4)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 22.2 KB

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 22.2 KB

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 22.2 KB

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 22.2 KB

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 22.2 KB

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 22.2 KB

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 704 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  50x50 GraphBLAS int64_t matrix, hypersparse by col
  5 entries, memory: 720 bytes

    (32,6)   0
    (49,9)   -9
    (23,18)   -8
    (7,21)   1
    (42,24)   3

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  9 entries, memory: 689 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse only
  9 entries, memory: 345 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  9 entries, memory: 345 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap only
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: full
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  9 entries, memory: 689 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/full
  9 entries, memory: 345 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  9 entries, memory: 345 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap/full
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  9 entries, memory: 266 bytes

    (2,0)   1
    (3,0)   11
    (4,0)   0
    (4,1)   12
    (0,2)   0
    (1,2)   0
    (4,2)   4
    (1,3)   0
    (4,3)   11

  5x5 GraphBLAS uint8_t matrix, full by col
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 865 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 489 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 489 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 266 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 266 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  5x5 GraphBLAS uint8_t matrix, full by col
  25 entries, memory: 241 bytes

    (0,0)   5
    (1,0)   3
    (2,0)   1
    (3,0)   6
    (4,0)   7
    (0,1)   4
    (1,1)   0
    (2,1)   2
    (3,1)   1
    (4,1)   2
    (0,2)   4
    (1,2)   5
    (2,2)   4
    (3,2)   8
    (4,2)   5
    (0,3)   9
    (1,3)   6
    (2,3)   9
    (3,3)   2
    (4,3)   6
    (0,4)   2
    (1,4)   6
    (2,4)   6
    (3,4)   0
    (4,4)   2

  50x50 GraphBLAS uint8_t matrix, sparse by col
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 5.1 KB

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 5.1 KB

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 5.1 KB

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 5.1 KB

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 5.1 KB

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 5.1 KB

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 672 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  50x50 GraphBLAS uint8_t matrix, hypersparse by col
  5 entries, memory: 688 bytes

    (33,0)   0
    (17,19)   16
    (42,30)   0
    (11,33)   0
    (39,45)   5

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  12 entries, memory: 760 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse only
  12 entries, memory: 384 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  12 entries, memory: 384 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap only
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: full
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  12 entries, memory: 760 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/full
  12 entries, memory: 384 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  12 entries, memory: 384 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap/full
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  12 entries, memory: 291 bytes

    (0,0)   7
    (3,0)   10
    (0,1)   0
    (3,1)   0
    (1,2)   1
    (2,2)   5
    (3,2)   3
    (0,3)   0
    (1,3)   0
    (3,3)   0
    (4,3)   2
    (1,4)   0

  5x5 GraphBLAS uint16_t matrix, full by col
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 890 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 514 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 514 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 291 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 291 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 291 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 291 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  5x5 GraphBLAS uint16_t matrix, full by col
  25 entries, memory: 266 bytes

    (0,0)   8
    (1,0)   2
    (2,0)   6
    (3,0)   5
    (4,0)   5
    (0,1)   8
    (1,1)   2
    (2,1)   3
    (3,1)   1
    (4,1)   9
    (0,2)   6
    (1,2)   4
    (2,2)   6
    (3,2)   5
    (4,2)   6
    (0,3)   5
    (1,3)   7
    (2,3)   5
    (3,3)   9
    (4,3)   2
    (0,4)   1
    (1,4)   1
    (2,4)   0
    (3,4)   4
    (4,4)   4

  50x50 GraphBLAS uint16_t matrix, sparse by col
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 7.5 KB

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 7.5 KB

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 7.5 KB

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 7.5 KB

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 7.5 KB

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 7.5 KB

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 674 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  50x50 GraphBLAS uint16_t matrix, hypersparse by col
  5 entries, memory: 690 bytes

    (46,4)   0
    (31,6)   0
    (38,9)   22
    (38,34)   0
    (18,48)   0

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  11 entries, memory: 772 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse only
  11 entries, memory: 396 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  11 entries, memory: 396 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap only
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: full
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  11 entries, memory: 772 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/full
  11 entries, memory: 396 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  11 entries, memory: 396 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap/full
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  11 entries, memory: 341 bytes

    (1,0)   9
    (2,0)   0
    (1,1)   0
    (3,1)   9
    (0,2)   0
    (3,2)   0
    (1,3)   1
    (2,3)   0
    (3,3)   6
    (1,4)   9
    (2,4)   20

  5x5 GraphBLAS uint32_t matrix, full by col
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 940 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 564 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 564 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 341 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  5x5 GraphBLAS uint32_t matrix, full by col
  25 entries, memory: 316 bytes

    (0,0)   4
    (1,0)   8
    (2,0)   7
    (3,0)   1
    (4,0)   8
    (0,1)   9
    (1,1)   5
    (2,1)   8
    (3,1)   5
    (4,1)   1
    (0,2)   1
    (1,2)   4
    (2,2)   7
    (3,2)   8
    (4,2)   7
    (0,3)   3
    (1,3)   5
    (2,3)   0
    (3,3)   1
    (4,3)   1
    (0,4)   6
    (1,4)   4
    (2,4)   1
    (3,4)   4
    (4,4)   1

  50x50 GraphBLAS uint32_t matrix, sparse by col
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 12.4 KB

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 12.4 KB

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 12.4 KB

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 12.4 KB

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 12.4 KB

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 12.4 KB

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 684 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  50x50 GraphBLAS uint32_t matrix, hypersparse by col
  5 entries, memory: 700 bytes

    (34,0)   14
    (2,29)   10
    (42,40)   0
    (28,43)   4
    (46,49)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  11 entries, memory: 816 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse only
  11 entries, memory: 440 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  11 entries, memory: 440 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap only
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: full
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  11 entries, memory: 816 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/full
  11 entries, memory: 440 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  11 entries, memory: 440 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap/full
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  11 entries, memory: 441 bytes

    (1,0)   6
    (2,0)   3
    (3,1)   0
    (0,2)   0
    (2,2)   0
    (3,2)   0
    (4,3)   0
    (1,4)   0
    (2,4)   0
    (3,4)   0
    (4,4)   0

  5x5 GraphBLAS uint64_t matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 1.0 KB

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 664 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 664 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 441 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  5x5 GraphBLAS uint64_t matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)   1
    (1,0)   0
    (2,0)   6
    (3,0)   2
    (4,0)   5
    (0,1)   6
    (1,1)   4
    (2,1)   5
    (3,1)   4
    (4,1)   1
    (0,2)   4
    (1,2)   8
    (2,2)   8
    (3,2)   2
    (4,2)   2
    (0,3)   5
    (1,3)   6
    (2,3)   4
    (3,3)   2
    (4,3)   9
    (0,4)   0
    (1,4)   1
    (2,4)   1
    (3,4)   1
    (4,4)   6

  50x50 GraphBLAS uint64_t matrix, sparse by col
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 22.2 KB

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 22.2 KB

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 22.2 KB

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 22.2 KB

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 22.2 KB

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 22.2 KB

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 704 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  50x50 GraphBLAS uint64_t matrix, hypersparse by col
  5 entries, memory: 720 bytes

    (28,3)   0
    (36,42)   0
    (2,43)   11
    (46,46)   0
    (36,49)   0

  5x5 GraphBLAS float matrix, bitmap by col
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse only
  13 entries, memory: 796 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, sparse by col
  sparsity control: sparse only
  13 entries, memory: 420 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/hypersparse
  13 entries, memory: 420 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap only
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: sparse/bitmap
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: full
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/full
  13 entries, memory: 796 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/full
  13 entries, memory: 420 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  13 entries, memory: 420 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap/full
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, bitmap by col
  13 entries, memory: 341 bytes

    (0,0)    6.90052
    (2,0)    0.595706
    (4,0)    7.79567
    (1,1)    -11.2025
    (4,1)    4.39411
    (0,2)    5.55757
    (1,2)    -15.3269
    (2,2)    -4.11251
    (1,3)    -10.9787
    (4,3)    -0.896225
    (1,4)    -14.1577
    (2,4)    -3.68011
    (3,4)    -13.6096

  5x5 GraphBLAS float matrix, full by col
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 940 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 564 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 564 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 341 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 341 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  5x5 GraphBLAS float matrix, full by col
  25 entries, memory: 316 bytes

    (0,0)    9.12132
    (1,0)    1.04012
    (2,0)    7.45546
    (3,0)    7.36267
    (4,0)    5.61861
    (0,1)    1.84194
    (1,1)    5.97211
    (2,1)    2.99937
    (3,1)    1.34123
    (4,1)    2.12602
    (0,2)    8.94942
    (1,2)    0.714528
    (2,2)    2.42487
    (3,2)    0.537544
    (4,2)    4.41722
    (0,3)    0.132832
    (1,3)    8.97191
    (2,3)    1.96658
    (3,3)    0.933705
    (4,3)    3.07367
    (0,4)    4.56058
    (1,4)    1.01669
    (2,4)    9.9539
    (3,4)    3.32093
    (4,4)    2.97347

  50x50 GraphBLAS float matrix, sparse by col
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 12.4 KB

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 12.4 KB

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 12.4 KB

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 12.4 KB

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 12.4 KB

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 12.4 KB

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 684 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  50x50 GraphBLAS float matrix, hypersparse by col
  5 entries, memory: 668 bytes

    (2,4)    1.20501
    (14,4)    11.9777
    (3,31)    -9.89902
    (25,38)    -5.92656
    (38,45)    -4.69809

  5x5 GraphBLAS double matrix, bitmap by col
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  9 entries, memory: 784 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  9 entries, memory: 408 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/hypersparse
  9 entries, memory: 408 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap only
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: sparse/bitmap
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: full
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/full
  9 entries, memory: 784 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/full
  9 entries, memory: 408 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  9 entries, memory: 408 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap/full
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, bitmap by col
  9 entries, memory: 441 bytes

    (1,0)    4.97981
    (2,0)    7.27572
    (3,0)    8.36634
    (0,1)    -9.36326
    (3,2)    -11.2833
    (0,3)    -12.6909
    (2,3)    -7.73064
    (3,3)    -14.2447
    (1,4)    27.8908

  5x5 GraphBLAS double matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 1.0 KB

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 664 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 664 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 441 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  5x5 GraphBLAS double matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)    6.40718
    (1,0)    3.28814
    (2,0)    6.53812
    (3,0)    7.49131
    (4,0)    5.83186
    (0,1)    7.40032
    (1,1)    2.34827
    (2,1)    7.34958
    (3,1)    9.70599
    (4,1)    8.6693
    (0,2)    0.862345
    (1,2)    3.66437
    (2,2)    3.69199
    (3,2)    6.85028
    (4,2)    5.97942
    (0,3)    7.89364
    (1,3)    3.67653
    (2,3)    2.06028
    (3,3)    0.866665
    (4,3)    7.71934
    (0,4)    2.05675
    (1,4)    3.88272
    (2,4)    5.51779
    (3,4)    2.28953
    (4,4)    6.41941

  50x50 GraphBLAS double matrix, sparse by col
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 22.2 KB

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 22.2 KB

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 22.2 KB

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse only
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse only
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: sparse/hypersparse
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap only
  5 entries, memory: 22.2 KB

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/bitmap
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/sparse/bitmap
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, bitmap by col
  sparsity control: full
  5 entries, memory: 22.2 KB

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/full
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/full
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/sparse/full
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, bitmap by col
  sparsity control: bitmap/full
  5 entries, memory: 22.2 KB

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, sparse by col
  sparsity control: sparse/bitmap/full
  5 entries, memory: 704 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  50x50 GraphBLAS double matrix, hypersparse by col
  5 entries, memory: 720 bytes

    (39,4)    9.75841
    (14,5)    -7.34271
    (24,11)    5.40633
    (5,20)    -9.11899
    (7,26)    6.52699

  5x5 GraphBLAS float complex matrix, bitmap by col
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse only
  18 entries, memory: 928 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse only
  18 entries, memory: 552 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  18 entries, memory: 552 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap only
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: sparse/bitmap
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: full
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/full
  18 entries, memory: 928 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/full
  18 entries, memory: 552 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  18 entries, memory: 552 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap/full
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, bitmap by col
  18 entries, memory: 441 bytes

    (0,0)    0 - 11.4243i
    (1,0)    0.937255 - 11.6872i
    (2,0)    3.06158 + 0i
    (3,0)    -6.53735 + 0i
    (4,0)    -8.9995 + 1.20283i
    (0,1)    2.13996 + 0i
    (1,1)    0 + 3.92575i
    (2,1)    -11.7233 + 4.36375i
    (3,1)    0 + 1.02108i
    (0,2)    0 - 6.24864i
    (2,2)    -9.60967 + 0i
    (3,2)    -12.2939 + 11.9625i
    (0,3)    9.42377 + 0i
    (1,3)    -11.2231 + 13.0184i
    (2,3)    0 - 5.04362i
    (3,3)    -2.70965 + 0i
    (1,4)    0 - 5.93642i
    (4,4)    0 - 10.3684i

  5x5 GraphBLAS float complex matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 1.0 KB

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 664 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 664 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 441 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 441 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  5x5 GraphBLAS float complex matrix, full by col
  25 entries, memory: 416 bytes

    (0,0)    2.99225 + 0i
    (1,0)    4.52593 + 0i
    (2,0)    4.22646 + 0i
    (3,0)    3.59606 + 0i
    (4,0)    5.58319 + 0i
    (0,1)    7.42545 + 0i
    (1,1)    4.24335 + 0i
    (2,1)    4.29356 + 0i
    (3,1)    1.24873 + 0i
    (4,1)    0.24434 + 0i
    (0,2)    2.90185 + 0i
    (1,2)    3.17521 + 0i
    (2,2)    6.5369 + 0i
    (3,2)    9.56936 + 0i
    (4,2)    9.35731 + 0i
    (0,3)    4.57886 + 0i
    (1,3)    2.40478 + 0i
    (2,3)    7.63898 + 0i
    (3,3)    7.59327 + 0i
    (4,3)    7.40648 + 0i
    (0,4)    7.43688 + 0i
    (1,4)    1.0592 + 0i
    (2,4)    6.8156 + 0i
    (3,4)    4.63261 + 0i
    (4,4)    2.12163 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse only
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse only
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap only
  10 entries, memory: 22.2 KB

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/bitmap
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, bitmap by col
  sparsity control: full
  10 entries, memory: 22.2 KB

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/full
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/full
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap/full
  10 entries, memory: 22.2 KB

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/bitmap/full
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse only
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse only
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap only
  10 entries, memory: 22.2 KB

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/bitmap
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, bitmap by col
  sparsity control: full
  10 entries, memory: 22.2 KB

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/full
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/full
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, bitmap by col
  sparsity control: bitmap/full
  10 entries, memory: 22.2 KB

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  10 entries, memory: 960 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  sparsity control: sparse/bitmap/full
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  50x50 GraphBLAS float complex matrix, sparse by col
  10 entries, memory: 784 bytes

    (27,1)    0 + 15.2608i
    (8,7)    5.30101 + 0i
    (26,9)    0 + 23.7741i
    (16,12)    0 + 17.4467i
    (6,20)    0 + 7.66527i
    (41,25)    3.89146 + 0i
    (8,35)    -9.52068 + 0i
    (4,44)    1.24988 + 0i
    (19,46)    0 - 11.6052i
    (33,47)    8.54043 + 0i

  5x5 GraphBLAS double complex matrix, bitmap by col
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse only
  18 entries, memory: 1.0 KB

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse only
  18 entries, memory: 696 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  18 entries, memory: 696 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap only
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: sparse/bitmap
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: full
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/full
  18 entries, memory: 1.0 KB

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/full
  18 entries, memory: 696 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  18 entries, memory: 696 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap/full
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: hypersparse/bitmap/full
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: sparse/bitmap/full
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, bitmap by col
  18 entries, memory: 641 bytes

    (1,0)    0 + 8.36837i
    (3,0)    -10.531 + 0i
    (0,1)    0 - 8.30468i
    (1,1)    5.5095 + 0i
    (2,1)    -10.6493 + 0i
    (3,1)    0 - 14.4238i
    (0,2)    0 - 3.52252i
    (1,2)    2.94204 + 0i
    (3,2)    6.47755 + 13.0251i
    (0,3)    -6.32965 - 1.74775i
    (1,3)    -7.77844 + 25.3835i
    (2,3)    -17.6841 + 1.2834i
    (4,3)    0 + 14.0991i
    (0,4)    0 - 4.80653i
    (1,4)    0 - 13.2333i
    (2,4)    -4.2292 + 0i
    (3,4)    -3.17628 + 0i
    (4,4)    17.6899 - 16.6254i

  5x5 GraphBLAS double complex matrix, full by col
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse only
  25 entries, memory: 1.2 KB

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse only
  25 entries, memory: 864 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  25 entries, memory: 864 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap only
  25 entries, memory: 641 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: hypersparse/bitmap
  25 entries, memory: 641 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: sparse/bitmap
  25 entries, memory: 641 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, bitmap by col
  sparsity control: hypersparse/sparse/bitmap
  25 entries, memory: 641 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: hypersparse/full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: sparse/full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: hypersparse/sparse/full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: bitmap/full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: hypersparse/bitmap/full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  sparsity control: sparse/bitmap/full
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  5x5 GraphBLAS double complex matrix, full by col
  25 entries, memory: 616 bytes

    (0,0)    9.39398 + 0i
    (1,0)    0.181775 + 0i
    (2,0)    6.83839 + 0i
    (3,0)    7.83736 + 0i
    (4,0)    5.34138 + 0i
    (0,1)    8.85359 + 0i
    (1,1)    8.99005 + 0i
    (2,1)    6.25938 + 0i
    (3,1)    1.37869 + 0i
    (4,1)    2.17802 + 0i
    (0,2)    1.82141 + 0i
    (1,2)    0.418199 + 0i
    (2,2)    1.06942 + 0i
    (3,2)    6.16443 + 0i
    (4,2)    9.39661 + 0i
    (0,3)    3.54456 + 0i
    (1,3)    4.10629 + 0i
    (2,3)    9.84349 + 0i
    (3,3)    9.45579 + 0i
    (4,3)    6.76645 + 0i
    (0,4)    9.88302 + 0i
    (1,4)    7.66831 + 0i
    (2,4)    3.36699 + 0i
    (3,4)    6.62382 + 0i
    (4,4)    2.44165 + 0i

  50x50 GraphBLAS double complex matrix, sparse by col
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse only
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse only
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap only
  10 entries, memory: 41.7 KB

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/bitmap
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, bitmap by col
  sparsity control: full
  10 entries, memory: 41.7 KB

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/full
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/full
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap/full
  10 entries, memory: 41.7 KB

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/bitmap/full
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse only
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse only
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/hypersparse
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap only
  10 entries, memory: 41.7 KB

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/bitmap
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: hypersparse/sparse/bitmap
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, bitmap by col
  sparsity control: full
  10 entries, memory: 41.7 KB

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/full
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/full
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: hypersparse/sparse/full
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, bitmap by col
  sparsity control: bitmap/full
  10 entries, memory: 41.7 KB

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, hypersparse by col
  sparsity control: hypersparse/bitmap/full
  10 entries, memory: 1008 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  sparsity control: sparse/bitmap/full
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i

  50x50 GraphBLAS double complex matrix, sparse by col
  10 entries, memory: 864 bytes

    (6,0)    0 + 8.54202i
    (30,25)    -5.34099 + 0i
    (26,27)    14.0891 + 0i
    (20,29)    7.86782 + 0i
    (34,29)    19.2776 + 0i
    (10,34)    0 + 13.4185i
    (22,36)    0 + 3.53015i
    (14,37)    -7.74466 + 0i
    (20,39)    0 - 1.67559i
    (15,42)    0 - 24.9953i
test157: all tests passed
27-Apr 21:10:23 test157         0.4 sec      : 12005 of 21586  44.4% [cover]
jit: -4

JIT init 198: 4

======== test: test182     [cover] [nthreads: 1 chunk: 1] jit: 4
..............................
test182: all tests passed
27-Apr 21:10:24 test182         0.7 sec     8: 11997 of 21586  44.4%    11.47/s [cover]
jit: -4

JIT init 198: 4

======== test: test108     [cover] [nthreads: 4 chunk: 1] jit: 4

test108: all tests passed
27-Apr 21:10:24 test108         0.2 sec     1: 11996 of 21586  44.4%     6.05/s [cover]
jit: -4

JIT init 198: 4

======== test: test130     [cover] [nthreads: 4 chunk: 1] jit: 4

test130: quick GrB_apply tests
................................................................

test130: all tests passed
27-Apr 21:10:25 test130         0.6 sec    25: 11971 of 21586  44.5%    40.15/s [cover]
jit: -4

JIT init 198: 4

======== test: test124     [cover] [nthreads: 4 chunk: 1] jit: 4
test124: GrB_extract, trigger case 6
test124: all tests passed
27-Apr 21:10:25 test124         0.1 sec     3: 11968 of 21586  44.6%    23.81/s [cover]
jit: -4

JIT init 198: 4

======== test: test138     [cover] [nthreads: 1 chunk: 1] jit: 4
27-Apr 21:10:25 test138         0.1 sec     1: 11967 of 21586  44.6%    18.58/s [cover]
jit: -4

JIT init 198: 4

======== test: test227     [cover] [nthreads: 4 chunk: 1] jit: 4
-------------- tests of GrB_kronecker:
[ plus int32 ] ................................
[ plus int64 ] ................................
[ plus single ] ................................
[ plus double ] ................................
[ times int32 ] ................................
[ times int64 ] ................................
[ times single ] ................................
[ times double ] ................................
[ firsti int32 ] ................................
[ firsti int64 ] ................................
[ firsti1 int32 ] ................................
[ firsti1 int64 ] ................................
[ firstj int32 ] ................................
[ firstj int64 ] ................................
[ firstj1 int32 ] ................................
[ firstj1 int64 ] ................................
[ secondi int32 ] ................................
[ secondi int64 ] ................................
[ secondi1 int32 ] ................................
[ secondi1 int64 ] ................................
[ secondj int32 ] ................................
[ secondj int64 ] ................................
[ secondj1 int32 ] ................................
[ secondj1 int64 ] ................................

test227: all tests passed
27-Apr 21:10:28 test227         3.4 sec    27: 11940 of 21586  44.7%     7.85/s [cover]
jit: -4

JIT init 198: 4

======== test: test125     [cover] [nthreads: 4 chunk: 1] jit: 4
-------------- GrB_mxm on all semirings (row,col scale)

first      .............   65
second     .............   65
pair       .............   65
plus       .............   65
minus      .............   65
rminus     .............   65
times      .............   65
div        .............   65
rdiv       .............   65
iseq       .............   59
isne       .............   59
eq         .............   99
ne         .............   99
pow        .............    9
any        .............    0
oneb       .............   65
min        .............   59
max        .............   59
isgt       .............   59
islt       .............   59
isge       .............   59
isle       .............   59
gt         .............   99
lt         .............   99
ge         .............   99
le         .............   99
or         .............   59
and        .............   59
xor        .............   59
bor        .............   16
band       .............   16
bxor       .............   16
bxnor      .............   16
bget       .............    0
bset       .............    0
bclr       .............    0
bshift     .............    0
atan2      .............    0
hypot      .............    0
fmod       .............    0
remainder  .............    0
ldexp      .............    0
copysign   .............    0
cmplx      .............    0
firsti     .............   10
firsti1    .............   10
firstj     .............   10
firstj1    .............   10
secondi    .............   10
secondi1   .............   10
secondj    .............   10
secondj1   .............   10
semirings tested: 2046

test125: all tests passed
27-Apr 21:10:50 test125        21.7 sec   630: 11310 of 21586  47.6%    28.98/s [cover]
jit: -4

JIT init 198: 4

======== test: test234     [cover] [nthreads: 4 chunk: 1] jit: 4
test234 -----------tests of GxB_eWiseUnion (all ops)


logical  :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor

int8     :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

int16    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

int32    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift firsti firsti1 firstj firstj1 secondi secondi1 secondj secondj1

int64    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift firsti firsti1 firstj firstj1 secondi secondi1 secondj secondj1

uint8    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

uint16   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

uint32   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

uint64   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

single   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor atan2 hypot fmod remainder ldexp copysign cmplx

double   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor atan2 hypot fmod remainder ldexp copysign cmplx

single complex :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb

double complex :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb
test234: all tests passed
27-Apr 21:12:33 test234       103.5 sec   402: 10908 of 21586  49.5%     3.89/s [cover]
jit: 0

======== test: test234     [cover] [nthreads: 4 chunk: 1] jit: 0
test234 -----------tests of GxB_eWiseUnion (all ops)


logical  :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor

int8     :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

int16    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

int32    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift firsti firsti1 firstj firstj1 secondi secondi1 secondj secondj1

int64    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift firsti firsti1 firstj firstj1 secondi secondi1 secondj secondj1

uint8    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

uint16   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

uint32   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

uint64   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

single   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor atan2 hypot fmod remainder ldexp copysign cmplx

double   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor atan2 hypot fmod remainder ldexp copysign cmplx

single complex :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb

double complex :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb
test234: all tests passed
27-Apr 21:13:25 test234        51.4 sec     2: 10906 of 21586  49.5%     0.04/s [cover]
jit: -4

JIT init 198: 4

======== test: test242     [cover] [nthreads: 4 chunk: 1] jit: 4

logical:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

int8:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

int16:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

int32:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

int64:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

uint8:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

uint16:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

uint32:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

uint64:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

single:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

double:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

single complex:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

double complex:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

Complex (UDT):
hyper...................................................
sparse...................................................
bitmap...................................................
full.

test242: all tests passed
27-Apr 21:13:58 test242        32.7 sec    78: 10828 of 21586  49.8%     2.39/s [cover]
jit: 0

======== test: test242     [cover] [nthreads: 4 chunk: 1] jit: 0

logical:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

int8:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

int16:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

int32:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

int64:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

uint8:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

uint16:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

uint32:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

uint64:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

single:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

double:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

single complex:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

double complex:
hyper...................................................
sparse...................................................
bitmap...................................................
full.

Complex (UDT):
hyper...................................................
sparse...................................................
bitmap...................................................
full.

test242: all tests passed
27-Apr 21:14:30 test242        32.4 sec     1: 10827 of 21586  49.8%     0.03/s [cover]
jit: -4

JIT init 198: 4

======== test: test173     [cover] [nthreads: 4 chunk: 1] jit: 4
logical, double, double complex, 
test173: all tests passed
27-Apr 21:14:31 test173         0.8 sec    10: 10817 of 21586  49.9%    13.04/s [cover]
jit: -4

JIT init 198: 4

======== test: test200     [cover] [nthreads: 4 chunk: 1] jit: 4
.................
test200: all tests passed
27-Apr 21:14:33 test200         2.2 sec    10: 10807 of 21586  49.9%     4.51/s [cover]
jit: -4

JIT init 198: 4

======== test: test197     [cover] [nthreads: 4 chunk: 1] jit: 4
test197: all tests passed
27-Apr 21:14:33 test197         0.1 sec     1: 10806 of 21586  49.9%     8.22/s [cover]
jit: -4

JIT init 198: 4

======== test: test84      [cover] [nthreads: 4 chunk: 1] jit: 4

test84: GrB_assign with row/col assignments
........................................................................................................................
test84: all tests passed
27-Apr 21:14:34 test84          0.9 sec    18: 10788 of 21586  50.0%    19.64/s [cover]
jit: -4

JIT init 198: 4

======== test: test19b     [cover] [nthreads: 4 chunk: 1] jit: 4

test19b: GrB_assign and setElement, many pending computations
problem 0: C is 5-by-5, # assign/setElement to do: 100
problem 1: C is 10-by-20, # assign/setElement to do: 2000
... please wait
problem 2: C is 10-by-20, # assign/setElement to do: 2000
... please wait

test19b: all tests passed
27-Apr 21:14:42 test19b         7.9 sec    58: 10730 of 21586  50.3%     7.36/s [cover]
jit: -4

JIT init 198: 4

======== test: test19b     [cover] [nthreads: 1 chunk: 1] jit: 4

test19b: GrB_assign and setElement, many pending computations
problem 0: C is 5-by-5, # assign/setElement to do: 100
problem 1: C is 10-by-20, # assign/setElement to do: 2000
... please wait
problem 2: C is 10-by-20, # assign/setElement to do: 2000
... please wait

test19b: all tests passed
27-Apr 21:14:46 test19b         3.9 sec     5: 10725 of 21586  50.3%     1.30/s [cover]
jit: -4

JIT init 198: 4

======== test: test133     [cover] [nthreads: 4 chunk: 1] jit: 4

test133: test the mask operation

test133: all tests passed
27-Apr 21:14:46 test133         0.3 sec     2: 10723 of 21586  50.3%     7.54/s [cover]
jit: -4

JIT init 198: 4

======== test: test80      [cover] [nthreads: 4 chunk: 1] jit: 4
test06: GrB_mxm on all semirings

plus.test06: GrB_mxm on all semirings

plus.
test80: all test passed
27-Apr 21:14:49 test80          3.2 sec    12: 10711 of 21586  50.4%     3.73/s [cover]
jit: -4

JIT init 198: 4

======== test: test151     [cover] [nthreads: 4 chunk: 1] jit: 4
test151: test bitwise operators

int8........................................
int16........................................
int32........................................
int64........................................
uint8........................................
uint16........................................
uint32........................................
uint64........................................
test151: all tests passed
27-Apr 21:15:02 test151        12.2 sec    65: 10646 of 21586  50.7%     5.34/s [cover]
jit: -4

JIT init 198: 4

======== test: test23      [cover] [nthreads: 4 chunk: 1] jit: 4

==== quick test for GrB_Matrix_build and GrB_Vector_build:

nrows: 10 ncols 8 nnz 40 ymin -3.80979 ymax 94.6135

first          ....................................
second         ..................................
pair           ....................................
oneb           .....................................
any            ......................................
min            .................................
max            ................................
plus           ...................................
times          ....................................
iseq           .....................................
or             ...............................
and            ..............................
xor            ................................
test23: all tests passed
27-Apr 21:15:58 test23         56.1 sec   146: 10500 of 21586  51.4%     2.60/s [cover]
jit: 0

======== test: test23      [cover] [nthreads: 4 chunk: 1] jit: 0

==== quick test for GrB_Matrix_build and GrB_Vector_build:

nrows: 10 ncols 8 nnz 40 ymin -3.80979 ymax 94.6135

first          ....................................
second         ..................................
pair           ....................................
oneb           .....................................
any            ......................................
min            .................................
max            ................................
plus           ...................................
times          ....................................
iseq           .....................................
or             ...............................
and            ..............................
xor            ................................
test23: all tests passed
27-Apr 21:16:07 test23          9.6 sec     2: 10498 of 21586  51.4%     0.21/s [cover]
jit: -4

JIT init 198: 4

======== test: test135     [cover] [nthreads: 4 chunk: 1] jit: 4
test135: reduce to scalar

nthreads_max =

     4

================== int8 min:
built-in: 0.004048 sec
1 thread  0.059583 sec
4 threads 0.058351 sec
================== double min:
built-in: 0.010308 sec
1 thread  0.039053 sec
4 threads 0.030593 sec
================== double sum:
built-in: 0.003678 sec (full)
built-in: 0.012197 sec (sparse)
1 thread  0.026139 sec
4 threads 0.041151 sec
test135: all tests passed
27-Apr 21:16:09 test135         1.4 sec     7: 10491 of 21586  51.4%     4.92/s [cover]
jit: -4

JIT init 198: 4

======== test: test160     [cover] [nthreads: 1 chunk: 1] jit: 4
int8 int16 int32 int64 double complex 
test160: all tests passed
27-Apr 21:16:32 test160        23.4 sec    23: 10468 of 21586  51.5%     0.98/s [cover]
jit: 0

======== test: test160     [cover] [nthreads: 1 chunk: 1] jit: 0
int8 int16 int32 int64 double complex 
test160: all tests passed
27-Apr 21:16:56 test160        23.6 sec     1: 10467 of 21586  51.5%     0.04/s [cover]
jit: -4

JIT init 198: 4

======== test: test54      [cover] [nthreads: 4 chunk: 1] jit: 4

test54: ==== quick test for subref and assign (lo:stride:hi):
longer tests: ...................................................................................................................................................................................................................................................................................
test54: all tests passed
27-Apr 21:16:59 test54          2.7 sec    20: 10447 of 21586  51.6%     7.48/s [cover]
jit: -4

JIT init 198: 4

======== test: test129     [cover] [nthreads: 4 chunk: 1] jit: 4

test129: GxB_select tests (tril and nonzero)

---------- Trigger an intentional error (domain mismatch):

Intentional error: method failed, info: -5
---------- Domain mismatch error above is expected

................................................................
test129: all tests passed
27-Apr 21:16:59 test129         0.8 sec     3: 10444 of 21586  51.6%     3.88/s [cover]
jit: -4

JIT init 198: 4

======== test: test69      [cover] [nthreads: 4 chunk: 1] jit: 4
test69 ------------------  assign alias tests
................
test69: assign alias tests passed
27-Apr 21:17:01 test69          1.4 sec     3: 10441 of 21586  51.6%     2.18/s [cover]
jit: -4

JIT init 198: 4

======== test: test230     [cover] [nthreads: 4 chunk: 1] jit: 4

--- testing apply with idxunops

rowindex   ..
colindex   ..
diagindex  ..
tril       .
triu       .
diag       .
offdiag    .
colle      .
colgt      .
rowle      .
rowgt      .
valuene    .............
valueeq    .............
valuelt    ...........
valuele    ...........
valuegt    ...........
valuege    ...........
Number of built-in GraphBLAS idxunops: 84

test230: all tests passed
27-Apr 21:18:03 test230        61.8 sec   113: 10328 of 21586  52.2%     1.83/s [cover]
jit: -4

JIT init 198: 4

======== test: test74      [cover] [nthreads: 4 chunk: 1] jit: 4
test74 -------- GrB_mxm on all semirings (all methods)

m 1 n 1 k 20: 

min.logical   : 
JIT init 198: 4
........................................................................................
min.int8      : 
JIT init 198: 4
.....................
min.int16     : 
JIT init 198: 4
.....................
min.int32     : 
JIT init 198: 4
.............................
min.int64     : 
JIT init 198: 4
.............................
min.uint8     : 
JIT init 198: 4
.....................
min.uint16    : 
JIT init 198: 4
.....................
min.uint32    : 
JIT init 198: 4
.....................
min.uint64    : 
JIT init 198: 4
.....................
min.single    : 
JIT init 198: 4
.....................
min.double    : 
JIT init 198: 4
.....................
max.logical   : 
JIT init 198: 4
........................................................................................
max.int8      : 
JIT init 198: 4
.....................
max.int16     : 
JIT init 198: 4
.....................
max.int32     : 
JIT init 198: 4
.............................
max.int64     : 
JIT init 198: 4
.............................
max.uint8     : 
JIT init 198: 4
.....................
max.uint16    : 
JIT init 198: 4
.....................
max.uint32    : 
JIT init 198: 4
.....................
max.uint64    : 
JIT init 198: 4
.....................
max.single    : 
JIT init 198: 4
.....................
max.double    : 
JIT init 198: 4
.....................
plus.logical  : 
JIT init 198: 4
........................................................................................
plus.int8     : 
JIT init 198: 4
.....................
plus.int16    : 
JIT init 198: 4
.....................
plus.int32    : 
JIT init 198: 4
.............................
plus.int64    : 
JIT init 198: 4
.............................
plus.uint8    : 
JIT init 198: 4
.....................
plus.uint16   : 
JIT init 198: 4
.....................
plus.uint32   : 
JIT init 198: 4
.....................
plus.uint64   : 
JIT init 198: 4
.....................
plus.single   : 
JIT init 198: 4
.....................
plus.double   : 
JIT init 198: 4
.....................
plus.single complex: 
JIT init 198: 4
..........
plus.double complex: 
JIT init 198: 4
..........
times.logical : 
JIT init 198: 4
........................................................................................
times.int8    : 
JIT init 198: 4
.....................
times.int16   : 
JIT init 198: 4
.....................
times.int32   : 
JIT init 198: 4
.............................
times.int64   : 
JIT init 198: 4
.............................
times.uint8   : 
JIT init 198: 4
.....................
times.uint16  : 
JIT init 198: 4
.....................
times.uint32  : 
JIT init 198: 4
.....................
times.uint64  : 
JIT init 198: 4
.....................
times.single  : 
JIT init 198: 4
.....................
times.double  : 
JIT init 198: 4
.....................
times.single complex: 
JIT init 198: 4
..........
times.double complex: 
JIT init 198: 4
..........
any.logical   : 
JIT init 198: 4
........................................................................................
any.int8      : 
JIT init 198: 4
.....................
any.int16     : 
JIT init 198: 4
.....................
any.int32     : 
JIT init 198: 4
.............................
any.int64     : 
JIT init 198: 4
.............................
any.uint8     : 
JIT init 198: 4
.....................
any.uint16    : 
JIT init 198: 4
.....................
any.uint32    : 
JIT init 198: 4
.....................
any.uint64    : 
JIT init 198: 4
.....................
any.single    : 
JIT init 198: 4
.....................
any.double    : 
JIT init 198: 4
.....................
any.single complex: 
JIT init 198: 4
..........
any.double complex: 
JIT init 198: 4
..........
or.logical    : 
JIT init 198: 4
........................................................................................
and.logical   : 
JIT init 198: 4
........................................................................................
xor.logical   : 
JIT init 198: 4
........................................................................................
eq.logical    : 
JIT init 198: 4
........................................................................................
bor.uint8     : 
JIT init 198: 4
....
bor.uint16    : 
JIT init 198: 4
....
bor.uint32    : 
JIT init 198: 4
....
bor.uint64    : 
JIT init 198: 4
....
band.uint8    : 
JIT init 198: 4
....
band.uint16   : 
JIT init 198: 4
....
band.uint32   : 
JIT init 198: 4
....
band.uint64   : 
JIT init 198: 4
....
bxor.uint8    : 
JIT init 198: 4
....
bxor.uint16   : 
JIT init 198: 4
....
bxor.uint32   : 
JIT init 198: 4
....
bxor.uint64   : 
JIT init 198: 4
....
bxnor.uint8   : 
JIT init 198: 4
....
bxnor.uint16  : 
JIT init 198: 4
....
bxnor.uint32  : 
JIT init 198: 4
....
bxnor.uint64  : 
JIT init 198: 4
....
m 2 n 2 k 100: 

min.logical   : 
JIT init 198: 4
........................................................................................
min.int8      : 
JIT init 198: 4
.....................
min.int16     : 
JIT init 198: 4
.....................
min.int32     : 
JIT init 198: 4
.............................
min.int64     : 
JIT init 198: 4
.............................
min.uint8     : 
JIT init 198: 4
.....................
min.uint16    : 
JIT init 198: 4
.....................
min.uint32    : 
JIT init 198: 4
.....................
min.uint64    : 
JIT init 198: 4
.....................
min.single    : 
JIT init 198: 4
.....................
min.double    : 
JIT init 198: 4
.....................
max.logical   : 
JIT init 198: 4
........................................................................................
max.int8      : 
JIT init 198: 4
.....................
max.int16     : 
JIT init 198: 4
.....................
max.int32     : 
JIT init 198: 4
.............................
max.int64     : 
JIT init 198: 4
.............................
max.uint8     : 
JIT init 198: 4
.....................
max.uint16    : 
JIT init 198: 4
.....................
max.uint32    : 
JIT init 198: 4
.....................
max.uint64    : 
JIT init 198: 4
.....................
max.single    : 
JIT init 198: 4
.....................
max.double    : 
JIT init 198: 4
.....................
plus.logical  : 
JIT init 198: 4
........................................................................................
plus.int8     : 
JIT init 198: 4
.....................
plus.int16    : 
JIT init 198: 4
.....................
plus.int32    : 
JIT init 198: 4
.............................
plus.int64    : 
JIT init 198: 4
.............................
plus.uint8    : 
JIT init 198: 4
.....................
plus.uint16   : 
JIT init 198: 4
.....................
plus.uint32   : 
JIT init 198: 4
.....................
plus.uint64   : 
JIT init 198: 4
.....................
plus.single   : 
JIT init 198: 4
.....................
plus.double   : 
JIT init 198: 4
.....................
plus.single complex: 
JIT init 198: 4
..........
plus.double complex: 
JIT init 198: 4
..........
times.logical : 
JIT init 198: 4
........................................................................................
times.int8    : 
JIT init 198: 4
.....................
times.int16   : 
JIT init 198: 4
.....................
times.int32   : 
JIT init 198: 4
.............................
times.int64   : 
JIT init 198: 4
.............................
times.uint8   : 
JIT init 198: 4
.....................
times.uint16  : 
JIT init 198: 4
.....................
times.uint32  : 
JIT init 198: 4
.....................
times.uint64  : 
JIT init 198: 4
.....................
times.single  : 
JIT init 198: 4
.....................
times.double  : 
JIT init 198: 4
.....................
times.single complex: 
JIT init 198: 4
..........
times.double complex: 
JIT init 198: 4
..........
any.logical   : 
JIT init 198: 4
........................................................................................
any.int8      : 
JIT init 198: 4
.....................
any.int16     : 
JIT init 198: 4
.....................
any.int32     : 
JIT init 198: 4
.............................
any.int64     : 
JIT init 198: 4
.............................
any.uint8     : 
JIT init 198: 4
.....................
any.uint16    : 
JIT init 198: 4
.....................
any.uint32    : 
JIT init 198: 4
.....................
any.uint64    : 
JIT init 198: 4
.....................
any.single    : 
JIT init 198: 4
.....................
any.double    : 
JIT init 198: 4
.....................
any.single complex: 
JIT init 198: 4
..........
any.double complex: 
JIT init 198: 4
..........
or.logical    : 
JIT init 198: 4
........................................................................................
and.logical   : 
JIT init 198: 4
........................................................................................
xor.logical   : 
JIT init 198: 4
........................................................................................
eq.logical    : 
JIT init 198: 4
........................................................................................
bor.uint8     : 
JIT init 198: 4
....
bor.uint16    : 
JIT init 198: 4
....
bor.uint32    : 
JIT init 198: 4
....
bor.uint64    : 
JIT init 198: 4
....
band.uint8    : 
JIT init 198: 4
....
band.uint16   : 
JIT init 198: 4
....
band.uint32   : 
JIT init 198: 4
....
band.uint64   : 
JIT init 198: 4
....
bxor.uint8    : 
JIT init 198: 4
....
bxor.uint16   : 
JIT init 198: 4
....
bxor.uint32   : 
JIT init 198: 4
....
bxor.uint64   : 
JIT init 198: 4
....
bxnor.uint8   : 
JIT init 198: 4
....
bxnor.uint16  : 
JIT init 198: 4
....
bxnor.uint32  : 
JIT init 198: 4
....
bxnor.uint64  : 
JIT init 198: 4
....
m 9 n 10 k 12: 

min.logical   : 
JIT init 198: 4
........................................................................................
min.int8      : 
JIT init 198: 4
.....................
min.int16     : 
JIT init 198: 4
.....................
min.int32     : 
JIT init 198: 4
.............................
min.int64     : 
JIT init 198: 4
.............................
min.uint8     : 
JIT init 198: 4
.....................
min.uint16    : 
JIT init 198: 4
.....................
min.uint32    : 
JIT init 198: 4
.....................
min.uint64    : 
JIT init 198: 4
.....................
min.single    : 
JIT init 198: 4
.....................
min.double    : 
JIT init 198: 4
.....................
max.logical   : 
JIT init 198: 4
........................................................................................
max.int8      : 
JIT init 198: 4
.....................
max.int16     : 
JIT init 198: 4
.....................
max.int32     : 
JIT init 198: 4
.............................
max.int64     : 
JIT init 198: 4
.............................
max.uint8     : 
JIT init 198: 4
.....................
max.uint16    : 
JIT init 198: 4
.....................
max.uint32    : 
JIT init 198: 4
.....................
max.uint64    : 
JIT init 198: 4
.....................
max.single    : 
JIT init 198: 4
.....................
max.double    : 
JIT init 198: 4
.....................
plus.logical  : 
JIT init 198: 4
........................................................................................
plus.int8     : 
JIT init 198: 4
.....................
plus.int16    : 
JIT init 198: 4
.....................
plus.int32    : 
JIT init 198: 4
.............................
plus.int64    : 
JIT init 198: 4
.............................
plus.uint8    : 
JIT init 198: 4
.....................
plus.uint16   : 
JIT init 198: 4
.....................
plus.uint32   : 
JIT init 198: 4
.....................
plus.uint64   : 
JIT init 198: 4
.....................
plus.single   : 
JIT init 198: 4
.....................
plus.double   : 
JIT init 198: 4
.....................
plus.single complex: 
JIT init 198: 4
..........
plus.double complex: 
JIT init 198: 4
..........
times.logical : 
JIT init 198: 4
........................................................................................
times.int8    : 
JIT init 198: 4
.....................
times.int16   : 
JIT init 198: 4
.....................
times.int32   : 
JIT init 198: 4
.............................
times.int64   : 
JIT init 198: 4
.............................
times.uint8   : 
JIT init 198: 4
.....................
times.uint16  : 
JIT init 198: 4
.....................
times.uint32  : 
JIT init 198: 4
.....................
times.uint64  : 
JIT init 198: 4
.....................
times.single  : 
JIT init 198: 4
.....................
times.double  : 
JIT init 198: 4
.....................
times.single complex: 
JIT init 198: 4
..........
times.double complex: 
JIT init 198: 4
..........
any.logical   : 
JIT init 198: 4
........................................................................................
any.int8      : 
JIT init 198: 4
.....................
any.int16     : 
JIT init 198: 4
.....................
any.int32     : 
JIT init 198: 4
.............................
any.int64     : 
JIT init 198: 4
.............................
any.uint8     : 
JIT init 198: 4
.....................
any.uint16    : 
JIT init 198: 4
.....................
any.uint32    : 
JIT init 198: 4
.....................
any.uint64    : 
JIT init 198: 4
.....................
any.single    : 
JIT init 198: 4
.....................
any.double    : 
JIT init 198: 4
.....................
any.single complex: 
JIT init 198: 4
..........
any.double complex: 
JIT init 198: 4
..........
or.logical    : 
JIT init 198: 4
........................................................................................
and.logical   : 
JIT init 198: 4
........................................................................................
xor.logical   : 
JIT init 198: 4
........................................................................................
eq.logical    : 
JIT init 198: 4
........................................................................................
bor.uint8     : 
JIT init 198: 4
....
bor.uint16    : 
JIT init 198: 4
....
bor.uint32    : 
JIT init 198: 4
....
bor.uint64    : 
JIT init 198: 4
....
band.uint8    : 
JIT init 198: 4
....
band.uint16   : 
JIT init 198: 4
....
band.uint32   : 
JIT init 198: 4
....
band.uint64   : 
JIT init 198: 4
....
bxor.uint8    : 
JIT init 198: 4
....
bxor.uint16   : 
JIT init 198: 4
....
bxor.uint32   : 
JIT init 198: 4
....
bxor.uint64   : 
JIT init 198: 4
....
bxnor.uint8   : 
JIT init 198: 4
....
bxnor.uint16  : 
JIT init 198: 4
....
bxnor.uint32  : 
JIT init 198: 4
....
bxnor.uint64  : 
JIT init 198: 4
....
semirings tested: 2046

test74: all tests passed
27-Apr 22:12:45 test74       3282.7 sec  6818:  3510 of 21586  83.7%     2.08/s [cover]
jit: 0

======== test: test74      [cover] [nthreads: 4 chunk: 1] jit: 0
test74 -------- GrB_mxm on all semirings (all methods)

m 1 n 1 k 20: 

min.logical   : 
JIT init 198: 4
........................................................................................
min.int8      : 
JIT init 198: 4
.....................
min.int16     : 
JIT init 198: 4
.....................
min.int32     : 
JIT init 198: 4
.............................
min.int64     : 
JIT init 198: 4
.............................
min.uint8     : 
JIT init 198: 4
.....................
min.uint16    : 
JIT init 198: 4
.....................
min.uint32    : 
JIT init 198: 4
.....................
min.uint64    : 
JIT init 198: 4
.....................
min.single    : 
JIT init 198: 4
.....................
min.double    : 
JIT init 198: 4
.....................
max.logical   : 
JIT init 198: 4
........................................................................................
max.int8      : 
JIT init 198: 4
.....................
max.int16     : 
JIT init 198: 4
.....................
max.int32     : 
JIT init 198: 4
.............................
max.int64     : 
JIT init 198: 4
.............................
max.uint8     : 
JIT init 198: 4
.....................
max.uint16    : 
JIT init 198: 4
.....................
max.uint32    : 
JIT init 198: 4
.....................
max.uint64    : 
JIT init 198: 4
.....................
max.single    : 
JIT init 198: 4
.....................
max.double    : 
JIT init 198: 4
.....................
plus.logical  : 
JIT init 198: 4
........................................................................................
plus.int8     : 
JIT init 198: 4
.....................
plus.int16    : 
JIT init 198: 4
.....................
plus.int32    : 
JIT init 198: 4
.............................
plus.int64    : 
JIT init 198: 4
.............................
plus.uint8    : 
JIT init 198: 4
.....................
plus.uint16   : 
JIT init 198: 4
.....................
plus.uint32   : 
JIT init 198: 4
.....................
plus.uint64   : 
JIT init 198: 4
.....................
plus.single   : 
JIT init 198: 4
.....................
plus.double   : 
JIT init 198: 4
.....................
plus.single complex: 
JIT init 198: 4
..........
plus.double complex: 
JIT init 198: 4
..........
times.logical : 
JIT init 198: 4
........................................................................................
times.int8    : 
JIT init 198: 4
.....................
times.int16   : 
JIT init 198: 4
.....................
times.int32   : 
JIT init 198: 4
.............................
times.int64   : 
JIT init 198: 4
.............................
times.uint8   : 
JIT init 198: 4
.....................
times.uint16  : 
JIT init 198: 4
.....................
times.uint32  : 
JIT init 198: 4
.....................
times.uint64  : 
JIT init 198: 4
.....................
times.single  : 
JIT init 198: 4
.....................
times.double  : 
JIT init 198: 4
.....................
times.single complex: 
JIT init 198: 4
..........
times.double complex: 
JIT init 198: 4
..........
any.logical   : 
JIT init 198: 4
........................................................................................
any.int8      : 
JIT init 198: 4
.....................
any.int16     : 
JIT init 198: 4
.....................
any.int32     : 
JIT init 198: 4
.............................
any.int64     : 
JIT init 198: 4
.............................
any.uint8     : 
JIT init 198: 4
.....................
any.uint16    : 
JIT init 198: 4
.....................
any.uint32    : 
JIT init 198: 4
.....................
any.uint64    : 
JIT init 198: 4
.....................
any.single    : 
JIT init 198: 4
.....................
any.double    : 
JIT init 198: 4
.....................
any.single complex: 
JIT init 198: 4
..........
any.double complex: 
JIT init 198: 4
..........
or.logical    : 
JIT init 198: 4
........................................................................................
and.logical   : 
JIT init 198: 4
........................................................................................
xor.logical   : 
JIT init 198: 4
........................................................................................
eq.logical    : 
JIT init 198: 4
........................................................................................
bor.uint8     : 
JIT init 198: 4
....
bor.uint16    : 
JIT init 198: 4
....
bor.uint32    : 
JIT init 198: 4
....
bor.uint64    : 
JIT init 198: 4
....
band.uint8    : 
JIT init 198: 4
....
band.uint16   : 
JIT init 198: 4
....
band.uint32   : 
JIT init 198: 4
....
band.uint64   : 
JIT init 198: 4
....
bxor.uint8    : 
JIT init 198: 4
....
bxor.uint16   : 
JIT init 198: 4
....
bxor.uint32   : 
JIT init 198: 4
....
bxor.uint64   : 
JIT init 198: 4
....
bxnor.uint8   : 
JIT init 198: 4
....
bxnor.uint16  : 
JIT init 198: 4
....
bxnor.uint32  : 
JIT init 198: 4
....
bxnor.uint64  : 
JIT init 198: 4
....
m 2 n 2 k 100: 

min.logical   : 
JIT init 198: 4
........................................................................................
min.int8      : 
JIT init 198: 4
.....................
min.int16     : 
JIT init 198: 4
.....................
min.int32     : 
JIT init 198: 4
.............................
min.int64     : 
JIT init 198: 4
.............................
min.uint8     : 
JIT init 198: 4
.....................
min.uint16    : 
JIT init 198: 4
.....................
min.uint32    : 
JIT init 198: 4
.....................
min.uint64    : 
JIT init 198: 4
.....................
min.single    : 
JIT init 198: 4
.....................
min.double    : 
JIT init 198: 4
.....................
max.logical   : 
JIT init 198: 4
........................................................................................
max.int8      : 
JIT init 198: 4
.....................
max.int16     : 
JIT init 198: 4
.....................
max.int32     : 
JIT init 198: 4
.............................
max.int64     : 
JIT init 198: 4
.............................
max.uint8     : 
JIT init 198: 4
.....................
max.uint16    : 
JIT init 198: 4
.....................
max.uint32    : 
JIT init 198: 4
.....................
max.uint64    : 
JIT init 198: 4
.....................
max.single    : 
JIT init 198: 4
.....................
max.double    : 
JIT init 198: 4
.....................
plus.logical  : 
JIT init 198: 4
........................................................................................
plus.int8     : 
JIT init 198: 4
.....................
plus.int16    : 
JIT init 198: 4
.....................
plus.int32    : 
JIT init 198: 4
.............................
plus.int64    : 
JIT init 198: 4
.............................
plus.uint8    : 
JIT init 198: 4
.....................
plus.uint16   : 
JIT init 198: 4
.....................
plus.uint32   : 
JIT init 198: 4
.....................
plus.uint64   : 
JIT init 198: 4
.....................
plus.single   : 
JIT init 198: 4
.....................
plus.double   : 
JIT init 198: 4
.....................
plus.single complex: 
JIT init 198: 4
..........
plus.double complex: 
JIT init 198: 4
..........
times.logical : 
JIT init 198: 4
........................................................................................
times.int8    : 
JIT init 198: 4
.....................
times.int16   : 
JIT init 198: 4
.....................
times.int32   : 
JIT init 198: 4
.............................
times.int64   : 
JIT init 198: 4
.............................
times.uint8   : 
JIT init 198: 4
.....................
times.uint16  : 
JIT init 198: 4
.....................
times.uint32  : 
JIT init 198: 4
.....................
times.uint64  : 
JIT init 198: 4
.....................
times.single  : 
JIT init 198: 4
.....................
times.double  : 
JIT init 198: 4
.....................
times.single complex: 
JIT init 198: 4
..........
times.double complex: 
JIT init 198: 4
..........
any.logical   : 
JIT init 198: 4
........................................................................................
any.int8      : 
JIT init 198: 4
.....................
any.int16     : 
JIT init 198: 4
.....................
any.int32     : 
JIT init 198: 4
.............................
any.int64     : 
JIT init 198: 4
.............................
any.uint8     : 
JIT init 198: 4
.....................
any.uint16    : 
JIT init 198: 4
.....................
any.uint32    : 
JIT init 198: 4
.....................
any.uint64    : 
JIT init 198: 4
.....................
any.single    : 
JIT init 198: 4
.....................
any.double    : 
JIT init 198: 4
.....................
any.single complex: 
JIT init 198: 4
..........
any.double complex: 
JIT init 198: 4
..........
or.logical    : 
JIT init 198: 4
........................................................................................
and.logical   : 
JIT init 198: 4
........................................................................................
xor.logical   : 
JIT init 198: 4
........................................................................................
eq.logical    : 
JIT init 198: 4
........................................................................................
bor.uint8     : 
JIT init 198: 4
....
bor.uint16    : 
JIT init 198: 4
....
bor.uint32    : 
JIT init 198: 4
....
bor.uint64    : 
JIT init 198: 4
....
band.uint8    : 
JIT init 198: 4
....
band.uint16   : 
JIT init 198: 4
....
band.uint32   : 
JIT init 198: 4
....
band.uint64   : 
JIT init 198: 4
....
bxor.uint8    : 
JIT init 198: 4
....
bxor.uint16   : 
JIT init 198: 4
....
bxor.uint32   : 
JIT init 198: 4
....
bxor.uint64   : 
JIT init 198: 4
....
bxnor.uint8   : 
JIT init 198: 4
....
bxnor.uint16  : 
JIT init 198: 4
....
bxnor.uint32  : 
JIT init 198: 4
....
bxnor.uint64  : 
JIT init 198: 4
....
m 9 n 10 k 12: 

min.logical   : 
JIT init 198: 4
........................................................................................
min.int8      : 
JIT init 198: 4
.....................
min.int16     : 
JIT init 198: 4
.....................
min.int32     : 
JIT init 198: 4
.............................
min.int64     : 
JIT init 198: 4
.............................
min.uint8     : 
JIT init 198: 4
.....................
min.uint16    : 
JIT init 198: 4
.....................
min.uint32    : 
JIT init 198: 4
.....................
min.uint64    : 
JIT init 198: 4
.....................
min.single    : 
JIT init 198: 4
.....................
min.double    : 
JIT init 198: 4
.....................
max.logical   : 
JIT init 198: 4
........................................................................................
max.int8      : 
JIT init 198: 4
.....................
max.int16     : 
JIT init 198: 4
.....................
max.int32     : 
JIT init 198: 4
.............................
max.int64     : 
JIT init 198: 4
.............................
max.uint8     : 
JIT init 198: 4
.....................
max.uint16    : 
JIT init 198: 4
.....................
max.uint32    : 
JIT init 198: 4
.....................
max.uint64    : 
JIT init 198: 4
.....................
max.single    : 
JIT init 198: 4
.....................
max.double    : 
JIT init 198: 4
.....................
plus.logical  : 
JIT init 198: 4
........................................................................................
plus.int8     : 
JIT init 198: 4
.....................
plus.int16    : 
JIT init 198: 4
.....................
plus.int32    : 
JIT init 198: 4
.............................
plus.int64    : 
JIT init 198: 4
.............................
plus.uint8    : 
JIT init 198: 4
.....................
plus.uint16   : 
JIT init 198: 4
.....................
plus.uint32   : 
JIT init 198: 4
.....................
plus.uint64   : 
JIT init 198: 4
.....................
plus.single   : 
JIT init 198: 4
.....................
plus.double   : 
JIT init 198: 4
.....................
plus.single complex: 
JIT init 198: 4
..........
plus.double complex: 
JIT init 198: 4
..........
times.logical : 
JIT init 198: 4
........................................................................................
times.int8    : 
JIT init 198: 4
.....................
times.int16   : 
JIT init 198: 4
.....................
times.int32   : 
JIT init 198: 4
.............................
times.int64   : 
JIT init 198: 4
.............................
times.uint8   : 
JIT init 198: 4
.....................
times.uint16  : 
JIT init 198: 4
.....................
times.uint32  : 
JIT init 198: 4
.....................
times.uint64  : 
JIT init 198: 4
.....................
times.single  : 
JIT init 198: 4
.....................
times.double  : 
JIT init 198: 4
.....................
times.single complex: 
JIT init 198: 4
..........
times.double complex: 
JIT init 198: 4
..........
any.logical   : 
JIT init 198: 4
........................................................................................
any.int8      : 
JIT init 198: 4
.....................
any.int16     : 
JIT init 198: 4
.....................
any.int32     : 
JIT init 198: 4
.............................
any.int64     : 
JIT init 198: 4
.............................
any.uint8     : 
JIT init 198: 4
.....................
any.uint16    : 
JIT init 198: 4
.....................
any.uint32    : 
JIT init 198: 4
.....................
any.uint64    : 
JIT init 198: 4
.....................
any.single    : 
JIT init 198: 4
.....................
any.double    : 
JIT init 198: 4
.....................
any.single complex: 
JIT init 198: 4
..........
any.double complex: 
JIT init 198: 4
..........
or.logical    : 
JIT init 198: 4
........................................................................................
and.logical   : 
JIT init 198: 4
........................................................................................
xor.logical   : 
JIT init 198: 4
........................................................................................
eq.logical    : 
JIT init 198: 4
........................................................................................
bor.uint8     : 
JIT init 198: 4
....
bor.uint16    : 
JIT init 198: 4
....
bor.uint32    : 
JIT init 198: 4
....
bor.uint64    : 
JIT init 198: 4
....
band.uint8    : 
JIT init 198: 4
....
band.uint16   : 
JIT init 198: 4
....
band.uint32   : 
JIT init 198: 4
....
band.uint64   : 
JIT init 198: 4
....
bxor.uint8    : 
JIT init 198: 4
....
bxor.uint16   : 
JIT init 198: 4
....
bxor.uint32   : 
JIT init 198: 4
....
bxor.uint64   : 
JIT init 198: 4
....
bxnor.uint8   : 
JIT init 198: 4
....
bxnor.uint16  : 
JIT init 198: 4
....
bxnor.uint32  : 
JIT init 198: 4
....
bxnor.uint64  : 
JIT init 198: 4
....
semirings tested: 2046

test74: all tests passed
27-Apr 22:20:02 test74        437.3 sec     9:  3501 of 21586  83.8%     0.02/s [cover]
jit: -4

JIT init 198: 4

======== test: test127     [cover] [nthreads: 4 chunk: 1] jit: 4
test127 -----------tests of GrB_eWiseAdd and eWiseMult (all ops)


logical  :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor

int8     :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

int16    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

int32    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift firsti firsti1 firstj firstj1 secondi secondi1 secondj secondj1

int64    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift firsti firsti1 firstj firstj1 secondi secondi1 secondj secondj1

uint8    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

uint16   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

uint32   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

uint64   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

single   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor atan2 hypot fmod remainder ldexp copysign cmplx

double   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor atan2 hypot fmod remainder ldexp copysign cmplx

single complex :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb

double complex :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb
test127: all tests passed
27-Apr 22:24:26 test127       263.4 sec  1645:  1856 of 21586  91.4%     6.24/s [cover]
jit: 0

======== test: test127     [cover] [nthreads: 4 chunk: 1] jit: 0
test127 -----------tests of GrB_eWiseAdd and eWiseMult (all ops)


logical  :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor

int8     :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

int16    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

int32    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift firsti firsti1 firstj firstj1 secondi secondi1 secondj secondj1

int64    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift firsti firsti1 firstj firstj1 secondi secondi1 secondj secondj1

uint8    :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

uint16   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

uint32   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

uint64   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor bor band bxor bxnor bget bset bclr bshift

single   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor atan2 hypot fmod remainder ldexp copysign cmplx

double   :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb min max isgt islt isge isle gt lt ge le or and xor atan2 hypot fmod remainder ldexp copysign cmplx

single complex :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb

double complex :  first second pair plus minus rminus times div rdiv iseq isne eq ne pow any oneb
test127: all tests passed
27-Apr 22:26:54 test127       147.4 sec    18:  1838 of 21586  91.5%     0.12/s [cover]
jit: -4

JIT init 198: 4

======== test: test19      [cover] [nthreads: 4 chunk: 1] jit: 4

GxB_subassign and setElement test, many pending computations
problem 0: C is 5-by-5, # assign/setElement to do: 100
problem 1: C is 10-by-20, # assign/setElement to do: 500
... please wait
problem 2: C is 10-by-20, # assign/setElement to do: 500
... please wait

test19: all tests passed
27-Apr 22:26:56 test19          2.4 sec    12:  1826 of 21586  91.5%     5.06/s [cover]
jit: -4

JIT init 198: 4

======== test: test11      [cover] [nthreads: 4 chunk: 1] jit: 4

------------ testing GrB_extractTuples
logical        .............
int8           .............
int16          .............
int32          .............
int64          .............
uint8          .............
uint16         .............
uint32         .............
uint64         .............
single         .............
double         .............
single complex .............
double complex .............
test11: all tests passed
27-Apr 22:26:59 test11          2.7 sec     3:  1823 of 21586  91.6%     1.11/s [cover]
jit: -4

JIT init 198: 4

======== test: test215     [cover] [nthreads: 4 chunk: 1] jit: 4
 [ GxB_set (sparse to bitmap) 
   9.39e-05 sec ]
 [ GxB_set 
   3.81e-06 sec ]
 [ GxB_set (sparse to bitmap) 
   2.81e-05 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (iso dot2) (nthreads: 4 naslice 4 nbslice 100) (dot B{!B} = S'*B) (iso dot2) (bitmap to sparse) 
   0.000484 sec ]
 [ GxB_set 
   9.54e-07 sec ]
 [ GxB_Matrix_import_FullC 
   2.86e-06 sec ]
 [ GxB_Matrix_export_FullC 
   3.81e-06 sec ]
 [ GxB_Matrix_import_FullC 
   2.15e-06 sec ]
 [ GxB_Matrix_export_FullC 
   1.91e-06 sec ]
 [ GxB_Matrix_import_FullC 
   1.19e-06 sec ]
 [ GxB_Matrix_export_FullC 
   2.15e-06 sec ]
 [ GxB_Matrix_import_FullC 
   9.54e-07 sec ]
 [ GxB_Matrix_export_FullC 
   2.15e-06 sec ]
 [ GxB_Matrix_import_FullC 
   3.1e-06 sec ]
 [ GxB_Matrix_export_FullC 
   4.05e-06 sec ]
 [ GxB_set (sparse to bitmap) 
   8.11e-05 sec ]
 [ GxB_set 
   3.1e-06 sec ]
 [ GxB_set (sparse to bitmap) 
   2.1e-05 sec ]
 [ GrB_mxm C<!M>=A'*B, dot_product (iso dot2) (nthreads: 4 naslice 4 nbslice 100) (dot B{!B} = S'*B) (iso dot2) (bitmap to sparse) 
   0.000339 sec ]
 [ GxB_set 
   0 sec ]
 [ GxB_Matrix_import_FullC 
   2.15e-06 sec ]
 [ GxB_Matrix_export_FullC 
   1.91e-06 sec ]
 [ GxB_Matrix_import_FullC 
   1.19e-06 sec ]
 [ GxB_Matrix_export_FullC 
   2.15e-06 sec ]
 [ GxB_Matrix_import_FullC 
   9.54e-07 sec ]
 [ GxB_Matrix_export_FullC 
   1.91e-06 sec ]
 [ GxB_Matrix_import_FullC 
   1.19e-06 sec ]
 [ GxB_Matrix_export_FullC 
   2.15e-06 sec ]
 [ GxB_Matrix_import_FullC 
   3.1e-06 sec ]
 [ GxB_Matrix_export_FullC 
   5.01e-06 sec ]

test215: all tests passed
27-Apr 22:27:01 test215         2.5 sec     1:  1822 of 21586  91.6%     0.40/s [cover]
jit: -4

JIT init 198: 4

======== test: test193     [cover] [nthreads: 4 chunk: 1] jit: 4
test193 ----------- C = diag (v,k)

d = 0.0001
.......................................
d = 0.01
.......................................
d = 0.2
.......................................
d = 0.8
.......................................
d = Inf
.......................................
test193: all tests passed
27-Apr 22:27:13 test193        11.7 sec     5:  1817 of 21586  91.6%     0.43/s [cover]
jit: -4

JIT init 198: 4

======== test: test195     [cover] [nthreads: 4 chunk: 1] jit: 4

A: hypersparse 
    B: hypersparse 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
    B: sparse 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
    B: bitmap 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
    B: full 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
A: sparse 
    B: hypersparse 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
    B: sparse 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
    B: bitmap 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
    B: full 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
A: bitmap 
    B: hypersparse 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
    B: sparse 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
    B: bitmap 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
    B: full 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
A: full 
    B: hypersparse 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
    B: sparse 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
    B: bitmap 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
    B: full 
        M: hypersparse ...........................
        M: sparse ...........................
        M: bitmap ...........................
        M: full ...........................
test195: all tests passed
27-Apr 22:28:22 test195        68.8 sec    38:  1779 of 21586  91.8%     0.55/s [cover]
jit: -4

JIT init 198: 4

======== test: test243     [cover] [nthreads: 4 chunk: 1] jit: 4

logical:
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

int8:
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

int16:
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

int32:
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

int64:
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

uint8:
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

uint16:
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

uint32:
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

uint64:
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

single:
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

double:
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

single complex:
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

double complex:
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

Complex (UDT):
X sparse: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X bitmap: Y sparse...................................................
Y bitmap...................................................
Y full...................................................
X full: Y sparse...................................................
Y bitmap...................................................
Y full...................................................

test243: all tests passed
27-Apr 22:28:38 test243        16.6 sec     7:  1772 of 21586  91.8%     0.42/s [cover]
jit: -4

JIT init 198: 4

======== test: test29      [cover] [nthreads: 4 chunk: 1] jit: 4

test29: ----------------- GrB_reduce with zombies
.........
test29: all tests passed
27-Apr 22:28:47 test29          9.0 sec     7:  1765 of 21586  91.8%     0.78/s [cover]
jit: 0

======== test: test29      [cover] [nthreads: 4 chunk: 1] jit: 0

test29: ----------------- GrB_reduce with zombies
.........
test29: all tests passed
27-Apr 22:28:52 test29          4.2 sec     2:  1763 of 21586  91.8%     0.48/s [cover]
jit: -4

JIT init 198: 4

======== test: testc2(0,0)  [cover] [nthreads: 4 chunk: 1] jit: 4
All complex A'*B tests passed, maxerr 4.98985e-15
All complex A+B tests passed, maxerr 0
testc2: all complex A*B, A'*B, A*B', A'*B' tests passed, maxerr 2.52255e-14
27-Apr 22:29:05 testc2(0,0)    13.3 sec    10:  1753 of 21586  91.9%     0.75/s [cover]
jit: 0

======== test: testc2(0,0)  [cover] [nthreads: 4 chunk: 1] jit: 0
All complex A'*B tests passed, maxerr 4.98985e-15
All complex A+B tests passed, maxerr 0
testc2: all complex A*B, A'*B, A*B', A'*B' tests passed, maxerr 2.52255e-14
27-Apr 22:29:05 testc2(0,0)     0.5 sec     7:  1746 of 21586  91.9%    13.84/s [cover]
jit: -4

JIT init 198: 4

======== test: testc4(0)   [cover] [nthreads: 4 chunk: 1] jit: 4
All complex extractElement x = A(i,j) tests passed
All complex setElement A(i,j) = x tests passed

testc4: all tests passed
27-Apr 22:29:06 testc4(0)       0.3 sec     4:  1742 of 21586  91.9%    12.13/s [cover]
jit: -4

JIT init 198: 4

======== test: testc7(0)   [cover] [nthreads: 4 chunk: 1] jit: 4

testc7: all complex assign C(I,J)=A --------------------------
........................................................................................................................................................................................................................................................................
testc7: all complex assign C(I,J)=A tests passed
27-Apr 22:29:17 testc7(0)      11.5 sec     6:  1736 of 21586  92.0%     0.52/s [cover]
jit: 0

======== test: testc7(0)   [cover] [nthreads: 4 chunk: 1] jit: 0

testc7: all complex assign C(I,J)=A --------------------------
........................................................................................................................................................................................................................................................................
testc7: all complex assign C(I,J)=A tests passed
27-Apr 22:29:29 testc7(0)      11.7 sec     1:  1735 of 21586  92.0%     0.09/s [cover]
jit: -4

JIT init 198: 4

======== test: testcc(1)   [cover] [nthreads: 4 chunk: 1] jit: 4
testcc: all complex transpose tests passed
27-Apr 22:29:33 testcc(1)       4.1 sec     1:  1734 of 21586  92.0%     0.25/s [cover]
jit: -4

JIT init 198: 4

======== test: test187     [cover] [nthreads: 4 chunk: 1] jit: 4
test187 ----------- C = A for all sparsity formats and all types

logical................................
int8................................
int16................................
int32................................
int64................................
uint8................................
uint16................................
uint32................................
uint64................................
single................................
double................................
single complex................................
double complex................................
test187: all tests passed
27-Apr 22:29:39 test187         5.6 sec     3:  1731 of 21586  92.0%     0.54/s [cover]
jit: -4

JIT init 198: 4

======== test: test192     [cover] [nthreads: 4 chunk: 1] jit: 4
logical, int8, int16, int32, int64, uint8, uint16, uint32, uint64, single, double, single complex, double complex, 
test192: all tests passed
27-Apr 22:29:43 test192         4.0 sec     1:  1730 of 21586  92.0%     0.25/s [cover]
jit: -4

JIT init 198: 4

======== test: test181     [cover] [nthreads: 1 chunk: 1] jit: 4
test181: transpose with explicit zeros in the Mask
.........................................................................................................................
test181: all tests passed
27-Apr 22:29:52 test181         9.6 sec    10:  1720 of 21586  92.0%     1.04/s [cover]
jit: -4

JIT init 198: 4

======== test: test185     [cover] [nthreads: 1 chunk: 1] jit: 4
test185 -------------------- C+=A'*B when C is dense
....................................................................................................
maxerr: 2.13163e-14
test185: all tests passed
27-Apr 22:31:04 test185        71.3 sec    11:  1709 of 21586  92.1%     0.15/s [cover]
jit: -4

JIT init 198: 4

======== test: test53      [cover] [nthreads: 4 chunk: 1] jit: 4

==== test53: quick test for GrB_Matrix_extract:

nrows: 10 ncols 1 nnz 7 ymin -1.42883 ymax 88.3993
uint64...double...
nrows: 10 ncols 8 nnz 40 ymin 6.11192 ymax 92.9748
single...double...
nrows: 10 ncols 20 nnz 100 ymin -95.0845 ymax 99.7409
uint64...double...
nrows: 100 ncols 200 nnz 1000 ymin -98.7371 ymax 100.633
int8..double...
nrows: 50 ncols 50 nnz 500 ymin -1.997 ymax 0.999378
uint32...double...
test53: all tests passed
27-Apr 22:31:35 test53         31.2 sec     7:  1702 of 21586  92.1%     0.22/s [cover]
jit: -4

JIT init 198: 4

======== test: test17      [cover] [nthreads: 4 chunk: 1] jit: 4

 ------------ testing GrB_extractElement

logical        .............
int8           .............
int16          .............
int32          .............
int64          .............
uint8          .............
uint16         .............
uint32         .............
uint64         .............
single         .............
double         .............
single complex .............
double complex .............
test17: all tests passed
27-Apr 22:32:05 test17         30.4 sec    28:  1674 of 21586  92.2%     0.92/s [cover]
jit: -4

JIT init 198: 4

======== test: test231     [cover] [nthreads: 4 chunk: 1] jit: 4

--- testing select with idxunops

rowindex   ................................
colindex   ................................
diagindex  ................................
tril       ................
triu       ................
diag       ................
offdiag    ................
colle      ................
colgt      ................
rowle      ................
rowgt      ................
valuene    ................................................................................................................................................................................................................
valueeq    ................................................................................................................................................................................................................
valuelt    ................................................................................................................................................................................
valuele    ................................................................................................................................................................................
valuegt    ................................................................................................................................................................................
valuege    ................................................................................................................................................................................
Number of built-in GraphBLAS idxunops: 84

test231: all tests passed
27-Apr 22:37:11 test231       305.4 sec   166:  1508 of 21586  93.0%     0.54/s [cover]
jit: -4

JIT init 198: 4

======== test: test10      [cover] [nthreads: 4 chunk: 1] jit: 4

test10: GrB_apply tests

logical:  one............. identity............. ainv............. abs............. minv............. not........... bnot........ sqrt.... log.... exp.... log2.... sin.... cos.... tan.... acos.... asin.... atan.... sinh.... cosh.... tanh.... acosh.... asinh.... atanh.... ceil.... floor.... round.... trunc.... exp2.... expm1.... log10.... log1p.... isinf.... isnan.... isfinite.... signum.... lgamma.. tgamma.. erf.. erfc.. frexpx.. frexpe.. cbrt.. conj.. real.. imag.. carg.. positioni.. positioni1.. positionj.. positionj1..

int8:  one............. identity............. ainv............. abs............. minv............. not........... bnot........ sqrt.... log.... exp.... log2.... sin.... cos.... tan.... acos.... asin.... atan.... sinh.... cosh.... tanh.... acosh.... asinh.... atanh.... ceil.... floor.... round.... trunc.... exp2.... expm1.... log10.... log1p.... isinf.... isnan.... isfinite.... signum.... lgamma.. tgamma.. erf.. erfc.. frexpx.. frexpe.. cbrt.. conj.. real.. imag.. carg.. positioni.. positioni1.. positionj.. positionj1..

int16:  one............. identity............. ainv............. abs............. minv............. not........... bnot........ sqrt.... log.... exp.... log2.... sin.... cos.... tan.... acos.... asin.... atan.... sinh.... cosh.... tanh.... acosh.... asinh.... atanh.... ceil.... floor.... round.... trunc.... exp2.... expm1.... log10.... log1p.... isinf.... isnan.... isfinite.... signum.... lgamma.. tgamma.. erf.. erfc.. frexpx.. frexpe.. cbrt.. conj.. real.. imag.. carg.. positioni.. positioni1.. positionj.. positionj1..

int32:  one............. identity............. ainv............. abs............. minv............. not........... bnot........ sqrt.... log.... exp.... log2.... sin.... cos.... tan.... acos.... asin.... atan.... sinh.... cosh.... tanh.... acosh.... asinh.... atanh.... ceil.... floor.... round.... trunc.... exp2.... expm1.... log10.... log1p.... isinf.... isnan.... isfinite.... signum.... lgamma.. tgamma.. erf.. erfc.. frexpx.. frexpe.. cbrt.. conj.. real.. imag.. carg.. positioni.. positioni1.. positionj.. positionj1..

int64: 
 one...........................................................................................
 identity...........................................................................................
 ainv...........................................................................................
 abs...........................................................................................
 minv...........................................................................................
 not.............................................................................
 bnot........................................................
 sqrt............................
 log............................
 exp............................
 log2............................
 sin............................
 cos............................
 tan............................
 acos............................
 asin............................
 atan............................
 sinh............................
 cosh............................
 tanh............................
 acosh............................
 asinh............................
 atanh............................
 ceil............................
 floor............................
 round............................
 trunc............................
 exp2............................
 expm1............................
 log10............................
 log1p............................
 isinf............................
 isnan............................
 isfinite............................
 signum............................
 lgamma..............
 tgamma..............
 erf..............
 erfc..............
 frexpx..............
 frexpe..............
 cbrt..............
 conj..............
 real..............
 imag..............
 carg..............
 positioni..............
 positioni1..............
 positionj..............
 positionj1..............

uint8:  one............. identity............. ainv............. abs............. minv............. not........... bnot........ sqrt.... log.... exp.... log2.... sin.... cos.... tan.... acos.... asin.... atan.... sinh.... cosh.... tanh.... acosh.... asinh.... atanh.... ceil.... floor.... round.... trunc.... exp2.... expm1.... log10.... log1p.... isinf.... isnan.... isfinite.... signum.... lgamma.. tgamma.. erf.. erfc.. frexpx.. frexpe.. cbrt.. conj.. real.. imag.. carg.. positioni.. positioni1.. positionj.. positionj1..

uint16:  one............. identity............. ainv............. abs............. minv............. not........... bnot........ sqrt.... log.... exp.... log2.... sin.... cos.... tan.... acos.... asin.... atan.... sinh.... cosh.... tanh.... acosh.... asinh.... atanh.... ceil.... floor.... round.... trunc.... exp2.... expm1.... log10.... log1p.... isinf.... isnan.... isfinite.... signum.... lgamma.. tgamma.. erf.. erfc.. frexpx.. frexpe.. cbrt.. conj.. real.. imag.. carg.. positioni.. positioni1.. positionj.. positionj1..

uint32:  one............. identity............. ainv............. abs............. minv............. not........... bnot........ sqrt.... log.... exp.... log2.... sin.... cos.... tan.... acos.... asin.... atan.... sinh.... cosh.... tanh.... acosh.... asinh.... atanh.... ceil.... floor.... round.... trunc.... exp2.... expm1.... log10.... log1p.... isinf.... isnan.... isfinite.... signum.... lgamma.. tgamma.. erf.. erfc.. frexpx.. frexpe.. cbrt.. conj.. real.. imag.. carg.. positioni.. positioni1.. positionj.. positionj1..

uint64:  one............. identity............. ainv............. abs............. minv............. not........... bnot........ sqrt.... log.... exp.... log2.... sin.... cos.... tan.... acos.... asin.... atan.... sinh.... cosh.... tanh.... acosh.... asinh.... atanh.... ceil.... floor.... round.... trunc.... exp2.... expm1.... log10.... log1p.... isinf.... isnan.... isfinite.... signum.... lgamma.. tgamma.. erf.. erfc.. frexpx.. frexpe.. cbrt.. conj.. real.. imag.. carg.. positioni.. positioni1.. positionj.. positionj1..

single:  one............. identity............. ainv............. abs............. minv............. not........... bnot........ sqrt.... log.... exp.... log2.... sin.... cos.... tan.... acos.... asin.... atan.... sinh.... cosh.... tanh.... acosh.... asinh.... atanh.... ceil.... floor.... round.... trunc.... exp2.... expm1.... log10.... log1p.... isinf.... isnan.... isfinite.... signum.... lgamma.. tgamma.. erf.. erfc.. frexpx.. frexpe.. cbrt.. conj.. real.. imag.. carg.. positioni.. positioni1.. positionj.. positionj1..

double: 
 one...........................................................................................
 identity...........................................................................................
 ainv...........................................................................................
 abs...........................................................................................
 minv...........................................................................................
 not.............................................................................
 bnot........................................................
 sqrt............................
 log............................
 exp............................
 log2............................
 sin............................
 cos............................
 tan............................
 acos............................
 asin............................
 atan............................
 sinh............................
 cosh............................
 tanh............................
 acosh............................
 asinh............................
 atanh............................
 ceil............................
 floor............................
 round............................
 trunc............................
 exp2............................
 expm1............................
 log10............................
 log1p............................
 isinf............................
 isnan............................
 isfinite............................
 signum............................
 lgamma..............
 tgamma..............
 erf..............
 erfc..............
 frexpx..............
 frexpe..............
 cbrt..............
 conj..............
 real..............
 imag..............
 carg..............
 positioni..............
 positioni1..............
 positionj..............
 positionj1..............

single complex:  one............. identity............. ainv............. abs............. minv............. not........... bnot........ sqrt.... log.... exp.... log2.... sin.... cos.... tan.... acos.... asin.... atan.... sinh.... cosh.... tanh.... acosh.... asinh.... atanh.... ceil.... floor.... round.... trunc.... exp2.... expm1.... log10.... log1p.... isinf.... isnan.... isfinite.... signum.... lgamma.. tgamma.. erf.. erfc.. frexpx.. frexpe.. cbrt.. conj.. real.. imag.. carg.. positioni.. positioni1.. positionj.. positionj1..

double complex:  one............. identity............. ainv............. abs............. minv............. not........... bnot........ sqrt.... log.... exp.... log2.... sin.... cos.... tan.... acos.... asin.... atan.... sinh.... cosh.... tanh.... acosh.... asinh.... atanh.... ceil.... floor.... round.... trunc.... exp2.... expm1.... log10.... log1p.... isinf.... isnan.... isfinite.... signum.... lgamma.. tgamma.. erf.. erfc.. frexpx.. frexpe.. cbrt.. conj.. real.. imag.. carg.. positioni.. positioni1.. positionj.. positionj1..

test10: all tests passed
27-Apr 23:20:02 test10       2571.4 sec   786:   722 of 21586  96.7%     0.31/s [cover]
jit: -4

JIT init 198: 4

======== test: test75b     [cover] [nthreads: 4 chunk: 1] jit: 4

-------------- GrB_mxm, vxm (dot product) on all semirings

first      .................................................................
second     .................................................................
pair       .................................................................
plus       .................................................................
minus      .................................................................
rminus     .................................................................
times      .................................................................
div        .................................................................
rdiv       .................................................................
iseq       ...........................................................
isne       ...........................................................
eq         ...................................................................................................
ne         ...................................................................................................
pow        .........
any        
oneb       .................................................................
min        ...........................................................
max        ...........................................................
isgt       ...........................................................
islt       ...........................................................
isge       ...........................................................
isle       ...........................................................
gt         ...................................................................................................
lt         ...................................................................................................
ge         ...................................................................................................
le         ...................................................................................................
or         ...........................................................
and        ...........................................................
xor        ...........................................................
bor        ................
band       ................
bxor       ................
bxnor      ................
bget       
bset       
bclr       
bshift     
atan2      
hypot      
fmod       
remainder  
ldexp      
copysign   
cmplx      
firsti     ..........
firsti1    ..........
firstj     ..........
firstj1    ..........
secondi    ..........
secondi1   ..........
secondj    ..........
secondj1   ..........
semirings tested: 2046

test75b: all tests passed
27-Apr 23:25:26 test75b       299.3 sec   151:   571 of 21586  97.4%     0.50/s [cover]
jit: -4

JIT init 198: 4

======== test: test21b     [cover] [nthreads: 4 chunk: 1] jit: 4

test21b --------------quick test of GB_mex_assign

accum: []................................................................................................................................................................................................................................................................................................................................................................................................................................................
accum: [plus]................................................................................................................................................................................................................................................................................................................................................................................................................................................
test21b: all tests passed
27-Apr 23:26:32 test21b        65.0 sec    26:   545 of 21586  97.5%     0.40/s [cover]
jit: -4

JIT init 198: 4

======== test: testca(1)   [cover] [nthreads: 4 chunk: 1] jit: 4
testca: test complex mxm, mxv, and vxm
................................................................................................................................................................................................................................................................................................................................
testca: all complex mxm, mxv, vxm tests passed
27-Apr 23:27:12 testca(1)      40.2 sec     5:   540 of 21586  97.5%     0.12/s [cover]
jit: -4

JIT init 198: 4

======== test: test81      [cover] [nthreads: 4 chunk: 1] jit: 4
test81:  GrB_Matrix_extract with index range, stride, backwards

test81: all tests passed
27-Apr 23:28:27 test81         74.9 sec     1:   539 of 21586  97.5%     0.01/s [cover]
jit: -4

JIT init 198: 4

======== test: test18      [cover] [nthreads: 4 chunk: 1] jit: 4
test18 ------quick tests of GrB_eWiseAdd, eWiseUnion, and eWiseMult


========================================= logical:

first binary op: [ first logical ] 
................
second binary op: [ second logical ] 
................
pair binary op: [ pair logical ] 
................
plus binary op: [ plus logical ] 
................
minus binary op: [ minus logical ] 
................
rminus binary op: [ rminus logical ] 
................
times binary op: [ times logical ] 
................
div binary op: [ div logical ] 
................
rdiv binary op: [ rdiv logical ] 
................
iseq binary op: [ iseq logical ] 
................
isne binary op: [ isne logical ] 
................
eq binary op: [ eq logical ] 
................
ne binary op: [ ne logical ] 
................
pow binary op: [ pow logical ] 
................
any binary op: [ any logical ] 
................
oneb binary op: [ oneb logical ] 
................
min binary op: [ min logical ] 
................
max binary op: [ max logical ] 
................
isgt binary op: [ isgt logical ] 
................
islt binary op: [ islt logical ] 
................
isge binary op: [ isge logical ] 
................
isle binary op: [ isle logical ] 
................
gt binary op: [ gt logical ] 
................
lt binary op: [ lt logical ] 
................
ge binary op: [ ge logical ] 
................
le binary op: [ le logical ] 
................
or binary op: [ or logical ] 
................
and binary op: [ and logical ] 
................
xor binary op: [ xor logical ] 
................
bor
band
bxor
bxnor
bget
bset
bclr
bshift
atan2
hypot
fmod
remainder
ldexp
copysign
cmplx
firsti
firsti1
firstj
firstj1
secondi
secondi1
secondj
secondj1

========================================= int8:

first binary op: [ first int8 ] 
................
second binary op: [ second int8 ] 
................
pair binary op: [ pair int8 ] 
................
plus binary op: [ plus int8 ] 
................
minus binary op: [ minus int8 ] 
................
rminus binary op: [ rminus int8 ] 
................
times binary op: [ times int8 ] 
................
div binary op: [ div int8 ] 
................
rdiv binary op: [ rdiv int8 ] 
................
iseq binary op: [ iseq int8 ] 
................
isne binary op: [ isne int8 ] 
................
eq binary op: [ eq int8 ] 
................
ne binary op: [ ne int8 ] 
................
pow binary op: [ pow int8 ] 
................
any binary op: [ any int8 ] 
................
oneb binary op: [ oneb int8 ] 
................
min binary op: [ min int8 ] 
................
max binary op: [ max int8 ] 
................
isgt binary op: [ isgt int8 ] 
................
islt binary op: [ islt int8 ] 
................
isge binary op: [ isge int8 ] 
................
isle binary op: [ isle int8 ] 
................
gt binary op: [ gt int8 ] 
................
lt binary op: [ lt int8 ] 
................
ge binary op: [ ge int8 ] 
................
le binary op: [ le int8 ] 
................
or binary op: [ or int8 ] 
................
and binary op: [ and int8 ] 
................
xor binary op: [ xor int8 ] 
................
bor binary op: [ bor int8 ] 
................
band binary op: [ band int8 ] 
................
bxor binary op: [ bxor int8 ] 
................
bxnor binary op: [ bxnor int8 ] 
................
bget binary op: [ bget int8 ] 
................
bset binary op: [ bset int8 ] 
................
bclr binary op: [ bclr int8 ] 
................
bshift binary op: [ bshift int8 ] 
................
atan2
hypot
fmod
remainder
ldexp
copysign
cmplx
firsti
firsti1
firstj
firstj1
secondi
secondi1
secondj
secondj1

========================================= double:

first binary op: [ first double ] 
................
second binary op: [ second double ] 
................
pair binary op: [ pair double ] 
................
plus binary op: [ plus double ] 
................
minus binary op: [ minus double ] 
................
rminus binary op: [ rminus double ] 
................
times binary op: [ times double ] 
................
div binary op: [ div double ] 
................
rdiv binary op: [ rdiv double ] 
................
iseq binary op: [ iseq double ] 
................
isne binary op: [ isne double ] 
................
eq binary op: [ eq double ] 
................
ne binary op: [ ne double ] 
................
pow binary op: [ pow double ] 
................
any binary op: [ any double ] 
................
oneb binary op: [ oneb double ] 
................
min binary op: [ min double ] 
................
max binary op: [ max double ] 
................
isgt binary op: [ isgt double ] 
................
islt binary op: [ islt double ] 
................
isge binary op: [ isge double ] 
................
isle binary op: [ isle double ] 
................
gt binary op: [ gt double ] 
................
lt binary op: [ lt double ] 
................
ge binary op: [ ge double ] 
................
le binary op: [ le double ] 
................
or binary op: [ or double ] 
................
and binary op: [ and double ] 
................
xor binary op: [ xor double ] 
................
bor
band
bxor
bxnor
bget
bset
bclr
bshift
atan2 binary op: [ atan2 double ] 
................
hypot binary op: [ hypot double ] 
................
fmod binary op: [ fmod double ] 
................
remainder binary op: [ remainder double ] 
................
ldexp binary op: [ ldexp double ] 
................
copysign binary op: [ copysign double ] 
................
cmplx binary op: [ cmplx double ] 
................
firsti
firsti1
firstj
firstj1
secondi
secondi1
secondj
secondj1

========================================= single complex:

first binary op: [ first single complex ] 
................
second binary op: [ second single complex ] 
................
pair binary op: [ pair single complex ] 
................
plus binary op: [ plus single complex ] 
................
minus binary op: [ minus single complex ] 
................
rminus binary op: [ rminus single complex ] 
................
times binary op: [ times single complex ] 
................
div binary op: [ div single complex ] 
................
rdiv binary op: [ rdiv single complex ] 
................
iseq binary op: [ iseq single complex ] 
................
isne binary op: [ isne single complex ] 
................
eq binary op: [ eq single complex ] 
................
ne binary op: [ ne single complex ] 
................
pow binary op: [ pow single complex ] 
................
any binary op: [ any single complex ] 
................
oneb binary op: [ oneb single complex ] 
................
min
max
isgt
islt
isge
isle
gt
lt
ge
le
or
and
xor
bor
band
bxor
bxnor
bget
bset
bclr
bshift
atan2
hypot
fmod
remainder
ldexp
copysign
cmplx
firsti
firsti1
firstj
firstj1
secondi
secondi1
secondj
secondj1

========================================= double complex:

first binary op: [ first double complex ] 
................
second binary op: [ second double complex ] 
................
pair binary op: [ pair double complex ] 
................
plus binary op: [ plus double complex ] 
................
minus binary op: [ minus double complex ] 
................
rminus binary op: [ rminus double complex ] 
................
times binary op: [ times double complex ] 
................
div binary op: [ div double complex ] 
................
rdiv binary op: [ rdiv double complex ] 
................
iseq binary op: [ iseq double complex ] 
................
isne binary op: [ isne double complex ] 
................
eq binary op: [ eq double complex ] 
................
ne binary op: [ ne double complex ] 
................
pow binary op: [ pow double complex ] 
................
any binary op: [ any double complex ] 
................
oneb binary op: [ oneb double complex ] 
................
min
max
isgt
islt
isge
isle
gt
lt
ge
le
or
and
xor
bor
band
bxor
bxnor
bget
bset
bclr
bshift
atan2
hypot
fmod
remainder
ldexp
copysign
cmplx
firsti
firsti1
firstj
firstj1
secondi
secondi1
secondj
secondj1
test18: all tests passed
27-Apr 23:32:36 test18        248.1 sec    16:   523 of 21586  97.6%     0.06/s [cover]
[malloc debugging turned back on]

testall: all tests passed, total time 160.9 minutes

testcov: all tests passed

Total time, incl compilation:   172.18 minutes
>> exit
[?1l>[0;36mslash $[0m script 10
Script started, file is 10
 
:: WARNING: setvars.sh has already been run. Skipping re-execution.
   To force a re-execution of setvars.sh, use the '--force' option.
   Using '--force' can result in excessive use of your environment variables.
  
usage: source setvars.sh [--force] [--config=file] [--help] [...]
  --force        Force setvars.sh to re-run, doing so may overload environment.
  --config=file  Customize env vars using a setvars.sh configuration file.
  --help         Display this help message and exit.
  ...            Additional args are passed to individual env/vars.sh scripts
                 and should follow this script's arguments.
  
  Some POSIX shells do not accept command-line options. In that case, you can pass
  command-line options via the SETVARS_ARGS environment variable. For example:
  
  $ SETVARS_ARGS="ia32 --config=config.txt" ; export SETVARS_ARGS
  $ . path/to/setvars.sh
  
  The SETVARS_ARGS environment variable is cleared on exiting setvars.sh.
  
gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
Copyright (C) 2017 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Python 3.9.7 :: Intel Corporatio