
--------------------------------------------------------------------------------
MOSTLY DONE (some with minor work to do):
--------------------------------------------------------------------------------

    GrB_apply
    GrB_assign, GxB_subassign and variants: 
    GrB_extract
    GxB_select
    utilities: GrB_clear, dup: these work now with bitmaps
    removeElement, setElement, extractElement
    GrB_transpose, also apply a unary op: works, except for M bitmap
    GrB_kronecker: just convert bitmap inputs to sparse; C is then sparse
    GB_masker/GB_accum_mask: C<M>=Z and C<M>+=Z
    GrB_Matrix_build and GrB_Vector_build: builds T as hypersparse,
        then conforms to sparse/bitmap/full according to C->sparsity.

FUTURE: can handle transpose of full or bitmap input matrices just by
changing how they are accessed

FUTURE: could combine GB_bitmap_assign_* with the apply of unary/binary op. 

--------------------------------------------------------------------------------
TODO:
--------------------------------------------------------------------------------

    ----------------------------------------------------------------------------
    GrB_mxm, mxv, vxm
    ----------------------------------------------------------------------------

    ----------------------------------------------------------------------------
    GrB_reduce to vector
    ----------------------------------------------------------------------------

        To reduce a CSC to a column vector: can be done with A*B where B
        is a dense vector, B->x set to NULL, using the GxB_[monoid]_FIRST
        semiring.  GrB_Matrix_reduce can take either a monoid or a
        binaryop.  If it is a binaryop, translate to built-in monoid if
        possible.  Otherwise, create a temp monoid with a NULL identity
        value, and avoid using the identity value if NULL.

        This requires modifying the AxB routines so they either do not
        use the monoid identity value, or they don't use it if NULL.

    ----------------------------------------------------------------------------
    GrB_eWiseAdd
    ----------------------------------------------------------------------------

    ----------------------------------------------------------------------------
    GrB_eWiseMult
    ----------------------------------------------------------------------------

