
--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Mallya/lhr71_adj.tsv.gz
--------------------------------------------------------------
matrix 70304 by 70304, 2985588 entries, from stdin

total time to read A matrix:       1.914378 sec

n 70304 # edges 1492794
U=triu(A) time:        0.013095 sec

------------------------------------- dot product method:
L=tril(A) time:        0.012662 sec
# triangles 160592

L'*U time (dot):         0.024920 sec
tricount time:         0.025198 sec (dot product method)
tri+prep time:         0.050955 sec (incl time to compute L and U)
compute C time:        0.024920 sec
reduce (C) time:       0.000278 sec
rate      29.30 million edges/sec (incl time for U=triu(A))
rate      59.24 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.020227 sec
tricount time:         0.020500 sec (saxpy method)
tri+prep time:         0.033163 sec (incl time to compute L)
compute C time:        0.020227 sec
reduce (C) time:       0.000273 sec
rate      45.01 million edges/sec (incl time for L=tril(A))
rate      72.82 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Freescale/Freescale2_adj.tsv.gz
--------------------------------------------------------------
matrix 2999349 by 2999349, 11489868 entries, from stdin

total time to read A matrix:       7.641780 sec

n 2999349 # edges 5744934
U=triu(A) time:        0.092005 sec

------------------------------------- dot product method:
L=tril(A) time:        0.073372 sec
# triangles 21027280

L'*U time (dot):         0.363088 sec
tricount time:         0.375649 sec (dot product method)
tri+prep time:         0.541027 sec (incl time to compute L and U)
compute C time:        0.363088 sec
reduce (C) time:       0.012562 sec
rate      10.62 million edges/sec (incl time for U=triu(A))
rate      15.29 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.202740 sec
tricount time:         0.215340 sec (saxpy method)
tri+prep time:         0.288712 sec (incl time to compute L)
compute C time:        0.202740 sec
reduce (C) time:       0.012599 sec
rate      19.90 million edges/sec (incl time for L=tril(A))
rate      26.68 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/cit-HepPh/cit-HepPh_adj.tsv.gz
--------------------------------------------------------------
matrix 34546 by 34546, 841754 entries, from stdin

total time to read A matrix:       0.566987 sec

n 34546 # edges 420877
U=triu(A) time:        0.004371 sec

------------------------------------- dot product method:
L=tril(A) time:        0.003723 sec
# triangles 1276868

L'*U time (dot):         0.078404 sec
tricount time:         0.080177 sec (dot product method)
tri+prep time:         0.088270 sec (incl time to compute L and U)
compute C time:        0.078404 sec
reduce (C) time:       0.001773 sec
rate       4.77 million edges/sec (incl time for U=triu(A))
rate       5.25 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.033700 sec
tricount time:         0.035471 sec (saxpy method)
tri+prep time:         0.039194 sec (incl time to compute L)
compute C time:        0.033700 sec
reduce (C) time:       0.001771 sec
rate      10.74 million edges/sec (incl time for L=tril(A))
rate      11.87 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/cit-HepTh/cit-HepTh_adj.tsv.gz
--------------------------------------------------------------
matrix 27770 by 27770, 704570 entries, from stdin

total time to read A matrix:       0.467402 sec

n 27770 # edges 352285
U=triu(A) time:        0.003620 sec

------------------------------------- dot product method:
L=tril(A) time:        0.003118 sec
# triangles 1478735

L'*U time (dot):         0.084070 sec
tricount time:         0.085685 sec (dot product method)
tri+prep time:         0.092423 sec (incl time to compute L and U)
compute C time:        0.084070 sec
reduce (C) time:       0.001615 sec
rate       3.81 million edges/sec (incl time for U=triu(A))
rate       4.11 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.038836 sec
tricount time:         0.040449 sec (saxpy method)
tri+prep time:         0.043566 sec (incl time to compute L)
compute C time:        0.038836 sec
reduce (C) time:       0.001613 sec
rate       8.09 million edges/sec (incl time for L=tril(A))
rate       8.71 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/email-EuAll/email-EuAll_adj.tsv.gz
--------------------------------------------------------------
matrix 265214 by 265214, 728962 entries, from stdin

total time to read A matrix:       0.478366 sec

n 265214 # edges 364481
U=triu(A) time:        0.006425 sec

------------------------------------- dot product method:
L=tril(A) time:        0.005869 sec
# triangles 267313

L'*U time (dot):         0.054605 sec
tricount time:         0.054988 sec (dot product method)
tri+prep time:         0.067282 sec (incl time to compute L and U)
compute C time:        0.054605 sec
reduce (C) time:       0.000383 sec
rate       5.42 million edges/sec (incl time for U=triu(A))
rate       6.63 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.038110 sec
tricount time:         0.038491 sec (saxpy method)
tri+prep time:         0.044360 sec (incl time to compute L)
compute C time:        0.038110 sec
reduce (C) time:       0.000381 sec
rate       8.22 million edges/sec (incl time for L=tril(A))
rate       9.47 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/soc-Epinions1/soc-Epinions1_adj.tsv.gz
--------------------------------------------------------------
matrix 75879 by 75879, 811480 entries, from stdin

total time to read A matrix:       0.546730 sec

n 75879 # edges 405740
U=triu(A) time:        0.004636 sec

------------------------------------- dot product method:
L=tril(A) time:        0.004189 sec
# triangles 1624481

L'*U time (dot):         0.162237 sec
tricount time:         0.163596 sec (dot product method)
tri+prep time:         0.172421 sec (incl time to compute L and U)
compute C time:        0.162237 sec
reduce (C) time:       0.001359 sec
rate       2.35 million edges/sec (incl time for U=triu(A))
rate       2.48 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.055796 sec
tricount time:         0.057153 sec (saxpy method)
tri+prep time:         0.061342 sec (incl time to compute L)
compute C time:        0.055796 sec
reduce (C) time:       0.001356 sec
rate       6.61 million edges/sec (incl time for L=tril(A))
rate       7.10 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/soc-Slashdot0811/soc-Slashdot0811_adj.tsv.gz
--------------------------------------------------------------
matrix 77360 by 77360, 938360 entries, from stdin

total time to read A matrix:       0.668440 sec

n 77360 # edges 469180
U=triu(A) time:        0.005330 sec

------------------------------------- dot product method:
L=tril(A) time:        0.004684 sec
# triangles 551724

L'*U time (dot):         0.136288 sec
tricount time:         0.137128 sec (dot product method)
tri+prep time:         0.147141 sec (incl time to compute L and U)
compute C time:        0.136288 sec
reduce (C) time:       0.000840 sec
rate       3.19 million edges/sec (incl time for U=triu(A))
rate       3.42 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.049337 sec
tricount time:         0.050174 sec (saxpy method)
tri+prep time:         0.054857 sec (incl time to compute L)
compute C time:        0.049337 sec
reduce (C) time:       0.000837 sec
rate       8.55 million edges/sec (incl time for L=tril(A))
rate       9.35 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/soc-Slashdot0902/soc-Slashdot0902_adj.tsv.gz
--------------------------------------------------------------
matrix 82168 by 82168, 1008460 entries, from stdin

total time to read A matrix:       0.651958 sec

n 82168 # edges 504230
U=triu(A) time:        0.005661 sec

------------------------------------- dot product method:
L=tril(A) time:        0.005264 sec
# triangles 602592

L'*U time (dot):         0.145996 sec
tricount time:         0.146901 sec (dot product method)
tri+prep time:         0.157825 sec (incl time to compute L and U)
compute C time:        0.145996 sec
reduce (C) time:       0.000905 sec
rate       3.19 million edges/sec (incl time for U=triu(A))
rate       3.43 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.054286 sec
tricount time:         0.055187 sec (saxpy method)
tri+prep time:         0.060451 sec (incl time to compute L)
compute C time:        0.054286 sec
reduce (C) time:       0.000901 sec
rate       8.34 million edges/sec (incl time for L=tril(A))
rate       9.14 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0312/amazon0312_adj.tsv.gz
--------------------------------------------------------------
matrix 400727 by 400727, 4699738 entries, from stdin

total time to read A matrix:       3.265087 sec

n 400727 # edges 2349869
U=triu(A) time:        0.030286 sec

------------------------------------- dot product method:
L=tril(A) time:        0.023536 sec
# triangles 3686467

L'*U time (dot):         0.283690 sec
tricount time:         0.292158 sec (dot product method)
tri+prep time:         0.345980 sec (incl time to compute L and U)
compute C time:        0.283690 sec
reduce (C) time:       0.008468 sec
rate       6.79 million edges/sec (incl time for U=triu(A))
rate       8.04 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.205855 sec
tricount time:         0.214311 sec (saxpy method)
tri+prep time:         0.237847 sec (incl time to compute L)
compute C time:        0.205855 sec
reduce (C) time:       0.008456 sec
rate       9.88 million edges/sec (incl time for L=tril(A))
rate      10.96 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0505/amazon0505_adj.tsv.gz
--------------------------------------------------------------
matrix 410236 by 410236, 4878874 entries, from stdin

total time to read A matrix:       3.346032 sec

n 410236 # edges 2439437
U=triu(A) time:        0.031236 sec

------------------------------------- dot product method:
L=tril(A) time:        0.023929 sec
# triangles 3951063

L'*U time (dot):         0.296873 sec
tricount time:         0.305757 sec (dot product method)
tri+prep time:         0.360922 sec (incl time to compute L and U)
compute C time:        0.296873 sec
reduce (C) time:       0.008884 sec
rate       6.76 million edges/sec (incl time for U=triu(A))
rate       7.98 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.200005 sec
tricount time:         0.208897 sec (saxpy method)
tri+prep time:         0.232827 sec (incl time to compute L)
compute C time:        0.200005 sec
reduce (C) time:       0.008893 sec
rate      10.48 million edges/sec (incl time for L=tril(A))
rate      11.68 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0601/amazon0601_adj.tsv.gz
--------------------------------------------------------------
matrix 403394 by 403394, 4886816 entries, from stdin

total time to read A matrix:       3.317124 sec

n 403394 # edges 2443408
U=triu(A) time:        0.031149 sec

------------------------------------- dot product method:
L=tril(A) time:        0.023874 sec
# triangles 3986507

L'*U time (dot):         0.297901 sec
tricount time:         0.306827 sec (dot product method)
tri+prep time:         0.361850 sec (incl time to compute L and U)
compute C time:        0.297901 sec
reduce (C) time:       0.008926 sec
rate       6.75 million edges/sec (incl time for U=triu(A))
rate       7.96 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.199229 sec
tricount time:         0.208149 sec (saxpy method)
tri+prep time:         0.232023 sec (incl time to compute L)
compute C time:        0.199229 sec
reduce (C) time:       0.008921 sec
rate      10.53 million edges/sec (incl time for L=tril(A))
rate      11.74 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/flickrEdges/flickrEdges_adj.tsv.gz
--------------------------------------------------------------
matrix 105938 by 105938, 4633896 entries, from stdin

total time to read A matrix:       3.008662 sec

n 105938 # edges 2316948
U=triu(A) time:        0.021568 sec

------------------------------------- dot product method:
L=tril(A) time:        0.019577 sec
# triangles 107987357

L'*U time (dot):         2.302810 sec
tricount time:         2.314278 sec (dot product method)
tri+prep time:         2.355423 sec (incl time to compute L and U)
compute C time:        2.302810 sec
reduce (C) time:       0.011468 sec
rate       0.98 million edges/sec (incl time for U=triu(A))
rate       1.00 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.999103 sec
tricount time:         1.010028 sec (saxpy method)
tri+prep time:         1.029604 sec (incl time to compute L)
compute C time:        0.999103 sec
reduce (C) time:       0.010924 sec
rate       2.25 million edges/sec (incl time for L=tril(A))
rate       2.29 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/cit-Patents/cit-Patents_adj.tsv.gz
--------------------------------------------------------------
matrix 3774768 by 3774768, 33037894 entries, from stdin

total time to read A matrix:      25.173558 sec

n 3774768 # edges 16518947
U=triu(A) time:        0.224688 sec

------------------------------------- dot product method:
L=tril(A) time:        0.166422 sec
# triangles 7515023

L'*U time (dot):         3.929463 sec
tricount time:         3.953782 sec (dot product method)
tri+prep time:         4.344893 sec (incl time to compute L and U)
compute C time:        3.929463 sec
reduce (C) time:       0.024319 sec
rate       3.80 million edges/sec (incl time for U=triu(A))
rate       4.18 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         2.750588 sec
tricount time:         2.774886 sec (saxpy method)
tri+prep time:         2.941309 sec (incl time to compute L)
compute C time:        2.750588 sec
reduce (C) time:       0.024299 sec
rate       5.62 million edges/sec (incl time for L=tril(A))
rate       5.95 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/SNAP/soc-LiveJournal1_adj.tsv.gz
--------------------------------------------------------------
matrix 4847571 by 4847571, 85702474 entries, from stdin

total time to read A matrix:      63.090349 sec

n 4847571 # edges 42851237
U=triu(A) time:        0.480713 sec

------------------------------------- dot product method:
L=tril(A) time:        0.400536 sec
# triangles 285730264

L'*U time (dot):        18.649446 sec
tricount time:        18.808117 sec (dot product method)
tri+prep time:        19.689366 sec (incl time to compute L and U)
compute C time:       18.649446 sec
reduce (C) time:       0.158671 sec
rate       2.18 million edges/sec (incl time for U=triu(A))
rate       2.28 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         9.586405 sec
tricount time:         9.745210 sec (saxpy method)
tri+prep time:        10.145746 sec (incl time to compute L)
compute C time:        9.586405 sec
reduce (C) time:       0.158805 sec
rate       4.22 million edges/sec (incl time for L=tril(A))
rate       4.40 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Gleich/wb-edu_adj.tsv.gz
--------------------------------------------------------------
matrix 9845725 by 9845725, 92472210 entries, from stdin

total time to read A matrix:      63.578123 sec

n 9845725 # edges 46236105
U=triu(A) time:        0.570168 sec

------------------------------------- dot product method:
L=tril(A) time:        0.475267 sec
# triangles 254718147

L'*U time (dot):         5.515006 sec
tricount time:         5.704241 sec (dot product method)
tri+prep time:         6.749676 sec (incl time to compute L and U)
compute C time:        5.515006 sec
reduce (C) time:       0.189235 sec
rate       6.85 million edges/sec (incl time for U=triu(A))
rate       8.11 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         3.939367 sec
tricount time:         4.120558 sec (saxpy method)
tri+prep time:         4.595826 sec (incl time to compute L)
compute C time:        3.939367 sec
reduce (C) time:       0.181191 sec
rate      10.06 million edges/sec (incl time for L=tril(A))
rate      11.22 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0302/amazon0302_adj.tsv.gz
--------------------------------------------------------------
matrix 262111 by 262111, 1799584 entries, from stdin

total time to read A matrix:       1.202687 sec

n 262111 # edges 899792
U=triu(A) time:        0.013437 sec

------------------------------------- dot product method:
L=tril(A) time:        0.010297 sec
# triangles 717719

L'*U time (dot):         0.056523 sec
tricount time:         0.059087 sec (dot product method)
tri+prep time:         0.082820 sec (incl time to compute L and U)
compute C time:        0.056523 sec
reduce (C) time:       0.002564 sec
rate      10.86 million edges/sec (incl time for U=triu(A))
rate      15.23 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.046115 sec
tricount time:         0.048678 sec (saxpy method)
tri+prep time:         0.058974 sec (incl time to compute L)
compute C time:        0.046115 sec
reduce (C) time:       0.002563 sec
rate      15.26 million edges/sec (incl time for L=tril(A))
rate      18.48 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/as-caida20071105/as-caida20071105_adj.tsv.gz
--------------------------------------------------------------
matrix 26475 by 26475, 106762 entries, from stdin

total time to read A matrix:       0.076143 sec

n 26475 # edges 53381
U=triu(A) time:        0.000915 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000743 sec
# triangles 36365

L'*U time (dot):         0.005653 sec
tricount time:         0.005731 sec (dot product method)
tri+prep time:         0.007389 sec (incl time to compute L and U)
compute C time:        0.005653 sec
reduce (C) time:       0.000077 sec
rate       7.22 million edges/sec (incl time for U=triu(A))
rate       9.31 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004980 sec
tricount time:         0.005055 sec (saxpy method)
tri+prep time:         0.005799 sec (incl time to compute L)
compute C time:        0.004980 sec
reduce (C) time:       0.000075 sec
rate       9.21 million edges/sec (incl time for L=tril(A))
rate      10.56 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/as20000102/as20000102_adj.tsv.gz
--------------------------------------------------------------
matrix 6474 by 6474, 25144 entries, from stdin

total time to read A matrix:       0.014780 sec

n 6474 # edges 12572
U=triu(A) time:        0.000224 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000177 sec
# triangles 6584

L'*U time (dot):         0.000874 sec
tricount time:         0.000891 sec (dot product method)
tri+prep time:         0.001292 sec (incl time to compute L and U)
compute C time:        0.000874 sec
reduce (C) time:       0.000017 sec
rate       9.73 million edges/sec (incl time for U=triu(A))
rate      14.10 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000533 sec
tricount time:         0.000548 sec (saxpy method)
tri+prep time:         0.000725 sec (incl time to compute L)
compute C time:        0.000533 sec
reduce (C) time:       0.000016 sec
rate      17.34 million edges/sec (incl time for L=tril(A))
rate      22.93 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-AstroPh/ca-AstroPh_adj.tsv.gz
--------------------------------------------------------------
matrix 18772 by 18772, 396100 entries, from stdin

total time to read A matrix:       0.248516 sec

n 18772 # edges 198050
U=triu(A) time:        0.002055 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001787 sec
# triangles 1351441

L'*U time (dot):         0.041128 sec
tricount time:         0.042101 sec (dot product method)
tri+prep time:         0.045944 sec (incl time to compute L and U)
compute C time:        0.041128 sec
reduce (C) time:       0.000973 sec
rate       4.31 million edges/sec (incl time for U=triu(A))
rate       4.70 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.017951 sec
tricount time:         0.018924 sec (saxpy method)
tri+prep time:         0.020711 sec (incl time to compute L)
compute C time:        0.017951 sec
reduce (C) time:       0.000973 sec
rate       9.56 million edges/sec (incl time for L=tril(A))
rate      10.47 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-CondMat/ca-CondMat_adj.tsv.gz
--------------------------------------------------------------
matrix 23133 by 23133, 186878 entries, from stdin

total time to read A matrix:       0.116859 sec

n 23133 # edges 93439
U=triu(A) time:        0.001292 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000995 sec
# triangles 173361

L'*U time (dot):         0.007644 sec
tricount time:         0.008003 sec (dot product method)
tri+prep time:         0.010291 sec (incl time to compute L and U)
compute C time:        0.007644 sec
reduce (C) time:       0.000359 sec
rate       9.08 million edges/sec (incl time for U=triu(A))
rate      11.67 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004531 sec
tricount time:         0.004888 sec (saxpy method)
tri+prep time:         0.005883 sec (incl time to compute L)
compute C time:        0.004531 sec
reduce (C) time:       0.000357 sec
rate      15.88 million edges/sec (incl time for L=tril(A))
rate      19.12 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-GrQc/ca-GrQc_adj.tsv.gz
--------------------------------------------------------------
matrix 5242 by 5242, 28968 entries, from stdin

total time to read A matrix:       0.017157 sec

n 5242 # edges 14484
U=triu(A) time:        0.000236 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000186 sec
# triangles 48260

L'*U time (dot):         0.000904 sec
tricount time:         0.000956 sec (dot product method)
tri+prep time:         0.001377 sec (incl time to compute L and U)
compute C time:        0.000904 sec
reduce (C) time:       0.000052 sec
rate      10.52 million edges/sec (incl time for U=triu(A))
rate      15.15 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000615 sec
tricount time:         0.000666 sec (saxpy method)
tri+prep time:         0.000852 sec (incl time to compute L)
compute C time:        0.000615 sec
reduce (C) time:       0.000051 sec
rate      17.00 million edges/sec (incl time for L=tril(A))
rate      21.74 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-HepPh/ca-HepPh_adj.tsv.gz
--------------------------------------------------------------
matrix 12008 by 12008, 236978 entries, from stdin

total time to read A matrix:       0.144573 sec

n 12008 # edges 118489
U=triu(A) time:        0.001239 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001058 sec
# triangles 3358499

L'*U time (dot):         0.038723 sec
tricount time:         0.039328 sec (dot product method)
tri+prep time:         0.041625 sec (incl time to compute L and U)
compute C time:        0.038723 sec
reduce (C) time:       0.000605 sec
rate       2.85 million edges/sec (incl time for U=triu(A))
rate       3.01 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.017893 sec
tricount time:         0.018492 sec (saxpy method)
tri+prep time:         0.019550 sec (incl time to compute L)
compute C time:        0.017893 sec
reduce (C) time:       0.000599 sec
rate       6.06 million edges/sec (incl time for L=tril(A))
rate       6.41 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-HepTh/ca-HepTh_adj.tsv.gz
--------------------------------------------------------------
matrix 9877 by 9877, 51946 entries, from stdin

total time to read A matrix:       0.049136 sec

n 9877 # edges 25973
U=triu(A) time:        0.000431 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000327 sec
# triangles 28339

L'*U time (dot):         0.001451 sec
tricount time:         0.001526 sec (dot product method)
tri+prep time:         0.002285 sec (incl time to compute L and U)
compute C time:        0.001451 sec
reduce (C) time:       0.000075 sec
rate      11.37 million edges/sec (incl time for U=triu(A))
rate      17.02 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.001053 sec
tricount time:         0.001126 sec (saxpy method)
tri+prep time:         0.001454 sec (incl time to compute L)
compute C time:        0.001053 sec
reduce (C) time:       0.000074 sec
rate      17.87 million edges/sec (incl time for L=tril(A))
rate      23.06 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/email-Enron/email-Enron_adj.tsv.gz
--------------------------------------------------------------
matrix 36692 by 36692, 367662 entries, from stdin

total time to read A matrix:       0.231038 sec

n 36692 # edges 183831
U=triu(A) time:        0.002239 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001881 sec
# triangles 727044

L'*U time (dot):         0.044450 sec
tricount time:         0.045227 sec (dot product method)
tri+prep time:         0.049347 sec (incl time to compute L and U)
compute C time:        0.044450 sec
reduce (C) time:       0.000777 sec
rate       3.73 million edges/sec (incl time for U=triu(A))
rate       4.06 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.019434 sec
tricount time:         0.020205 sec (saxpy method)
tri+prep time:         0.022086 sec (incl time to compute L)
compute C time:        0.019434 sec
reduce (C) time:       0.000771 sec
rate       8.32 million edges/sec (incl time for L=tril(A))
rate       9.10 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/facebook_combined/facebook_combined_adj.tsv.gz
--------------------------------------------------------------
matrix 4039 by 4039, 176468 entries, from stdin

total time to read A matrix:       0.103362 sec

n 4039 # edges 88234
U=triu(A) time:        0.000800 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000743 sec
# triangles 1612010

L'*U time (dot):         0.027221 sec
tricount time:         0.027702 sec (dot product method)
tri+prep time:         0.029244 sec (incl time to compute L and U)
compute C time:        0.027221 sec
reduce (C) time:       0.000481 sec
rate       3.02 million edges/sec (incl time for U=triu(A))
rate       3.19 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.010739 sec
tricount time:         0.011218 sec (saxpy method)
tri+prep time:         0.011961 sec (incl time to compute L)
compute C time:        0.010739 sec
reduce (C) time:       0.000479 sec
rate       7.38 million edges/sec (incl time for L=tril(A))
rate       7.87 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/loc-brightkite_edges/loc-brightkite_edges_adj.tsv.gz
--------------------------------------------------------------
matrix 58228 by 58228, 428156 entries, from stdin

total time to read A matrix:       0.271609 sec

n 58228 # edges 214078
U=triu(A) time:        0.002847 sec

------------------------------------- dot product method:
L=tril(A) time:        0.002461 sec
# triangles 494728

L'*U time (dot):         0.031396 sec
tricount time:         0.031945 sec (dot product method)
tri+prep time:         0.037253 sec (incl time to compute L and U)
compute C time:        0.031396 sec
reduce (C) time:       0.000549 sec
rate       5.75 million edges/sec (incl time for U=triu(A))
rate       6.70 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.013247 sec
tricount time:         0.013798 sec (saxpy method)
tri+prep time:         0.016260 sec (incl time to compute L)
compute C time:        0.013247 sec
reduce (C) time:       0.000551 sec
rate      13.17 million edges/sec (incl time for L=tril(A))
rate      15.51 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/loc-gowalla_edges/loc-gowalla_edges_adj.tsv.gz
--------------------------------------------------------------
matrix 196591 by 196591, 1900654 entries, from stdin

total time to read A matrix:       1.252996 sec

n 196591 # edges 950327
U=triu(A) time:        0.011855 sec

------------------------------------- dot product method:
L=tril(A) time:        0.009787 sec
# triangles 2273138

L'*U time (dot):         0.212634 sec
tricount time:         0.215612 sec (dot product method)
tri+prep time:         0.237254 sec (incl time to compute L and U)
compute C time:        0.212634 sec
reduce (C) time:       0.002978 sec
rate       4.01 million edges/sec (incl time for U=triu(A))
rate       4.41 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.206904 sec
tricount time:         0.209881 sec (saxpy method)
tri+prep time:         0.219667 sec (incl time to compute L)
compute C time:        0.206904 sec
reduce (C) time:       0.002977 sec
rate       4.33 million edges/sec (incl time for L=tril(A))
rate       4.53 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010331/oregon1_010331_adj.tsv.gz
--------------------------------------------------------------
matrix 10670 by 10670, 44004 entries, from stdin

total time to read A matrix:       0.038095 sec

n 10670 # edges 22002
U=triu(A) time:        0.000360 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000293 sec
# triangles 17144

L'*U time (dot):         0.001875 sec
tricount time:         0.001915 sec (dot product method)
tri+prep time:         0.002568 sec (incl time to compute L and U)
compute C time:        0.001875 sec
reduce (C) time:       0.000040 sec
rate       8.57 million edges/sec (incl time for U=triu(A))
rate      11.49 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002117 sec
tricount time:         0.002156 sec (saxpy method)
tri+prep time:         0.002448 sec (incl time to compute L)
compute C time:        0.002117 sec
reduce (C) time:       0.000039 sec
rate       8.99 million edges/sec (incl time for L=tril(A))
rate      10.21 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010407/oregon1_010407_adj.tsv.gz
--------------------------------------------------------------
matrix 10729 by 10729, 43998 entries, from stdin

total time to read A matrix:       0.043434 sec

n 10729 # edges 21999
U=triu(A) time:        0.000361 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000293 sec
# triangles 15834

L'*U time (dot):         0.001863 sec
tricount time:         0.001902 sec (dot product method)
tri+prep time:         0.002557 sec (incl time to compute L and U)
compute C time:        0.001863 sec
reduce (C) time:       0.000040 sec
rate       8.60 million edges/sec (incl time for U=triu(A))
rate      11.56 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002105 sec
tricount time:         0.002143 sec (saxpy method)
tri+prep time:         0.002436 sec (incl time to compute L)
compute C time:        0.002105 sec
reduce (C) time:       0.000038 sec
rate       9.03 million edges/sec (incl time for L=tril(A))
rate      10.27 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010414/oregon1_010414_adj.tsv.gz
--------------------------------------------------------------
matrix 10790 by 10790, 44938 entries, from stdin

total time to read A matrix:       0.027802 sec

n 10790 # edges 22469
U=triu(A) time:        0.000372 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000299 sec
# triangles 18237

L'*U time (dot):         0.001955 sec
tricount time:         0.001997 sec (dot product method)
tri+prep time:         0.002668 sec (incl time to compute L and U)
compute C time:        0.001955 sec
reduce (C) time:       0.000042 sec
rate       8.42 million edges/sec (incl time for U=triu(A))
rate      11.25 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002252 sec
tricount time:         0.002309 sec (saxpy method)
tri+prep time:         0.002607 sec (incl time to compute L)
compute C time:        0.002252 sec
reduce (C) time:       0.000057 sec
rate       8.62 million edges/sec (incl time for L=tril(A))
rate       9.73 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010421/oregon1_010421_adj.tsv.gz
--------------------------------------------------------------
matrix 10859 by 10859, 45494 entries, from stdin

total time to read A matrix:       0.033327 sec

n 10859 # edges 22747
U=triu(A) time:        0.000374 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000305 sec
# triangles 19108

L'*U time (dot):         0.002022 sec
tricount time:         0.002065 sec (dot product method)
tri+prep time:         0.002744 sec (incl time to compute L and U)
compute C time:        0.002022 sec
reduce (C) time:       0.000043 sec
rate       8.29 million edges/sec (incl time for U=triu(A))
rate      11.02 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002299 sec
tricount time:         0.002340 sec (saxpy method)
tri+prep time:         0.002645 sec (incl time to compute L)
compute C time:        0.002299 sec
reduce (C) time:       0.000041 sec
rate       8.60 million edges/sec (incl time for L=tril(A))
rate       9.72 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010428/oregon1_010428_adj.tsv.gz
--------------------------------------------------------------
matrix 10886 by 10886, 44986 entries, from stdin

total time to read A matrix:       0.032686 sec

n 10886 # edges 22493
U=triu(A) time:        0.000372 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000301 sec
# triangles 17645

L'*U time (dot):         0.001933 sec
tricount time:         0.001974 sec (dot product method)
tri+prep time:         0.002646 sec (incl time to compute L and U)
compute C time:        0.001933 sec
reduce (C) time:       0.000041 sec
rate       8.50 million edges/sec (incl time for U=triu(A))
rate      11.40 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002267 sec
tricount time:         0.002306 sec (saxpy method)
tri+prep time:         0.002607 sec (incl time to compute L)
compute C time:        0.002267 sec
reduce (C) time:       0.000040 sec
rate       8.63 million edges/sec (incl time for L=tril(A))
rate       9.75 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010505/oregon1_010505_adj.tsv.gz
--------------------------------------------------------------
matrix 10943 by 10943, 45214 entries, from stdin

total time to read A matrix:       0.041304 sec

n 10943 # edges 22607
U=triu(A) time:        0.000374 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000305 sec
# triangles 17597

L'*U time (dot):         0.001937 sec
tricount time:         0.001978 sec (dot product method)
tri+prep time:         0.002657 sec (incl time to compute L and U)
compute C time:        0.001937 sec
reduce (C) time:       0.000041 sec
rate       8.51 million edges/sec (incl time for U=triu(A))
rate      11.43 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002274 sec
tricount time:         0.002314 sec (saxpy method)
tri+prep time:         0.002618 sec (incl time to compute L)
compute C time:        0.002274 sec
reduce (C) time:       0.000039 sec
rate       8.63 million edges/sec (incl time for L=tril(A))
rate       9.77 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010512/oregon1_010512_adj.tsv.gz
--------------------------------------------------------------
matrix 11011 by 11011, 45354 entries, from stdin

total time to read A matrix:       0.034717 sec

n 11011 # edges 22677
U=triu(A) time:        0.000375 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000306 sec
# triangles 17598

L'*U time (dot):         0.001943 sec
tricount time:         0.001984 sec (dot product method)
tri+prep time:         0.002664 sec (incl time to compute L and U)
compute C time:        0.001943 sec
reduce (C) time:       0.000041 sec
rate       8.51 million edges/sec (incl time for U=triu(A))
rate      11.43 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002298 sec
tricount time:         0.002338 sec (saxpy method)
tri+prep time:         0.002644 sec (incl time to compute L)
compute C time:        0.002298 sec
reduce (C) time:       0.000040 sec
rate       8.58 million edges/sec (incl time for L=tril(A))
rate       9.70 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010519/oregon1_010519_adj.tsv.gz
--------------------------------------------------------------
matrix 11051 by 11051, 45448 entries, from stdin

total time to read A matrix:       0.036127 sec

n 11051 # edges 22724
U=triu(A) time:        0.000375 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000303 sec
# triangles 17677

L'*U time (dot):         0.001949 sec
tricount time:         0.001990 sec (dot product method)
tri+prep time:         0.002668 sec (incl time to compute L and U)
compute C time:        0.001949 sec
reduce (C) time:       0.000041 sec
rate       8.52 million edges/sec (incl time for U=triu(A))
rate      11.42 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002279 sec
tricount time:         0.002318 sec (saxpy method)
tri+prep time:         0.002621 sec (incl time to compute L)
compute C time:        0.002279 sec
reduce (C) time:       0.000040 sec
rate       8.67 million edges/sec (incl time for L=tril(A))
rate       9.80 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010526/oregon1_010526_adj.tsv.gz
--------------------------------------------------------------
matrix 11174 by 11174, 46818 entries, from stdin

total time to read A matrix:       0.039047 sec

n 11174 # edges 23409
U=triu(A) time:        0.000385 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000310 sec
# triangles 19894

L'*U time (dot):         0.002088 sec
tricount time:         0.002132 sec (dot product method)
tri+prep time:         0.002827 sec (incl time to compute L and U)
compute C time:        0.002088 sec
reduce (C) time:       0.000044 sec
rate       8.28 million edges/sec (incl time for U=triu(A))
rate      10.98 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002352 sec
tricount time:         0.002394 sec (saxpy method)
tri+prep time:         0.002705 sec (incl time to compute L)
compute C time:        0.002352 sec
reduce (C) time:       0.000043 sec
rate       8.65 million edges/sec (incl time for L=tril(A))
rate       9.78 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010331/oregon2_010331_adj.tsv.gz
--------------------------------------------------------------
matrix 10900 by 10900, 62360 entries, from stdin

total time to read A matrix:       0.056999 sec

n 10900 # edges 31180
U=triu(A) time:        0.000453 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000368 sec
# triangles 82856

L'*U time (dot):         0.004062 sec
tricount time:         0.004152 sec (dot product method)
tri+prep time:         0.004973 sec (incl time to compute L and U)
compute C time:        0.004062 sec
reduce (C) time:       0.000090 sec
rate       6.27 million edges/sec (incl time for U=triu(A))
rate       7.51 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003206 sec
tricount time:         0.003295 sec (saxpy method)
tri+prep time:         0.003663 sec (incl time to compute L)
compute C time:        0.003206 sec
reduce (C) time:       0.000089 sec
rate       8.51 million edges/sec (incl time for L=tril(A))
rate       9.46 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010407/oregon2_010407_adj.tsv.gz
--------------------------------------------------------------
matrix 10981 by 10981, 61710 entries, from stdin

total time to read A matrix:       0.046002 sec

n 10981 # edges 30855
U=triu(A) time:        0.000448 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000366 sec
# triangles 78138

L'*U time (dot):         0.003972 sec
tricount time:         0.004059 sec (dot product method)
tri+prep time:         0.004873 sec (incl time to compute L and U)
compute C time:        0.003972 sec
reduce (C) time:       0.000087 sec
rate       6.33 million edges/sec (incl time for U=triu(A))
rate       7.60 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003200 sec
tricount time:         0.003286 sec (saxpy method)
tri+prep time:         0.003652 sec (incl time to compute L)
compute C time:        0.003200 sec
reduce (C) time:       0.000086 sec
rate       8.45 million edges/sec (incl time for L=tril(A))
rate       9.39 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010414/oregon2_010414_adj.tsv.gz
--------------------------------------------------------------
matrix 11019 by 11019, 63522 entries, from stdin

total time to read A matrix:       0.040449 sec

n 11019 # edges 31761
U=triu(A) time:        0.000460 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000376 sec
# triangles 88905

L'*U time (dot):         0.004293 sec
tricount time:         0.004386 sec (dot product method)
tri+prep time:         0.005221 sec (incl time to compute L and U)
compute C time:        0.004293 sec
reduce (C) time:       0.000092 sec
rate       6.08 million edges/sec (incl time for U=triu(A))
rate       7.24 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003370 sec
tricount time:         0.003461 sec (saxpy method)
tri+prep time:         0.003837 sec (incl time to compute L)
compute C time:        0.003370 sec
reduce (C) time:       0.000091 sec
rate       8.28 million edges/sec (incl time for L=tril(A))
rate       9.18 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010421/oregon2_010421_adj.tsv.gz
--------------------------------------------------------------
matrix 11080 by 11080, 63076 entries, from stdin

total time to read A matrix:       0.050510 sec

n 11080 # edges 31538
U=triu(A) time:        0.000459 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000374 sec
# triangles 82129

L'*U time (dot):         0.004169 sec
tricount time:         0.004258 sec (dot product method)
tri+prep time:         0.005091 sec (incl time to compute L and U)
compute C time:        0.004169 sec
reduce (C) time:       0.000090 sec
rate       6.19 million edges/sec (incl time for U=triu(A))
rate       7.41 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003341 sec
tricount time:         0.003429 sec (saxpy method)
tri+prep time:         0.003803 sec (incl time to compute L)
compute C time:        0.003341 sec
reduce (C) time:       0.000089 sec
rate       8.29 million edges/sec (incl time for L=tril(A))
rate       9.20 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010428/oregon2_010428_adj.tsv.gz
--------------------------------------------------------------
matrix 11113 by 11113, 62868 entries, from stdin

total time to read A matrix:       0.050938 sec

n 11113 # edges 31434
U=triu(A) time:        0.000466 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000370 sec
# triangles 78000

L'*U time (dot):         0.004089 sec
tricount time:         0.004177 sec (dot product method)
tri+prep time:         0.005014 sec (incl time to compute L and U)
compute C time:        0.004089 sec
reduce (C) time:       0.000088 sec
rate       6.27 million edges/sec (incl time for U=triu(A))
rate       7.53 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003297 sec
tricount time:         0.003384 sec (saxpy method)
tri+prep time:         0.003755 sec (incl time to compute L)
compute C time:        0.003297 sec
reduce (C) time:       0.000087 sec
rate       8.37 million edges/sec (incl time for L=tril(A))
rate       9.29 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010505/oregon2_010505_adj.tsv.gz
--------------------------------------------------------------
matrix 11157 by 11157, 61886 entries, from stdin

total time to read A matrix:       0.045365 sec

n 11157 # edges 30943
U=triu(A) time:        0.000452 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000370 sec
# triangles 72182

L'*U time (dot):         0.003924 sec
tricount time:         0.004009 sec (dot product method)
tri+prep time:         0.004831 sec (incl time to compute L and U)
compute C time:        0.003924 sec
reduce (C) time:       0.000085 sec
rate       6.41 million edges/sec (incl time for U=triu(A))
rate       7.72 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003208 sec
tricount time:         0.003292 sec (saxpy method)
tri+prep time:         0.003662 sec (incl time to compute L)
compute C time:        0.003208 sec
reduce (C) time:       0.000084 sec
rate       8.45 million edges/sec (incl time for L=tril(A))
rate       9.40 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010512/oregon2_010512_adj.tsv.gz
--------------------------------------------------------------
matrix 11260 by 11260, 62606 entries, from stdin

total time to read A matrix:       0.045273 sec

n 11260 # edges 31303
U=triu(A) time:        0.000460 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000371 sec
# triangles 72866

L'*U time (dot):         0.003969 sec
tricount time:         0.004054 sec (dot product method)
tri+prep time:         0.004885 sec (incl time to compute L and U)
compute C time:        0.003969 sec
reduce (C) time:       0.000086 sec
rate       6.41 million edges/sec (incl time for U=triu(A))
rate       7.72 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003266 sec
tricount time:         0.003350 sec (saxpy method)
tri+prep time:         0.003721 sec (incl time to compute L)
compute C time:        0.003266 sec
reduce (C) time:       0.000084 sec
rate       8.41 million edges/sec (incl time for L=tril(A))
rate       9.34 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010519/oregon2_010519_adj.tsv.gz
--------------------------------------------------------------
matrix 11375 by 11375, 64574 entries, from stdin

total time to read A matrix:       0.051195 sec

n 11375 # edges 32287
U=triu(A) time:        0.000469 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000382 sec
# triangles 83709

L'*U time (dot):         0.004303 sec
tricount time:         0.004394 sec (dot product method)
tri+prep time:         0.005245 sec (incl time to compute L and U)
compute C time:        0.004303 sec
reduce (C) time:       0.000091 sec
rate       6.16 million edges/sec (incl time for U=triu(A))
rate       7.35 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003481 sec
tricount time:         0.003571 sec (saxpy method)
tri+prep time:         0.003953 sec (incl time to compute L)
compute C time:        0.003481 sec
reduce (C) time:       0.000090 sec
rate       8.17 million edges/sec (incl time for L=tril(A))
rate       9.04 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010526/oregon2_010526_adj.tsv.gz
--------------------------------------------------------------
matrix 11461 by 11461, 65460 entries, from stdin

total time to read A matrix:       0.041886 sec

n 11461 # edges 32730
U=triu(A) time:        0.000475 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000387 sec
# triangles 89541

L'*U time (dot):         0.004501 sec
tricount time:         0.004594 sec (dot product method)
tri+prep time:         0.005456 sec (incl time to compute L and U)
compute C time:        0.004501 sec
reduce (C) time:       0.000093 sec
rate       6.00 million edges/sec (incl time for U=triu(A))
rate       7.12 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003523 sec
tricount time:         0.003614 sec (saxpy method)
tri+prep time:         0.004001 sec (incl time to compute L)
compute C time:        0.003523 sec
reduce (C) time:       0.000091 sec
rate       8.18 million edges/sec (incl time for L=tril(A))
rate       9.06 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella04/p2p-Gnutella04_adj.tsv.gz
--------------------------------------------------------------
matrix 10876 by 10876, 79988 entries, from stdin

total time to read A matrix:       0.063242 sec

n 10876 # edges 39994
U=triu(A) time:        0.000571 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000447 sec
# triangles 934

L'*U time (dot):         0.002038 sec
tricount time:         0.002045 sec (dot product method)
tri+prep time:         0.003063 sec (incl time to compute L and U)
compute C time:        0.002038 sec
reduce (C) time:       0.000007 sec
rate      13.06 million edges/sec (incl time for U=triu(A))
rate      19.56 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.001159 sec
tricount time:         0.001165 sec (saxpy method)
tri+prep time:         0.001612 sec (incl time to compute L)
compute C time:        0.001159 sec
reduce (C) time:       0.000006 sec
rate      24.81 million edges/sec (incl time for L=tril(A))
rate      34.32 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella05/p2p-Gnutella05_adj.tsv.gz
--------------------------------------------------------------
matrix 8846 by 8846, 63678 entries, from stdin

total time to read A matrix:       0.043656 sec

n 8846 # edges 31839
U=triu(A) time:        0.000475 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000359 sec
# triangles 1112

L'*U time (dot):         0.001697 sec
tricount time:         0.001704 sec (dot product method)
tri+prep time:         0.002537 sec (incl time to compute L and U)
compute C time:        0.001697 sec
reduce (C) time:       0.000007 sec
rate      12.55 million edges/sec (incl time for U=triu(A))
rate      18.68 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000935 sec
tricount time:         0.000941 sec (saxpy method)
tri+prep time:         0.001300 sec (incl time to compute L)
compute C time:        0.000935 sec
reduce (C) time:       0.000006 sec
rate      24.50 million edges/sec (incl time for L=tril(A))
rate      33.84 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella06/p2p-Gnutella06_adj.tsv.gz
--------------------------------------------------------------
matrix 8717 by 8717, 63050 entries, from stdin

total time to read A matrix:       0.044953 sec

n 8717 # edges 31525
U=triu(A) time:        0.000464 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000351 sec
# triangles 1142

L'*U time (dot):         0.001662 sec
tricount time:         0.001670 sec (dot product method)
tri+prep time:         0.002485 sec (incl time to compute L and U)
compute C time:        0.001662 sec
reduce (C) time:       0.000008 sec
rate      12.69 million edges/sec (incl time for U=triu(A))
rate      18.88 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000928 sec
tricount time:         0.000935 sec (saxpy method)
tri+prep time:         0.001286 sec (incl time to compute L)
compute C time:        0.000928 sec
reduce (C) time:       0.000007 sec
rate      24.52 million edges/sec (incl time for L=tril(A))
rate      33.73 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella08/p2p-Gnutella08_adj.tsv.gz
--------------------------------------------------------------
matrix 6301 by 6301, 41554 entries, from stdin

total time to read A matrix:       0.024713 sec

n 6301 # edges 20777
U=triu(A) time:        0.000312 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000243 sec
# triangles 2383

L'*U time (dot):         0.001233 sec
tricount time:         0.001244 sec (dot product method)
tri+prep time:         0.001799 sec (incl time to compute L and U)
compute C time:        0.001233 sec
reduce (C) time:       0.000011 sec
rate      11.55 million edges/sec (incl time for U=triu(A))
rate      16.70 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000649 sec
tricount time:         0.000659 sec (saxpy method)
tri+prep time:         0.000902 sec (incl time to compute L)
compute C time:        0.000649 sec
reduce (C) time:       0.000010 sec
rate      23.03 million edges/sec (incl time for L=tril(A))
rate      31.52 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella09/p2p-Gnutella09_adj.tsv.gz
--------------------------------------------------------------
matrix 8114 by 8114, 52026 entries, from stdin

total time to read A matrix:       0.042463 sec

n 8114 # edges 26013
U=triu(A) time:        0.000397 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000301 sec
# triangles 2354

L'*U time (dot):         0.001514 sec
tricount time:         0.001525 sec (dot product method)
tri+prep time:         0.002222 sec (incl time to compute L and U)
compute C time:        0.001514 sec
reduce (C) time:       0.000011 sec
rate      11.71 million edges/sec (incl time for U=triu(A))
rate      17.06 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000795 sec
tricount time:         0.000804 sec (saxpy method)
tri+prep time:         0.001105 sec (incl time to compute L)
compute C time:        0.000795 sec
reduce (C) time:       0.000009 sec
rate      23.54 million edges/sec (incl time for L=tril(A))
rate      32.35 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella24/p2p-Gnutella24_adj.tsv.gz
--------------------------------------------------------------
matrix 26518 by 26518, 130738 entries, from stdin

total time to read A matrix:       0.097195 sec

n 26518 # edges 65369
U=triu(A) time:        0.001091 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000838 sec
# triangles 986

L'*U time (dot):         0.003030 sec
tricount time:         0.003038 sec (dot product method)
tri+prep time:         0.004967 sec (incl time to compute L and U)
compute C time:        0.003030 sec
reduce (C) time:       0.000008 sec
rate      13.16 million edges/sec (incl time for U=triu(A))
rate      21.52 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002083 sec
tricount time:         0.002089 sec (saxpy method)
tri+prep time:         0.002927 sec (incl time to compute L)
compute C time:        0.002083 sec
reduce (C) time:       0.000007 sec
rate      22.33 million edges/sec (incl time for L=tril(A))
rate      31.29 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella25/p2p-Gnutella25_adj.tsv.gz
--------------------------------------------------------------
matrix 22687 by 22687, 109410 entries, from stdin

total time to read A matrix:       0.077053 sec

n 22687 # edges 54705
U=triu(A) time:        0.000910 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000701 sec
# triangles 806

L'*U time (dot):         0.002418 sec
tricount time:         0.002425 sec (dot product method)
tri+prep time:         0.004036 sec (incl time to compute L and U)
compute C time:        0.002418 sec
reduce (C) time:       0.000007 sec
rate      13.56 million edges/sec (incl time for U=triu(A))
rate      22.56 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.001715 sec
tricount time:         0.001721 sec (saxpy method)
tri+prep time:         0.002422 sec (incl time to compute L)
compute C time:        0.001715 sec
reduce (C) time:       0.000006 sec
rate      22.59 million edges/sec (incl time for L=tril(A))
rate      31.79 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella30/p2p-Gnutella30_adj.tsv.gz
--------------------------------------------------------------
matrix 36682 by 36682, 176656 entries, from stdin

total time to read A matrix:       0.127945 sec

n 36682 # edges 88328
U=triu(A) time:        0.001445 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001134 sec
# triangles 1590

L'*U time (dot):         0.004074 sec
tricount time:         0.004087 sec (dot product method)
tri+prep time:         0.006666 sec (incl time to compute L and U)
compute C time:        0.004074 sec
reduce (C) time:       0.000012 sec
rate      13.25 million edges/sec (incl time for U=triu(A))
rate      21.61 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002822 sec
tricount time:         0.002832 sec (saxpy method)
tri+prep time:         0.003966 sec (incl time to compute L)
compute C time:        0.002822 sec
reduce (C) time:       0.000010 sec
rate      22.27 million edges/sec (incl time for L=tril(A))
rate      31.19 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella31/p2p-Gnutella31_adj.tsv.gz
--------------------------------------------------------------
matrix 62586 by 62586, 295784 entries, from stdin

total time to read A matrix:       0.187230 sec

n 62586 # edges 147892
U=triu(A) time:        0.002446 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001927 sec
# triangles 2024

L'*U time (dot):         0.007090 sec
tricount time:         0.007107 sec (dot product method)
tri+prep time:         0.011480 sec (incl time to compute L and U)
compute C time:        0.007090 sec
reduce (C) time:       0.000018 sec
rate      12.88 million edges/sec (incl time for U=triu(A))
rate      20.81 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004707 sec
tricount time:         0.004720 sec (saxpy method)
tri+prep time:         0.006647 sec (incl time to compute L)
compute C time:        0.004707 sec
reduce (C) time:       0.000013 sec
rate      22.25 million edges/sec (incl time for L=tril(A))
rate      31.33 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/roadNet-CA/roadNet-CA_adj.tsv.gz
--------------------------------------------------------------
matrix 1965206 by 1965206, 5533214 entries, from stdin

total time to read A matrix:       3.697511 sec

n 1965206 # edges 2766607
U=triu(A) time:        0.056965 sec

------------------------------------- dot product method:
L=tril(A) time:        0.043630 sec
# triangles 120676

L'*U time (dot):         0.076657 sec
tricount time:         0.077381 sec (dot product method)
tri+prep time:         0.177976 sec (incl time to compute L and U)
compute C time:        0.076657 sec
reduce (C) time:       0.000724 sec
rate      15.54 million edges/sec (incl time for U=triu(A))
rate      35.75 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.185581 sec
tricount time:         0.186745 sec (saxpy method)
tri+prep time:         0.230375 sec (incl time to compute L)
compute C time:        0.185581 sec
reduce (C) time:       0.001164 sec
rate      12.01 million edges/sec (incl time for L=tril(A))
rate      14.81 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/roadNet-PA/roadNet-PA_adj.tsv.gz
--------------------------------------------------------------
matrix 1088092 by 1088092, 3083796 entries, from stdin

total time to read A matrix:       2.017707 sec

n 1088092 # edges 1541898
U=triu(A) time:        0.031455 sec

------------------------------------- dot product method:
L=tril(A) time:        0.025212 sec
# triangles 67150

L'*U time (dot):         0.042772 sec
tricount time:         0.043178 sec (dot product method)
tri+prep time:         0.099845 sec (incl time to compute L and U)
compute C time:        0.042772 sec
reduce (C) time:       0.000406 sec
rate      15.44 million edges/sec (incl time for U=triu(A))
rate      35.71 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.099501 sec
tricount time:         0.099904 sec (saxpy method)
tri+prep time:         0.125116 sec (incl time to compute L)
compute C time:        0.099501 sec
reduce (C) time:       0.000403 sec
rate      12.32 million edges/sec (incl time for L=tril(A))
rate      15.43 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/roadNet-TX/roadNet-TX_adj.tsv.gz
--------------------------------------------------------------
matrix 1379917 by 1379917, 3843320 entries, from stdin

total time to read A matrix:       2.495765 sec

n 1379917 # edges 1921660
U=triu(A) time:        0.038790 sec

------------------------------------- dot product method:
L=tril(A) time:        0.030766 sec
# triangles 82869

L'*U time (dot):         0.052343 sec
tricount time:         0.052844 sec (dot product method)
tri+prep time:         0.122399 sec (incl time to compute L and U)
compute C time:        0.052343 sec
reduce (C) time:       0.000500 sec
rate      15.70 million edges/sec (incl time for U=triu(A))
rate      36.37 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.123597 sec
tricount time:         0.124093 sec (saxpy method)
tri+prep time:         0.154859 sec (incl time to compute L)
compute C time:        0.123597 sec
reduce (C) time:       0.000496 sec
rate      12.41 million edges/sec (incl time for L=tril(A))
rate      15.49 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-1045506-262144_adj.tsv.gz
--------------------------------------------------------------
matrix 262144 by 262144, 2091012 entries, from stdin

total time to read A matrix:       1.521119 sec

n 262144 # edges 1045506
U=triu(A) time:        0.012387 sec

------------------------------------- dot product method:
L=tril(A) time:        0.011489 sec
# triangles 1044484

L'*U time (dot):         0.028924 sec
tricount time:         0.032069 sec (dot product method)
tri+prep time:         0.055944 sec (incl time to compute L and U)
compute C time:        0.028924 sec
reduce (C) time:       0.003144 sec
rate      18.69 million edges/sec (incl time for U=triu(A))
rate      32.60 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.019118 sec
tricount time:         0.022257 sec (saxpy method)
tri+prep time:         0.033745 sec (incl time to compute L)
compute C time:        0.019118 sec
reduce (C) time:       0.003138 sec
rate      30.98 million edges/sec (incl time for L=tril(A))
rate      46.97 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-16764930-4194304_adj.tsv.gz
--------------------------------------------------------------
matrix 4194304 by 4194304, 33529860 entries, from stdin

total time to read A matrix:      22.325090 sec

n 4194304 # edges 16764930
U=triu(A) time:        0.208524 sec

------------------------------------- dot product method:
L=tril(A) time:        0.185038 sec
# triangles 16760836

L'*U time (dot):         0.475066 sec
tricount time:         0.526608 sec (dot product method)
tri+prep time:         0.920169 sec (incl time to compute L and U)
compute C time:        0.475066 sec
reduce (C) time:       0.051541 sec
rate      18.22 million edges/sec (incl time for U=triu(A))
rate      31.84 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.319207 sec
tricount time:         0.370944 sec (saxpy method)
tri+prep time:         0.555982 sec (incl time to compute L)
compute C time:        0.319207 sec
reduce (C) time:       0.051737 sec
rate      30.15 million edges/sec (incl time for L=tril(A))
rate      45.20 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-260610-65536_adj.tsv.gz
--------------------------------------------------------------
matrix 65536 by 65536, 521220 entries, from stdin

total time to read A matrix:       0.369524 sec

n 65536 # edges 260610
U=triu(A) time:        0.003090 sec

------------------------------------- dot product method:
L=tril(A) time:        0.002906 sec
# triangles 260100

L'*U time (dot):         0.007247 sec
tricount time:         0.008036 sec (dot product method)
tri+prep time:         0.014032 sec (incl time to compute L and U)
compute C time:        0.007247 sec
reduce (C) time:       0.000788 sec
rate      18.57 million edges/sec (incl time for U=triu(A))
rate      32.43 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004822 sec
tricount time:         0.005604 sec (saxpy method)
tri+prep time:         0.008511 sec (incl time to compute L)
compute C time:        0.004822 sec
reduce (C) time:       0.000783 sec
rate      30.62 million edges/sec (incl time for L=tril(A))
rate      46.50 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-268386306-67108864_adj.tsv.gz


