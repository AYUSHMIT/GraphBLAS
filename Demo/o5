--------------------------------------------------------------
matrix 48 by 48, 352 entries, from stdin

GraphBLAS matrix: from get_matrix: 
nrows: 48 ncols: 48 max # entries: 352
format: standard CSR vlen: 48 nvec_nonempty: 48 nvec: 48 plen: 48 vdim: 48
hyper_ratio 0.0625
GraphBLAS type:  bool size: 1
number of entries: 352 
row: 0 : 7 entries [0:6]
    column 4: bool 1
    column 5: bool 1
    column 6: bool 1
    column 10: bool 1
    column 18: bool 1
    column 24: bool 1
    column 29: bool 1
row: 1 : 7 entries [7:13]
    column 3: bool 1
    column 5: bool 1
    column 7: bool 1
    column 9: bool 1
    column 19: bool 1
    column 23: bool 1
    column 25: bool 1
row: 2 : 7 entries [14:20]
    column 3: bool 1
    column 4: bool 1
    column 8: bool 1
    column 20: bool 1
    column 22: bool 1
    column 26: bool 1
    column 27: bool 1
row: 3 : 7 entries [21:27]
    column 1: bool 1
    column 2: bool 1
    column 7: bool 1
    column 9: bool 1
    column 21: bool 1
    column 26: bool 1
    column 27: bool 1
row: 4 : 7 entries [28:34]
    column 0: bool 1
    column 2: bool 1
    ...
row: 5 : 7 entries [35:41]
    ...
row: 6 : 7 entries [42:48]
    ...
row: 7 : 7 entries [49:55]
    ...
row: 8 : 7 entries [56:62]
    ...
row: 9 : 7 entries [63:69]
    ...
...

total time to read A matrix:       0.009964 sec

n 48 # edges 176
U=triu(A) time:        0.000028 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000013 sec
AxB_method, descriptor: 1003
C=A*B: nthreads 1 of 1
one thread, method 1003
# triangles 160

L'*U time (dot):         0.000076 sec
tricount time:         0.000092 sec (dot product method)
tri+prep time:         0.000133 sec (incl time to compute L and U)
compute C time:        0.000076 sec
reduce (C) time:       0.000016 sec
rate       1.32 million edges/sec (incl time for U=triu(A))
rate       1.91 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 2 of 2
thread 0 method 1003
thread 1 method 1003
# triangles 160

L'*U time (dot):         0.000126 sec (nthreads: 2 speedup 0.603025)
tricount time:         0.000129 sec (dot product method)
tri+prep time:         0.000170 sec (incl time to compute L and U)
compute C time:        0.000126 sec
reduce (C) time:       0.000003 sec
rate       1.03 million edges/sec (incl time for U=triu(A))
rate       1.36 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 3 of 3
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
# triangles 160

L'*U time (dot):         0.000079 sec (nthreads: 3 speedup 0.960843)
tricount time:         0.000081 sec (dot product method)
tri+prep time:         0.000122 sec (incl time to compute L and U)
compute C time:        0.000079 sec
reduce (C) time:       0.000002 sec
rate       1.44 million edges/sec (incl time for U=triu(A))
rate       2.17 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 4 of 4
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
# triangles 160

L'*U time (dot):         0.000097 sec (nthreads: 4 speedup 0.783784)
tricount time:         0.000099 sec (dot product method)
tri+prep time:         0.000140 sec (incl time to compute L and U)
compute C time:        0.000097 sec
reduce (C) time:       0.000002 sec
rate       1.26 million edges/sec (incl time for U=triu(A))
rate       1.78 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 5 of 5
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
# triangles 160

L'*U time (dot):         0.000068 sec (nthreads: 5 speedup 1.11538)
tricount time:         0.000070 sec (dot product method)
tri+prep time:         0.000111 sec (incl time to compute L and U)
compute C time:        0.000068 sec
reduce (C) time:       0.000002 sec
rate       1.58 million edges/sec (incl time for U=triu(A))
rate       2.51 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 6 of 6
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
# triangles 160

L'*U time (dot):         0.000113 sec (nthreads: 6 speedup 0.674419)
tricount time:         0.000116 sec (dot product method)
tri+prep time:         0.000157 sec (incl time to compute L and U)
compute C time:        0.000113 sec
reduce (C) time:       0.000003 sec
rate       1.12 million edges/sec (incl time for U=triu(A))
rate       1.52 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 7 of 7
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
# triangles 160

L'*U time (dot):         0.000076 sec (nthreads: 7 speedup 1.00314)
tricount time:         0.000078 sec (dot product method)
tri+prep time:         0.000119 sec (incl time to compute L and U)
compute C time:        0.000076 sec
reduce (C) time:       0.000002 sec
rate       1.48 million edges/sec (incl time for U=triu(A))
rate       2.26 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 8 of 8
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
# triangles 160

L'*U time (dot):         0.000105 sec (nthreads: 8 speedup 0.725)
tricount time:         0.000107 sec (dot product method)
tri+prep time:         0.000148 sec (incl time to compute L and U)
compute C time:        0.000105 sec
reduce (C) time:       0.000002 sec
rate       1.19 million edges/sec (incl time for U=triu(A))
rate       1.65 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 9 of 9
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
# triangles 160

L'*U time (dot):         0.000096 sec (nthreads: 9 speedup 0.793532)
tricount time:         0.000097 sec (dot product method)
tri+prep time:         0.000138 sec (incl time to compute L and U)
compute C time:        0.000096 sec
reduce (C) time:       0.000001 sec
rate       1.27 million edges/sec (incl time for U=triu(A))
rate       1.81 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 10 of 10
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
# triangles 160

L'*U time (dot):         0.000094 sec (nthreads: 10 speedup 0.809645)
tricount time:         0.000096 sec (dot product method)
tri+prep time:         0.000137 sec (incl time to compute L and U)
compute C time:        0.000094 sec
reduce (C) time:       0.000002 sec
rate       1.28 million edges/sec (incl time for U=triu(A))
rate       1.84 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 11 of 11
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
# triangles 160

L'*U time (dot):         0.000094 sec (nthreads: 11 speedup 0.807595)
tricount time:         0.000096 sec (dot product method)
tri+prep time:         0.000137 sec (incl time to compute L and U)
compute C time:        0.000094 sec
reduce (C) time:       0.000002 sec
rate       1.28 million edges/sec (incl time for U=triu(A))
rate       1.83 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 12 of 12
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
# triangles 160

L'*U time (dot):         0.000150 sec (nthreads: 12 speedup 0.507154)
tricount time:         0.000153 sec (dot product method)
tri+prep time:         0.000194 sec (incl time to compute L and U)
compute C time:        0.000150 sec
reduce (C) time:       0.000003 sec
rate       0.91 million edges/sec (incl time for U=triu(A))
rate       1.15 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 13 of 13
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
# triangles 160

L'*U time (dot):         0.000177 sec (nthreads: 13 speedup 0.429919)
tricount time:         0.000180 sec (dot product method)
tri+prep time:         0.000221 sec (incl time to compute L and U)
compute C time:        0.000177 sec
reduce (C) time:       0.000003 sec
rate       0.80 million edges/sec (incl time for U=triu(A))
rate       0.98 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 14 of 14
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
# triangles 160

L'*U time (dot):         0.000155 sec (nthreads: 14 speedup 0.490769)
tricount time:         0.000158 sec (dot product method)
tri+prep time:         0.000199 sec (incl time to compute L and U)
compute C time:        0.000155 sec
reduce (C) time:       0.000003 sec
rate       0.88 million edges/sec (incl time for U=triu(A))
rate       1.11 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 15 of 15
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
# triangles 160

L'*U time (dot):         0.000163 sec (nthreads: 15 speedup 0.467057)
tricount time:         0.000165 sec (dot product method)
tri+prep time:         0.000206 sec (incl time to compute L and U)
compute C time:        0.000163 sec
reduce (C) time:       0.000002 sec
rate       0.85 million edges/sec (incl time for U=triu(A))
rate       1.07 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 16 of 16
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
# triangles 160

L'*U time (dot):         0.000178 sec (nthreads: 16 speedup 0.427041)
tricount time:         0.000181 sec (dot product method)
tri+prep time:         0.000222 sec (incl time to compute L and U)
compute C time:        0.000178 sec
reduce (C) time:       0.000003 sec
rate       0.79 million edges/sec (incl time for U=triu(A))
rate       0.97 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 17 of 17
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
# triangles 160

L'*U time (dot):         0.000163 sec (nthreads: 17 speedup 0.466374)
tricount time:         0.000165 sec (dot product method)
tri+prep time:         0.000206 sec (incl time to compute L and U)
compute C time:        0.000163 sec
reduce (C) time:       0.000002 sec
rate       0.85 million edges/sec (incl time for U=triu(A))
rate       1.07 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 18 of 18
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
# triangles 160

L'*U time (dot):         0.000169 sec (nthreads: 18 speedup 0.449929)
tricount time:         0.000172 sec (dot product method)
tri+prep time:         0.000213 sec (incl time to compute L and U)
compute C time:        0.000169 sec
reduce (C) time:       0.000003 sec
rate       0.83 million edges/sec (incl time for U=triu(A))
rate       1.02 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 19 of 19
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
thread 18 method 1003
# triangles 160

L'*U time (dot):         0.000174 sec (nthreads: 19 speedup 0.437586)
tricount time:         0.000176 sec (dot product method)
tri+prep time:         0.000217 sec (incl time to compute L and U)
compute C time:        0.000174 sec
reduce (C) time:       0.000002 sec
rate       0.81 million edges/sec (incl time for U=triu(A))
rate       1.00 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 20 of 20
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
thread 18 method 1003
thread 19 method 1003
# triangles 160

L'*U time (dot):         0.000168 sec (nthreads: 20 speedup 0.453125)
tricount time:         0.000170 sec (dot product method)
tri+prep time:         0.000211 sec (incl time to compute L and U)
compute C time:        0.000168 sec
reduce (C) time:       0.000002 sec
rate       0.83 million edges/sec (incl time for U=triu(A))
rate       1.04 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 21 of 21
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
thread 18 method 1003
thread 19 method 1003
thread 20 method 1003
# triangles 160

L'*U time (dot):         0.000191 sec (nthreads: 21 speedup 0.398252)
tricount time:         0.000193 sec (dot product method)
tri+prep time:         0.000234 sec (incl time to compute L and U)
compute C time:        0.000191 sec
reduce (C) time:       0.000002 sec
rate       0.75 million edges/sec (incl time for U=triu(A))
rate       0.91 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 22 of 22
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
thread 18 method 1003
thread 19 method 1003
thread 20 method 1003
thread 21 method 1003
# triangles 160

L'*U time (dot):         0.000193 sec (nthreads: 22 speedup 0.394314)
tricount time:         0.000196 sec (dot product method)
tri+prep time:         0.000237 sec (incl time to compute L and U)
compute C time:        0.000193 sec
reduce (C) time:       0.000003 sec
rate       0.74 million edges/sec (incl time for U=triu(A))
rate       0.90 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 23 of 23
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
thread 18 method 1003
thread 19 method 1003
thread 20 method 1003
thread 21 method 1003
thread 22 method 1003
# triangles 160

L'*U time (dot):         0.000167 sec (nthreads: 23 speedup 0.455714)
tricount time:         0.000169 sec (dot product method)
tri+prep time:         0.000210 sec (incl time to compute L and U)
compute C time:        0.000167 sec
reduce (C) time:       0.000002 sec
rate       0.84 million edges/sec (incl time for U=triu(A))
rate       1.04 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 24 of 24
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
thread 18 method 1003
thread 19 method 1003
thread 20 method 1003
thread 21 method 1003
thread 22 method 1003
thread 23 method 1003
# triangles 160

L'*U time (dot):         0.000173 sec (nthreads: 24 speedup 0.44)
tricount time:         0.000176 sec (dot product method)
tri+prep time:         0.000217 sec (incl time to compute L and U)
compute C time:        0.000173 sec
reduce (C) time:       0.000003 sec
rate       0.81 million edges/sec (incl time for U=triu(A))
rate       1.00 million edges/sec (just tricount itself)


----------------------------------- saxpy method:
AxB_method, descriptor: 1001
C=A*B: nthreads 1 of 1
one thread, method 1001

C<L>=L*L time (saxpy):         0.000056 sec
tricount time:         0.000058 sec (saxpy method)
tri+prep time:         0.000071 sec (incl time to compute L)
compute C time:        0.000056 sec
reduce (C) time:       0.000002 sec
rate       2.47 million edges/sec (incl time for L=tril(A))
rate       3.03 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 2 of 2
flop count 410
thread 0 method 1001
thread 1 method 1001

C<L>=L*L time (saxpy):         0.000064 sec (nthreads: 2 speedup 0.876866)
tricount time:         0.000066 sec (saxpy method)
tri+prep time:         0.000079 sec (incl time to compute L)
compute C time:        0.000064 sec
reduce (C) time:       0.000002 sec
rate       2.23 million edges/sec (incl time for L=tril(A))
rate       2.67 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 3 of 3
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001

C<L>=L*L time (saxpy):         0.000050 sec (nthreads: 3 speedup 1.11905)
tricount time:         0.000052 sec (saxpy method)
tri+prep time:         0.000065 sec (incl time to compute L)
compute C time:        0.000050 sec
reduce (C) time:       0.000002 sec
rate       2.69 million edges/sec (incl time for L=tril(A))
rate       3.37 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 4 of 4
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001

C<L>=L*L time (saxpy):         0.000055 sec (nthreads: 4 speedup 1.02174)
tricount time:         0.000056 sec (saxpy method)
tri+prep time:         0.000069 sec (incl time to compute L)
compute C time:        0.000055 sec
reduce (C) time:       0.000001 sec
rate       2.55 million edges/sec (incl time for L=tril(A))
rate       3.15 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 5 of 5
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001

C<L>=L*L time (saxpy):         0.000065 sec (nthreads: 5 speedup 0.860806)
tricount time:         0.000068 sec (saxpy method)
tri+prep time:         0.000081 sec (incl time to compute L)
compute C time:        0.000065 sec
reduce (C) time:       0.000003 sec
rate       2.17 million edges/sec (incl time for L=tril(A))
rate       2.59 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 6 of 6
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001

C<L>=L*L time (saxpy):         0.000068 sec (nthreads: 6 speedup 0.824561)
tricount time:         0.000070 sec (saxpy method)
tri+prep time:         0.000083 sec (incl time to compute L)
compute C time:        0.000068 sec
reduce (C) time:       0.000002 sec
rate       2.12 million edges/sec (incl time for L=tril(A))
rate       2.51 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 7 of 7
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001

C<L>=L*L time (saxpy):         0.000064 sec (nthreads: 7 speedup 0.873606)
tricount time:         0.000066 sec (saxpy method)
tri+prep time:         0.000079 sec (incl time to compute L)
compute C time:        0.000064 sec
reduce (C) time:       0.000002 sec
rate       2.22 million edges/sec (incl time for L=tril(A))
rate       2.66 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 8 of 8
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001

C<L>=L*L time (saxpy):         0.000092 sec (nthreads: 8 speedup 0.608808)
tricount time:         0.000094 sec (saxpy method)
tri+prep time:         0.000107 sec (incl time to compute L)
compute C time:        0.000092 sec
reduce (C) time:       0.000002 sec
rate       1.64 million edges/sec (incl time for L=tril(A))
rate       1.87 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 9 of 9
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001

C<L>=L*L time (saxpy):         0.000093 sec (nthreads: 9 speedup 0.602564)
tricount time:         0.000095 sec (saxpy method)
tri+prep time:         0.000108 sec (incl time to compute L)
compute C time:        0.000093 sec
reduce (C) time:       0.000002 sec
rate       1.63 million edges/sec (incl time for L=tril(A))
rate       1.85 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 10 of 10
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001

C<L>=L*L time (saxpy):         0.000089 sec (nthreads: 10 speedup 0.628342)
tricount time:         0.000091 sec (saxpy method)
tri+prep time:         0.000104 sec (incl time to compute L)
compute C time:        0.000089 sec
reduce (C) time:       0.000002 sec
rate       1.69 million edges/sec (incl time for L=tril(A))
rate       1.93 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 11 of 11
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001

C<L>=L*L time (saxpy):         0.000100 sec (nthreads: 11 speedup 0.560859)
tricount time:         0.000102 sec (saxpy method)
tri+prep time:         0.000115 sec (incl time to compute L)
compute C time:        0.000100 sec
reduce (C) time:       0.000002 sec
rate       1.53 million edges/sec (incl time for L=tril(A))
rate       1.72 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 12 of 12
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001

C<L>=L*L time (saxpy):         0.000179 sec (nthreads: 12 speedup 0.313333)
tricount time:         0.000182 sec (saxpy method)
tri+prep time:         0.000195 sec (incl time to compute L)
compute C time:        0.000179 sec
reduce (C) time:       0.000003 sec
rate       0.90 million edges/sec (incl time for L=tril(A))
rate       0.97 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 13 of 13
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001

C<L>=L*L time (saxpy):         0.000176 sec (nthreads: 13 speedup 0.318428)
tricount time:         0.000179 sec (saxpy method)
tri+prep time:         0.000192 sec (incl time to compute L)
compute C time:        0.000176 sec
reduce (C) time:       0.000003 sec
rate       0.92 million edges/sec (incl time for L=tril(A))
rate       0.98 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 14 of 14
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001

C<L>=L*L time (saxpy):         0.000189 sec (nthreads: 14 speedup 0.296343)
tricount time:         0.000192 sec (saxpy method)
tri+prep time:         0.000205 sec (incl time to compute L)
compute C time:        0.000189 sec
reduce (C) time:       0.000003 sec
rate       0.86 million edges/sec (incl time for L=tril(A))
rate       0.92 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 15 of 15
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001

C<L>=L*L time (saxpy):         0.000193 sec (nthreads: 15 speedup 0.290123)
tricount time:         0.000195 sec (saxpy method)
tri+prep time:         0.000208 sec (incl time to compute L)
compute C time:        0.000193 sec
reduce (C) time:       0.000002 sec
rate       0.85 million edges/sec (incl time for L=tril(A))
rate       0.90 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 16 of 16
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001

C<L>=L*L time (saxpy):         0.000195 sec (nthreads: 16 speedup 0.287286)
tricount time:         0.000196 sec (saxpy method)
tri+prep time:         0.000209 sec (incl time to compute L)
compute C time:        0.000195 sec
reduce (C) time:       0.000001 sec
rate       0.84 million edges/sec (incl time for L=tril(A))
rate       0.90 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 17 of 17
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001

C<L>=L*L time (saxpy):         0.000201 sec (nthreads: 17 speedup 0.278766)
tricount time:         0.000203 sec (saxpy method)
tri+prep time:         0.000216 sec (incl time to compute L)
compute C time:        0.000201 sec
reduce (C) time:       0.000002 sec
rate       0.81 million edges/sec (incl time for L=tril(A))
rate       0.87 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 18 of 18
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001

C<L>=L*L time (saxpy):         0.000196 sec (nthreads: 18 speedup 0.285888)
tricount time:         0.000198 sec (saxpy method)
tri+prep time:         0.000211 sec (incl time to compute L)
compute C time:        0.000196 sec
reduce (C) time:       0.000002 sec
rate       0.83 million edges/sec (incl time for L=tril(A))
rate       0.89 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 19 of 19
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001
thread 18 method 1001

C<L>=L*L time (saxpy):         0.000197 sec (nthreads: 19 speedup 0.284504)
tricount time:         0.000200 sec (saxpy method)
tri+prep time:         0.000213 sec (incl time to compute L)
compute C time:        0.000197 sec
reduce (C) time:       0.000003 sec
rate       0.83 million edges/sec (incl time for L=tril(A))
rate       0.88 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 20 of 20
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001
thread 18 method 1001
thread 19 method 1001

C<L>=L*L time (saxpy):         0.000212 sec (nthreads: 20 speedup 0.264342)
tricount time:         0.000214 sec (saxpy method)
tri+prep time:         0.000227 sec (incl time to compute L)
compute C time:        0.000212 sec
reduce (C) time:       0.000002 sec
rate       0.78 million edges/sec (incl time for L=tril(A))
rate       0.82 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 21 of 21
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001
thread 18 method 1001
thread 19 method 1001
thread 20 method 1001

C<L>=L*L time (saxpy):         0.000210 sec (nthreads: 21 speedup 0.266742)
tricount time:         0.000212 sec (saxpy method)
tri+prep time:         0.000225 sec (incl time to compute L)
compute C time:        0.000210 sec
reduce (C) time:       0.000002 sec
rate       0.78 million edges/sec (incl time for L=tril(A))
rate       0.83 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 22 of 22
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001
thread 18 method 1001
thread 19 method 1001
thread 20 method 1001
thread 21 method 1001

C<L>=L*L time (saxpy):         0.000208 sec (nthreads: 22 speedup 0.269187)
tricount time:         0.000210 sec (saxpy method)
tri+prep time:         0.000223 sec (incl time to compute L)
compute C time:        0.000208 sec
reduce (C) time:       0.000002 sec
rate       0.79 million edges/sec (incl time for L=tril(A))
rate       0.84 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 23 of 23
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001
thread 18 method 1001
thread 19 method 1001
thread 20 method 1001
thread 21 method 1001
thread 22 method 1001

C<L>=L*L time (saxpy):         0.000205 sec (nthreads: 23 speedup 0.273256)
tricount time:         0.000207 sec (saxpy method)
tri+prep time:         0.000220 sec (incl time to compute L)
compute C time:        0.000205 sec
reduce (C) time:       0.000002 sec
rate       0.80 million edges/sec (incl time for L=tril(A))
rate       0.85 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 24 of 24
flop count 410
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001
thread 18 method 1001
thread 19 method 1001
thread 20 method 1001
thread 21 method 1001
thread 22 method 1001
thread 23 method 1001

C<L>=L*L time (saxpy):         0.000208 sec (nthreads: 24 speedup 0.269187)
tricount time:         0.000210 sec (saxpy method)
tri+prep time:         0.000223 sec (incl time to compute L)
compute C time:        0.000208 sec
reduce (C) time:       0.000002 sec
rate       0.79 million edges/sec (incl time for L=tril(A))
rate       0.84 million edges/sec (just tricount itself)


--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 1 time 6.844 sec

GraphBLAS matrix: from get_matrix: 
nrows: 100000 ncols: 100000 max # entries: 19980330
format: standard CSR vlen: 100000 nvec_nonempty: 100000 nvec: 100000 plen: 100000 vdim: 100000
hyper_ratio 0.0625
GraphBLAS type:  double size: 8
number of entries: 19980330 
row: 0 : 189 entries [0:188]
    column 68: double 0.661716873588655
    column 778: double 0.346667912736641
    column 1801: double 0.371952817962016
    column 1839: double 0.197836379076741
    column 3356: double 0.878444087311034
    column 3756: double 0.217022247656947
    column 4441: double 0.2577766982832
    column 4808: double 0.392707915752597
    column 4922: double 0.0962031972027673
    column 5075: double 0.691830102660204
    column 6296: double 0.917483099015425
    column 7151: double 0.193326447087741
    column 7221: double 0.230494023532692
    column 8657: double 0.934093089488637
    column 9473: double 0.795621154107574
    column 9524: double 0.0817629687243753
    column 9648: double 0.357546753659551
    column 11313: double 0.0928425661313169
    column 11744: double 0.444733012853217
    column 12263: double 0.615758200269077
    column 12332: double 0.251131194044459
    column 13111: double 0.219714040656976
    column 13699: double 0.761268198442996
    column 14471: double 0.123158921695327
    column 14892: double 0.85213404597076
    column 15591: double 0.442234173393239
    column 16106: double 0.422217457293673
    column 16346: double 0.705855402008225
    column 16403: double 0.434678226736306
    column 16612: double 0.994128715640082
    ...
row: 1 : 163 entries [189:351]
    ...
row: 2 : 201 entries [352:552]
    ...
row: 3 : 205 entries [553:757]
    ...
row: 4 : 214 entries [758:971]
    ...
row: 5 : 193 entries [972:1164]
    ...
row: 6 : 215 entries [1165:1379]
    ...
row: 7 : 195 entries [1380:1574]
    ...
row: 8 : 210 entries [1575:1784]
    ...
row: 9 : 205 entries [1785:1989]
    ...
...

total time to read A matrix:       7.132793 sec

n 100000 # edges 9990165
U=triu(A) time:        0.161296 sec

------------------------------------- dot product method:
L=tril(A) time:        0.146104 sec
AxB_method, descriptor: 1003
C=A*B: nthreads 1 of 1
one thread, method 1003
# triangles 1330131

L'*U time (dot):         8.706893 sec
tricount time:         8.714450 sec (dot product method)
tri+prep time:         9.021850 sec (incl time to compute L and U)
compute C time:        8.706893 sec
reduce (C) time:       0.007557 sec
rate       1.11 million edges/sec (incl time for U=triu(A))
rate       1.15 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 2 of 2
thread 0 method 1003
thread 1 method 1003
# triangles 1330131

L'*U time (dot):         6.618036 sec (nthreads: 2 speedup 1.31563)
tricount time:         6.628305 sec (dot product method)
tri+prep time:         6.935705 sec (incl time to compute L and U)
compute C time:        6.618036 sec
reduce (C) time:       0.010269 sec
rate       1.44 million edges/sec (incl time for U=triu(A))
rate       1.51 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 3 of 3
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
# triangles 1330131

L'*U time (dot):         4.369255 sec (nthreads: 3 speedup 1.99276)
tricount time:         4.374507 sec (dot product method)
tri+prep time:         4.681907 sec (incl time to compute L and U)
compute C time:        4.369255 sec
reduce (C) time:       0.005252 sec
rate       2.13 million edges/sec (incl time for U=triu(A))
rate       2.28 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 4 of 4
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
# triangles 1330131

L'*U time (dot):         3.351614 sec (nthreads: 4 speedup 2.59782)
tricount time:         3.363639 sec (dot product method)
tri+prep time:         3.671039 sec (incl time to compute L and U)
compute C time:        3.351614 sec
reduce (C) time:       0.012025 sec
rate       2.72 million edges/sec (incl time for U=triu(A))
rate       2.97 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 5 of 5
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
# triangles 1330131

L'*U time (dot):         2.598430 sec (nthreads: 5 speedup 3.35083)
tricount time:         2.603812 sec (dot product method)
tri+prep time:         2.911212 sec (incl time to compute L and U)
compute C time:        2.598430 sec
reduce (C) time:       0.005382 sec
rate       3.43 million edges/sec (incl time for U=triu(A))
rate       3.84 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 6 of 6
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
# triangles 1330131

L'*U time (dot):         2.226084 sec (nthreads: 6 speedup 3.9113)
tricount time:         2.231761 sec (dot product method)
tri+prep time:         2.539161 sec (incl time to compute L and U)
compute C time:        2.226084 sec
reduce (C) time:       0.005677 sec
rate       3.93 million edges/sec (incl time for U=triu(A))
rate       4.48 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 7 of 7
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
# triangles 1330131

L'*U time (dot):         1.989932 sec (nthreads: 7 speedup 4.37547)
tricount time:         1.995567 sec (dot product method)
tri+prep time:         2.302967 sec (incl time to compute L and U)
compute C time:        1.989932 sec
reduce (C) time:       0.005635 sec
rate       4.34 million edges/sec (incl time for U=triu(A))
rate       5.01 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 8 of 8
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
# triangles 1330131

L'*U time (dot):         1.719587 sec (nthreads: 8 speedup 5.06336)
tricount time:         1.725280 sec (dot product method)
tri+prep time:         2.032680 sec (incl time to compute L and U)
compute C time:        1.719587 sec
reduce (C) time:       0.005693 sec
rate       4.91 million edges/sec (incl time for U=triu(A))
rate       5.79 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 9 of 9
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
# triangles 1330131

L'*U time (dot):         1.575621 sec (nthreads: 9 speedup 5.52601)
tricount time:         1.581331 sec (dot product method)
tri+prep time:         1.888731 sec (incl time to compute L and U)
compute C time:        1.575621 sec
reduce (C) time:       0.005710 sec
rate       5.29 million edges/sec (incl time for U=triu(A))
rate       6.32 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 10 of 10
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
# triangles 1330131

L'*U time (dot):         1.409287 sec (nthreads: 10 speedup 6.17823)
tricount time:         1.414981 sec (dot product method)
tri+prep time:         1.722381 sec (incl time to compute L and U)
compute C time:        1.409287 sec
reduce (C) time:       0.005694 sec
rate       5.80 million edges/sec (incl time for U=triu(A))
rate       7.06 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 11 of 11
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
# triangles 1330131

L'*U time (dot):         1.339353 sec (nthreads: 11 speedup 6.50082)
tricount time:         1.345074 sec (dot product method)
tri+prep time:         1.652474 sec (incl time to compute L and U)
compute C time:        1.339353 sec
reduce (C) time:       0.005721 sec
rate       6.05 million edges/sec (incl time for U=triu(A))
rate       7.43 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 12 of 12
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
# triangles 1330131

L'*U time (dot):         1.201230 sec (nthreads: 12 speedup 7.24831)
tricount time:         1.206931 sec (dot product method)
tri+prep time:         1.514331 sec (incl time to compute L and U)
compute C time:        1.201230 sec
reduce (C) time:       0.005701 sec
rate       6.60 million edges/sec (incl time for U=triu(A))
rate       8.28 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 13 of 13
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
# triangles 1330131

L'*U time (dot):         1.113108 sec (nthreads: 13 speedup 7.82215)
tricount time:         1.118799 sec (dot product method)
tri+prep time:         1.426199 sec (incl time to compute L and U)
compute C time:        1.113108 sec
reduce (C) time:       0.005691 sec
rate       7.00 million edges/sec (incl time for U=triu(A))
rate       8.93 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 14 of 14
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
# triangles 1330131

L'*U time (dot):         1.026592 sec (nthreads: 14 speedup 8.48136)
tricount time:         1.032286 sec (dot product method)
tri+prep time:         1.339686 sec (incl time to compute L and U)
compute C time:        1.026592 sec
reduce (C) time:       0.005694 sec
rate       7.46 million edges/sec (incl time for U=triu(A))
rate       9.68 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 15 of 15
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
# triangles 1330131

L'*U time (dot):         0.961355 sec (nthreads: 15 speedup 9.0569)
tricount time:         0.967047 sec (dot product method)
tri+prep time:         1.274447 sec (incl time to compute L and U)
compute C time:        0.961355 sec
reduce (C) time:       0.005692 sec
rate       7.84 million edges/sec (incl time for U=triu(A))
rate      10.33 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 16 of 16
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
# triangles 1330131

L'*U time (dot):         0.900045 sec (nthreads: 16 speedup 9.67384)
tricount time:         0.905726 sec (dot product method)
tri+prep time:         1.213126 sec (incl time to compute L and U)
compute C time:        0.900045 sec
reduce (C) time:       0.005681 sec
rate       8.24 million edges/sec (incl time for U=triu(A))
rate      11.03 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 17 of 17
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
# triangles 1330131

L'*U time (dot):         0.844002 sec (nthreads: 17 speedup 10.3162)
tricount time:         0.849693 sec (dot product method)
tri+prep time:         1.157093 sec (incl time to compute L and U)
compute C time:        0.844002 sec
reduce (C) time:       0.005691 sec
rate       8.63 million edges/sec (incl time for U=triu(A))
rate      11.76 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 18 of 18
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
# triangles 1330131

L'*U time (dot):         0.799291 sec (nthreads: 18 speedup 10.8933)
tricount time:         0.805002 sec (dot product method)
tri+prep time:         1.112402 sec (incl time to compute L and U)
compute C time:        0.799291 sec
reduce (C) time:       0.005711 sec
rate       8.98 million edges/sec (incl time for U=triu(A))
rate      12.41 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 19 of 19
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
thread 18 method 1003
# triangles 1330131

L'*U time (dot):         0.764101 sec (nthreads: 19 speedup 11.395)
tricount time:         0.769777 sec (dot product method)
tri+prep time:         1.077177 sec (incl time to compute L and U)
compute C time:        0.764101 sec
reduce (C) time:       0.005676 sec
rate       9.27 million edges/sec (incl time for U=triu(A))
rate      12.98 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 20 of 20
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
thread 18 method 1003
thread 19 method 1003
# triangles 1330131

L'*U time (dot):         0.725025 sec (nthreads: 20 speedup 12.0091)
tricount time:         0.730719 sec (dot product method)
tri+prep time:         1.038119 sec (incl time to compute L and U)
compute C time:        0.725025 sec
reduce (C) time:       0.005694 sec
rate       9.62 million edges/sec (incl time for U=triu(A))
rate      13.67 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 21 of 21
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
thread 18 method 1003
thread 19 method 1003
thread 20 method 1003
# triangles 1330131

L'*U time (dot):         0.697151 sec (nthreads: 21 speedup 12.4893)
tricount time:         0.702838 sec (dot product method)
tri+prep time:         1.010238 sec (incl time to compute L and U)
compute C time:        0.697151 sec
reduce (C) time:       0.005687 sec
rate       9.89 million edges/sec (incl time for U=triu(A))
rate      14.21 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 22 of 22
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
thread 18 method 1003
thread 19 method 1003
thread 20 method 1003
thread 21 method 1003
# triangles 1330131

L'*U time (dot):         0.663326 sec (nthreads: 22 speedup 13.1261)
tricount time:         0.669027 sec (dot product method)
tri+prep time:         0.976427 sec (incl time to compute L and U)
compute C time:        0.663326 sec
reduce (C) time:       0.005701 sec
rate      10.23 million edges/sec (incl time for U=triu(A))
rate      14.93 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 23 of 23
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
thread 18 method 1003
thread 19 method 1003
thread 20 method 1003
thread 21 method 1003
thread 22 method 1003
# triangles 1330131

L'*U time (dot):         0.695688 sec (nthreads: 23 speedup 12.5155)
tricount time:         0.701372 sec (dot product method)
tri+prep time:         1.008772 sec (incl time to compute L and U)
compute C time:        0.695688 sec
reduce (C) time:       0.005684 sec
rate       9.90 million edges/sec (incl time for U=triu(A))
rate      14.24 million edges/sec (just tricount itself)

AxB_method, descriptor: 1003
C=A*B: nthreads 24 of 24
thread 0 method 1003
thread 1 method 1003
thread 2 method 1003
thread 3 method 1003
thread 4 method 1003
thread 5 method 1003
thread 6 method 1003
thread 7 method 1003
thread 8 method 1003
thread 9 method 1003
thread 10 method 1003
thread 11 method 1003
thread 12 method 1003
thread 13 method 1003
thread 14 method 1003
thread 15 method 1003
thread 16 method 1003
thread 17 method 1003
thread 18 method 1003
thread 19 method 1003
thread 20 method 1003
thread 21 method 1003
thread 22 method 1003
thread 23 method 1003
# triangles 1330131

L'*U time (dot):         0.621476 sec (nthreads: 24 speedup 14.01)
tricount time:         0.635297 sec (dot product method)
tri+prep time:         0.942697 sec (incl time to compute L and U)
compute C time:        0.621476 sec
reduce (C) time:       0.013821 sec
rate      10.60 million edges/sec (incl time for U=triu(A))
rate      15.73 million edges/sec (just tricount itself)


----------------------------------- saxpy method:
AxB_method, descriptor: 1001
C=A*B: nthreads 1 of 1
one thread, method 1001

C<L>=L*L time (saxpy):         2.936499 sec
tricount time:         2.943819 sec (saxpy method)
tri+prep time:         3.089923 sec (incl time to compute L)
compute C time:        2.936499 sec
reduce (C) time:       0.007320 sec
rate       3.23 million edges/sec (incl time for L=tril(A))
rate       3.39 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 2 of 2
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001

C<L>=L*L time (saxpy):         2.059999 sec (nthreads: 2 speedup 1.42549)
tricount time:         2.066613 sec (saxpy method)
tri+prep time:         2.212717 sec (incl time to compute L)
compute C time:        2.059999 sec
reduce (C) time:       0.006614 sec
rate       4.51 million edges/sec (incl time for L=tril(A))
rate       4.83 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 3 of 3
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001

C<L>=L*L time (saxpy):         1.415776 sec (nthreads: 3 speedup 2.07413)
tricount time:         1.420993 sec (saxpy method)
tri+prep time:         1.567097 sec (incl time to compute L)
compute C time:        1.415776 sec
reduce (C) time:       0.005217 sec
rate       6.37 million edges/sec (incl time for L=tril(A))
rate       7.03 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 4 of 4
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001

C<L>=L*L time (saxpy):         0.922924 sec (nthreads: 4 speedup 3.18173)
tricount time:         0.928077 sec (saxpy method)
tri+prep time:         1.074181 sec (incl time to compute L)
compute C time:        0.922924 sec
reduce (C) time:       0.005153 sec
rate       9.30 million edges/sec (incl time for L=tril(A))
rate      10.76 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 5 of 5
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001

C<L>=L*L time (saxpy):         0.769484 sec (nthreads: 5 speedup 3.81619)
tricount time:         0.774644 sec (saxpy method)
tri+prep time:         0.920748 sec (incl time to compute L)
compute C time:        0.769484 sec
reduce (C) time:       0.005160 sec
rate      10.85 million edges/sec (incl time for L=tril(A))
rate      12.90 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 6 of 6
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001

C<L>=L*L time (saxpy):         0.645209 sec (nthreads: 6 speedup 4.55124)
tricount time:         0.650487 sec (saxpy method)
tri+prep time:         0.796591 sec (incl time to compute L)
compute C time:        0.645209 sec
reduce (C) time:       0.005278 sec
rate      12.54 million edges/sec (incl time for L=tril(A))
rate      15.36 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 7 of 7
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001

C<L>=L*L time (saxpy):         0.575400 sec (nthreads: 7 speedup 5.10341)
tricount time:         0.581112 sec (saxpy method)
tri+prep time:         0.727216 sec (incl time to compute L)
compute C time:        0.575400 sec
reduce (C) time:       0.005712 sec
rate      13.74 million edges/sec (incl time for L=tril(A))
rate      17.19 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 8 of 8
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001

C<L>=L*L time (saxpy):         0.512740 sec (nthreads: 8 speedup 5.72707)
tricount time:         0.518425 sec (saxpy method)
tri+prep time:         0.664529 sec (incl time to compute L)
compute C time:        0.512740 sec
reduce (C) time:       0.005685 sec
rate      15.03 million edges/sec (incl time for L=tril(A))
rate      19.27 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 9 of 9
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001

C<L>=L*L time (saxpy):         0.452085 sec (nthreads: 9 speedup 6.49546)
tricount time:         0.457787 sec (saxpy method)
tri+prep time:         0.603891 sec (incl time to compute L)
compute C time:        0.452085 sec
reduce (C) time:       0.005702 sec
rate      16.54 million edges/sec (incl time for L=tril(A))
rate      21.82 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 10 of 10
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001

C<L>=L*L time (saxpy):         0.422355 sec (nthreads: 10 speedup 6.95268)
tricount time:         0.428042 sec (saxpy method)
tri+prep time:         0.574146 sec (incl time to compute L)
compute C time:        0.422355 sec
reduce (C) time:       0.005687 sec
rate      17.40 million edges/sec (incl time for L=tril(A))
rate      23.34 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 11 of 11
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001

C<L>=L*L time (saxpy):         0.386085 sec (nthreads: 11 speedup 7.60584)
tricount time:         0.391767 sec (saxpy method)
tri+prep time:         0.537871 sec (incl time to compute L)
compute C time:        0.386085 sec
reduce (C) time:       0.005682 sec
rate      18.57 million edges/sec (incl time for L=tril(A))
rate      25.50 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 12 of 12
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001

C<L>=L*L time (saxpy):         0.355004 sec (nthreads: 12 speedup 8.27173)
tricount time:         0.360705 sec (saxpy method)
tri+prep time:         0.506809 sec (incl time to compute L)
compute C time:        0.355004 sec
reduce (C) time:       0.005701 sec
rate      19.71 million edges/sec (incl time for L=tril(A))
rate      27.70 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 13 of 13
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001

C<L>=L*L time (saxpy):         0.329820 sec (nthreads: 13 speedup 8.90334)
tricount time:         0.335505 sec (saxpy method)
tri+prep time:         0.481609 sec (incl time to compute L)
compute C time:        0.329820 sec
reduce (C) time:       0.005685 sec
rate      20.74 million edges/sec (incl time for L=tril(A))
rate      29.78 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 14 of 14
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001

C<L>=L*L time (saxpy):         0.315517 sec (nthreads: 14 speedup 9.30695)
tricount time:         0.321186 sec (saxpy method)
tri+prep time:         0.467290 sec (incl time to compute L)
compute C time:        0.315517 sec
reduce (C) time:       0.005669 sec
rate      21.38 million edges/sec (incl time for L=tril(A))
rate      31.10 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 15 of 15
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001

C<L>=L*L time (saxpy):         0.293797 sec (nthreads: 15 speedup 9.99499)
tricount time:         0.299483 sec (saxpy method)
tri+prep time:         0.445587 sec (incl time to compute L)
compute C time:        0.293797 sec
reduce (C) time:       0.005686 sec
rate      22.42 million edges/sec (incl time for L=tril(A))
rate      33.36 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 16 of 16
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001

C<L>=L*L time (saxpy):         0.278512 sec (nthreads: 16 speedup 10.5435)
tricount time:         0.284185 sec (saxpy method)
tri+prep time:         0.430289 sec (incl time to compute L)
compute C time:        0.278512 sec
reduce (C) time:       0.005673 sec
rate      23.22 million edges/sec (incl time for L=tril(A))
rate      35.15 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 17 of 17
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001

C<L>=L*L time (saxpy):         0.269554 sec (nthreads: 17 speedup 10.8939)
tricount time:         0.275231 sec (saxpy method)
tri+prep time:         0.421335 sec (incl time to compute L)
compute C time:        0.269554 sec
reduce (C) time:       0.005677 sec
rate      23.71 million edges/sec (incl time for L=tril(A))
rate      36.30 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 18 of 18
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001

C<L>=L*L time (saxpy):         0.255752 sec (nthreads: 18 speedup 11.4818)
tricount time:         0.261435 sec (saxpy method)
tri+prep time:         0.407539 sec (incl time to compute L)
compute C time:        0.255752 sec
reduce (C) time:       0.005683 sec
rate      24.51 million edges/sec (incl time for L=tril(A))
rate      38.21 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 19 of 19
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001
thread 18 method 1001

C<L>=L*L time (saxpy):         0.242480 sec (nthreads: 19 speedup 12.1103)
tricount time:         0.248185 sec (saxpy method)
tri+prep time:         0.394289 sec (incl time to compute L)
compute C time:        0.242480 sec
reduce (C) time:       0.005705 sec
rate      25.34 million edges/sec (incl time for L=tril(A))
rate      40.25 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 20 of 20
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001
thread 18 method 1001
thread 19 method 1001

C<L>=L*L time (saxpy):         0.235790 sec (nthreads: 20 speedup 12.4539)
tricount time:         0.241449 sec (saxpy method)
tri+prep time:         0.387553 sec (incl time to compute L)
compute C time:        0.235790 sec
reduce (C) time:       0.005659 sec
rate      25.78 million edges/sec (incl time for L=tril(A))
rate      41.38 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 21 of 21
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001
thread 18 method 1001
thread 19 method 1001
thread 20 method 1001

C<L>=L*L time (saxpy):         0.228593 sec (nthreads: 21 speedup 12.846)
tricount time:         0.234265 sec (saxpy method)
tri+prep time:         0.380369 sec (incl time to compute L)
compute C time:        0.228593 sec
reduce (C) time:       0.005672 sec
rate      26.26 million edges/sec (incl time for L=tril(A))
rate      42.64 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 22 of 22
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001
thread 18 method 1001
thread 19 method 1001
thread 20 method 1001
thread 21 method 1001

C<L>=L*L time (saxpy):         0.221145 sec (nthreads: 22 speedup 13.2786)
tricount time:         0.226789 sec (saxpy method)
tri+prep time:         0.372893 sec (incl time to compute L)
compute C time:        0.221145 sec
reduce (C) time:       0.005644 sec
rate      26.79 million edges/sec (incl time for L=tril(A))
rate      44.05 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 23 of 23
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001
thread 18 method 1001
thread 19 method 1001
thread 20 method 1001
thread 21 method 1001
thread 22 method 1001

C<L>=L*L time (saxpy):         0.221037 sec (nthreads: 23 speedup 13.2851)
tricount time:         0.226704 sec (saxpy method)
tri+prep time:         0.372808 sec (incl time to compute L)
compute C time:        0.221037 sec
reduce (C) time:       0.005667 sec
rate      26.80 million edges/sec (incl time for L=tril(A))
rate      44.07 million edges/sec (just tricount itself)

AxB_method, descriptor: 1001
C=A*B: nthreads 24 of 24
flop count 6.65272e+08
thread 0 method 1001
thread 1 method 1001
thread 2 method 1001
thread 3 method 1001
thread 4 method 1001
thread 5 method 1001
thread 6 method 1001
thread 7 method 1001
thread 8 method 1001
thread 9 method 1001
thread 10 method 1001
thread 11 method 1001
thread 12 method 1001
thread 13 method 1001
thread 14 method 1001
thread 15 method 1001
thread 16 method 1001
thread 17 method 1001
thread 18 method 1001
thread 19 method 1001
thread 20 method 1001
thread 21 method 1001
thread 22 method 1001
thread 23 method 1001

C<L>=L*L time (saxpy):         0.213288 sec (nthreads: 24 speedup 13.7678)
tricount time:         0.218975 sec (saxpy method)
tri+prep time:         0.365079 sec (incl time to compute L)
compute C time:        0.213288 sec
reduce (C) time:       0.005687 sec
rate      27.36 million edges/sec (incl time for L=tril(A))
rate      45.62 million edges/sec (just tricount itself)


