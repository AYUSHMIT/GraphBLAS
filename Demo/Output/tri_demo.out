--------------------------------------------------------------
Wathen: nx 4 ny 4 n 65 nz 752 method 0, time: 0.001 sec

total time to read A matrix:       0.000800 sec

n 65 # edges 376
U=triu(A) time:        0.000067 sec
L=tril(A) time:        0.000031 sec

------------------------------------- dot product method:
# triangles 872
L*U' time (dot):         0.000074 sec
tricount time:         0.000113 sec (dot product method)
tri+prep time:         0.000211 sec (incl time to compute L and U)
compute C time:        0.000074 sec
reduce (C) time:       0.000039 sec
rate       1.78 million edges/sec (incl time for U=triu(A))
rate       3.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000037 sec (nthreads: 2 speedup 2.0251)
tricount time:         0.000051 sec (dot product method)
tri+prep time:         0.000149 sec (incl time to compute L and U)
compute C time:        0.000037 sec
reduce (C) time:       0.000015 sec
rate       2.52 million edges/sec (incl time for U=triu(A))
rate       7.34 million edges/sec (just tricount itself)
L*U' time (dot):         0.000034 sec (nthreads: 4 speedup 2.18643)
tricount time:         0.000047 sec (dot product method)
tri+prep time:         0.000145 sec (incl time to compute L and U)
compute C time:        0.000034 sec
reduce (C) time:       0.000013 sec
rate       2.59 million edges/sec (incl time for U=triu(A))
rate       7.96 million edges/sec (just tricount itself)
L*U' time (dot):         0.000032 sec (nthreads: 8 speedup 2.33858)
tricount time:         0.000045 sec (dot product method)
tri+prep time:         0.000142 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000013 sec
rate       2.64 million edges/sec (incl time for U=triu(A))
rate       8.45 million edges/sec (just tricount itself)
L*U' time (dot):         0.000032 sec (nthreads: 16 speedup 2.33248)
tricount time:         0.000045 sec (dot product method)
tri+prep time:         0.000142 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000013 sec
rate       2.64 million edges/sec (incl time for U=triu(A))
rate       8.45 million edges/sec (just tricount itself)
L*U' time (dot):         0.000031 sec (nthreads: 32 speedup 2.35894)
tricount time:         0.000044 sec (dot product method)
tri+prep time:         0.000142 sec (incl time to compute L and U)
compute C time:        0.000031 sec
reduce (C) time:       0.000012 sec
rate       2.65 million edges/sec (incl time for U=triu(A))
rate       8.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.000044 sec
tricount time:         0.000058 sec (dot product method)
tri+prep time:         0.000156 sec (incl time to compute L and U)
compute C time:        0.000044 sec
reduce (C) time:       0.000015 sec
rate       2.41 million edges/sec (incl time for U=triu(A))
rate       6.45 million edges/sec (just tricount itself)
L*U' time (dot):         0.000035 sec (nthreads: 2 speedup 1.25643)
tricount time:         0.000048 sec (dot product method)
tri+prep time:         0.000146 sec (incl time to compute L and U)
compute C time:        0.000035 sec
reduce (C) time:       0.000013 sec
rate       2.58 million edges/sec (incl time for U=triu(A))
rate       7.85 million edges/sec (just tricount itself)
L*U' time (dot):         0.000033 sec (nthreads: 4 speedup 1.32139)
tricount time:         0.000046 sec (dot product method)
tri+prep time:         0.000144 sec (incl time to compute L and U)
compute C time:        0.000033 sec
reduce (C) time:       0.000013 sec
rate       2.61 million edges/sec (incl time for U=triu(A))
rate       8.15 million edges/sec (just tricount itself)
L*U' time (dot):         0.000032 sec (nthreads: 8 speedup 1.34905)
tricount time:         0.000045 sec (dot product method)
tri+prep time:         0.000143 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000012 sec
rate       2.64 million edges/sec (incl time for U=triu(A))
rate       8.39 million edges/sec (just tricount itself)
L*U' time (dot):         0.000032 sec (nthreads: 16 speedup 1.36994)
tricount time:         0.000044 sec (dot product method)
tri+prep time:         0.000142 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000012 sec
rate       2.65 million edges/sec (incl time for U=triu(A))
rate       8.51 million edges/sec (just tricount itself)
L*U' time (dot):         0.000035 sec (nthreads: 32 speedup 1.23991)
tricount time:         0.000049 sec (dot product method)
tri+prep time:         0.000147 sec (incl time to compute L and U)
compute C time:        0.000035 sec
reduce (C) time:       0.000014 sec
rate       2.56 million edges/sec (incl time for U=triu(A))
rate       7.70 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000049 sec
tricount time:         0.000053 sec (saxpy method)
tri+prep time:         0.000084 sec (incl time to compute L)
compute C time:        0.000049 sec
reduce (C) time:       0.000004 sec
rate       4.46 million edges/sec (incl time for L=tril(A))
rate       7.05 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000025 sec (nthreads: 2 speedup 1.97117)
tricount time:         0.000029 sec (saxpy method)
tri+prep time:         0.000060 sec (incl time to compute L)
compute C time:        0.000025 sec
reduce (C) time:       0.000004 sec
rate       6.29 million edges/sec (incl time for L=tril(A))
rate      13.11 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000021 sec (nthreads: 4 speedup 2.37776)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000055 sec (incl time to compute L)
compute C time:        0.000021 sec
reduce (C) time:       0.000004 sec
rate       6.78 million edges/sec (incl time for L=tril(A))
rate      15.42 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000020 sec (nthreads: 8 speedup 2.4848)
tricount time:         0.000023 sec (saxpy method)
tri+prep time:         0.000054 sec (incl time to compute L)
compute C time:        0.000020 sec
reduce (C) time:       0.000004 sec
rate       6.90 million edges/sec (incl time for L=tril(A))
rate      16.07 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000020 sec (nthreads: 16 speedup 2.50392)
tricount time:         0.000023 sec (saxpy method)
tri+prep time:         0.000054 sec (incl time to compute L)
compute C time:        0.000020 sec
reduce (C) time:       0.000004 sec
rate       6.92 million edges/sec (incl time for L=tril(A))
rate      16.18 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000019 sec (nthreads: 32 speedup 2.52189)
tricount time:         0.000023 sec (saxpy method)
tri+prep time:         0.000054 sec (incl time to compute L)
compute C time:        0.000019 sec
reduce (C) time:       0.000004 sec
rate       6.95 million edges/sec (incl time for L=tril(A))
rate      16.30 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 5 by 5, nz: 18, method 1 time 0.000 sec

total time to read A matrix:       0.000222 sec

n 5 # edges 9
U=triu(A) time:        0.000064 sec
L=tril(A) time:        0.000022 sec

------------------------------------- dot product method:
# triangles 7
L*U' time (dot):         0.000041 sec
tricount time:         0.000071 sec (dot product method)
tri+prep time:         0.000157 sec (incl time to compute L and U)
compute C time:        0.000041 sec
reduce (C) time:       0.000029 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.13 million edges/sec (just tricount itself)
L*U' time (dot):         0.000015 sec (nthreads: 2 speedup 2.8061)
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000110 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000009 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.39 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 4 speedup 3.48491)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000106 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000007 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.47 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 8 speedup 3.94237)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000104 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000007 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.51 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 16 speedup 4.19574)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000103 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000007 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 32 speedup 4.21489)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000103 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000007 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000105 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000007 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.49 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 2 speedup 1.13617)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000103 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000006 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 4 speedup 1.13214)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000103 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000007 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 8 speedup 1.11273)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000104 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000007 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 16 speedup 1.15811)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000103 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000006 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 32 speedup 0.885749)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000106 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000007 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.46 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000062 sec
tricount time:         0.000081 sec (saxpy method)
tri+prep time:         0.000103 sec (incl time to compute L)
compute C time:        0.000062 sec
reduce (C) time:       0.000018 sec
rate       0.09 million edges/sec (incl time for L=tril(A))
rate       0.11 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000037 sec (nthreads: 2 speedup 1.69401)
tricount time:         0.000038 sec (saxpy method)
tri+prep time:         0.000060 sec (incl time to compute L)
compute C time:        0.000037 sec
reduce (C) time:       0.000001 sec
rate       0.15 million edges/sec (incl time for L=tril(A))
rate       0.24 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000037 sec (nthreads: 4 speedup 1.67878)
tricount time:         0.000038 sec (saxpy method)
tri+prep time:         0.000060 sec (incl time to compute L)
compute C time:        0.000037 sec
reduce (C) time:       0.000001 sec
rate       0.15 million edges/sec (incl time for L=tril(A))
rate       0.24 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000051 sec (nthreads: 8 speedup 1.2304)
tricount time:         0.000051 sec (saxpy method)
tri+prep time:         0.000074 sec (incl time to compute L)
compute C time:        0.000051 sec
reduce (C) time:       0.000001 sec
rate       0.12 million edges/sec (incl time for L=tril(A))
rate       0.17 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000075 sec (nthreads: 16 speedup 0.833088)
tricount time:         0.000076 sec (saxpy method)
tri+prep time:         0.000098 sec (incl time to compute L)
compute C time:        0.000075 sec
reduce (C) time:       0.000001 sec
rate       0.09 million edges/sec (incl time for L=tril(A))
rate       0.12 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000210 sec (nthreads: 32 speedup 0.296319)
tricount time:         0.000211 sec (saxpy method)
tri+prep time:         0.000233 sec (incl time to compute L)
compute C time:        0.000210 sec
reduce (C) time:       0.000001 sec
rate       0.04 million edges/sec (incl time for L=tril(A))
rate       0.04 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 3 by 3, 0 entries, from stdin

total time to read A matrix:       0.000291 sec

n 3 # edges 0
U=triu(A) time:        0.000036 sec
L=tril(A) time:        0.000011 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000024 sec
tricount time:         0.000026 sec (dot product method)
tri+prep time:         0.000074 sec (incl time to compute L and U)
compute C time:        0.000024 sec
reduce (C) time:       0.000002 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 2 speedup 3.75852)
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000055 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 4 speedup 4.37107)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000053 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 8 speedup 4.90785)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000053 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 16 speedup 4.8923)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000053 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 32 speedup 5.19838)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000053 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000054 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 1.09456)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000053 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 4 speedup 0.802404)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000055 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 8 speedup 1.07837)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000053 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 16 speedup 0.991714)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000054 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 32 speedup 0.85589)
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000055 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000028 sec
tricount time:         0.000028 sec (saxpy method)
tri+prep time:         0.000040 sec (incl time to compute L)
compute C time:        0.000028 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 2 speedup 3.44616)
tricount time:         0.000008 sec (saxpy method)
tri+prep time:         0.000020 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000006 sec (nthreads: 4 speedup 4.8216)
tricount time:         0.000006 sec (saxpy method)
tri+prep time:         0.000018 sec (incl time to compute L)
compute C time:        0.000006 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 8 speedup 5.19301)
tricount time:         0.000006 sec (saxpy method)
tri+prep time:         0.000017 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 16 speedup 5.34905)
tricount time:         0.000006 sec (saxpy method)
tri+prep time:         0.000017 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 32 speedup 5.22312)
tricount time:         0.000006 sec (saxpy method)
tri+prep time:         0.000017 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 4 entries, from stdin

total time to read A matrix:       0.000319 sec

n 4 # edges 2
U=triu(A) time:        0.000035 sec
L=tril(A) time:        0.000013 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000022 sec
tricount time:         0.000040 sec (dot product method)
tri+prep time:         0.000088 sec (incl time to compute L and U)
compute C time:        0.000022 sec
reduce (C) time:       0.000019 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.05 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 2 speedup 2.67597)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000062 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.13 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 4 speedup 3.6107)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000059 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 8 speedup 3.84244)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000059 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 16 speedup 3.96881)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000059 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000006 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 32 speedup 3.90624)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000059 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000060 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 2 speedup 1.03086)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000059 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 4 speedup 0.943242)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000060 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 8 speedup 1.03649)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000059 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 16 speedup 1.07181)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000059 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 32 speedup 0.768809)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000062 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.14 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000039 sec
tricount time:         0.000040 sec (saxpy method)
tri+prep time:         0.000052 sec (incl time to compute L)
compute C time:        0.000039 sec
reduce (C) time:       0.000001 sec
rate       0.04 million edges/sec (incl time for L=tril(A))
rate       0.05 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000025 sec (nthreads: 2 speedup 1.54709)
tricount time:         0.000026 sec (saxpy method)
tri+prep time:         0.000038 sec (incl time to compute L)
compute C time:        0.000025 sec
reduce (C) time:       0.000001 sec
rate       0.05 million edges/sec (incl time for L=tril(A))
rate       0.08 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000039 sec (nthreads: 4 speedup 1.0092)
tricount time:         0.000040 sec (saxpy method)
tri+prep time:         0.000052 sec (incl time to compute L)
compute C time:        0.000039 sec
reduce (C) time:       0.000001 sec
rate       0.04 million edges/sec (incl time for L=tril(A))
rate       0.05 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000038 sec (nthreads: 8 speedup 1.04004)
tricount time:         0.000038 sec (saxpy method)
tri+prep time:         0.000051 sec (incl time to compute L)
compute C time:        0.000038 sec
reduce (C) time:       0.000001 sec
rate       0.04 million edges/sec (incl time for L=tril(A))
rate       0.05 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000060 sec (nthreads: 16 speedup 0.648375)
tricount time:         0.000061 sec (saxpy method)
tri+prep time:         0.000074 sec (incl time to compute L)
compute C time:        0.000060 sec
reduce (C) time:       0.000001 sec
rate       0.03 million edges/sec (incl time for L=tril(A))
rate       0.03 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000107 sec (nthreads: 32 speedup 0.366737)
tricount time:         0.000107 sec (saxpy method)
tri+prep time:         0.000120 sec (incl time to compute L)
compute C time:        0.000107 sec
reduce (C) time:       0.000001 sec
rate       0.02 million edges/sec (incl time for L=tril(A))
rate       0.02 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 10 entries, from stdin

total time to read A matrix:       0.000317 sec

n 4 # edges 5
U=triu(A) time:        0.000034 sec
L=tril(A) time:        0.000013 sec

------------------------------------- dot product method:
# triangles 2
L*U' time (dot):         0.000024 sec
tricount time:         0.000039 sec (dot product method)
tri+prep time:         0.000086 sec (incl time to compute L and U)
compute C time:        0.000024 sec
reduce (C) time:       0.000015 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.13 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 2 speedup 3.20415)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000059 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000004 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.42 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 4 speedup 4.31564)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000004 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 8 speedup 4.46553)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000004 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 16 speedup 4.49011)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000004 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.55 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 32 speedup 4.54484)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000004 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000058 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000004 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.45 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 2 speedup 1.21763)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000004 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 4 speedup 1.29468)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000004 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 8 speedup 1.22524)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000004 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 16 speedup 1.26693)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000004 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.55 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 32 speedup 0.910725)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000059 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000004 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.42 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000037 sec
tricount time:         0.000038 sec (saxpy method)
tri+prep time:         0.000050 sec (incl time to compute L)
compute C time:        0.000037 sec
reduce (C) time:       0.000001 sec
rate       0.10 million edges/sec (incl time for L=tril(A))
rate       0.13 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000018 sec (nthreads: 2 speedup 2.00238)
tricount time:         0.000019 sec (saxpy method)
tri+prep time:         0.000032 sec (incl time to compute L)
compute C time:        0.000018 sec
reduce (C) time:       0.000001 sec
rate       0.16 million edges/sec (incl time for L=tril(A))
rate       0.26 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000032 sec (nthreads: 4 speedup 1.16861)
tricount time:         0.000032 sec (saxpy method)
tri+prep time:         0.000045 sec (incl time to compute L)
compute C time:        0.000032 sec
reduce (C) time:       0.000001 sec
rate       0.11 million edges/sec (incl time for L=tril(A))
rate       0.15 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000030 sec (nthreads: 8 speedup 1.24004)
tricount time:         0.000030 sec (saxpy method)
tri+prep time:         0.000043 sec (incl time to compute L)
compute C time:        0.000030 sec
reduce (C) time:       0.000001 sec
rate       0.12 million edges/sec (incl time for L=tril(A))
rate       0.16 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000044 sec (nthreads: 16 speedup 0.83931)
tricount time:         0.000044 sec (saxpy method)
tri+prep time:         0.000057 sec (incl time to compute L)
compute C time:        0.000044 sec
reduce (C) time:       0.000001 sec
rate       0.09 million edges/sec (incl time for L=tril(A))
rate       0.11 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000073 sec (nthreads: 32 speedup 0.503488)
tricount time:         0.000074 sec (saxpy method)
tri+prep time:         0.000087 sec (incl time to compute L)
compute C time:        0.000073 sec
reduce (C) time:       0.000001 sec
rate       0.06 million edges/sec (incl time for L=tril(A))
rate       0.07 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 7 by 7, 16 entries, from stdin

total time to read A matrix:       0.000547 sec

n 7 # edges 8
U=triu(A) time:        0.000031 sec
L=tril(A) time:        0.000013 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000019 sec
tricount time:         0.000038 sec (dot product method)
tri+prep time:         0.000082 sec (incl time to compute L and U)
compute C time:        0.000019 sec
reduce (C) time:       0.000019 sec
rate       0.10 million edges/sec (incl time for U=triu(A))
rate       0.21 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 2 speedup 2.41773)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000059 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       0.14 million edges/sec (incl time for U=triu(A))
rate       0.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 4 speedup 3.12697)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.14 million edges/sec (incl time for U=triu(A))
rate       0.65 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 8 speedup 3.45592)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000055 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000006 sec
rate       0.14 million edges/sec (incl time for U=triu(A))
rate       0.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 16 speedup 3.55194)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000055 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000006 sec
rate       0.14 million edges/sec (incl time for U=triu(A))
rate       0.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 32 speedup 3.49626)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000055 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000006 sec
rate       0.14 million edges/sec (incl time for U=triu(A))
rate       0.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000057 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.14 million edges/sec (incl time for U=triu(A))
rate       0.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 2 speedup 1.06374)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.14 million edges/sec (incl time for U=triu(A))
rate       0.68 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 4 speedup 1.06797)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.14 million edges/sec (incl time for U=triu(A))
rate       0.68 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 8 speedup 0.668882)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000060 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000007 sec
rate       0.13 million edges/sec (incl time for U=triu(A))
rate       0.49 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 16 speedup 1.00641)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000006 sec
rate       0.14 million edges/sec (incl time for U=triu(A))
rate       0.65 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 32 speedup 0.773907)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000059 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       0.14 million edges/sec (incl time for U=triu(A))
rate       0.55 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000029 sec
tricount time:         0.000029 sec (saxpy method)
tri+prep time:         0.000042 sec (incl time to compute L)
compute C time:        0.000029 sec
reduce (C) time:       0.000001 sec
rate       0.19 million edges/sec (incl time for L=tril(A))
rate       0.27 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000022 sec (nthreads: 2 speedup 1.3099)
tricount time:         0.000022 sec (saxpy method)
tri+prep time:         0.000035 sec (incl time to compute L)
compute C time:        0.000022 sec
reduce (C) time:       0.000000 sec
rate       0.23 million edges/sec (incl time for L=tril(A))
rate       0.36 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000023 sec (nthreads: 4 speedup 1.24224)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000036 sec (incl time to compute L)
compute C time:        0.000023 sec
reduce (C) time:       0.000000 sec
rate       0.22 million edges/sec (incl time for L=tril(A))
rate       0.34 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000029 sec (nthreads: 8 speedup 0.987683)
tricount time:         0.000030 sec (saxpy method)
tri+prep time:         0.000042 sec (incl time to compute L)
compute C time:        0.000029 sec
reduce (C) time:       0.000000 sec
rate       0.19 million edges/sec (incl time for L=tril(A))
rate       0.27 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000042 sec (nthreads: 16 speedup 0.689499)
tricount time:         0.000042 sec (saxpy method)
tri+prep time:         0.000055 sec (incl time to compute L)
compute C time:        0.000042 sec
reduce (C) time:       0.000001 sec
rate       0.15 million edges/sec (incl time for L=tril(A))
rate       0.19 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000071 sec (nthreads: 32 speedup 0.403981)
tricount time:         0.000072 sec (saxpy method)
tri+prep time:         0.000084 sec (incl time to compute L)
compute C time:        0.000071 sec
reduce (C) time:       0.000001 sec
rate       0.09 million edges/sec (incl time for L=tril(A))
rate       0.11 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 304 by 304, 876 entries, from stdin

total time to read A matrix:       0.000838 sec

n 304 # edges 438
U=triu(A) time:        0.000035 sec
L=tril(A) time:        0.000016 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000032 sec
tricount time:         0.000056 sec (dot product method)
tri+prep time:         0.000107 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000024 sec
rate       4.09 million edges/sec (incl time for U=triu(A))
rate       7.80 million edges/sec (just tricount itself)
L*U' time (dot):         0.000019 sec (nthreads: 2 speedup 1.72997)
tricount time:         0.000031 sec (dot product method)
tri+prep time:         0.000082 sec (incl time to compute L and U)
compute C time:        0.000019 sec
reduce (C) time:       0.000012 sec
rate       5.35 million edges/sec (incl time for U=triu(A))
rate      14.22 million edges/sec (just tricount itself)
L*U' time (dot):         0.000016 sec (nthreads: 4 speedup 1.97858)
tricount time:         0.000027 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000011 sec
rate       5.61 million edges/sec (incl time for U=triu(A))
rate      16.19 million edges/sec (just tricount itself)
L*U' time (dot):         0.000016 sec (nthreads: 8 speedup 2.01821)
tricount time:         0.000026 sec (dot product method)
tri+prep time:         0.000077 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000010 sec
rate       5.68 million edges/sec (incl time for U=triu(A))
rate      16.76 million edges/sec (just tricount itself)
L*U' time (dot):         0.000016 sec (nthreads: 16 speedup 2.06861)
tricount time:         0.000026 sec (dot product method)
tri+prep time:         0.000077 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000010 sec
rate       5.72 million edges/sec (incl time for U=triu(A))
rate      17.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.000015 sec (nthreads: 32 speedup 2.09821)
tricount time:         0.000025 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000010 sec
rate       5.73 million edges/sec (incl time for U=triu(A))
rate      17.24 million edges/sec (just tricount itself)
L*U' time (dot):         0.000016 sec
tricount time:         0.000025 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000010 sec
rate       5.74 million edges/sec (incl time for U=triu(A))
rate      17.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000015 sec (nthreads: 2 speedup 1.03192)
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000009 sec
rate       5.82 million edges/sec (incl time for U=triu(A))
rate      18.03 million edges/sec (just tricount itself)
L*U' time (dot):         0.000016 sec (nthreads: 4 speedup 0.992238)
tricount time:         0.000025 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000009 sec
rate       5.76 million edges/sec (incl time for U=triu(A))
rate      17.46 million edges/sec (just tricount itself)
L*U' time (dot):         0.000015 sec (nthreads: 8 speedup 1.03205)
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000009 sec
rate       5.81 million edges/sec (incl time for U=triu(A))
rate      17.95 million edges/sec (just tricount itself)
L*U' time (dot):         0.000015 sec (nthreads: 16 speedup 1.05321)
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000009 sec
rate       5.83 million edges/sec (incl time for U=triu(A))
rate      18.14 million edges/sec (just tricount itself)
L*U' time (dot):         0.000017 sec (nthreads: 32 speedup 0.937416)
tricount time:         0.000027 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000017 sec
reduce (C) time:       0.000010 sec
rate       5.64 million edges/sec (incl time for U=triu(A))
rate      16.42 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000042 sec
tricount time:         0.000043 sec (saxpy method)
tri+prep time:         0.000059 sec (incl time to compute L)
compute C time:        0.000042 sec
reduce (C) time:       0.000001 sec
rate       7.43 million edges/sec (incl time for L=tril(A))
rate      10.26 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000033 sec (nthreads: 2 speedup 1.26649)
tricount time:         0.000034 sec (saxpy method)
tri+prep time:         0.000050 sec (incl time to compute L)
compute C time:        0.000033 sec
reduce (C) time:       0.000000 sec
rate       8.75 million edges/sec (incl time for L=tril(A))
rate      12.97 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000034 sec (nthreads: 4 speedup 1.2407)
tricount time:         0.000034 sec (saxpy method)
tri+prep time:         0.000051 sec (incl time to compute L)
compute C time:        0.000034 sec
reduce (C) time:       0.000000 sec
rate       8.64 million edges/sec (incl time for L=tril(A))
rate      12.72 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000041 sec (nthreads: 8 speedup 1.03938)
tricount time:         0.000041 sec (saxpy method)
tri+prep time:         0.000057 sec (incl time to compute L)
compute C time:        0.000041 sec
reduce (C) time:       0.000000 sec
rate       7.65 million edges/sec (incl time for L=tril(A))
rate      10.68 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000054 sec (nthreads: 16 speedup 0.786668)
tricount time:         0.000054 sec (saxpy method)
tri+prep time:         0.000070 sec (incl time to compute L)
compute C time:        0.000054 sec
reduce (C) time:       0.000000 sec
rate       6.23 million edges/sec (incl time for L=tril(A))
rate       8.11 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000084 sec (nthreads: 32 speedup 0.501907)
tricount time:         0.000084 sec (saxpy method)
tri+prep time:         0.000101 sec (incl time to compute L)
compute C time:        0.000084 sec
reduce (C) time:       0.000000 sec
rate       4.35 million edges/sec (incl time for L=tril(A))
rate       5.18 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 48 by 48, 352 entries, from stdin

total time to read A matrix:       0.000549 sec

n 48 # edges 176
U=triu(A) time:        0.000051 sec
L=tril(A) time:        0.000018 sec

------------------------------------- dot product method:
# triangles 160
L*U' time (dot):         0.000035 sec
tricount time:         0.000056 sec (dot product method)
tri+prep time:         0.000124 sec (incl time to compute L and U)
compute C time:        0.000035 sec
reduce (C) time:       0.000021 sec
rate       1.42 million edges/sec (incl time for U=triu(A))
rate       3.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000019 sec (nthreads: 2 speedup 1.78564)
tricount time:         0.000027 sec (dot product method)
tri+prep time:         0.000096 sec (incl time to compute L and U)
compute C time:        0.000019 sec
reduce (C) time:       0.000008 sec
rate       1.84 million edges/sec (incl time for U=triu(A))
rate       6.46 million edges/sec (just tricount itself)
L*U' time (dot):         0.000015 sec (nthreads: 4 speedup 2.25771)
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000090 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000007 sec
rate       1.95 million edges/sec (incl time for U=triu(A))
rate       7.97 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 8 speedup 2.48408)
tricount time:         0.000020 sec (dot product method)
tri+prep time:         0.000089 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000006 sec
rate       1.99 million edges/sec (incl time for U=triu(A))
rate       8.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 16 speedup 2.63804)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000087 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000006 sec
rate       2.02 million edges/sec (incl time for U=triu(A))
rate       9.30 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 32 speedup 2.75499)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000087 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000006 sec
rate       2.03 million edges/sec (incl time for U=triu(A))
rate       9.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.000020 sec
tricount time:         0.000029 sec (dot product method)
tri+prep time:         0.000097 sec (incl time to compute L and U)
compute C time:        0.000020 sec
reduce (C) time:       0.000008 sec
rate       1.81 million edges/sec (incl time for U=triu(A))
rate       6.11 million edges/sec (just tricount itself)
L*U' time (dot):         0.000017 sec (nthreads: 2 speedup 1.19235)
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000092 sec (incl time to compute L and U)
compute C time:        0.000017 sec
reduce (C) time:       0.000007 sec
rate       1.90 million edges/sec (incl time for U=triu(A))
rate       7.29 million edges/sec (just tricount itself)
L*U' time (dot):         0.000016 sec (nthreads: 4 speedup 1.31436)
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000090 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000006 sec
rate       1.95 million edges/sec (incl time for U=triu(A))
rate       8.06 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 8 speedup 1.42877)
tricount time:         0.000020 sec (dot product method)
tri+prep time:         0.000089 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000006 sec
rate       1.98 million edges/sec (incl time for U=triu(A))
rate       8.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.000015 sec (nthreads: 16 speedup 1.38743)
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000090 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000007 sec
rate       1.96 million edges/sec (incl time for U=triu(A))
rate       8.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000015 sec (nthreads: 32 speedup 1.32188)
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000091 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000007 sec
rate       1.94 million edges/sec (incl time for U=triu(A))
rate       7.93 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000031 sec
tricount time:         0.000032 sec (saxpy method)
tri+prep time:         0.000050 sec (incl time to compute L)
compute C time:        0.000031 sec
reduce (C) time:       0.000001 sec
rate       3.51 million edges/sec (incl time for L=tril(A))
rate       5.42 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000015 sec (nthreads: 2 speedup 2.12913)
tricount time:         0.000016 sec (saxpy method)
tri+prep time:         0.000033 sec (incl time to compute L)
compute C time:        0.000015 sec
reduce (C) time:       0.000001 sec
rate       5.27 million edges/sec (incl time for L=tril(A))
rate      11.23 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000012 sec (nthreads: 4 speedup 2.68662)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000030 sec (incl time to compute L)
compute C time:        0.000012 sec
reduce (C) time:       0.000001 sec
rate       5.80 million edges/sec (incl time for L=tril(A))
rate      13.95 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000010 sec (nthreads: 8 speedup 3.13882)
tricount time:         0.000011 sec (saxpy method)
tri+prep time:         0.000029 sec (incl time to compute L)
compute C time:        0.000010 sec
reduce (C) time:       0.000001 sec
rate       6.14 million edges/sec (incl time for L=tril(A))
rate      16.09 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000009 sec (nthreads: 16 speedup 3.52072)
tricount time:         0.000010 sec (saxpy method)
tri+prep time:         0.000028 sec (incl time to compute L)
compute C time:        0.000009 sec
reduce (C) time:       0.000001 sec
rate       6.40 million edges/sec (incl time for L=tril(A))
rate      17.95 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 32 speedup 3.68144)
tricount time:         0.000009 sec (saxpy method)
tri+prep time:         0.000027 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate       6.48 million edges/sec (incl time for L=tril(A))
rate      18.67 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4884 by 4884, 285494 entries, from stdin

total time to read A matrix:       0.133101 sec

n 4884 # edges 142747
U=triu(A) time:        0.006339 sec
L=tril(A) time:        0.003870 sec

------------------------------------- dot product method:
# triangles 1512964
L*U' time (dot):         0.018835 sec
tricount time:         0.020849 sec (dot product method)
tri+prep time:         0.031057 sec (incl time to compute L and U)
compute C time:        0.018835 sec
reduce (C) time:       0.002014 sec
rate       4.60 million edges/sec (incl time for U=triu(A))
rate       6.85 million edges/sec (just tricount itself)
L*U' time (dot):         0.010146 sec (nthreads: 2 speedup 1.85637)
tricount time:         0.010850 sec (dot product method)
tri+prep time:         0.021058 sec (incl time to compute L and U)
compute C time:        0.010146 sec
reduce (C) time:       0.000704 sec
rate       6.78 million edges/sec (incl time for U=triu(A))
rate      13.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.005314 sec (nthreads: 4 speedup 3.54446)
tricount time:         0.005744 sec (dot product method)
tri+prep time:         0.015953 sec (incl time to compute L and U)
compute C time:        0.005314 sec
reduce (C) time:       0.000430 sec
rate       8.95 million edges/sec (incl time for U=triu(A))
rate      24.85 million edges/sec (just tricount itself)
L*U' time (dot):         0.003336 sec (nthreads: 8 speedup 5.64546)
tricount time:         0.003718 sec (dot product method)
tri+prep time:         0.013926 sec (incl time to compute L and U)
compute C time:        0.003336 sec
reduce (C) time:       0.000381 sec
rate      10.25 million edges/sec (incl time for U=triu(A))
rate      38.40 million edges/sec (just tricount itself)
L*U' time (dot):         0.002170 sec (nthreads: 16 speedup 8.6814)
tricount time:         0.002875 sec (dot product method)
tri+prep time:         0.013084 sec (incl time to compute L and U)
compute C time:        0.002170 sec
reduce (C) time:       0.000706 sec
rate      10.91 million edges/sec (incl time for U=triu(A))
rate      49.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.002182 sec (nthreads: 32 speedup 8.63147)
tricount time:         0.003629 sec (dot product method)
tri+prep time:         0.013837 sec (incl time to compute L and U)
compute C time:        0.002182 sec
reduce (C) time:       0.001447 sec
rate      10.32 million edges/sec (incl time for U=triu(A))
rate      39.34 million edges/sec (just tricount itself)
L*U' time (dot):         0.015352 sec
tricount time:         0.016418 sec (dot product method)
tri+prep time:         0.026627 sec (incl time to compute L and U)
compute C time:        0.015352 sec
reduce (C) time:       0.001067 sec
rate       5.36 million edges/sec (incl time for U=triu(A))
rate       8.69 million edges/sec (just tricount itself)
L*U' time (dot):         0.009014 sec (nthreads: 2 speedup 1.70305)
tricount time:         0.009674 sec (dot product method)
tri+prep time:         0.019882 sec (incl time to compute L and U)
compute C time:        0.009014 sec
reduce (C) time:       0.000659 sec
rate       7.18 million edges/sec (incl time for U=triu(A))
rate      14.76 million edges/sec (just tricount itself)
L*U' time (dot):         0.005307 sec (nthreads: 4 speedup 2.89254)
tricount time:         0.005752 sec (dot product method)
tri+prep time:         0.015961 sec (incl time to compute L and U)
compute C time:        0.005307 sec
reduce (C) time:       0.000445 sec
rate       8.94 million edges/sec (incl time for U=triu(A))
rate      24.82 million edges/sec (just tricount itself)
L*U' time (dot):         0.003128 sec (nthreads: 8 speedup 4.90821)
tricount time:         0.003491 sec (dot product method)
tri+prep time:         0.013700 sec (incl time to compute L and U)
compute C time:        0.003128 sec
reduce (C) time:       0.000363 sec
rate      10.42 million edges/sec (incl time for U=triu(A))
rate      40.89 million edges/sec (just tricount itself)
L*U' time (dot):         0.002141 sec (nthreads: 16 speedup 7.16871)
tricount time:         0.002813 sec (dot product method)
tri+prep time:         0.013022 sec (incl time to compute L and U)
compute C time:        0.002141 sec
reduce (C) time:       0.000672 sec
rate      10.96 million edges/sec (incl time for U=triu(A))
rate      50.74 million edges/sec (just tricount itself)
L*U' time (dot):         0.004078 sec (nthreads: 32 speedup 3.76415)
tricount time:         0.005838 sec (dot product method)
tri+prep time:         0.016047 sec (incl time to compute L and U)
compute C time:        0.004078 sec
reduce (C) time:       0.001760 sec
rate       8.90 million edges/sec (incl time for U=triu(A))
rate      24.45 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.007096 sec
tricount time:         0.007709 sec (saxpy method)
tri+prep time:         0.011578 sec (incl time to compute L)
compute C time:        0.007096 sec
reduce (C) time:       0.000613 sec
rate      12.33 million edges/sec (incl time for L=tril(A))
rate      18.52 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.004995 sec (nthreads: 2 speedup 1.42074)
tricount time:         0.005346 sec (saxpy method)
tri+prep time:         0.009216 sec (incl time to compute L)
compute C time:        0.004995 sec
reduce (C) time:       0.000352 sec
rate      15.49 million edges/sec (incl time for L=tril(A))
rate      26.70 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002335 sec (nthreads: 4 speedup 3.03894)
tricount time:         0.002517 sec (saxpy method)
tri+prep time:         0.006387 sec (incl time to compute L)
compute C time:        0.002335 sec
reduce (C) time:       0.000182 sec
rate      22.35 million edges/sec (incl time for L=tril(A))
rate      56.71 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002139 sec (nthreads: 8 speedup 3.31724)
tricount time:         0.002250 sec (saxpy method)
tri+prep time:         0.006120 sec (incl time to compute L)
compute C time:        0.002139 sec
reduce (C) time:       0.000110 sec
rate      23.33 million edges/sec (incl time for L=tril(A))
rate      63.46 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001917 sec (nthreads: 16 speedup 3.70216)
tricount time:         0.002033 sec (saxpy method)
tri+prep time:         0.005903 sec (incl time to compute L)
compute C time:        0.001917 sec
reduce (C) time:       0.000116 sec
rate      24.18 million edges/sec (incl time for L=tril(A))
rate      70.22 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.003290 sec (nthreads: 32 speedup 2.1567)
tricount time:         0.003407 sec (saxpy method)
tri+prep time:         0.007277 sec (incl time to compute L)
compute C time:        0.003290 sec
reduce (C) time:       0.000116 sec
rate      19.62 million edges/sec (incl time for L=tril(A))
rate      41.90 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 183 by 183, 1402 entries, from stdin

total time to read A matrix:       0.001181 sec

n 183 # edges 701
U=triu(A) time:        0.000049 sec
L=tril(A) time:        0.000020 sec

------------------------------------- dot product method:
# triangles 863
L*U' time (dot):         0.000083 sec
tricount time:         0.000110 sec (dot product method)
tri+prep time:         0.000179 sec (incl time to compute L and U)
compute C time:        0.000083 sec
reduce (C) time:       0.000027 sec
rate       3.91 million edges/sec (incl time for U=triu(A))
rate       6.38 million edges/sec (just tricount itself)
L*U' time (dot):         0.000067 sec (nthreads: 2 speedup 1.23481)
tricount time:         0.000081 sec (dot product method)
tri+prep time:         0.000150 sec (incl time to compute L and U)
compute C time:        0.000067 sec
reduce (C) time:       0.000014 sec
rate       4.67 million edges/sec (incl time for U=triu(A))
rate       8.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000061 sec (nthreads: 4 speedup 1.36404)
tricount time:         0.000073 sec (dot product method)
tri+prep time:         0.000142 sec (incl time to compute L and U)
compute C time:        0.000061 sec
reduce (C) time:       0.000012 sec
rate       4.92 million edges/sec (incl time for U=triu(A))
rate       9.60 million edges/sec (just tricount itself)
L*U' time (dot):         0.000059 sec (nthreads: 8 speedup 1.39546)
tricount time:         0.000071 sec (dot product method)
tri+prep time:         0.000141 sec (incl time to compute L and U)
compute C time:        0.000059 sec
reduce (C) time:       0.000012 sec
rate       4.99 million edges/sec (incl time for U=triu(A))
rate       9.86 million edges/sec (just tricount itself)
L*U' time (dot):         0.000056 sec (nthreads: 16 speedup 1.48374)
tricount time:         0.000067 sec (dot product method)
tri+prep time:         0.000137 sec (incl time to compute L and U)
compute C time:        0.000056 sec
reduce (C) time:       0.000012 sec
rate       5.13 million edges/sec (incl time for U=triu(A))
rate      10.42 million edges/sec (just tricount itself)
L*U' time (dot):         0.000056 sec (nthreads: 32 speedup 1.47808)
tricount time:         0.000067 sec (dot product method)
tri+prep time:         0.000136 sec (incl time to compute L and U)
compute C time:        0.000056 sec
reduce (C) time:       0.000011 sec
rate       5.14 million edges/sec (incl time for U=triu(A))
rate      10.47 million edges/sec (just tricount itself)
L*U' time (dot):         0.000072 sec
tricount time:         0.000085 sec (dot product method)
tri+prep time:         0.000155 sec (incl time to compute L and U)
compute C time:        0.000072 sec
reduce (C) time:       0.000013 sec
rate       4.53 million edges/sec (incl time for U=triu(A))
rate       8.23 million edges/sec (just tricount itself)
L*U' time (dot):         0.000066 sec (nthreads: 2 speedup 1.09147)
tricount time:         0.000079 sec (dot product method)
tri+prep time:         0.000148 sec (incl time to compute L and U)
compute C time:        0.000066 sec
reduce (C) time:       0.000013 sec
rate       4.73 million edges/sec (incl time for U=triu(A))
rate       8.91 million edges/sec (just tricount itself)
L*U' time (dot):         0.000062 sec (nthreads: 4 speedup 1.15473)
tricount time:         0.000075 sec (dot product method)
tri+prep time:         0.000144 sec (incl time to compute L and U)
compute C time:        0.000062 sec
reduce (C) time:       0.000012 sec
rate       4.86 million edges/sec (incl time for U=triu(A))
rate       9.38 million edges/sec (just tricount itself)
L*U' time (dot):         0.000059 sec (nthreads: 8 speedup 1.22601)
tricount time:         0.000071 sec (dot product method)
tri+prep time:         0.000140 sec (incl time to compute L and U)
compute C time:        0.000059 sec
reduce (C) time:       0.000012 sec
rate       5.00 million edges/sec (incl time for U=triu(A))
rate       9.92 million edges/sec (just tricount itself)
L*U' time (dot):         0.000057 sec (nthreads: 16 speedup 1.2667)
tricount time:         0.000069 sec (dot product method)
tri+prep time:         0.000138 sec (incl time to compute L and U)
compute C time:        0.000057 sec
reduce (C) time:       0.000012 sec
rate       5.06 million edges/sec (incl time for U=triu(A))
rate      10.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000057 sec (nthreads: 32 speedup 1.25321)
tricount time:         0.000070 sec (dot product method)
tri+prep time:         0.000139 sec (incl time to compute L and U)
compute C time:        0.000057 sec
reduce (C) time:       0.000012 sec
rate       5.04 million edges/sec (incl time for U=triu(A))
rate      10.05 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000051 sec
tricount time:         0.000053 sec (saxpy method)
tri+prep time:         0.000074 sec (incl time to compute L)
compute C time:        0.000051 sec
reduce (C) time:       0.000003 sec
rate       9.53 million edges/sec (incl time for L=tril(A))
rate      13.14 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000034 sec (nthreads: 2 speedup 1.50161)
tricount time:         0.000036 sec (saxpy method)
tri+prep time:         0.000056 sec (incl time to compute L)
compute C time:        0.000034 sec
reduce (C) time:       0.000003 sec
rate      12.42 million edges/sec (incl time for L=tril(A))
rate      19.34 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000029 sec (nthreads: 4 speedup 1.74)
tricount time:         0.000032 sec (saxpy method)
tri+prep time:         0.000052 sec (incl time to compute L)
compute C time:        0.000029 sec
reduce (C) time:       0.000003 sec
rate      13.54 million edges/sec (incl time for L=tril(A))
rate      22.21 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000027 sec (nthreads: 8 speedup 1.90386)
tricount time:         0.000029 sec (saxpy method)
tri+prep time:         0.000049 sec (incl time to compute L)
compute C time:        0.000027 sec
reduce (C) time:       0.000003 sec
rate      14.24 million edges/sec (incl time for L=tril(A))
rate      24.13 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000024 sec (nthreads: 16 speedup 2.10342)
tricount time:         0.000026 sec (saxpy method)
tri+prep time:         0.000047 sec (incl time to compute L)
compute C time:        0.000024 sec
reduce (C) time:       0.000002 sec
rate      15.03 million edges/sec (incl time for L=tril(A))
rate      26.50 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000022 sec (nthreads: 32 speedup 2.25603)
tricount time:         0.000025 sec (saxpy method)
tri+prep time:         0.000045 sec (incl time to compute L)
compute C time:        0.000022 sec
reduce (C) time:       0.000002 sec
rate      15.57 million edges/sec (incl time for L=tril(A))
rate      28.23 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000630 sec

n 63 # edges 123
U=triu(A) time:        0.000035 sec
L=tril(A) time:        0.000017 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000024 sec
tricount time:         0.000045 sec (dot product method)
tri+prep time:         0.000096 sec (incl time to compute L and U)
compute C time:        0.000024 sec
reduce (C) time:       0.000021 sec
rate       1.28 million edges/sec (incl time for U=triu(A))
rate       2.73 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 2 speedup 2.42223)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000070 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000008 sec
rate       1.77 million edges/sec (incl time for U=triu(A))
rate       6.74 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 3.0468)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000067 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       1.85 million edges/sec (incl time for U=triu(A))
rate       8.07 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 3.08829)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000066 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       1.86 million edges/sec (incl time for U=triu(A))
rate       8.37 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 16 speedup 3.19095)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000066 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       1.87 million edges/sec (incl time for U=triu(A))
rate       8.44 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 32 speedup 3.25774)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000066 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       1.87 million edges/sec (incl time for U=triu(A))
rate       8.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000067 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000008 sec
rate       1.83 million edges/sec (incl time for U=triu(A))
rate       7.66 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 2 speedup 1.05676)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000066 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       1.85 million edges/sec (incl time for U=triu(A))
rate       8.14 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 1.09913)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000066 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       1.87 million edges/sec (incl time for U=triu(A))
rate       8.49 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 8 speedup 1.11883)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000066 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000007 sec
rate       1.87 million edges/sec (incl time for U=triu(A))
rate       8.59 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 16 speedup 1.07009)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000066 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       1.86 million edges/sec (incl time for U=triu(A))
rate       8.29 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 32 speedup 0.834679)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000069 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000008 sec
rate       1.79 million edges/sec (incl time for U=triu(A))
rate       6.99 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000031 sec
tricount time:         0.000032 sec (saxpy method)
tri+prep time:         0.000049 sec (incl time to compute L)
compute C time:        0.000031 sec
reduce (C) time:       0.000001 sec
rate       2.53 million edges/sec (incl time for L=tril(A))
rate       3.84 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000023 sec (nthreads: 2 speedup 1.34331)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000040 sec (incl time to compute L)
compute C time:        0.000023 sec
reduce (C) time:       0.000000 sec
rate       3.04 million edges/sec (incl time for L=tril(A))
rate       5.15 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000026 sec (nthreads: 4 speedup 1.22961)
tricount time:         0.000026 sec (saxpy method)
tri+prep time:         0.000043 sec (incl time to compute L)
compute C time:        0.000026 sec
reduce (C) time:       0.000000 sec
rate       2.89 million edges/sec (incl time for L=tril(A))
rate       4.73 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000032 sec (nthreads: 8 speedup 0.997458)
tricount time:         0.000032 sec (saxpy method)
tri+prep time:         0.000049 sec (incl time to compute L)
compute C time:        0.000032 sec
reduce (C) time:       0.000000 sec
rate       2.54 million edges/sec (incl time for L=tril(A))
rate       3.85 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000044 sec (nthreads: 16 speedup 0.70749)
tricount time:         0.000045 sec (saxpy method)
tri+prep time:         0.000061 sec (incl time to compute L)
compute C time:        0.000044 sec
reduce (C) time:       0.000000 sec
rate       2.00 million edges/sec (incl time for L=tril(A))
rate       2.74 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000073 sec (nthreads: 32 speedup 0.43047)
tricount time:         0.000074 sec (saxpy method)
tri+prep time:         0.000090 sec (incl time to compute L)
compute C time:        0.000073 sec
reduce (C) time:       0.000000 sec
rate       1.37 million edges/sec (incl time for L=tril(A))
rate       1.67 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000613 sec

n 63 # edges 123
U=triu(A) time:        0.000033 sec
L=tril(A) time:        0.000014 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000024 sec
tricount time:         0.000045 sec (dot product method)
tri+prep time:         0.000093 sec (incl time to compute L and U)
compute C time:        0.000024 sec
reduce (C) time:       0.000021 sec
rate       1.32 million edges/sec (incl time for U=triu(A))
rate       2.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 2 speedup 2.26089)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000067 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000008 sec
rate       1.84 million edges/sec (incl time for U=triu(A))
rate       6.38 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 4 speedup 2.75505)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000064 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000008 sec
rate       1.92 million edges/sec (incl time for U=triu(A))
rate       7.52 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 2.99326)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000063 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       1.95 million edges/sec (incl time for U=triu(A))
rate       7.96 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 16 speedup 3.00183)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000063 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       1.96 million edges/sec (incl time for U=triu(A))
rate       8.14 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 32 speedup 2.97999)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000063 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       1.96 million edges/sec (incl time for U=triu(A))
rate       8.07 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000065 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000008 sec
rate       1.90 million edges/sec (incl time for U=triu(A))
rate       7.21 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 2 speedup 1.07095)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000064 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000008 sec
rate       1.92 million edges/sec (incl time for U=triu(A))
rate       7.52 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 1.1164)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000063 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       1.95 million edges/sec (incl time for U=triu(A))
rate       7.95 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 1.16904)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000063 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       1.97 million edges/sec (incl time for U=triu(A))
rate       8.24 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 16 speedup 1.1678)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000063 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000007 sec
rate       1.97 million edges/sec (incl time for U=triu(A))
rate       8.20 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 32 speedup 0.899338)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000066 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000008 sec
rate       1.88 million edges/sec (incl time for U=triu(A))
rate       6.84 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000032 sec
tricount time:         0.000032 sec (saxpy method)
tri+prep time:         0.000046 sec (incl time to compute L)
compute C time:        0.000032 sec
reduce (C) time:       0.000001 sec
rate       2.65 million edges/sec (incl time for L=tril(A))
rate       3.82 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000024 sec (nthreads: 2 speedup 1.32653)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000039 sec (incl time to compute L)
compute C time:        0.000024 sec
reduce (C) time:       0.000001 sec
rate       3.19 million edges/sec (incl time for L=tril(A))
rate       5.04 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000024 sec (nthreads: 4 speedup 1.29266)
tricount time:         0.000025 sec (saxpy method)
tri+prep time:         0.000039 sec (incl time to compute L)
compute C time:        0.000024 sec
reduce (C) time:       0.000000 sec
rate       3.15 million edges/sec (incl time for L=tril(A))
rate       4.93 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000031 sec (nthreads: 8 speedup 1.02067)
tricount time:         0.000031 sec (saxpy method)
tri+prep time:         0.000046 sec (incl time to compute L)
compute C time:        0.000031 sec
reduce (C) time:       0.000000 sec
rate       2.70 million edges/sec (incl time for L=tril(A))
rate       3.91 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000044 sec (nthreads: 16 speedup 0.723511)
tricount time:         0.000044 sec (saxpy method)
tri+prep time:         0.000058 sec (incl time to compute L)
compute C time:        0.000044 sec
reduce (C) time:       0.000000 sec
rate       2.11 million edges/sec (incl time for L=tril(A))
rate       2.78 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000072 sec (nthreads: 32 speedup 0.439919)
tricount time:         0.000072 sec (saxpy method)
tri+prep time:         0.000087 sec (incl time to compute L)
compute C time:        0.000072 sec
reduce (C) time:       0.000001 sec
rate       1.42 million edges/sec (incl time for L=tril(A))
rate       1.70 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 78 by 78, 204 entries, from stdin

total time to read A matrix:       0.000751 sec

n 78 # edges 102
U=triu(A) time:        0.000040 sec
L=tril(A) time:        0.000017 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000025 sec
tricount time:         0.000051 sec (dot product method)
tri+prep time:         0.000108 sec (incl time to compute L and U)
compute C time:        0.000025 sec
reduce (C) time:       0.000025 sec
rate       0.95 million edges/sec (incl time for U=triu(A))
rate       2.01 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 2 speedup 2.06796)
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000080 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000011 sec
rate       1.27 million edges/sec (incl time for U=triu(A))
rate       4.44 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 4 speedup 2.32202)
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000010 sec
rate       1.31 million edges/sec (incl time for U=triu(A))
rate       4.90 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 8 speedup 2.48042)
tricount time:         0.000020 sec (dot product method)
tri+prep time:         0.000077 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000009 sec
rate       1.33 million edges/sec (incl time for U=triu(A))
rate       5.23 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 16 speedup 2.55105)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000009 sec
rate       1.34 million edges/sec (incl time for U=triu(A))
rate       5.37 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 32 speedup 2.51594)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000009 sec
rate       1.34 million edges/sec (incl time for U=triu(A))
rate       5.32 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000010 sec
rate       1.31 million edges/sec (incl time for U=triu(A))
rate       4.91 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 2 speedup 1.07408)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000009 sec
rate       1.34 million edges/sec (incl time for U=triu(A))
rate       5.31 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 4 speedup 1.10945)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000009 sec
rate       1.35 million edges/sec (incl time for U=triu(A))
rate       5.48 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 8 speedup 1.12973)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000009 sec
rate       1.35 million edges/sec (incl time for U=triu(A))
rate       5.55 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 16 speedup 1.12577)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000009 sec
rate       1.35 million edges/sec (incl time for U=triu(A))
rate       5.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 32 speedup 0.888581)
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000079 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000010 sec
rate       1.29 million edges/sec (incl time for U=triu(A))
rate       4.70 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000037 sec
tricount time:         0.000038 sec (saxpy method)
tri+prep time:         0.000055 sec (incl time to compute L)
compute C time:        0.000037 sec
reduce (C) time:       0.000001 sec
rate       1.85 million edges/sec (incl time for L=tril(A))
rate       2.69 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000029 sec (nthreads: 2 speedup 1.29868)
tricount time:         0.000029 sec (saxpy method)
tri+prep time:         0.000046 sec (incl time to compute L)
compute C time:        0.000029 sec
reduce (C) time:       0.000001 sec
rate       2.20 million edges/sec (incl time for L=tril(A))
rate       3.50 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000030 sec (nthreads: 4 speedup 1.25926)
tricount time:         0.000030 sec (saxpy method)
tri+prep time:         0.000047 sec (incl time to compute L)
compute C time:        0.000030 sec
reduce (C) time:       0.000001 sec
rate       2.15 million edges/sec (incl time for L=tril(A))
rate       3.39 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000038 sec (nthreads: 8 speedup 0.985822)
tricount time:         0.000038 sec (saxpy method)
tri+prep time:         0.000056 sec (incl time to compute L)
compute C time:        0.000038 sec
reduce (C) time:       0.000001 sec
rate       1.84 million edges/sec (incl time for L=tril(A))
rate       2.66 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000053 sec (nthreads: 16 speedup 0.69755)
tricount time:         0.000054 sec (saxpy method)
tri+prep time:         0.000071 sec (incl time to compute L)
compute C time:        0.000053 sec
reduce (C) time:       0.000001 sec
rate       1.43 million edges/sec (incl time for L=tril(A))
rate       1.89 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000089 sec (nthreads: 32 speedup 0.417671)
tricount time:         0.000090 sec (saxpy method)
tri+prep time:         0.000107 sec (incl time to compute L)
compute C time:        0.000089 sec
reduce (C) time:       0.000001 sec
rate       0.95 million edges/sec (incl time for L=tril(A))
rate       1.14 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 982 by 982, 99840 entries, from stdin

total time to read A matrix:       0.039587 sec

n 982 # edges 49920
U=triu(A) time:        0.000407 sec
L=tril(A) time:        0.000258 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000908 sec
tricount time:         0.001063 sec (dot product method)
tri+prep time:         0.001728 sec (incl time to compute L and U)
compute C time:        0.000908 sec
reduce (C) time:       0.000155 sec
rate      28.89 million edges/sec (incl time for U=triu(A))
rate      46.96 million edges/sec (just tricount itself)
L*U' time (dot):         0.000566 sec (nthreads: 2 speedup 1.60377)
tricount time:         0.000662 sec (dot product method)
tri+prep time:         0.001327 sec (incl time to compute L and U)
compute C time:        0.000566 sec
reduce (C) time:       0.000096 sec
rate      37.61 million edges/sec (incl time for U=triu(A))
rate      75.36 million edges/sec (just tricount itself)
L*U' time (dot):         0.000384 sec (nthreads: 4 speedup 2.36642)
tricount time:         0.000451 sec (dot product method)
tri+prep time:         0.001116 sec (incl time to compute L and U)
compute C time:        0.000384 sec
reduce (C) time:       0.000067 sec
rate      44.74 million edges/sec (incl time for U=triu(A))
rate     110.73 million edges/sec (just tricount itself)
L*U' time (dot):         0.000395 sec (nthreads: 8 speedup 2.3002)
tricount time:         0.000451 sec (dot product method)
tri+prep time:         0.001116 sec (incl time to compute L and U)
compute C time:        0.000395 sec
reduce (C) time:       0.000056 sec
rate      44.73 million edges/sec (incl time for U=triu(A))
rate     110.68 million edges/sec (just tricount itself)
L*U' time (dot):         0.000487 sec (nthreads: 16 speedup 1.86536)
tricount time:         0.000555 sec (dot product method)
tri+prep time:         0.001220 sec (incl time to compute L and U)
compute C time:        0.000487 sec
reduce (C) time:       0.000068 sec
rate      40.93 million edges/sec (incl time for U=triu(A))
rate      90.01 million edges/sec (just tricount itself)
L*U' time (dot):         0.001669 sec (nthreads: 32 speedup 0.544308)
tricount time:         0.001762 sec (dot product method)
tri+prep time:         0.002427 sec (incl time to compute L and U)
compute C time:        0.001669 sec
reduce (C) time:       0.000094 sec
rate      20.57 million edges/sec (incl time for U=triu(A))
rate      28.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000544 sec
tricount time:         0.000647 sec (dot product method)
tri+prep time:         0.001312 sec (incl time to compute L and U)
compute C time:        0.000544 sec
reduce (C) time:       0.000103 sec
rate      38.05 million edges/sec (incl time for U=triu(A))
rate      77.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000364 sec (nthreads: 2 speedup 1.4942)
tricount time:         0.000430 sec (dot product method)
tri+prep time:         0.001095 sec (incl time to compute L and U)
compute C time:        0.000364 sec
reduce (C) time:       0.000066 sec
rate      45.59 million edges/sec (incl time for U=triu(A))
rate     116.09 million edges/sec (just tricount itself)
L*U' time (dot):         0.000279 sec (nthreads: 4 speedup 1.9487)
tricount time:         0.000330 sec (dot product method)
tri+prep time:         0.000995 sec (incl time to compute L and U)
compute C time:        0.000279 sec
reduce (C) time:       0.000051 sec
rate      50.18 million edges/sec (incl time for U=triu(A))
rate     151.32 million edges/sec (just tricount itself)
L*U' time (dot):         0.000314 sec (nthreads: 8 speedup 1.73331)
tricount time:         0.000360 sec (dot product method)
tri+prep time:         0.001025 sec (incl time to compute L and U)
compute C time:        0.000314 sec
reduce (C) time:       0.000046 sec
rate      48.69 million edges/sec (incl time for U=triu(A))
rate     138.58 million edges/sec (just tricount itself)
L*U' time (dot):         0.000446 sec (nthreads: 16 speedup 1.21905)
tricount time:         0.000508 sec (dot product method)
tri+prep time:         0.001173 sec (incl time to compute L and U)
compute C time:        0.000446 sec
reduce (C) time:       0.000061 sec
rate      42.57 million edges/sec (incl time for U=triu(A))
rate      98.32 million edges/sec (just tricount itself)
L*U' time (dot):         0.002593 sec (nthreads: 32 speedup 0.209885)
tricount time:         0.002664 sec (dot product method)
tri+prep time:         0.003329 sec (incl time to compute L and U)
compute C time:        0.002593 sec
reduce (C) time:       0.000072 sec
rate      14.99 million edges/sec (incl time for U=triu(A))
rate      18.74 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000216 sec
tricount time:         0.000218 sec (saxpy method)
tri+prep time:         0.000476 sec (incl time to compute L)
compute C time:        0.000216 sec
reduce (C) time:       0.000003 sec
rate     104.84 million edges/sec (incl time for L=tril(A))
rate     228.59 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000200 sec (nthreads: 2 speedup 1.08015)
tricount time:         0.000201 sec (saxpy method)
tri+prep time:         0.000458 sec (incl time to compute L)
compute C time:        0.000200 sec
reduce (C) time:       0.000001 sec
rate     108.90 million edges/sec (incl time for L=tril(A))
rate     248.84 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000204 sec (nthreads: 4 speedup 1.05978)
tricount time:         0.000204 sec (saxpy method)
tri+prep time:         0.000462 sec (incl time to compute L)
compute C time:        0.000204 sec
reduce (C) time:       0.000001 sec
rate     107.99 million edges/sec (incl time for L=tril(A))
rate     244.12 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000272 sec (nthreads: 8 speedup 0.793375)
tricount time:         0.000273 sec (saxpy method)
tri+prep time:         0.000531 sec (incl time to compute L)
compute C time:        0.000272 sec
reduce (C) time:       0.000001 sec
rate      94.08 million edges/sec (incl time for L=tril(A))
rate     182.98 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000328 sec (nthreads: 16 speedup 0.657035)
tricount time:         0.000329 sec (saxpy method)
tri+prep time:         0.000587 sec (incl time to compute L)
compute C time:        0.000328 sec
reduce (C) time:       0.000001 sec
rate      85.00 million edges/sec (incl time for L=tril(A))
rate     151.51 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000270 sec (nthreads: 32 speedup 0.798775)
tricount time:         0.000271 sec (saxpy method)
tri+prep time:         0.000529 sec (incl time to compute L)
compute C time:        0.000270 sec
reduce (C) time:       0.000001 sec
rate      94.44 million edges/sec (incl time for L=tril(A))
rate     184.35 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 67 by 67, 574 entries, from stdin

total time to read A matrix:       0.000461 sec

n 67 # edges 287
U=triu(A) time:        0.000034 sec
L=tril(A) time:        0.000016 sec

------------------------------------- dot product method:
# triangles 120
L*U' time (dot):         0.000035 sec
tricount time:         0.000053 sec (dot product method)
tri+prep time:         0.000103 sec (incl time to compute L and U)
compute C time:        0.000035 sec
reduce (C) time:       0.000018 sec
rate       2.80 million edges/sec (incl time for U=triu(A))
rate       5.41 million edges/sec (just tricount itself)
L*U' time (dot):         0.000019 sec (nthreads: 2 speedup 1.83887)
tricount time:         0.000025 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000019 sec
reduce (C) time:       0.000006 sec
rate       3.82 million edges/sec (incl time for U=triu(A))
rate      11.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.000015 sec (nthreads: 4 speedup 2.32132)
tricount time:         0.000020 sec (dot product method)
tri+prep time:         0.000070 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000005 sec
rate       4.11 million edges/sec (incl time for U=triu(A))
rate      14.21 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 8 speedup 2.56967)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000068 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000004 sec
rate       4.23 million edges/sec (incl time for U=triu(A))
rate      15.75 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 16 speedup 2.65617)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000067 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000004 sec
rate       4.26 million edges/sec (incl time for U=triu(A))
rate      16.23 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 32 speedup 2.78241)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000067 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000004 sec
rate       4.31 million edges/sec (incl time for U=triu(A))
rate      16.97 million edges/sec (just tricount itself)
L*U' time (dot):         0.000018 sec
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000074 sec (incl time to compute L and U)
compute C time:        0.000018 sec
reduce (C) time:       0.000006 sec
rate       3.90 million edges/sec (incl time for U=triu(A))
rate      11.99 million edges/sec (just tricount itself)
L*U' time (dot):         0.000016 sec (nthreads: 2 speedup 1.08925)
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000071 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000005 sec
rate       4.03 million edges/sec (incl time for U=triu(A))
rate      13.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.000015 sec (nthreads: 4 speedup 1.18365)
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000070 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000005 sec
rate       4.09 million edges/sec (incl time for U=triu(A))
rate      13.95 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 8 speedup 1.24209)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000069 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000005 sec
rate       4.16 million edges/sec (incl time for U=triu(A))
rate      14.77 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 16 speedup 1.29284)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000068 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000005 sec
rate       4.20 million edges/sec (incl time for U=triu(A))
rate      15.39 million edges/sec (just tricount itself)
L*U' time (dot):         0.000015 sec (nthreads: 32 speedup 1.16914)
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000070 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000005 sec
rate       4.09 million edges/sec (incl time for U=triu(A))
rate      13.95 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000023 sec
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000040 sec (incl time to compute L)
compute C time:        0.000023 sec
reduce (C) time:       0.000001 sec
rate       7.26 million edges/sec (incl time for L=tril(A))
rate      11.97 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000014 sec (nthreads: 2 speedup 1.69004)
tricount time:         0.000014 sec (saxpy method)
tri+prep time:         0.000030 sec (incl time to compute L)
compute C time:        0.000014 sec
reduce (C) time:       0.000001 sec
rate       9.58 million edges/sec (incl time for L=tril(A))
rate      19.91 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000010 sec (nthreads: 4 speedup 2.21611)
tricount time:         0.000011 sec (saxpy method)
tri+prep time:         0.000027 sec (incl time to compute L)
compute C time:        0.000010 sec
reduce (C) time:       0.000001 sec
rate      10.73 million edges/sec (incl time for L=tril(A))
rate      25.64 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000009 sec (nthreads: 8 speedup 2.60975)
tricount time:         0.000010 sec (saxpy method)
tri+prep time:         0.000025 sec (incl time to compute L)
compute C time:        0.000009 sec
reduce (C) time:       0.000001 sec
rate      11.42 million edges/sec (incl time for L=tril(A))
rate      29.95 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 16 speedup 2.88488)
tricount time:         0.000009 sec (saxpy method)
tri+prep time:         0.000024 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate      11.82 million edges/sec (incl time for L=tril(A))
rate      32.87 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 32 speedup 3.02303)
tricount time:         0.000008 sec (saxpy method)
tri+prep time:         0.000024 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate      12.00 million edges/sec (incl time for L=tril(A))
rate      34.25 million edges/sec (just tricount itself)

--------------------------------------------------------------
Wathen: nx 200 ny 200 n 120801 nz 1762400 method 0, time: 0.265 sec

total time to read A matrix:       0.265351 sec

n 120801 # edges 881200
U=triu(A) time:        0.002842 sec
L=tril(A) time:        0.000658 sec

------------------------------------- dot product method:
# triangles 2160400
L*U' time (dot):         0.024499 sec
tricount time:         0.030571 sec (dot product method)
tri+prep time:         0.034072 sec (incl time to compute L and U)
compute C time:        0.024499 sec
reduce (C) time:       0.006072 sec
rate      25.86 million edges/sec (incl time for U=triu(A))
rate      28.82 million edges/sec (just tricount itself)
L*U' time (dot):         0.013759 sec (nthreads: 2 speedup 1.78064)
tricount time:         0.017153 sec (dot product method)
tri+prep time:         0.020653 sec (incl time to compute L and U)
compute C time:        0.013759 sec
reduce (C) time:       0.003394 sec
rate      42.67 million edges/sec (incl time for U=triu(A))
rate      51.37 million edges/sec (just tricount itself)
L*U' time (dot):         0.007938 sec (nthreads: 4 speedup 3.08634)
tricount time:         0.009711 sec (dot product method)
tri+prep time:         0.013211 sec (incl time to compute L and U)
compute C time:        0.007938 sec
reduce (C) time:       0.001773 sec
rate      66.70 million edges/sec (incl time for U=triu(A))
rate      90.75 million edges/sec (just tricount itself)
L*U' time (dot):         0.004699 sec (nthreads: 8 speedup 5.21387)
tricount time:         0.005944 sec (dot product method)
tri+prep time:         0.009445 sec (incl time to compute L and U)
compute C time:        0.004699 sec
reduce (C) time:       0.001245 sec
rate      93.30 million edges/sec (incl time for U=triu(A))
rate     148.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.003389 sec (nthreads: 16 speedup 7.22962)
tricount time:         0.004137 sec (dot product method)
tri+prep time:         0.007638 sec (incl time to compute L and U)
compute C time:        0.003389 sec
reduce (C) time:       0.000748 sec
rate     115.38 million edges/sec (incl time for U=triu(A))
rate     213.01 million edges/sec (just tricount itself)
L*U' time (dot):         0.003373 sec (nthreads: 32 speedup 7.26303)
tricount time:         0.003987 sec (dot product method)
tri+prep time:         0.007488 sec (incl time to compute L and U)
compute C time:        0.003373 sec
reduce (C) time:       0.000614 sec
rate     117.68 million edges/sec (incl time for U=triu(A))
rate     220.99 million edges/sec (just tricount itself)
L*U' time (dot):         0.023954 sec
tricount time:         0.029775 sec (dot product method)
tri+prep time:         0.033276 sec (incl time to compute L and U)
compute C time:        0.023954 sec
reduce (C) time:       0.005821 sec
rate      26.48 million edges/sec (incl time for U=triu(A))
rate      29.60 million edges/sec (just tricount itself)
L*U' time (dot):         0.013907 sec (nthreads: 2 speedup 1.72241)
tricount time:         0.016961 sec (dot product method)
tri+prep time:         0.020461 sec (incl time to compute L and U)
compute C time:        0.013907 sec
reduce (C) time:       0.003054 sec
rate      43.07 million edges/sec (incl time for U=triu(A))
rate      51.96 million edges/sec (just tricount itself)
L*U' time (dot):         0.007994 sec (nthreads: 4 speedup 2.99651)
tricount time:         0.009642 sec (dot product method)
tri+prep time:         0.013142 sec (incl time to compute L and U)
compute C time:        0.007994 sec
reduce (C) time:       0.001648 sec
rate      67.05 million edges/sec (incl time for U=triu(A))
rate      91.40 million edges/sec (just tricount itself)
L*U' time (dot):         0.004711 sec (nthreads: 8 speedup 5.08493)
tricount time:         0.005891 sec (dot product method)
tri+prep time:         0.009391 sec (incl time to compute L and U)
compute C time:        0.004711 sec
reduce (C) time:       0.001180 sec
rate      93.83 million edges/sec (incl time for U=triu(A))
rate     149.59 million edges/sec (just tricount itself)
L*U' time (dot):         0.003173 sec (nthreads: 16 speedup 7.54913)
tricount time:         0.003935 sec (dot product method)
tri+prep time:         0.007435 sec (incl time to compute L and U)
compute C time:        0.003173 sec
reduce (C) time:       0.000762 sec
rate     118.52 million edges/sec (incl time for U=triu(A))
rate     223.95 million edges/sec (just tricount itself)
L*U' time (dot):         0.003031 sec (nthreads: 32 speedup 7.90172)
tricount time:         0.003651 sec (dot product method)
tri+prep time:         0.007152 sec (incl time to compute L and U)
compute C time:        0.003031 sec
reduce (C) time:       0.000620 sec
rate     123.21 million edges/sec (incl time for U=triu(A))
rate     241.34 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.014269 sec
tricount time:         0.017304 sec (saxpy method)
tri+prep time:         0.017962 sec (incl time to compute L)
compute C time:        0.014269 sec
reduce (C) time:       0.003035 sec
rate      49.06 million edges/sec (incl time for L=tril(A))
rate      50.92 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.015079 sec (nthreads: 2 speedup 0.946286)
tricount time:         0.016630 sec (saxpy method)
tri+prep time:         0.017288 sec (incl time to compute L)
compute C time:        0.015079 sec
reduce (C) time:       0.001551 sec
rate      50.97 million edges/sec (incl time for L=tril(A))
rate      52.99 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.009298 sec (nthreads: 4 speedup 1.53465)
tricount time:         0.010145 sec (saxpy method)
tri+prep time:         0.010804 sec (incl time to compute L)
compute C time:        0.009298 sec
reduce (C) time:       0.000848 sec
rate      81.56 million edges/sec (incl time for L=tril(A))
rate      86.86 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.006354 sec (nthreads: 8 speedup 2.2456)
tricount time:         0.006913 sec (saxpy method)
tri+prep time:         0.007571 sec (incl time to compute L)
compute C time:        0.006354 sec
reduce (C) time:       0.000559 sec
rate     116.39 million edges/sec (incl time for L=tril(A))
rate     127.47 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.004737 sec (nthreads: 16 speedup 3.01222)
tricount time:         0.005076 sec (saxpy method)
tri+prep time:         0.005734 sec (incl time to compute L)
compute C time:        0.004737 sec
reduce (C) time:       0.000339 sec
rate     153.67 million edges/sec (incl time for L=tril(A))
rate     173.60 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.005958 sec (nthreads: 32 speedup 2.39487)
tricount time:         0.007257 sec (saxpy method)
tri+prep time:         0.007915 sec (incl time to compute L)
compute C time:        0.005958 sec
reduce (C) time:       0.001299 sec
rate     111.33 million edges/sec (incl time for L=tril(A))
rate     121.43 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 0 time 0.047 sec

total time to read A matrix:       0.052613 sec

n 10000 # edges 99884
U=triu(A) time:        0.004875 sec
L=tril(A) time:        0.002414 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.012809 sec
tricount time:         0.013244 sec (dot product method)
tri+prep time:         0.020534 sec (incl time to compute L and U)
compute C time:        0.012809 sec
reduce (C) time:       0.000435 sec
rate       4.86 million edges/sec (incl time for U=triu(A))
rate       7.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.007453 sec (nthreads: 2 speedup 1.71867)
tricount time:         0.007726 sec (dot product method)
tri+prep time:         0.015015 sec (incl time to compute L and U)
compute C time:        0.007453 sec
reduce (C) time:       0.000273 sec
rate       6.65 million edges/sec (incl time for U=triu(A))
rate      12.93 million edges/sec (just tricount itself)
L*U' time (dot):         0.004240 sec (nthreads: 4 speedup 3.02105)
tricount time:         0.004419 sec (dot product method)
tri+prep time:         0.011708 sec (incl time to compute L and U)
compute C time:        0.004240 sec
reduce (C) time:       0.000179 sec
rate       8.53 million edges/sec (incl time for U=triu(A))
rate      22.60 million edges/sec (just tricount itself)
L*U' time (dot):         0.002501 sec (nthreads: 8 speedup 5.12154)
tricount time:         0.002629 sec (dot product method)
tri+prep time:         0.009918 sec (incl time to compute L and U)
compute C time:        0.002501 sec
reduce (C) time:       0.000128 sec
rate      10.07 million edges/sec (incl time for U=triu(A))
rate      38.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.001756 sec (nthreads: 16 speedup 7.29345)
tricount time:         0.002064 sec (dot product method)
tri+prep time:         0.009353 sec (incl time to compute L and U)
compute C time:        0.001756 sec
reduce (C) time:       0.000308 sec
rate      10.68 million edges/sec (incl time for U=triu(A))
rate      48.39 million edges/sec (just tricount itself)
L*U' time (dot):         0.001595 sec (nthreads: 32 speedup 8.02925)
tricount time:         0.002703 sec (dot product method)
tri+prep time:         0.009993 sec (incl time to compute L and U)
compute C time:        0.001595 sec
reduce (C) time:       0.001108 sec
rate      10.00 million edges/sec (incl time for U=triu(A))
rate      36.95 million edges/sec (just tricount itself)
L*U' time (dot):         0.011667 sec
tricount time:         0.012083 sec (dot product method)
tri+prep time:         0.019372 sec (incl time to compute L and U)
compute C time:        0.011667 sec
reduce (C) time:       0.000416 sec
rate       5.16 million edges/sec (incl time for U=triu(A))
rate       8.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.006723 sec (nthreads: 2 speedup 1.73533)
tricount time:         0.007018 sec (dot product method)
tri+prep time:         0.014307 sec (incl time to compute L and U)
compute C time:        0.006723 sec
reduce (C) time:       0.000295 sec
rate       6.98 million edges/sec (incl time for U=triu(A))
rate      14.23 million edges/sec (just tricount itself)
L*U' time (dot):         0.004179 sec (nthreads: 4 speedup 2.79198)
tricount time:         0.004378 sec (dot product method)
tri+prep time:         0.011667 sec (incl time to compute L and U)
compute C time:        0.004179 sec
reduce (C) time:       0.000199 sec
rate       8.56 million edges/sec (incl time for U=triu(A))
rate      22.82 million edges/sec (just tricount itself)
L*U' time (dot):         0.002400 sec (nthreads: 8 speedup 4.86074)
tricount time:         0.002541 sec (dot product method)
tri+prep time:         0.009830 sec (incl time to compute L and U)
compute C time:        0.002400 sec
reduce (C) time:       0.000141 sec
rate      10.16 million edges/sec (incl time for U=triu(A))
rate      39.31 million edges/sec (just tricount itself)
L*U' time (dot):         0.001670 sec (nthreads: 16 speedup 6.98816)
tricount time:         0.002017 sec (dot product method)
tri+prep time:         0.009307 sec (incl time to compute L and U)
compute C time:        0.001670 sec
reduce (C) time:       0.000348 sec
rate      10.73 million edges/sec (incl time for U=triu(A))
rate      49.52 million edges/sec (just tricount itself)
L*U' time (dot):         0.001429 sec (nthreads: 32 speedup 8.16447)
tricount time:         0.002488 sec (dot product method)
tri+prep time:         0.009777 sec (incl time to compute L and U)
compute C time:        0.001429 sec
reduce (C) time:       0.001059 sec
rate      10.22 million edges/sec (incl time for U=triu(A))
rate      40.15 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.003589 sec
tricount time:         0.003597 sec (saxpy method)
tri+prep time:         0.006011 sec (incl time to compute L)
compute C time:        0.003589 sec
reduce (C) time:       0.000007 sec
rate      16.62 million edges/sec (incl time for L=tril(A))
rate      27.77 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002555 sec (nthreads: 2 speedup 1.40504)
tricount time:         0.002562 sec (saxpy method)
tri+prep time:         0.004976 sec (incl time to compute L)
compute C time:        0.002555 sec
reduce (C) time:       0.000007 sec
rate      20.07 million edges/sec (incl time for L=tril(A))
rate      38.99 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001496 sec (nthreads: 4 speedup 2.39962)
tricount time:         0.001503 sec (saxpy method)
tri+prep time:         0.003917 sec (incl time to compute L)
compute C time:        0.001496 sec
reduce (C) time:       0.000007 sec
rate      25.50 million edges/sec (incl time for L=tril(A))
rate      66.46 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001331 sec (nthreads: 8 speedup 2.69702)
tricount time:         0.001339 sec (saxpy method)
tri+prep time:         0.003753 sec (incl time to compute L)
compute C time:        0.001331 sec
reduce (C) time:       0.000008 sec
rate      26.62 million edges/sec (incl time for L=tril(A))
rate      74.62 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001434 sec (nthreads: 16 speedup 2.50231)
tricount time:         0.001442 sec (saxpy method)
tri+prep time:         0.003856 sec (incl time to compute L)
compute C time:        0.001434 sec
reduce (C) time:       0.000008 sec
rate      25.90 million edges/sec (incl time for L=tril(A))
rate      69.25 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.003281 sec (nthreads: 32 speedup 1.09414)
tricount time:         0.003288 sec (saxpy method)
tri+prep time:         0.005703 sec (incl time to compute L)
compute C time:        0.003281 sec
reduce (C) time:       0.000008 sec
rate      17.52 million edges/sec (incl time for L=tril(A))
rate      30.37 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 1 time 0.048 sec

total time to read A matrix:       0.053572 sec

n 10000 # edges 99884
U=triu(A) time:        0.003767 sec
L=tril(A) time:        0.002879 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.015468 sec
tricount time:         0.015997 sec (dot product method)
tri+prep time:         0.022643 sec (incl time to compute L and U)
compute C time:        0.015468 sec
reduce (C) time:       0.000529 sec
rate       4.41 million edges/sec (incl time for U=triu(A))
rate       6.24 million edges/sec (just tricount itself)
L*U' time (dot):         0.007910 sec (nthreads: 2 speedup 1.9555)
tricount time:         0.008214 sec (dot product method)
tri+prep time:         0.014860 sec (incl time to compute L and U)
compute C time:        0.007910 sec
reduce (C) time:       0.000304 sec
rate       6.72 million edges/sec (incl time for U=triu(A))
rate      12.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.004747 sec (nthreads: 4 speedup 3.25867)
tricount time:         0.004944 sec (dot product method)
tri+prep time:         0.011590 sec (incl time to compute L and U)
compute C time:        0.004747 sec
reduce (C) time:       0.000198 sec
rate       8.62 million edges/sec (incl time for U=triu(A))
rate      20.20 million edges/sec (just tricount itself)
L*U' time (dot):         0.002834 sec (nthreads: 8 speedup 5.45896)
tricount time:         0.002975 sec (dot product method)
tri+prep time:         0.009621 sec (incl time to compute L and U)
compute C time:        0.002834 sec
reduce (C) time:       0.000141 sec
rate      10.38 million edges/sec (incl time for U=triu(A))
rate      33.57 million edges/sec (just tricount itself)
L*U' time (dot):         0.001816 sec (nthreads: 16 speedup 8.51873)
tricount time:         0.002170 sec (dot product method)
tri+prep time:         0.008816 sec (incl time to compute L and U)
compute C time:        0.001816 sec
reduce (C) time:       0.000354 sec
rate      11.33 million edges/sec (incl time for U=triu(A))
rate      46.03 million edges/sec (just tricount itself)
L*U' time (dot):         0.001665 sec (nthreads: 32 speedup 9.28851)
tricount time:         0.002978 sec (dot product method)
tri+prep time:         0.009624 sec (incl time to compute L and U)
compute C time:        0.001665 sec
reduce (C) time:       0.001313 sec
rate      10.38 million edges/sec (incl time for U=triu(A))
rate      33.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.014717 sec
tricount time:         0.015224 sec (dot product method)
tri+prep time:         0.021870 sec (incl time to compute L and U)
compute C time:        0.014717 sec
reduce (C) time:       0.000508 sec
rate       4.57 million edges/sec (incl time for U=triu(A))
rate       6.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.007432 sec (nthreads: 2 speedup 1.98019)
tricount time:         0.007750 sec (dot product method)
tri+prep time:         0.014396 sec (incl time to compute L and U)
compute C time:        0.007432 sec
reduce (C) time:       0.000318 sec
rate       6.94 million edges/sec (incl time for U=triu(A))
rate      12.89 million edges/sec (just tricount itself)
L*U' time (dot):         0.004489 sec (nthreads: 4 speedup 3.27864)
tricount time:         0.004697 sec (dot product method)
tri+prep time:         0.011344 sec (incl time to compute L and U)
compute C time:        0.004489 sec
reduce (C) time:       0.000209 sec
rate       8.81 million edges/sec (incl time for U=triu(A))
rate      21.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.002639 sec (nthreads: 8 speedup 5.57699)
tricount time:         0.002791 sec (dot product method)
tri+prep time:         0.009437 sec (incl time to compute L and U)
compute C time:        0.002639 sec
reduce (C) time:       0.000152 sec
rate      10.58 million edges/sec (incl time for U=triu(A))
rate      35.79 million edges/sec (just tricount itself)
L*U' time (dot):         0.001709 sec (nthreads: 16 speedup 8.61001)
tricount time:         0.002060 sec (dot product method)
tri+prep time:         0.008706 sec (incl time to compute L and U)
compute C time:        0.001709 sec
reduce (C) time:       0.000351 sec
rate      11.47 million edges/sec (incl time for U=triu(A))
rate      48.48 million edges/sec (just tricount itself)
L*U' time (dot):         0.001686 sec (nthreads: 32 speedup 8.72624)
tricount time:         0.002944 sec (dot product method)
tri+prep time:         0.009590 sec (incl time to compute L and U)
compute C time:        0.001686 sec
reduce (C) time:       0.001258 sec
rate      10.41 million edges/sec (incl time for U=triu(A))
rate      33.92 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.004211 sec
tricount time:         0.004221 sec (saxpy method)
tri+prep time:         0.007100 sec (incl time to compute L)
compute C time:        0.004211 sec
reduce (C) time:       0.000009 sec
rate      14.07 million edges/sec (incl time for L=tril(A))
rate      23.67 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002954 sec (nthreads: 2 speedup 1.42543)
tricount time:         0.002963 sec (saxpy method)
tri+prep time:         0.005843 sec (incl time to compute L)
compute C time:        0.002954 sec
reduce (C) time:       0.000009 sec
rate      17.09 million edges/sec (incl time for L=tril(A))
rate      33.71 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001735 sec (nthreads: 4 speedup 2.42709)
tricount time:         0.001744 sec (saxpy method)
tri+prep time:         0.004624 sec (incl time to compute L)
compute C time:        0.001735 sec
reduce (C) time:       0.000009 sec
rate      21.60 million edges/sec (incl time for L=tril(A))
rate      57.26 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001329 sec (nthreads: 8 speedup 3.16988)
tricount time:         0.001337 sec (saxpy method)
tri+prep time:         0.004217 sec (incl time to compute L)
compute C time:        0.001329 sec
reduce (C) time:       0.000009 sec
rate      23.69 million edges/sec (incl time for L=tril(A))
rate      74.68 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001593 sec (nthreads: 16 speedup 2.64442)
tricount time:         0.001602 sec (saxpy method)
tri+prep time:         0.004481 sec (incl time to compute L)
compute C time:        0.001593 sec
reduce (C) time:       0.000009 sec
rate      22.29 million edges/sec (incl time for L=tril(A))
rate      62.36 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002610 sec (nthreads: 32 speedup 1.61343)
tricount time:         0.002621 sec (saxpy method)
tri+prep time:         0.005500 sec (incl time to compute L)
compute C time:        0.002610 sec
reduce (C) time:       0.000011 sec
rate      18.16 million edges/sec (incl time for L=tril(A))
rate      38.11 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 0 time 4.782 sec

total time to read A matrix:       4.798938 sec

n 100000 # edges 9990165
U=triu(A) time:        0.008415 sec
L=tril(A) time:        0.008534 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):         9.913710 sec
tricount time:         9.969446 sec (dot product method)
tri+prep time:         9.986396 sec (incl time to compute L and U)
compute C time:        9.913710 sec
reduce (C) time:       0.055736 sec
rate       1.00 million edges/sec (incl time for U=triu(A))
rate       1.00 million edges/sec (just tricount itself)
L*U' time (dot):         5.027411 sec (nthreads: 2 speedup 1.97193)
tricount time:         5.061805 sec (dot product method)
tri+prep time:         5.078754 sec (incl time to compute L and U)
compute C time:        5.027411 sec
reduce (C) time:       0.034394 sec
rate       1.97 million edges/sec (incl time for U=triu(A))
rate       1.97 million edges/sec (just tricount itself)
L*U' time (dot):         2.515762 sec (nthreads: 4 speedup 3.94064)
tricount time:         2.536097 sec (dot product method)
tri+prep time:         2.553047 sec (incl time to compute L and U)
compute C time:        2.515762 sec
reduce (C) time:       0.020335 sec
rate       3.91 million edges/sec (incl time for U=triu(A))
rate       3.94 million edges/sec (just tricount itself)
L*U' time (dot):         1.288009 sec (nthreads: 8 speedup 7.69693)
tricount time:         1.301608 sec (dot product method)
tri+prep time:         1.318557 sec (incl time to compute L and U)
compute C time:        1.288009 sec
reduce (C) time:       0.013599 sec
rate       7.58 million edges/sec (incl time for U=triu(A))
rate       7.68 million edges/sec (just tricount itself)
L*U' time (dot):         0.651681 sec (nthreads: 16 speedup 15.2125)
tricount time:         0.662983 sec (dot product method)
tri+prep time:         0.679932 sec (incl time to compute L and U)
compute C time:        0.651681 sec
reduce (C) time:       0.011302 sec
rate      14.69 million edges/sec (incl time for U=triu(A))
rate      15.07 million edges/sec (just tricount itself)
L*U' time (dot):         0.390050 sec (nthreads: 32 speedup 25.4165)
tricount time:         0.401234 sec (dot product method)
tri+prep time:         0.418183 sec (incl time to compute L and U)
compute C time:        0.390050 sec
reduce (C) time:       0.011183 sec
rate      23.89 million edges/sec (incl time for U=triu(A))
rate      24.90 million edges/sec (just tricount itself)
L*U' time (dot):        10.125150 sec
tricount time:        10.173842 sec (dot product method)
tri+prep time:        10.190791 sec (incl time to compute L and U)
compute C time:       10.125150 sec
reduce (C) time:       0.048692 sec
rate       0.98 million edges/sec (incl time for U=triu(A))
rate       0.98 million edges/sec (just tricount itself)
L*U' time (dot):         5.132572 sec (nthreads: 2 speedup 1.97272)
tricount time:         5.162895 sec (dot product method)
tri+prep time:         5.179845 sec (incl time to compute L and U)
compute C time:        5.132572 sec
reduce (C) time:       0.030323 sec
rate       1.93 million edges/sec (incl time for U=triu(A))
rate       1.93 million edges/sec (just tricount itself)
L*U' time (dot):         2.582158 sec (nthreads: 4 speedup 3.9212)
tricount time:         2.601600 sec (dot product method)
tri+prep time:         2.618549 sec (incl time to compute L and U)
compute C time:        2.582158 sec
reduce (C) time:       0.019442 sec
rate       3.82 million edges/sec (incl time for U=triu(A))
rate       3.84 million edges/sec (just tricount itself)
L*U' time (dot):         1.318898 sec (nthreads: 8 speedup 7.67698)
tricount time:         1.334693 sec (dot product method)
tri+prep time:         1.351643 sec (incl time to compute L and U)
compute C time:        1.318898 sec
reduce (C) time:       0.015796 sec
rate       7.39 million edges/sec (incl time for U=triu(A))
rate       7.48 million edges/sec (just tricount itself)
L*U' time (dot):         0.669443 sec (nthreads: 16 speedup 15.1247)
tricount time:         0.681835 sec (dot product method)
tri+prep time:         0.698784 sec (incl time to compute L and U)
compute C time:        0.669443 sec
reduce (C) time:       0.012392 sec
rate      14.30 million edges/sec (incl time for U=triu(A))
rate      14.65 million edges/sec (just tricount itself)
L*U' time (dot):         0.402252 sec (nthreads: 32 speedup 25.1712)
tricount time:         0.415266 sec (dot product method)
tri+prep time:         0.432215 sec (incl time to compute L and U)
compute C time:        0.402252 sec
reduce (C) time:       0.013014 sec
rate      23.11 million edges/sec (incl time for U=triu(A))
rate      24.06 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         2.247896 sec
tricount time:         2.254181 sec (saxpy method)
tri+prep time:         2.262715 sec (incl time to compute L)
compute C time:        2.247896 sec
reduce (C) time:       0.006284 sec
rate       4.42 million edges/sec (incl time for L=tril(A))
rate       4.43 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.320657 sec (nthreads: 2 speedup 1.7021)
tricount time:         1.323845 sec (saxpy method)
tri+prep time:         1.332379 sec (incl time to compute L)
compute C time:        1.320657 sec
reduce (C) time:       0.003188 sec
rate       7.50 million edges/sec (incl time for L=tril(A))
rate       7.55 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.710608 sec (nthreads: 4 speedup 3.16334)
tricount time:         0.712385 sec (saxpy method)
tri+prep time:         0.720919 sec (incl time to compute L)
compute C time:        0.710608 sec
reduce (C) time:       0.001777 sec
rate      13.86 million edges/sec (incl time for L=tril(A))
rate      14.02 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.366385 sec (nthreads: 8 speedup 6.13534)
tricount time:         0.367124 sec (saxpy method)
tri+prep time:         0.375658 sec (incl time to compute L)
compute C time:        0.366385 sec
reduce (C) time:       0.000739 sec
rate      26.59 million edges/sec (incl time for L=tril(A))
rate      27.21 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.205298 sec (nthreads: 16 speedup 10.9495)
tricount time:         0.205675 sec (saxpy method)
tri+prep time:         0.214209 sec (incl time to compute L)
compute C time:        0.205298 sec
reduce (C) time:       0.000377 sec
rate      46.64 million edges/sec (incl time for L=tril(A))
rate      48.57 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.186703 sec (nthreads: 32 speedup 12.04)
tricount time:         0.187294 sec (saxpy method)
tri+prep time:         0.195828 sec (incl time to compute L)
compute C time:        0.186703 sec
reduce (C) time:       0.000591 sec
rate      51.01 million edges/sec (incl time for L=tril(A))
rate      53.34 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 1 time 4.072 sec

total time to read A matrix:       4.088308 sec

n 100000 # edges 9990165
U=triu(A) time:        0.008345 sec
L=tril(A) time:        0.010288 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):         9.913379 sec
tricount time:         9.968770 sec (dot product method)
tri+prep time:         9.987403 sec (incl time to compute L and U)
compute C time:        9.913379 sec
reduce (C) time:       0.055392 sec
rate       1.00 million edges/sec (incl time for U=triu(A))
rate       1.00 million edges/sec (just tricount itself)
L*U' time (dot):         4.995893 sec (nthreads: 2 speedup 1.98431)
tricount time:         5.030356 sec (dot product method)
tri+prep time:         5.048989 sec (incl time to compute L and U)
compute C time:        4.995893 sec
reduce (C) time:       0.034463 sec
rate       1.98 million edges/sec (incl time for U=triu(A))
rate       1.99 million edges/sec (just tricount itself)
L*U' time (dot):         2.533032 sec (nthreads: 4 speedup 3.91364)
tricount time:         2.552996 sec (dot product method)
tri+prep time:         2.571629 sec (incl time to compute L and U)
compute C time:        2.533032 sec
reduce (C) time:       0.019964 sec
rate       3.88 million edges/sec (incl time for U=triu(A))
rate       3.91 million edges/sec (just tricount itself)
L*U' time (dot):         1.281898 sec (nthreads: 8 speedup 7.73336)
tricount time:         1.295744 sec (dot product method)
tri+prep time:         1.314377 sec (incl time to compute L and U)
compute C time:        1.281898 sec
reduce (C) time:       0.013847 sec
rate       7.60 million edges/sec (incl time for U=triu(A))
rate       7.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.652244 sec (nthreads: 16 speedup 15.1989)
tricount time:         0.663780 sec (dot product method)
tri+prep time:         0.682413 sec (incl time to compute L and U)
compute C time:        0.652244 sec
reduce (C) time:       0.011536 sec
rate      14.64 million edges/sec (incl time for U=triu(A))
rate      15.05 million edges/sec (just tricount itself)
L*U' time (dot):         0.390562 sec (nthreads: 32 speedup 25.3823)
tricount time:         0.401854 sec (dot product method)
tri+prep time:         0.420487 sec (incl time to compute L and U)
compute C time:        0.390562 sec
reduce (C) time:       0.011292 sec
rate      23.76 million edges/sec (incl time for U=triu(A))
rate      24.86 million edges/sec (just tricount itself)
L*U' time (dot):        10.099060 sec
tricount time:        10.147118 sec (dot product method)
tri+prep time:        10.165751 sec (incl time to compute L and U)
compute C time:       10.099060 sec
reduce (C) time:       0.048058 sec
rate       0.98 million edges/sec (incl time for U=triu(A))
rate       0.98 million edges/sec (just tricount itself)
L*U' time (dot):         5.096330 sec (nthreads: 2 speedup 1.98163)
tricount time:         5.126576 sec (dot product method)
tri+prep time:         5.145209 sec (incl time to compute L and U)
compute C time:        5.096330 sec
reduce (C) time:       0.030246 sec
rate       1.94 million edges/sec (incl time for U=triu(A))
rate       1.95 million edges/sec (just tricount itself)
L*U' time (dot):         2.583094 sec (nthreads: 4 speedup 3.90967)
tricount time:         2.603565 sec (dot product method)
tri+prep time:         2.622198 sec (incl time to compute L and U)
compute C time:        2.583094 sec
reduce (C) time:       0.020470 sec
rate       3.81 million edges/sec (incl time for U=triu(A))
rate       3.84 million edges/sec (just tricount itself)
L*U' time (dot):         1.306332 sec (nthreads: 8 speedup 7.73085)
tricount time:         1.321474 sec (dot product method)
tri+prep time:         1.340107 sec (incl time to compute L and U)
compute C time:        1.306332 sec
reduce (C) time:       0.015141 sec
rate       7.45 million edges/sec (incl time for U=triu(A))
rate       7.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.667740 sec (nthreads: 16 speedup 15.1242)
tricount time:         0.679164 sec (dot product method)
tri+prep time:         0.697797 sec (incl time to compute L and U)
compute C time:        0.667740 sec
reduce (C) time:       0.011424 sec
rate      14.32 million edges/sec (incl time for U=triu(A))
rate      14.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.400885 sec (nthreads: 32 speedup 25.1919)
tricount time:         0.413539 sec (dot product method)
tri+prep time:         0.432172 sec (incl time to compute L and U)
compute C time:        0.400885 sec
reduce (C) time:       0.012654 sec
rate      23.12 million edges/sec (incl time for U=triu(A))
rate      24.16 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         2.205308 sec
tricount time:         2.211573 sec (saxpy method)
tri+prep time:         2.221861 sec (incl time to compute L)
compute C time:        2.205308 sec
reduce (C) time:       0.006265 sec
rate       4.50 million edges/sec (incl time for L=tril(A))
rate       4.52 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.276372 sec (nthreads: 2 speedup 1.72779)
tricount time:         1.279559 sec (saxpy method)
tri+prep time:         1.289847 sec (incl time to compute L)
compute C time:        1.276372 sec
reduce (C) time:       0.003188 sec
rate       7.75 million edges/sec (incl time for L=tril(A))
rate       7.81 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.701505 sec (nthreads: 4 speedup 3.14368)
tricount time:         0.702982 sec (saxpy method)
tri+prep time:         0.713270 sec (incl time to compute L)
compute C time:        0.701505 sec
reduce (C) time:       0.001476 sec
rate      14.01 million edges/sec (incl time for L=tril(A))
rate      14.21 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.378272 sec (nthreads: 8 speedup 5.82995)
tricount time:         0.378964 sec (saxpy method)
tri+prep time:         0.389252 sec (incl time to compute L)
compute C time:        0.378272 sec
reduce (C) time:       0.000692 sec
rate      25.67 million edges/sec (incl time for L=tril(A))
rate      26.36 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.207418 sec (nthreads: 16 speedup 10.6322)
tricount time:         0.207777 sec (saxpy method)
tri+prep time:         0.218064 sec (incl time to compute L)
compute C time:        0.207418 sec
reduce (C) time:       0.000359 sec
rate      45.81 million edges/sec (incl time for L=tril(A))
rate      48.08 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.184808 sec (nthreads: 32 speedup 11.9329)
tricount time:         0.185405 sec (saxpy method)
tri+prep time:         0.195693 sec (incl time to compute L)
compute C time:        0.184808 sec
reduce (C) time:       0.000597 sec
rate      51.05 million edges/sec (incl time for L=tril(A))
rate      53.88 million edges/sec (just tricount itself)

