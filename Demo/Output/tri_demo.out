--------------------------------------------------------------
Wathen: nx 4 ny 4 n 65 nz 752 method 0, time: 0.000 sec

total time to read A matrix:       0.000305 sec

n 65 # edges 376
U=triu(A) time:        0.000044 sec
L=tril(A) time:        0.000030 sec

------------------------------------- dot product method:
# triangles 872
L*U' time (dot):         0.000087 sec
tricount time:         0.000096 sec (dot product method)
tri+prep time:         0.000170 sec (incl time to compute L and U)
compute C time:        0.000087 sec
reduce (C) time:       0.000009 sec
rate     2.21 million edges/sec (incl time for U=triu(A))
rate     3.91 million edges/sec (just tricount itself)
L*U' time (dot):         0.000055 sec (nthreads: 2 speedup 1.56624)
tricount time:         0.000062 sec (dot product method)
tri+prep time:         0.000136 sec (incl time to compute L and U)
compute C time:        0.000055 sec
reduce (C) time:       0.000006 sec
rate     2.77 million edges/sec (incl time for U=triu(A))
rate     6.09 million edges/sec (just tricount itself)
L*U' time (dot):         0.000053 sec (nthreads: 4 speedup 1.64522)
tricount time:         0.000059 sec (dot product method)
tri+prep time:         0.000133 sec (incl time to compute L and U)
compute C time:        0.000053 sec
reduce (C) time:       0.000006 sec
rate     2.83 million edges/sec (incl time for U=triu(A))
rate     6.40 million edges/sec (just tricount itself)
L*U' time (dot):         0.000052 sec (nthreads: 8 speedup 1.67945)
tricount time:         0.000058 sec (dot product method)
tri+prep time:         0.000132 sec (incl time to compute L and U)
compute C time:        0.000052 sec
reduce (C) time:       0.000006 sec
rate     2.85 million edges/sec (incl time for U=triu(A))
rate     6.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000058 sec
tricount time:         0.000065 sec (dot product method)
tri+prep time:         0.000140 sec (incl time to compute L and U)
compute C time:        0.000058 sec
reduce (C) time:       0.000007 sec
rate     2.69 million edges/sec (incl time for U=triu(A))
rate     5.76 million edges/sec (just tricount itself)
L*U' time (dot):         0.000053 sec (nthreads: 2 speedup 1.09565)
tricount time:         0.000060 sec (dot product method)
tri+prep time:         0.000134 sec (incl time to compute L and U)
compute C time:        0.000053 sec
reduce (C) time:       0.000006 sec
rate     2.81 million edges/sec (incl time for U=triu(A))
rate     6.31 million edges/sec (just tricount itself)
L*U' time (dot):         0.000053 sec (nthreads: 4 speedup 1.09513)
tricount time:         0.000059 sec (dot product method)
tri+prep time:         0.000134 sec (incl time to compute L and U)
compute C time:        0.000053 sec
reduce (C) time:       0.000006 sec
rate     2.81 million edges/sec (incl time for U=triu(A))
rate     6.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000052 sec (nthreads: 8 speedup 1.12132)
tricount time:         0.000058 sec (dot product method)
tri+prep time:         0.000132 sec (incl time to compute L and U)
compute C time:        0.000052 sec
reduce (C) time:       0.000006 sec
rate     2.85 million edges/sec (incl time for U=triu(A))
rate     6.51 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 872
C<L>=L*L time (saxpy):         0.000087 sec
tricount time:         0.000094 sec (saxpy method)
tri+prep time:         0.000124 sec (incl time to compute L)
compute C time:        0.000087 sec
reduce (C) time:       0.000007 sec
rate     3.03 million edges/sec (incl time for L=tril(A))
rate     3.99 million edges/sec (just tricount itself)
triangles, method 3: 872
C<L>=L*L time (saxpy):         0.000095 sec (nthreads: 2 speedup 0.917612)
tricount time:         0.000102 sec (saxpy method)
tri+prep time:         0.000132 sec (incl time to compute L)
compute C time:        0.000095 sec
reduce (C) time:       0.000007 sec
rate     2.85 million edges/sec (incl time for L=tril(A))
rate     3.68 million edges/sec (just tricount itself)
triangles, method 3: 872
C<L>=L*L time (saxpy):         0.000104 sec (nthreads: 4 speedup 0.839082)
tricount time:         0.000111 sec (saxpy method)
tri+prep time:         0.000141 sec (incl time to compute L)
compute C time:        0.000104 sec
reduce (C) time:       0.000007 sec
rate     2.67 million edges/sec (incl time for L=tril(A))
rate     3.39 million edges/sec (just tricount itself)
triangles, method 3: 872
C<L>=L*L time (saxpy):         0.000063 sec (nthreads: 8 speedup 1.38216)
tricount time:         0.000069 sec (saxpy method)
tri+prep time:         0.000099 sec (incl time to compute L)
compute C time:        0.000063 sec
reduce (C) time:       0.000006 sec
rate     3.78 million edges/sec (incl time for L=tril(A))
rate     5.41 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 5 by 5, nz: 18, method 1 time 0.000 sec

total time to read A matrix:       0.000109 sec

n 5 # edges 9
U=triu(A) time:        0.000023 sec
L=tril(A) time:        0.000004 sec

------------------------------------- dot product method:
# triangles 7
L*U' time (dot):         0.000024 sec
tricount time:         0.000028 sec (dot product method)
tri+prep time:         0.000054 sec (incl time to compute L and U)
compute C time:        0.000024 sec
reduce (C) time:       0.000004 sec
rate     0.17 million edges/sec (incl time for U=triu(A))
rate     0.32 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 2 speedup 4.20823)
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate     0.27 million edges/sec (incl time for U=triu(A))
rate     1.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 4 speedup 5.1653)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate     0.28 million edges/sec (incl time for U=triu(A))
rate     1.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 5.92633)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate     0.29 million edges/sec (incl time for U=triu(A))
rate     1.93 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate     0.28 million edges/sec (incl time for U=triu(A))
rate     1.68 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 1.17136)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate     0.29 million edges/sec (incl time for U=triu(A))
rate     1.98 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 1.1552)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate     0.29 million edges/sec (incl time for U=triu(A))
rate     1.96 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 1.7677)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000029 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000001 sec
rate     0.31 million edges/sec (incl time for U=triu(A))
rate     2.86 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 7
C<L>=L*L time (saxpy):         0.000012 sec
tricount time:         0.000012 sec (saxpy method)
tri+prep time:         0.000016 sec (incl time to compute L)
compute C time:        0.000012 sec
reduce (C) time:       0.000001 sec
rate     0.56 million edges/sec (incl time for L=tril(A))
rate     0.73 million edges/sec (just tricount itself)
triangles, method 3: 7
C<L>=L*L time (saxpy):         0.000004 sec (nthreads: 2 speedup 3.15325)
tricount time:         0.000004 sec (saxpy method)
tri+prep time:         0.000008 sec (incl time to compute L)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     1.14 million edges/sec (incl time for L=tril(A))
rate     2.14 million edges/sec (just tricount itself)
triangles, method 3: 7
C<L>=L*L time (saxpy):         0.000004 sec (nthreads: 4 speedup 2.64388)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000009 sec (incl time to compute L)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate     1.04 million edges/sec (incl time for L=tril(A))
rate     1.81 million edges/sec (just tricount itself)
triangles, method 3: 7
C<L>=L*L time (saxpy):         0.000004 sec (nthreads: 8 speedup 2.84589)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000008 sec (incl time to compute L)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate     1.07 million edges/sec (incl time for L=tril(A))
rate     1.89 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 3 by 3, 0 entries, from stdin

total time to read A matrix:       0.000126 sec

n 3 # edges 0
U=triu(A) time:        0.000025 sec
L=tril(A) time:        0.000005 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000032 sec
tricount time:         0.000034 sec (dot product method)
tri+prep time:         0.000064 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000002 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 8.02136)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000034 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 11.6922)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 12.4628)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 2 speedup 1.14699)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 0.74502)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000034 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 0.844902)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for U=triu(A))
rate     0.00 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000021 sec
tricount time:         0.000022 sec (saxpy method)
tri+prep time:         0.000026 sec (incl time to compute L)
compute C time:        0.000021 sec
reduce (C) time:       0.000001 sec
rate     0.00 million edges/sec (incl time for L=tril(A))
rate     0.00 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000006 sec (nthreads: 2 speedup 3.62225)
tricount time:         0.000006 sec (saxpy method)
tri+prep time:         0.000011 sec (incl time to compute L)
compute C time:        0.000006 sec
reduce (C) time:       0.000000 sec
rate     0.00 million edges/sec (incl time for L=tril(A))
rate     0.00 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000006 sec (nthreads: 4 speedup 3.32879)
tricount time:         0.000007 sec (saxpy method)
tri+prep time:         0.000011 sec (incl time to compute L)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate     0.00 million edges/sec (incl time for L=tril(A))
rate     0.00 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000007 sec (nthreads: 8 speedup 2.97042)
tricount time:         0.000008 sec (saxpy method)
tri+prep time:         0.000012 sec (incl time to compute L)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate     0.00 million edges/sec (incl time for L=tril(A))
rate     0.00 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 4 entries, from stdin

total time to read A matrix:       0.000187 sec

n 4 # edges 2
U=triu(A) time:        0.000027 sec
L=tril(A) time:        0.000004 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000033 sec
tricount time:         0.000036 sec (dot product method)
tri+prep time:         0.000067 sec (incl time to compute L and U)
compute C time:        0.000033 sec
reduce (C) time:       0.000003 sec
rate     0.03 million edges/sec (incl time for U=triu(A))
rate     0.06 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 2 speedup 5.10186)
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate     0.05 million edges/sec (incl time for U=triu(A))
rate     0.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 4 speedup 6.50583)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000037 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate     0.05 million edges/sec (incl time for U=triu(A))
rate     0.35 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 8 speedup 6.72831)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000037 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate     0.05 million edges/sec (incl time for U=triu(A))
rate     0.35 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate     0.05 million edges/sec (incl time for U=triu(A))
rate     0.29 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 2 speedup 0.988701)
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate     0.05 million edges/sec (incl time for U=triu(A))
rate     0.28 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 4 speedup 0.854622)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000039 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate     0.05 million edges/sec (incl time for U=triu(A))
rate     0.24 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 0.826004)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000040 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate     0.05 million edges/sec (incl time for U=triu(A))
rate     0.24 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000022 sec
tricount time:         0.000023 sec (saxpy method)
tri+prep time:         0.000026 sec (incl time to compute L)
compute C time:        0.000022 sec
reduce (C) time:       0.000001 sec
rate     0.08 million edges/sec (incl time for L=tril(A))
rate     0.09 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 2 speedup 2.79358)
tricount time:         0.000009 sec (saxpy method)
tri+prep time:         0.000012 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate     0.16 million edges/sec (incl time for L=tril(A))
rate     0.23 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 4 speedup 2.67218)
tricount time:         0.000009 sec (saxpy method)
tri+prep time:         0.000013 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate     0.15 million edges/sec (incl time for L=tril(A))
rate     0.22 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000009 sec (nthreads: 8 speedup 2.3127)
tricount time:         0.000010 sec (saxpy method)
tri+prep time:         0.000014 sec (incl time to compute L)
compute C time:        0.000009 sec
reduce (C) time:       0.000001 sec
rate     0.14 million edges/sec (incl time for L=tril(A))
rate     0.19 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 10 entries, from stdin

total time to read A matrix:       0.000184 sec

n 4 # edges 5
U=triu(A) time:        0.000028 sec
L=tril(A) time:        0.000003 sec

------------------------------------- dot product method:
# triangles 2
L*U' time (dot):         0.000031 sec
tricount time:         0.000035 sec (dot product method)
tri+prep time:         0.000066 sec (incl time to compute L and U)
compute C time:        0.000031 sec
reduce (C) time:       0.000004 sec
rate     0.08 million edges/sec (incl time for U=triu(A))
rate     0.14 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 8.64913)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000035 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate     0.14 million edges/sec (incl time for U=triu(A))
rate     1.20 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 4 speedup 13.3525)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000034 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000001 sec
rate     0.15 million edges/sec (incl time for U=triu(A))
rate     1.77 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 8 speedup 14.6182)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000034 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate     0.15 million edges/sec (incl time for U=triu(A))
rate     1.98 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000034 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000001 sec
rate     0.15 million edges/sec (incl time for U=triu(A))
rate     1.67 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 2 speedup 1.17719)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000034 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate     0.15 million edges/sec (incl time for U=triu(A))
rate     1.95 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 4 speedup 1.25271)
tricount time:         0.000002 sec (dot product method)
tri+prep time:         0.000034 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate     0.15 million edges/sec (incl time for U=triu(A))
rate     2.05 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 8 speedup 1.30573)
tricount time:         0.000002 sec (dot product method)
tri+prep time:         0.000034 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate     0.15 million edges/sec (incl time for U=triu(A))
rate     2.13 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 2
C<L>=L*L time (saxpy):         0.000014 sec
tricount time:         0.000015 sec (saxpy method)
tri+prep time:         0.000018 sec (incl time to compute L)
compute C time:        0.000014 sec
reduce (C) time:       0.000001 sec
rate     0.28 million edges/sec (incl time for L=tril(A))
rate     0.33 million edges/sec (just tricount itself)
triangles, method 3: 2
C<L>=L*L time (saxpy):         0.000003 sec (nthreads: 2 speedup 5.06606)
tricount time:         0.000003 sec (saxpy method)
tri+prep time:         0.000006 sec (incl time to compute L)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     0.78 million edges/sec (incl time for L=tril(A))
rate     1.55 million edges/sec (just tricount itself)
triangles, method 3: 2
C<L>=L*L time (saxpy):         0.000002 sec (nthreads: 4 speedup 6.33102)
tricount time:         0.000003 sec (saxpy method)
tri+prep time:         0.000006 sec (incl time to compute L)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate     0.86 million edges/sec (incl time for L=tril(A))
rate     1.90 million edges/sec (just tricount itself)
triangles, method 3: 2
C<L>=L*L time (saxpy):         0.000003 sec (nthreads: 8 speedup 4.42313)
tricount time:         0.000004 sec (saxpy method)
tri+prep time:         0.000007 sec (incl time to compute L)
compute C time:        0.000003 sec
reduce (C) time:       0.000001 sec
rate     0.71 million edges/sec (incl time for L=tril(A))
rate     1.29 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 7 by 7, 16 entries, from stdin

total time to read A matrix:       0.000263 sec

n 7 # edges 8
U=triu(A) time:        0.000018 sec
L=tril(A) time:        0.000003 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000036 sec
tricount time:         0.000039 sec (dot product method)
tri+prep time:         0.000060 sec (incl time to compute L and U)
compute C time:        0.000036 sec
reduce (C) time:       0.000003 sec
rate     0.13 million edges/sec (incl time for U=triu(A))
rate     0.21 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 2 speedup 6.25271)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000027 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate     0.29 million edges/sec (incl time for U=triu(A))
rate     1.28 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 4 speedup 7.85925)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate     0.31 million edges/sec (incl time for U=triu(A))
rate     1.61 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 8.761)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.31 million edges/sec (incl time for U=triu(A))
rate     1.80 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate     0.30 million edges/sec (incl time for U=triu(A))
rate     1.51 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 1.06831)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate     0.31 million edges/sec (incl time for U=triu(A))
rate     1.63 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 1.15837)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate     0.31 million edges/sec (incl time for U=triu(A))
rate     1.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 1.16838)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     0.31 million edges/sec (incl time for U=triu(A))
rate     1.77 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000017 sec
tricount time:         0.000017 sec (saxpy method)
tri+prep time:         0.000021 sec (incl time to compute L)
compute C time:        0.000017 sec
reduce (C) time:       0.000001 sec
rate     0.39 million edges/sec (incl time for L=tril(A))
rate     0.46 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000006 sec (nthreads: 2 speedup 2.9647)
tricount time:         0.000006 sec (saxpy method)
tri+prep time:         0.000009 sec (incl time to compute L)
compute C time:        0.000006 sec
reduce (C) time:       0.000000 sec
rate     0.86 million edges/sec (incl time for L=tril(A))
rate     1.33 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 4 speedup 3.64023)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000008 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate     0.97 million edges/sec (incl time for L=tril(A))
rate     1.62 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000006 sec (nthreads: 8 speedup 2.75735)
tricount time:         0.000007 sec (saxpy method)
tri+prep time:         0.000010 sec (incl time to compute L)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate     0.81 million edges/sec (incl time for L=tril(A))
rate     1.22 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 304 by 304, 876 entries, from stdin

total time to read A matrix:       0.000585 sec

n 304 # edges 438
U=triu(A) time:        0.000048 sec
L=tril(A) time:        0.000010 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000064 sec
tricount time:         0.000070 sec (dot product method)
tri+prep time:         0.000128 sec (incl time to compute L and U)
compute C time:        0.000064 sec
reduce (C) time:       0.000006 sec
rate     3.42 million edges/sec (incl time for U=triu(A))
rate     6.22 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 2 speedup 5.06982)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000071 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000001 sec
rate     6.14 million edges/sec (incl time for U=triu(A))
rate    32.03 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 4 speedup 5.89939)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000069 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000001 sec
rate     6.31 million edges/sec (incl time for U=triu(A))
rate    37.32 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 8 speedup 5.83216)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000070 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000001 sec
rate     6.29 million edges/sec (incl time for U=triu(A))
rate    36.83 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000069 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000001 sec
rate     6.37 million edges/sec (incl time for U=triu(A))
rate    39.78 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 2 speedup 1.16991)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000067 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000001 sec
rate     6.51 million edges/sec (incl time for U=triu(A))
rate    45.83 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 1.22235)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000067 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate     6.57 million edges/sec (incl time for U=triu(A))
rate    48.68 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 1.20631)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000067 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate     6.56 million edges/sec (incl time for U=triu(A))
rate    48.14 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000071 sec
tricount time:         0.000071 sec (saxpy method)
tri+prep time:         0.000081 sec (incl time to compute L)
compute C time:        0.000071 sec
reduce (C) time:       0.000001 sec
rate     5.40 million edges/sec (incl time for L=tril(A))
rate     6.14 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000029 sec (nthreads: 2 speedup 2.46315)
tricount time:         0.000029 sec (saxpy method)
tri+prep time:         0.000039 sec (incl time to compute L)
compute C time:        0.000029 sec
reduce (C) time:       0.000001 sec
rate    11.22 million edges/sec (incl time for L=tril(A))
rate    14.99 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000029 sec (nthreads: 4 speedup 2.46039)
tricount time:         0.000029 sec (saxpy method)
tri+prep time:         0.000039 sec (incl time to compute L)
compute C time:        0.000029 sec
reduce (C) time:       0.000000 sec
rate    11.25 million edges/sec (incl time for L=tril(A))
rate    15.03 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000036 sec (nthreads: 8 speedup 1.93583)
tricount time:         0.000037 sec (saxpy method)
tri+prep time:         0.000047 sec (incl time to compute L)
compute C time:        0.000036 sec
reduce (C) time:       0.000001 sec
rate     9.35 million edges/sec (incl time for L=tril(A))
rate    11.83 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 48 by 48, 352 entries, from stdin

total time to read A matrix:       0.000372 sec

n 48 # edges 176
U=triu(A) time:        0.000041 sec
L=tril(A) time:        0.000018 sec

------------------------------------- dot product method:
# triangles 160
L*U' time (dot):         0.000059 sec
tricount time:         0.000067 sec (dot product method)
tri+prep time:         0.000126 sec (incl time to compute L and U)
compute C time:        0.000059 sec
reduce (C) time:       0.000008 sec
rate     1.40 million edges/sec (incl time for U=triu(A))
rate     2.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.000027 sec (nthreads: 2 speedup 2.15045)
tricount time:         0.000031 sec (dot product method)
tri+prep time:         0.000090 sec (incl time to compute L and U)
compute C time:        0.000027 sec
reduce (C) time:       0.000004 sec
rate     1.95 million edges/sec (incl time for U=triu(A))
rate     5.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.000026 sec (nthreads: 4 speedup 2.3075)
tricount time:         0.000029 sec (dot product method)
tri+prep time:         0.000088 sec (incl time to compute L and U)
compute C time:        0.000026 sec
reduce (C) time:       0.000003 sec
rate     2.00 million edges/sec (incl time for U=triu(A))
rate     6.06 million edges/sec (just tricount itself)
L*U' time (dot):         0.000025 sec (nthreads: 8 speedup 2.39966)
tricount time:         0.000028 sec (dot product method)
tri+prep time:         0.000087 sec (incl time to compute L and U)
compute C time:        0.000025 sec
reduce (C) time:       0.000003 sec
rate     2.02 million edges/sec (incl time for U=triu(A))
rate     6.28 million edges/sec (just tricount itself)
L*U' time (dot):         0.000028 sec
tricount time:         0.000031 sec (dot product method)
tri+prep time:         0.000090 sec (incl time to compute L and U)
compute C time:        0.000028 sec
reduce (C) time:       0.000004 sec
rate     1.95 million edges/sec (incl time for U=triu(A))
rate     5.59 million edges/sec (just tricount itself)
L*U' time (dot):         0.000025 sec (nthreads: 2 speedup 1.08825)
tricount time:         0.000029 sec (dot product method)
tri+prep time:         0.000088 sec (incl time to compute L and U)
compute C time:        0.000025 sec
reduce (C) time:       0.000003 sec
rate     2.01 million edges/sec (incl time for U=triu(A))
rate     6.11 million edges/sec (just tricount itself)
L*U' time (dot):         0.000042 sec (nthreads: 4 speedup 0.65724)
tricount time:         0.000045 sec (dot product method)
tri+prep time:         0.000104 sec (incl time to compute L and U)
compute C time:        0.000042 sec
reduce (C) time:       0.000003 sec
rate     1.69 million edges/sec (incl time for U=triu(A))
rate     3.90 million edges/sec (just tricount itself)
L*U' time (dot):         0.000024 sec (nthreads: 8 speedup 1.1703)
tricount time:         0.000027 sec (dot product method)
tri+prep time:         0.000086 sec (incl time to compute L and U)
compute C time:        0.000024 sec
reduce (C) time:       0.000003 sec
rate     2.05 million edges/sec (incl time for U=triu(A))
rate     6.55 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 160
C<L>=L*L time (saxpy):         0.000048 sec
tricount time:         0.000051 sec (saxpy method)
tri+prep time:         0.000070 sec (incl time to compute L)
compute C time:        0.000048 sec
reduce (C) time:       0.000003 sec
rate     2.53 million edges/sec (incl time for L=tril(A))
rate     3.43 million edges/sec (just tricount itself)
triangles, method 3: 160
C<L>=L*L time (saxpy):         0.000032 sec (nthreads: 2 speedup 1.50346)
tricount time:         0.000035 sec (saxpy method)
tri+prep time:         0.000054 sec (incl time to compute L)
compute C time:        0.000032 sec
reduce (C) time:       0.000003 sec
rate     3.28 million edges/sec (incl time for L=tril(A))
rate     4.99 million edges/sec (just tricount itself)
triangles, method 3: 160
C<L>=L*L time (saxpy):         0.000029 sec (nthreads: 4 speedup 1.63133)
tricount time:         0.000033 sec (saxpy method)
tri+prep time:         0.000051 sec (incl time to compute L)
compute C time:        0.000029 sec
reduce (C) time:       0.000003 sec
rate     3.44 million edges/sec (incl time for L=tril(A))
rate     5.38 million edges/sec (just tricount itself)
triangles, method 3: 160
C<L>=L*L time (saxpy):         0.000029 sec (nthreads: 8 speedup 1.67247)
tricount time:         0.000032 sec (saxpy method)
tri+prep time:         0.000051 sec (incl time to compute L)
compute C time:        0.000029 sec
reduce (C) time:       0.000004 sec
rate     3.47 million edges/sec (incl time for L=tril(A))
rate     5.45 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4884 by 4884, 285494 entries, from stdin

total time to read A matrix:       0.075512 sec

n 4884 # edges 142747
U=triu(A) time:        0.000170 sec
L=tril(A) time:        0.000128 sec

------------------------------------- dot product method:
# triangles 1512964
L*U' time (dot):         0.012607 sec
tricount time:         0.013054 sec (dot product method)
tri+prep time:         0.013351 sec (incl time to compute L and U)
compute C time:        0.012607 sec
reduce (C) time:       0.000447 sec
rate    10.69 million edges/sec (incl time for U=triu(A))
rate    10.94 million edges/sec (just tricount itself)
L*U' time (dot):         0.006790 sec (nthreads: 2 speedup 1.85662)
tricount time:         0.007039 sec (dot product method)
tri+prep time:         0.007337 sec (incl time to compute L and U)
compute C time:        0.006790 sec
reduce (C) time:       0.000249 sec
rate    19.46 million edges/sec (incl time for U=triu(A))
rate    20.28 million edges/sec (just tricount itself)
L*U' time (dot):         0.003697 sec (nthreads: 4 speedup 3.41009)
tricount time:         0.003973 sec (dot product method)
tri+prep time:         0.004271 sec (incl time to compute L and U)
compute C time:        0.003697 sec
reduce (C) time:       0.000276 sec
rate    33.42 million edges/sec (incl time for U=triu(A))
rate    35.93 million edges/sec (just tricount itself)
L*U' time (dot):         0.006158 sec (nthreads: 8 speedup 2.04713)
tricount time:         0.006477 sec (dot product method)
tri+prep time:         0.006775 sec (incl time to compute L and U)
compute C time:        0.006158 sec
reduce (C) time:       0.000319 sec
rate    21.07 million edges/sec (incl time for U=triu(A))
rate    22.04 million edges/sec (just tricount itself)
L*U' time (dot):         0.013789 sec
tricount time:         0.014240 sec (dot product method)
tri+prep time:         0.014538 sec (incl time to compute L and U)
compute C time:        0.013789 sec
reduce (C) time:       0.000452 sec
rate     9.82 million edges/sec (incl time for U=triu(A))
rate    10.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.007012 sec (nthreads: 2 speedup 1.96639)
tricount time:         0.007244 sec (dot product method)
tri+prep time:         0.007541 sec (incl time to compute L and U)
compute C time:        0.007012 sec
reduce (C) time:       0.000231 sec
rate    18.93 million edges/sec (incl time for U=triu(A))
rate    19.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.003791 sec (nthreads: 4 speedup 3.6368)
tricount time:         0.004018 sec (dot product method)
tri+prep time:         0.004316 sec (incl time to compute L and U)
compute C time:        0.003791 sec
reduce (C) time:       0.000227 sec
rate    33.07 million edges/sec (incl time for U=triu(A))
rate    35.52 million edges/sec (just tricount itself)
L*U' time (dot):         0.003904 sec (nthreads: 8 speedup 3.53223)
tricount time:         0.004190 sec (dot product method)
tri+prep time:         0.004488 sec (incl time to compute L and U)
compute C time:        0.003904 sec
reduce (C) time:       0.000287 sec
rate    31.80 million edges/sec (incl time for U=triu(A))
rate    34.06 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 1512964
C<L>=L*L time (saxpy):         0.012455 sec
tricount time:         0.012838 sec (saxpy method)
tri+prep time:         0.012966 sec (incl time to compute L)
compute C time:        0.012455 sec
reduce (C) time:       0.000383 sec
rate    11.01 million edges/sec (incl time for L=tril(A))
rate    11.12 million edges/sec (just tricount itself)
triangles, method 3: 1512964
C<L>=L*L time (saxpy):         0.006351 sec (nthreads: 2 speedup 1.961)
tricount time:         0.006534 sec (saxpy method)
tri+prep time:         0.006661 sec (incl time to compute L)
compute C time:        0.006351 sec
reduce (C) time:       0.000183 sec
rate    21.43 million edges/sec (incl time for L=tril(A))
rate    21.85 million edges/sec (just tricount itself)
triangles, method 3: 1512964
C<L>=L*L time (saxpy):         0.003419 sec (nthreads: 4 speedup 3.64332)
tricount time:         0.003600 sec (saxpy method)
tri+prep time:         0.003727 sec (incl time to compute L)
compute C time:        0.003419 sec
reduce (C) time:       0.000181 sec
rate    38.30 million edges/sec (incl time for L=tril(A))
rate    39.66 million edges/sec (just tricount itself)
triangles, method 3: 1512964
C<L>=L*L time (saxpy):         0.003224 sec (nthreads: 8 speedup 3.86354)
tricount time:         0.003416 sec (saxpy method)
tri+prep time:         0.003544 sec (incl time to compute L)
compute C time:        0.003224 sec
reduce (C) time:       0.000192 sec
rate    40.28 million edges/sec (incl time for L=tril(A))
rate    41.79 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 183 by 183, 1402 entries, from stdin

total time to read A matrix:       0.000660 sec

n 183 # edges 701
U=triu(A) time:        0.000031 sec
L=tril(A) time:        0.000010 sec

------------------------------------- dot product method:
# triangles 863
L*U' time (dot):         0.000071 sec
tricount time:         0.000078 sec (dot product method)
tri+prep time:         0.000119 sec (incl time to compute L and U)
compute C time:        0.000071 sec
reduce (C) time:       0.000006 sec
rate     5.90 million edges/sec (incl time for U=triu(A))
rate     9.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.000039 sec (nthreads: 2 speedup 1.81524)
tricount time:         0.000042 sec (dot product method)
tri+prep time:         0.000084 sec (incl time to compute L and U)
compute C time:        0.000039 sec
reduce (C) time:       0.000003 sec
rate     8.39 million edges/sec (incl time for U=triu(A))
rate    16.51 million edges/sec (just tricount itself)
L*U' time (dot):         0.000036 sec (nthreads: 4 speedup 1.97109)
tricount time:         0.000039 sec (dot product method)
tri+prep time:         0.000080 sec (incl time to compute L and U)
compute C time:        0.000036 sec
reduce (C) time:       0.000003 sec
rate     8.75 million edges/sec (incl time for U=triu(A))
rate    17.98 million edges/sec (just tricount itself)
L*U' time (dot):         0.000034 sec (nthreads: 8 speedup 2.09387)
tricount time:         0.000037 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000034 sec
reduce (C) time:       0.000003 sec
rate     9.01 million edges/sec (incl time for U=triu(A))
rate    19.08 million edges/sec (just tricount itself)
L*U' time (dot):         0.000045 sec
tricount time:         0.000047 sec (dot product method)
tri+prep time:         0.000088 sec (incl time to compute L and U)
compute C time:        0.000045 sec
reduce (C) time:       0.000003 sec
rate     7.94 million edges/sec (incl time for U=triu(A))
rate    14.84 million edges/sec (just tricount itself)
L*U' time (dot):         0.000039 sec (nthreads: 2 speedup 1.15269)
tricount time:         0.000041 sec (dot product method)
tri+prep time:         0.000082 sec (incl time to compute L and U)
compute C time:        0.000039 sec
reduce (C) time:       0.000002 sec
rate     8.53 million edges/sec (incl time for U=triu(A))
rate    17.05 million edges/sec (just tricount itself)
L*U' time (dot):         0.000036 sec (nthreads: 4 speedup 1.22759)
tricount time:         0.000039 sec (dot product method)
tri+prep time:         0.000080 sec (incl time to compute L and U)
compute C time:        0.000036 sec
reduce (C) time:       0.000003 sec
rate     8.78 million edges/sec (incl time for U=triu(A))
rate    18.08 million edges/sec (just tricount itself)
L*U' time (dot):         0.000034 sec (nthreads: 8 speedup 1.30988)
tricount time:         0.000036 sec (dot product method)
tri+prep time:         0.000077 sec (incl time to compute L and U)
compute C time:        0.000034 sec
reduce (C) time:       0.000002 sec
rate     9.07 million edges/sec (incl time for U=triu(A))
rate    19.34 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 863
C<L>=L*L time (saxpy):         0.000064 sec
tricount time:         0.000065 sec (saxpy method)
tri+prep time:         0.000075 sec (incl time to compute L)
compute C time:        0.000064 sec
reduce (C) time:       0.000001 sec
rate     9.35 million edges/sec (incl time for L=tril(A))
rate    10.78 million edges/sec (just tricount itself)
triangles, method 3: 863
C<L>=L*L time (saxpy):         0.000036 sec (nthreads: 2 speedup 1.7727)
tricount time:         0.000037 sec (saxpy method)
tri+prep time:         0.000047 sec (incl time to compute L)
compute C time:        0.000036 sec
reduce (C) time:       0.000001 sec
rate    14.84 million edges/sec (incl time for L=tril(A))
rate    18.81 million edges/sec (just tricount itself)
triangles, method 3: 863
C<L>=L*L time (saxpy):         0.000034 sec (nthreads: 4 speedup 1.85333)
tricount time:         0.000036 sec (saxpy method)
tri+prep time:         0.000046 sec (incl time to compute L)
compute C time:        0.000034 sec
reduce (C) time:       0.000001 sec
rate    15.33 million edges/sec (incl time for L=tril(A))
rate    19.61 million edges/sec (just tricount itself)
triangles, method 3: 863
C<L>=L*L time (saxpy):         0.000033 sec (nthreads: 8 speedup 1.93319)
tricount time:         0.000034 sec (saxpy method)
tri+prep time:         0.000044 sec (incl time to compute L)
compute C time:        0.000033 sec
reduce (C) time:       0.000002 sec
rate    15.80 million edges/sec (incl time for L=tril(A))
rate    20.38 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000262 sec

n 63 # edges 123
U=triu(A) time:        0.000020 sec
L=tril(A) time:        0.000005 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000037 sec
tricount time:         0.000040 sec (dot product method)
tri+prep time:         0.000064 sec (incl time to compute L and U)
compute C time:        0.000037 sec
reduce (C) time:       0.000003 sec
rate     1.91 million edges/sec (incl time for U=triu(A))
rate     3.07 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 8.93473)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000029 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate     4.22 million edges/sec (incl time for U=triu(A))
rate    25.65 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 12.0055)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000028 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.40 million edges/sec (incl time for U=triu(A))
rate    34.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 12.4694)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000028 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.43 million edges/sec (incl time for U=triu(A))
rate    35.92 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000028 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     4.34 million edges/sec (incl time for U=triu(A))
rate    30.78 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 1.13276)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000028 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.40 million edges/sec (incl time for U=triu(A))
rate    34.29 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 1.1705)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000028 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.42 million edges/sec (incl time for U=triu(A))
rate    35.58 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 1.18629)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000028 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     4.43 million edges/sec (incl time for U=triu(A))
rate    36.15 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000042 sec
tricount time:         0.000042 sec (saxpy method)
tri+prep time:         0.000047 sec (incl time to compute L)
compute C time:        0.000042 sec
reduce (C) time:       0.000001 sec
rate     2.62 million edges/sec (incl time for L=tril(A))
rate     2.92 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000014 sec (nthreads: 2 speedup 3.04981)
tricount time:         0.000014 sec (saxpy method)
tri+prep time:         0.000019 sec (incl time to compute L)
compute C time:        0.000014 sec
reduce (C) time:       0.000000 sec
rate     6.57 million edges/sec (incl time for L=tril(A))
rate     8.78 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000013 sec (nthreads: 4 speedup 3.2356)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000018 sec (incl time to compute L)
compute C time:        0.000013 sec
reduce (C) time:       0.000000 sec
rate     6.85 million edges/sec (incl time for L=tril(A))
rate     9.29 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000024 sec (nthreads: 8 speedup 1.7597)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000029 sec (incl time to compute L)
compute C time:        0.000024 sec
reduce (C) time:       0.000001 sec
rate     4.26 million edges/sec (incl time for L=tril(A))
rate     5.09 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000275 sec

n 63 # edges 123
U=triu(A) time:        0.000027 sec
L=tril(A) time:        0.000006 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000038 sec
tricount time:         0.000041 sec (dot product method)
tri+prep time:         0.000073 sec (incl time to compute L and U)
compute C time:        0.000038 sec
reduce (C) time:       0.000003 sec
rate     1.69 million edges/sec (incl time for U=triu(A))
rate     3.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 8.47488)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000037 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000000 sec
rate     3.32 million edges/sec (incl time for U=triu(A))
rate    24.79 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 12.5394)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000036 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     3.46 million edges/sec (incl time for U=triu(A))
rate    35.84 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 13.2973)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000035 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     3.49 million edges/sec (incl time for U=triu(A))
rate    38.29 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate     3.20 million edges/sec (incl time for U=triu(A))
rate    19.21 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 1.08966)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate     3.25 million edges/sec (incl time for U=triu(A))
rate    21.20 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 1.75569)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000036 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     3.44 million edges/sec (incl time for U=triu(A))
rate    33.86 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 1.30071)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000037 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate     3.32 million edges/sec (incl time for U=triu(A))
rate    24.49 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000048 sec
tricount time:         0.000049 sec (saxpy method)
tri+prep time:         0.000055 sec (incl time to compute L)
compute C time:        0.000048 sec
reduce (C) time:       0.000001 sec
rate     2.26 million edges/sec (incl time for L=tril(A))
rate     2.51 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000021 sec (nthreads: 2 speedup 2.29726)
tricount time:         0.000022 sec (saxpy method)
tri+prep time:         0.000027 sec (incl time to compute L)
compute C time:        0.000021 sec
reduce (C) time:       0.000001 sec
rate     4.50 million edges/sec (incl time for L=tril(A))
rate     5.65 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000019 sec (nthreads: 4 speedup 2.60882)
tricount time:         0.000019 sec (saxpy method)
tri+prep time:         0.000025 sec (incl time to compute L)
compute C time:        0.000019 sec
reduce (C) time:       0.000001 sec
rate     4.95 million edges/sec (incl time for L=tril(A))
rate     6.38 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000026 sec (nthreads: 8 speedup 1.84191)
tricount time:         0.000027 sec (saxpy method)
tri+prep time:         0.000032 sec (incl time to compute L)
compute C time:        0.000026 sec
reduce (C) time:       0.000000 sec
rate     3.81 million edges/sec (incl time for L=tril(A))
rate     4.60 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 78 by 78, 204 entries, from stdin

total time to read A matrix:       0.000234 sec

n 78 # edges 102
U=triu(A) time:        0.000023 sec
L=tril(A) time:        0.000005 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000041 sec
tricount time:         0.000043 sec (dot product method)
tri+prep time:         0.000071 sec (incl time to compute L and U)
compute C time:        0.000041 sec
reduce (C) time:       0.000002 sec
rate     1.43 million edges/sec (incl time for U=triu(A))
rate     2.36 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 9.62766)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate     3.10 million edges/sec (incl time for U=triu(A))
rate    21.22 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 12.3067)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     3.20 million edges/sec (incl time for U=triu(A))
rate    27.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 12.4995)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     3.21 million edges/sec (incl time for U=triu(A))
rate    27.81 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     3.18 million edges/sec (incl time for U=triu(A))
rate    26.12 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 1.09567)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     3.21 million edges/sec (incl time for U=triu(A))
rate    28.43 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 1.15386)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     3.23 million edges/sec (incl time for U=triu(A))
rate    29.96 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 1.18647)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate     3.24 million edges/sec (incl time for U=triu(A))
rate    30.46 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000037 sec
tricount time:         0.000038 sec (saxpy method)
tri+prep time:         0.000043 sec (incl time to compute L)
compute C time:        0.000037 sec
reduce (C) time:       0.000001 sec
rate     2.39 million edges/sec (incl time for L=tril(A))
rate     2.69 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000013 sec (nthreads: 2 speedup 2.77093)
tricount time:         0.000014 sec (saxpy method)
tri+prep time:         0.000019 sec (incl time to compute L)
compute C time:        0.000013 sec
reduce (C) time:       0.000000 sec
rate     5.46 million edges/sec (incl time for L=tril(A))
rate     7.33 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000013 sec (nthreads: 4 speedup 2.9093)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000018 sec (incl time to compute L)
compute C time:        0.000013 sec
reduce (C) time:       0.000000 sec
rate     5.67 million edges/sec (incl time for L=tril(A))
rate     7.72 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.000028 sec (nthreads: 8 speedup 1.35035)
tricount time:         0.000028 sec (saxpy method)
tri+prep time:         0.000033 sec (incl time to compute L)
compute C time:        0.000028 sec
reduce (C) time:       0.000000 sec
rate     3.10 million edges/sec (incl time for L=tril(A))
rate     3.62 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 982 by 982, 99840 entries, from stdin

total time to read A matrix:       0.030723 sec

n 982 # edges 49920
U=triu(A) time:        0.000902 sec
L=tril(A) time:        0.000927 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.058288 sec
tricount time:         0.058294 sec (dot product method)
tri+prep time:         0.060124 sec (incl time to compute L and U)
compute C time:        0.058288 sec
reduce (C) time:       0.000007 sec
rate     0.83 million edges/sec (incl time for U=triu(A))
rate     0.86 million edges/sec (just tricount itself)
L*U' time (dot):         0.028646 sec (nthreads: 2 speedup 2.03477)
tricount time:         0.028649 sec (dot product method)
tri+prep time:         0.030479 sec (incl time to compute L and U)
compute C time:        0.028646 sec
reduce (C) time:       0.000004 sec
rate     1.64 million edges/sec (incl time for U=triu(A))
rate     1.74 million edges/sec (just tricount itself)
L*U' time (dot):         0.014809 sec (nthreads: 4 speedup 3.93587)
tricount time:         0.014813 sec (dot product method)
tri+prep time:         0.016643 sec (incl time to compute L and U)
compute C time:        0.014809 sec
reduce (C) time:       0.000004 sec
rate     3.00 million edges/sec (incl time for U=triu(A))
rate     3.37 million edges/sec (just tricount itself)
L*U' time (dot):         0.010943 sec (nthreads: 8 speedup 5.32633)
tricount time:         0.010946 sec (dot product method)
tri+prep time:         0.012776 sec (incl time to compute L and U)
compute C time:        0.010943 sec
reduce (C) time:       0.000003 sec
rate     3.91 million edges/sec (incl time for U=triu(A))
rate     4.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.064972 sec
tricount time:         0.064976 sec (dot product method)
tri+prep time:         0.066806 sec (incl time to compute L and U)
compute C time:        0.064972 sec
reduce (C) time:       0.000004 sec
rate     0.75 million edges/sec (incl time for U=triu(A))
rate     0.77 million edges/sec (just tricount itself)
L*U' time (dot):         0.040766 sec (nthreads: 2 speedup 1.59378)
tricount time:         0.040777 sec (dot product method)
tri+prep time:         0.042607 sec (incl time to compute L and U)
compute C time:        0.040766 sec
reduce (C) time:       0.000011 sec
rate     1.17 million edges/sec (incl time for U=triu(A))
rate     1.22 million edges/sec (just tricount itself)
L*U' time (dot):         0.016084 sec (nthreads: 4 speedup 4.03949)
tricount time:         0.016087 sec (dot product method)
tri+prep time:         0.017916 sec (incl time to compute L and U)
compute C time:        0.016084 sec
reduce (C) time:       0.000003 sec
rate     2.79 million edges/sec (incl time for U=triu(A))
rate     3.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.012468 sec (nthreads: 8 speedup 5.21128)
tricount time:         0.012471 sec (dot product method)
tri+prep time:         0.014301 sec (incl time to compute L and U)
compute C time:        0.012468 sec
reduce (C) time:       0.000004 sec
rate     3.49 million edges/sec (incl time for U=triu(A))
rate     4.00 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.028173 sec
tricount time:         0.028177 sec (saxpy method)
tri+prep time:         0.029104 sec (incl time to compute L)
compute C time:        0.028173 sec
reduce (C) time:       0.000004 sec
rate     1.72 million edges/sec (incl time for L=tril(A))
rate     1.77 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.020945 sec (nthreads: 2 speedup 1.3451)
tricount time:         0.020948 sec (saxpy method)
tri+prep time:         0.021875 sec (incl time to compute L)
compute C time:        0.020945 sec
reduce (C) time:       0.000003 sec
rate     2.28 million edges/sec (incl time for L=tril(A))
rate     2.38 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.007373 sec (nthreads: 4 speedup 3.82133)
tricount time:         0.007383 sec (saxpy method)
tri+prep time:         0.008310 sec (incl time to compute L)
compute C time:        0.007373 sec
reduce (C) time:       0.000010 sec
rate     6.01 million edges/sec (incl time for L=tril(A))
rate     6.76 million edges/sec (just tricount itself)
triangles, method 3: 0
C<L>=L*L time (saxpy):         0.006439 sec (nthreads: 8 speedup 4.37547)
tricount time:         0.006444 sec (saxpy method)
tri+prep time:         0.007371 sec (incl time to compute L)
compute C time:        0.006439 sec
reduce (C) time:       0.000005 sec
rate     6.77 million edges/sec (incl time for L=tril(A))
rate     7.75 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 67 by 67, 574 entries, from stdin

total time to read A matrix:       0.000284 sec

n 67 # edges 287
U=triu(A) time:        0.000035 sec
L=tril(A) time:        0.000025 sec

------------------------------------- dot product method:
# triangles 120
L*U' time (dot):         0.000052 sec
tricount time:         0.000057 sec (dot product method)
tri+prep time:         0.000117 sec (incl time to compute L and U)
compute C time:        0.000052 sec
reduce (C) time:       0.000006 sec
rate     2.44 million edges/sec (incl time for U=triu(A))
rate     5.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000031 sec (nthreads: 2 speedup 1.68877)
tricount time:         0.000034 sec (dot product method)
tri+prep time:         0.000094 sec (incl time to compute L and U)
compute C time:        0.000031 sec
reduce (C) time:       0.000004 sec
rate     3.04 million edges/sec (incl time for U=triu(A))
rate     8.36 million edges/sec (just tricount itself)
L*U' time (dot):         0.000030 sec (nthreads: 4 speedup 1.74544)
tricount time:         0.000040 sec (dot product method)
tri+prep time:         0.000100 sec (incl time to compute L and U)
compute C time:        0.000030 sec
reduce (C) time:       0.000010 sec
rate     2.88 million edges/sec (incl time for U=triu(A))
rate     7.23 million edges/sec (just tricount itself)
L*U' time (dot):         0.000030 sec (nthreads: 8 speedup 1.72538)
tricount time:         0.000034 sec (dot product method)
tri+prep time:         0.000094 sec (incl time to compute L and U)
compute C time:        0.000030 sec
reduce (C) time:       0.000003 sec
rate     3.07 million edges/sec (incl time for U=triu(A))
rate     8.57 million edges/sec (just tricount itself)
L*U' time (dot):         0.000031 sec
tricount time:         0.000035 sec (dot product method)
tri+prep time:         0.000095 sec (incl time to compute L and U)
compute C time:        0.000031 sec
reduce (C) time:       0.000004 sec
rate     3.03 million edges/sec (incl time for U=triu(A))
rate     8.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.000029 sec (nthreads: 2 speedup 1.05752)
tricount time:         0.000033 sec (dot product method)
tri+prep time:         0.000093 sec (incl time to compute L and U)
compute C time:        0.000029 sec
reduce (C) time:       0.000004 sec
rate     3.08 million edges/sec (incl time for U=triu(A))
rate     8.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000028 sec (nthreads: 4 speedup 1.09132)
tricount time:         0.000032 sec (dot product method)
tri+prep time:         0.000092 sec (incl time to compute L and U)
compute C time:        0.000028 sec
reduce (C) time:       0.000004 sec
rate     3.12 million edges/sec (incl time for U=triu(A))
rate     8.96 million edges/sec (just tricount itself)
L*U' time (dot):         0.000028 sec (nthreads: 8 speedup 1.09892)
tricount time:         0.000032 sec (dot product method)
tri+prep time:         0.000092 sec (incl time to compute L and U)
compute C time:        0.000028 sec
reduce (C) time:       0.000004 sec
rate     3.12 million edges/sec (incl time for U=triu(A))
rate     9.01 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 120
C<L>=L*L time (saxpy):         0.000051 sec
tricount time:         0.000055 sec (saxpy method)
tri+prep time:         0.000080 sec (incl time to compute L)
compute C time:        0.000051 sec
reduce (C) time:       0.000004 sec
rate     3.58 million edges/sec (incl time for L=tril(A))
rate     5.24 million edges/sec (just tricount itself)
triangles, method 3: 120
C<L>=L*L time (saxpy):         0.000089 sec (nthreads: 2 speedup 0.57782)
tricount time:         0.000092 sec (saxpy method)
tri+prep time:         0.000118 sec (incl time to compute L)
compute C time:        0.000089 sec
reduce (C) time:       0.000004 sec
rate     2.44 million edges/sec (incl time for L=tril(A))
rate     3.11 million edges/sec (just tricount itself)
triangles, method 3: 120
C<L>=L*L time (saxpy):         0.000069 sec (nthreads: 4 speedup 0.742536)
tricount time:         0.000073 sec (saxpy method)
tri+prep time:         0.000098 sec (incl time to compute L)
compute C time:        0.000069 sec
reduce (C) time:       0.000004 sec
rate     2.93 million edges/sec (incl time for L=tril(A))
rate     3.94 million edges/sec (just tricount itself)
triangles, method 3: 120
C<L>=L*L time (saxpy):         0.000035 sec (nthreads: 8 speedup 1.44524)
tricount time:         0.000039 sec (saxpy method)
tri+prep time:         0.000064 sec (incl time to compute L)
compute C time:        0.000035 sec
reduce (C) time:       0.000004 sec
rate     4.46 million edges/sec (incl time for L=tril(A))
rate     7.35 million edges/sec (just tricount itself)

--------------------------------------------------------------
Wathen: nx 200 ny 200 n 120801 nz 1762400 method 0, time: 0.149 sec

total time to read A matrix:       0.151564 sec

n 120801 # edges 881200
U=triu(A) time:        0.002891 sec
L=tril(A) time:        0.002830 sec

------------------------------------- dot product method:
# triangles 2160400
L*U' time (dot):         0.031461 sec
tricount time:         0.034343 sec (dot product method)
tri+prep time:         0.040065 sec (incl time to compute L and U)
compute C time:        0.031461 sec
reduce (C) time:       0.002882 sec
rate    21.99 million edges/sec (incl time for U=triu(A))
rate    25.66 million edges/sec (just tricount itself)
L*U' time (dot):         0.011370 sec (nthreads: 2 speedup 2.767)
tricount time:         0.012575 sec (dot product method)
tri+prep time:         0.018296 sec (incl time to compute L and U)
compute C time:        0.011370 sec
reduce (C) time:       0.001205 sec
rate    48.16 million edges/sec (incl time for U=triu(A))
rate    70.08 million edges/sec (just tricount itself)
L*U' time (dot):         0.006837 sec (nthreads: 4 speedup 4.60137)
tricount time:         0.007800 sec (dot product method)
tri+prep time:         0.013522 sec (incl time to compute L and U)
compute C time:        0.006837 sec
reduce (C) time:       0.000963 sec
rate    65.17 million edges/sec (incl time for U=triu(A))
rate   112.98 million edges/sec (just tricount itself)
L*U' time (dot):         0.008398 sec (nthreads: 8 speedup 3.7461)
tricount time:         0.009898 sec (dot product method)
tri+prep time:         0.015620 sec (incl time to compute L and U)
compute C time:        0.008398 sec
reduce (C) time:       0.001500 sec
rate    56.42 million edges/sec (incl time for U=triu(A))
rate    89.03 million edges/sec (just tricount itself)
L*U' time (dot):         0.022635 sec
tricount time:         0.024721 sec (dot product method)
tri+prep time:         0.030443 sec (incl time to compute L and U)
compute C time:        0.022635 sec
reduce (C) time:       0.002086 sec
rate    28.95 million edges/sec (incl time for U=triu(A))
rate    35.65 million edges/sec (just tricount itself)
L*U' time (dot):         0.010697 sec (nthreads: 2 speedup 2.11589)
tricount time:         0.011877 sec (dot product method)
tri+prep time:         0.017599 sec (incl time to compute L and U)
compute C time:        0.010697 sec
reduce (C) time:       0.001180 sec
rate    50.07 million edges/sec (incl time for U=triu(A))
rate    74.19 million edges/sec (just tricount itself)
L*U' time (dot):         0.005944 sec (nthreads: 4 speedup 3.80768)
tricount time:         0.006578 sec (dot product method)
tri+prep time:         0.012300 sec (incl time to compute L and U)
compute C time:        0.005944 sec
reduce (C) time:       0.000634 sec
rate    71.64 million edges/sec (incl time for U=triu(A))
rate   133.95 million edges/sec (just tricount itself)
L*U' time (dot):         0.006825 sec (nthreads: 8 speedup 3.31652)
tricount time:         0.007437 sec (dot product method)
tri+prep time:         0.013158 sec (incl time to compute L and U)
compute C time:        0.006825 sec
reduce (C) time:       0.000612 sec
rate    66.97 million edges/sec (incl time for U=triu(A))
rate   118.50 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 2160400
C<L>=L*L time (saxpy):         0.026889 sec
tricount time:         0.028829 sec (saxpy method)
tri+prep time:         0.031659 sec (incl time to compute L)
compute C time:        0.026889 sec
reduce (C) time:       0.001940 sec
rate    27.83 million edges/sec (incl time for L=tril(A))
rate    30.57 million edges/sec (just tricount itself)
triangles, method 3: 2160400
C<L>=L*L time (saxpy):         0.013092 sec (nthreads: 2 speedup 2.05385)
tricount time:         0.014021 sec (saxpy method)
tri+prep time:         0.016852 sec (incl time to compute L)
compute C time:        0.013092 sec
reduce (C) time:       0.000929 sec
rate    52.29 million edges/sec (incl time for L=tril(A))
rate    62.85 million edges/sec (just tricount itself)
triangles, method 3: 2160400
C<L>=L*L time (saxpy):         0.007298 sec (nthreads: 4 speedup 3.68423)
tricount time:         0.007762 sec (saxpy method)
tri+prep time:         0.010592 sec (incl time to compute L)
compute C time:        0.007298 sec
reduce (C) time:       0.000463 sec
rate    83.20 million edges/sec (incl time for L=tril(A))
rate   113.53 million edges/sec (just tricount itself)
triangles, method 3: 2160400
C<L>=L*L time (saxpy):         0.009863 sec (nthreads: 8 speedup 2.72632)
tricount time:         0.010707 sec (saxpy method)
tri+prep time:         0.013537 sec (incl time to compute L)
compute C time:        0.009863 sec
reduce (C) time:       0.000844 sec
rate    65.10 million edges/sec (incl time for L=tril(A))
rate    82.30 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 0 time 0.022 sec

total time to read A matrix:       0.022149 sec

n 10000 # edges 99884
U=triu(A) time:        0.000203 sec
L=tril(A) time:        0.000115 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.013365 sec
tricount time:         0.013506 sec (dot product method)
tri+prep time:         0.013824 sec (incl time to compute L and U)
compute C time:        0.013365 sec
reduce (C) time:       0.000140 sec
rate     7.23 million edges/sec (incl time for U=triu(A))
rate     7.40 million edges/sec (just tricount itself)
L*U' time (dot):         0.004916 sec (nthreads: 2 speedup 2.71856)
tricount time:         0.004998 sec (dot product method)
tri+prep time:         0.005316 sec (incl time to compute L and U)
compute C time:        0.004916 sec
reduce (C) time:       0.000081 sec
rate    18.79 million edges/sec (incl time for U=triu(A))
rate    19.99 million edges/sec (just tricount itself)
L*U' time (dot):         0.002817 sec (nthreads: 4 speedup 4.74479)
tricount time:         0.002890 sec (dot product method)
tri+prep time:         0.003208 sec (incl time to compute L and U)
compute C time:        0.002817 sec
reduce (C) time:       0.000073 sec
rate    31.14 million edges/sec (incl time for U=triu(A))
rate    34.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.002211 sec (nthreads: 8 speedup 6.04371)
tricount time:         0.002298 sec (dot product method)
tri+prep time:         0.002616 sec (incl time to compute L and U)
compute C time:        0.002211 sec
reduce (C) time:       0.000087 sec
rate    38.18 million edges/sec (incl time for U=triu(A))
rate    43.47 million edges/sec (just tricount itself)
L*U' time (dot):         0.010744 sec
tricount time:         0.010866 sec (dot product method)
tri+prep time:         0.011185 sec (incl time to compute L and U)
compute C time:        0.010744 sec
reduce (C) time:       0.000122 sec
rate     8.93 million edges/sec (incl time for U=triu(A))
rate     9.19 million edges/sec (just tricount itself)
L*U' time (dot):         0.006333 sec (nthreads: 2 speedup 1.69642)
tricount time:         0.006507 sec (dot product method)
tri+prep time:         0.006826 sec (incl time to compute L and U)
compute C time:        0.006333 sec
reduce (C) time:       0.000174 sec
rate    14.63 million edges/sec (incl time for U=triu(A))
rate    15.35 million edges/sec (just tricount itself)
L*U' time (dot):         0.004250 sec (nthreads: 4 speedup 2.52817)
tricount time:         0.004384 sec (dot product method)
tri+prep time:         0.004702 sec (incl time to compute L and U)
compute C time:        0.004250 sec
reduce (C) time:       0.000134 sec
rate    21.24 million edges/sec (incl time for U=triu(A))
rate    22.79 million edges/sec (just tricount itself)
L*U' time (dot):         0.002483 sec (nthreads: 8 speedup 4.32671)
tricount time:         0.002579 sec (dot product method)
tri+prep time:         0.002897 sec (incl time to compute L and U)
compute C time:        0.002483 sec
reduce (C) time:       0.000096 sec
rate    34.48 million edges/sec (incl time for U=triu(A))
rate    38.73 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 1357
C<L>=L*L time (saxpy):         0.003458 sec
tricount time:         0.003463 sec (saxpy method)
tri+prep time:         0.003578 sec (incl time to compute L)
compute C time:        0.003458 sec
reduce (C) time:       0.000005 sec
rate    27.92 million edges/sec (incl time for L=tril(A))
rate    28.84 million edges/sec (just tricount itself)
triangles, method 3: 1357
C<L>=L*L time (saxpy):         0.002160 sec (nthreads: 2 speedup 1.60076)
tricount time:         0.002165 sec (saxpy method)
tri+prep time:         0.002280 sec (incl time to compute L)
compute C time:        0.002160 sec
reduce (C) time:       0.000005 sec
rate    43.81 million edges/sec (incl time for L=tril(A))
rate    46.14 million edges/sec (just tricount itself)
triangles, method 3: 1357
C<L>=L*L time (saxpy):         0.001631 sec (nthreads: 4 speedup 2.12045)
tricount time:         0.001636 sec (saxpy method)
tri+prep time:         0.001751 sec (incl time to compute L)
compute C time:        0.001631 sec
reduce (C) time:       0.000005 sec
rate    57.04 million edges/sec (incl time for L=tril(A))
rate    61.05 million edges/sec (just tricount itself)
triangles, method 3: 1357
C<L>=L*L time (saxpy):         0.001326 sec (nthreads: 8 speedup 2.60767)
tricount time:         0.001331 sec (saxpy method)
tri+prep time:         0.001446 sec (incl time to compute L)
compute C time:        0.001326 sec
reduce (C) time:       0.000005 sec
rate    69.06 million edges/sec (incl time for L=tril(A))
rate    75.02 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 1 time 0.019 sec

total time to read A matrix:       0.019843 sec

n 10000 # edges 99884
U=triu(A) time:        0.000468 sec
L=tril(A) time:        0.000166 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.009661 sec
tricount time:         0.009752 sec (dot product method)
tri+prep time:         0.010386 sec (incl time to compute L and U)
compute C time:        0.009661 sec
reduce (C) time:       0.000091 sec
rate     9.62 million edges/sec (incl time for U=triu(A))
rate    10.24 million edges/sec (just tricount itself)
L*U' time (dot):         0.004896 sec (nthreads: 2 speedup 1.97333)
tricount time:         0.004965 sec (dot product method)
tri+prep time:         0.005598 sec (incl time to compute L and U)
compute C time:        0.004896 sec
reduce (C) time:       0.000069 sec
rate    17.84 million edges/sec (incl time for U=triu(A))
rate    20.12 million edges/sec (just tricount itself)
L*U' time (dot):         0.002824 sec (nthreads: 4 speedup 3.42086)
tricount time:         0.002931 sec (dot product method)
tri+prep time:         0.003565 sec (incl time to compute L and U)
compute C time:        0.002824 sec
reduce (C) time:       0.000107 sec
rate    28.02 million edges/sec (incl time for U=triu(A))
rate    34.08 million edges/sec (just tricount itself)
L*U' time (dot):         0.002946 sec (nthreads: 8 speedup 3.27913)
tricount time:         0.003602 sec (dot product method)
tri+prep time:         0.004236 sec (incl time to compute L and U)
compute C time:        0.002946 sec
reduce (C) time:       0.000656 sec
rate    23.58 million edges/sec (incl time for U=triu(A))
rate    27.73 million edges/sec (just tricount itself)
L*U' time (dot):         0.011994 sec
tricount time:         0.012139 sec (dot product method)
tri+prep time:         0.012773 sec (incl time to compute L and U)
compute C time:        0.011994 sec
reduce (C) time:       0.000145 sec
rate     7.82 million edges/sec (incl time for U=triu(A))
rate     8.23 million edges/sec (just tricount itself)
L*U' time (dot):         0.005069 sec (nthreads: 2 speedup 2.36602)
tricount time:         0.005145 sec (dot product method)
tri+prep time:         0.005779 sec (incl time to compute L and U)
compute C time:        0.005069 sec
reduce (C) time:       0.000076 sec
rate    17.28 million edges/sec (incl time for U=triu(A))
rate    19.41 million edges/sec (just tricount itself)
L*U' time (dot):         0.002837 sec (nthreads: 4 speedup 4.22758)
tricount time:         0.002914 sec (dot product method)
tri+prep time:         0.003547 sec (incl time to compute L and U)
compute C time:        0.002837 sec
reduce (C) time:       0.000076 sec
rate    28.16 million edges/sec (incl time for U=triu(A))
rate    34.28 million edges/sec (just tricount itself)
L*U' time (dot):         0.002327 sec (nthreads: 8 speedup 5.15339)
tricount time:         0.002420 sec (dot product method)
tri+prep time:         0.003053 sec (incl time to compute L and U)
compute C time:        0.002327 sec
reduce (C) time:       0.000092 sec
rate    32.71 million edges/sec (incl time for U=triu(A))
rate    41.28 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 1357
C<L>=L*L time (saxpy):         0.003775 sec
tricount time:         0.003781 sec (saxpy method)
tri+prep time:         0.003947 sec (incl time to compute L)
compute C time:        0.003775 sec
reduce (C) time:       0.000006 sec
rate    25.31 million edges/sec (incl time for L=tril(A))
rate    26.42 million edges/sec (just tricount itself)
triangles, method 3: 1357
C<L>=L*L time (saxpy):         0.002397 sec (nthreads: 2 speedup 1.57465)
tricount time:         0.002408 sec (saxpy method)
tri+prep time:         0.002574 sec (incl time to compute L)
compute C time:        0.002397 sec
reduce (C) time:       0.000010 sec
rate    38.81 million edges/sec (incl time for L=tril(A))
rate    41.49 million edges/sec (just tricount itself)
triangles, method 3: 1357
C<L>=L*L time (saxpy):         0.002181 sec (nthreads: 4 speedup 1.73077)
tricount time:         0.002198 sec (saxpy method)
tri+prep time:         0.002364 sec (incl time to compute L)
compute C time:        0.002181 sec
reduce (C) time:       0.000017 sec
rate    42.25 million edges/sec (incl time for L=tril(A))
rate    45.43 million edges/sec (just tricount itself)
triangles, method 3: 1357
C<L>=L*L time (saxpy):         0.001501 sec (nthreads: 8 speedup 2.51474)
tricount time:         0.001510 sec (saxpy method)
tri+prep time:         0.001676 sec (incl time to compute L)
compute C time:        0.001501 sec
reduce (C) time:       0.000009 sec
rate    59.61 million edges/sec (incl time for L=tril(A))
rate    66.16 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 0 time 2.379 sec

total time to read A matrix:       2.412113 sec

n 100000 # edges 9990165
U=triu(A) time:        0.019210 sec
L=tril(A) time:        0.022683 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):         9.600409 sec
tricount time:         9.628917 sec (dot product method)
tri+prep time:         9.670810 sec (incl time to compute L and U)
compute C time:        9.600409 sec
reduce (C) time:       0.028508 sec
rate     1.03 million edges/sec (incl time for U=triu(A))
rate     1.04 million edges/sec (just tricount itself)
L*U' time (dot):         6.274272 sec (nthreads: 2 speedup 1.53012)
tricount time:         6.298966 sec (dot product method)
tri+prep time:         6.340859 sec (incl time to compute L and U)
compute C time:        6.274272 sec
reduce (C) time:       0.024694 sec
rate     1.58 million edges/sec (incl time for U=triu(A))
rate     1.59 million edges/sec (just tricount itself)
L*U' time (dot):         3.866828 sec (nthreads: 4 speedup 2.48276)
tricount time:         3.881606 sec (dot product method)
tri+prep time:         3.923499 sec (incl time to compute L and U)
compute C time:        3.866828 sec
reduce (C) time:       0.014777 sec
rate     2.55 million edges/sec (incl time for U=triu(A))
rate     2.57 million edges/sec (just tricount itself)
L*U' time (dot):         2.506075 sec (nthreads: 8 speedup 3.83085)
tricount time:         2.521612 sec (dot product method)
tri+prep time:         2.563506 sec (incl time to compute L and U)
compute C time:        2.506075 sec
reduce (C) time:       0.015537 sec
rate     3.90 million edges/sec (incl time for U=triu(A))
rate     3.96 million edges/sec (just tricount itself)
L*U' time (dot):        10.249645 sec
tricount time:        10.275967 sec (dot product method)
tri+prep time:        10.317860 sec (incl time to compute L and U)
compute C time:       10.249645 sec
reduce (C) time:       0.026322 sec
rate     0.97 million edges/sec (incl time for U=triu(A))
rate     0.97 million edges/sec (just tricount itself)
L*U' time (dot):         5.969431 sec (nthreads: 2 speedup 1.71702)
tricount time:         5.986809 sec (dot product method)
tri+prep time:         6.028703 sec (incl time to compute L and U)
compute C time:        5.969431 sec
reduce (C) time:       0.017378 sec
rate     1.66 million edges/sec (incl time for U=triu(A))
rate     1.67 million edges/sec (just tricount itself)
L*U' time (dot):         3.828744 sec (nthreads: 4 speedup 2.67703)
tricount time:         3.841435 sec (dot product method)
tri+prep time:         3.883329 sec (incl time to compute L and U)
compute C time:        3.828744 sec
reduce (C) time:       0.012692 sec
rate     2.57 million edges/sec (incl time for U=triu(A))
rate     2.60 million edges/sec (just tricount itself)
L*U' time (dot):         2.637085 sec (nthreads: 8 speedup 3.88673)
tricount time:         2.652227 sec (dot product method)
tri+prep time:         2.694120 sec (incl time to compute L and U)
compute C time:        2.637085 sec
reduce (C) time:       0.015142 sec
rate     3.71 million edges/sec (incl time for U=triu(A))
rate     3.77 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 1330131
C<L>=L*L time (saxpy):         5.230336 sec
tricount time:         5.235697 sec (saxpy method)
tri+prep time:         5.258381 sec (incl time to compute L)
compute C time:        5.230336 sec
reduce (C) time:       0.005362 sec
rate     1.90 million edges/sec (incl time for L=tril(A))
rate     1.91 million edges/sec (just tricount itself)
triangles, method 3: 1330131
C<L>=L*L time (saxpy):         3.361884 sec (nthreads: 2 speedup 1.55578)
tricount time:         3.365108 sec (saxpy method)
tri+prep time:         3.387791 sec (incl time to compute L)
compute C time:        3.361884 sec
reduce (C) time:       0.003224 sec
rate     2.95 million edges/sec (incl time for L=tril(A))
rate     2.97 million edges/sec (just tricount itself)
triangles, method 3: 1330131
C<L>=L*L time (saxpy):         1.575201 sec (nthreads: 4 speedup 3.32043)
tricount time:         1.577578 sec (saxpy method)
tri+prep time:         1.600261 sec (incl time to compute L)
compute C time:        1.575201 sec
reduce (C) time:       0.002377 sec
rate     6.24 million edges/sec (incl time for L=tril(A))
rate     6.33 million edges/sec (just tricount itself)
triangles, method 3: 1330131
C<L>=L*L time (saxpy):         1.526778 sec (nthreads: 8 speedup 3.42574)
tricount time:         1.527569 sec (saxpy method)
tri+prep time:         1.550252 sec (incl time to compute L)
compute C time:        1.526778 sec
reduce (C) time:       0.000791 sec
rate     6.44 million edges/sec (incl time for L=tril(A))
rate     6.54 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 1 time 1.800 sec

total time to read A matrix:       1.824114 sec

n 100000 # edges 9990165
U=triu(A) time:        0.019058 sec
L=tril(A) time:        0.022165 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):         9.675005 sec
tricount time:         9.702456 sec (dot product method)
tri+prep time:         9.743678 sec (incl time to compute L and U)
compute C time:        9.675005 sec
reduce (C) time:       0.027451 sec
rate     1.03 million edges/sec (incl time for U=triu(A))
rate     1.03 million edges/sec (just tricount itself)
L*U' time (dot):         5.197288 sec (nthreads: 2 speedup 1.86155)
tricount time:         5.214890 sec (dot product method)
tri+prep time:         5.256112 sec (incl time to compute L and U)
compute C time:        5.197288 sec
reduce (C) time:       0.017602 sec
rate     1.90 million edges/sec (incl time for U=triu(A))
rate     1.92 million edges/sec (just tricount itself)
L*U' time (dot):         3.633153 sec (nthreads: 4 speedup 2.66298)
tricount time:         3.647923 sec (dot product method)
tri+prep time:         3.689145 sec (incl time to compute L and U)
compute C time:        3.633153 sec
reduce (C) time:       0.014770 sec
rate     2.71 million edges/sec (incl time for U=triu(A))
rate     2.74 million edges/sec (just tricount itself)
L*U' time (dot):         2.537362 sec (nthreads: 8 speedup 3.81302)
tricount time:         2.553227 sec (dot product method)
tri+prep time:         2.594449 sec (incl time to compute L and U)
compute C time:        2.537362 sec
reduce (C) time:       0.015866 sec
rate     3.85 million edges/sec (incl time for U=triu(A))
rate     3.91 million edges/sec (just tricount itself)
L*U' time (dot):        10.606815 sec
tricount time:        10.635558 sec (dot product method)
tri+prep time:        10.676780 sec (incl time to compute L and U)
compute C time:       10.606815 sec
reduce (C) time:       0.028743 sec
rate     0.94 million edges/sec (incl time for U=triu(A))
rate     0.94 million edges/sec (just tricount itself)
L*U' time (dot):         5.676585 sec (nthreads: 2 speedup 1.86852)
tricount time:         5.693520 sec (dot product method)
tri+prep time:         5.734742 sec (incl time to compute L and U)
compute C time:        5.676585 sec
reduce (C) time:       0.016935 sec
rate     1.74 million edges/sec (incl time for U=triu(A))
rate     1.75 million edges/sec (just tricount itself)
L*U' time (dot):         3.812671 sec (nthreads: 4 speedup 2.78199)
tricount time:         3.825661 sec (dot product method)
tri+prep time:         3.866883 sec (incl time to compute L and U)
compute C time:        3.812671 sec
reduce (C) time:       0.012990 sec
rate     2.58 million edges/sec (incl time for U=triu(A))
rate     2.61 million edges/sec (just tricount itself)
L*U' time (dot):         2.651888 sec (nthreads: 8 speedup 3.99972)
tricount time:         2.667092 sec (dot product method)
tri+prep time:         2.708314 sec (incl time to compute L and U)
compute C time:        2.651888 sec
reduce (C) time:       0.015204 sec
rate     3.69 million edges/sec (incl time for U=triu(A))
rate     3.75 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
triangles, method 3: 1330131
C<L>=L*L time (saxpy):         4.780242 sec
tricount time:         4.785625 sec (saxpy method)
tri+prep time:         4.807790 sec (incl time to compute L)
compute C time:        4.780242 sec
reduce (C) time:       0.005383 sec
rate     2.08 million edges/sec (incl time for L=tril(A))
rate     2.09 million edges/sec (just tricount itself)
triangles, method 3: 1330131
C<L>=L*L time (saxpy):         3.047736 sec (nthreads: 2 speedup 1.56846)
tricount time:         3.050864 sec (saxpy method)
tri+prep time:         3.073029 sec (incl time to compute L)
compute C time:        3.047736 sec
reduce (C) time:       0.003128 sec
rate     3.25 million edges/sec (incl time for L=tril(A))
rate     3.27 million edges/sec (just tricount itself)
triangles, method 3: 1330131
C<L>=L*L time (saxpy):         1.526678 sec (nthreads: 4 speedup 3.13114)
tricount time:         1.528923 sec (saxpy method)
tri+prep time:         1.551087 sec (incl time to compute L)
compute C time:        1.526678 sec
reduce (C) time:       0.002245 sec
rate     6.44 million edges/sec (incl time for L=tril(A))
rate     6.53 million edges/sec (just tricount itself)
triangles, method 3: 1330131
C<L>=L*L time (saxpy):         1.487306 sec (nthreads: 8 speedup 3.21403)
tricount time:         1.488039 sec (saxpy method)
tri+prep time:         1.510204 sec (incl time to compute L)
compute C time:        1.487306 sec
reduce (C) time:       0.000734 sec
rate     6.62 million edges/sec (incl time for L=tril(A))
rate     6.71 million edges/sec (just tricount itself)

