--------------------------------------------------------------
Wathen: nx 4 ny 4 n 65 nz 752 method 0, time: 0.000 sec

total time to read A matrix:       0.000161 sec

n 65 # edges 376
U=triu(A) time:        0.000017 sec
L=tril(A) time:        0.000005 sec

------------------------------------- dot product method:
# triangles 872
L*U' time (dot):         0.000027 sec
tricount time:         0.000035 sec (dot product method)
tri+prep time:         0.000057 sec (incl time to compute L and U)
compute C time:        0.000027 sec
reduce (C) time:       0.000008 sec
rate       6.61 million edges/sec (incl time for U=triu(A))
rate      10.88 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 2 speedup 2.96304)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000035 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000004 sec
rate      10.69 million edges/sec (incl time for U=triu(A))
rate      29.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 3.36913)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000034 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000003 sec
rate      11.14 million edges/sec (incl time for U=triu(A))
rate      32.90 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 3.38346)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000003 sec
rate      11.32 million edges/sec (incl time for U=triu(A))
rate      34.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000037 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000003 sec
rate      10.04 million edges/sec (incl time for U=triu(A))
rate      24.85 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 2 speedup 1.40901)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000034 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000003 sec
rate      11.19 million edges/sec (incl time for U=triu(A))
rate      33.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 1.45744)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000003 sec
rate      11.28 million edges/sec (incl time for U=triu(A))
rate      34.14 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 1.4551)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000003 sec
rate      11.34 million edges/sec (incl time for U=triu(A))
rate      34.72 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000017 sec
tricount time:         0.000018 sec (saxpy method)
tri+prep time:         0.000024 sec (incl time to compute L)
compute C time:        0.000017 sec
reduce (C) time:       0.000001 sec
rate      15.95 million edges/sec (incl time for L=tril(A))
rate      20.48 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000006 sec (nthreads: 2 speedup 2.7504)
tricount time:         0.000007 sec (saxpy method)
tri+prep time:         0.000012 sec (incl time to compute L)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate      30.18 million edges/sec (incl time for L=tril(A))
rate      51.91 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 4 speedup 3.21887)
tricount time:         0.000006 sec (saxpy method)
tri+prep time:         0.000012 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate      32.60 million edges/sec (incl time for L=tril(A))
rate      59.51 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000006 sec (nthreads: 8 speedup 2.92119)
tricount time:         0.000007 sec (saxpy method)
tri+prep time:         0.000012 sec (incl time to compute L)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate      31.03 million edges/sec (incl time for L=tril(A))
rate      54.46 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 5 by 5, nz: 18, method 1 time 0.000 sec

total time to read A matrix:       0.000094 sec

n 5 # edges 9
U=triu(A) time:        0.000035 sec
L=tril(A) time:        0.000006 sec

------------------------------------- dot product method:
# triangles 7
L*U' time (dot):         0.000030 sec
tricount time:         0.000039 sec (dot product method)
tri+prep time:         0.000080 sec (incl time to compute L and U)
compute C time:        0.000030 sec
reduce (C) time:       0.000009 sec
rate       0.11 million edges/sec (incl time for U=triu(A))
rate       0.23 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 6.67556)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000047 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000002 sec
rate       0.19 million edges/sec (incl time for U=triu(A))
rate       1.41 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 9.02838)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000046 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       0.20 million edges/sec (incl time for U=triu(A))
rate       1.75 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 8.40514)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000046 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000002 sec
rate       0.20 million edges/sec (incl time for U=triu(A))
rate       1.76 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000048 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000002 sec
rate       0.19 million edges/sec (incl time for U=triu(A))
rate       1.35 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 2 speedup 0.791904)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000049 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000002 sec
rate       0.18 million edges/sec (incl time for U=triu(A))
rate       1.13 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 1.22963)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000047 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000002 sec
rate       0.19 million edges/sec (incl time for U=triu(A))
rate       1.62 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 1.1897)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000047 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000002 sec
rate       0.19 million edges/sec (incl time for U=triu(A))
rate       1.55 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000042 sec
tricount time:         0.000042 sec (saxpy method)
tri+prep time:         0.000048 sec (incl time to compute L)
compute C time:        0.000042 sec
reduce (C) time:       0.000001 sec
rate       0.19 million edges/sec (incl time for L=tril(A))
rate       0.21 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000012 sec (nthreads: 2 speedup 3.39159)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000019 sec (incl time to compute L)
compute C time:        0.000012 sec
reduce (C) time:       0.000001 sec
rate       0.48 million edges/sec (incl time for L=tril(A))
rate       0.70 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 4 speedup 5.31836)
tricount time:         0.000008 sec (saxpy method)
tri+prep time:         0.000014 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000000 sec
rate       0.64 million edges/sec (incl time for L=tril(A))
rate       1.11 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000017 sec (nthreads: 8 speedup 2.49886)
tricount time:         0.000017 sec (saxpy method)
tri+prep time:         0.000023 sec (incl time to compute L)
compute C time:        0.000017 sec
reduce (C) time:       0.000000 sec
rate       0.39 million edges/sec (incl time for L=tril(A))
rate       0.53 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 3 by 3, 0 entries, from stdin

total time to read A matrix:       0.000107 sec

n 3 # edges 0
U=triu(A) time:        0.000021 sec
L=tril(A) time:        0.000003 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000019 sec
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000046 sec (incl time to compute L and U)
compute C time:        0.000019 sec
reduce (C) time:       0.000002 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 6.06392)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000028 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 4 speedup 10.4523)
tricount time:         0.000002 sec (dot product method)
tri+prep time:         0.000027 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 8 speedup 11.6598)
tricount time:         0.000002 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec
tricount time:         0.000002 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000001 sec (nthreads: 2 speedup 1.13402)
tricount time:         0.000002 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000001 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 0.61963)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000028 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 0.587635)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000028 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000019 sec
tricount time:         0.000019 sec (saxpy method)
tri+prep time:         0.000023 sec (incl time to compute L)
compute C time:        0.000019 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000002 sec (nthreads: 2 speedup 8.18023)
tricount time:         0.000003 sec (saxpy method)
tri+prep time:         0.000006 sec (incl time to compute L)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000002 sec (nthreads: 4 speedup 11.6689)
tricount time:         0.000002 sec (saxpy method)
tri+prep time:         0.000005 sec (incl time to compute L)
compute C time:        0.000002 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 8 speedup 3.7404)
tricount time:         0.000006 sec (saxpy method)
tri+prep time:         0.000009 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 4 entries, from stdin

total time to read A matrix:       0.000100 sec

n 4 # edges 2
U=triu(A) time:        0.000017 sec
L=tril(A) time:        0.000003 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000015 sec
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000041 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000006 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 5.75556)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.44 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 5.01207)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.39 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 4.56257)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000003 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.35 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000002 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.34 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 1.36721)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.40 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 1.3238)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.41 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 1.45979)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.47 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000023 sec
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000027 sec (incl time to compute L)
compute C time:        0.000023 sec
reduce (C) time:       0.000000 sec
rate       0.07 million edges/sec (incl time for L=tril(A))
rate       0.08 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000007 sec (nthreads: 2 speedup 3.45716)
tricount time:         0.000007 sec (saxpy method)
tri+prep time:         0.000010 sec (incl time to compute L)
compute C time:        0.000007 sec
reduce (C) time:       0.000000 sec
rate       0.19 million edges/sec (incl time for L=tril(A))
rate       0.29 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 4 speedup 2.8748)
tricount time:         0.000008 sec (saxpy method)
tri+prep time:         0.000012 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000000 sec
rate       0.17 million edges/sec (incl time for L=tril(A))
rate       0.24 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000012 sec (nthreads: 8 speedup 1.87051)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000016 sec (incl time to compute L)
compute C time:        0.000012 sec
reduce (C) time:       0.000000 sec
rate       0.12 million edges/sec (incl time for L=tril(A))
rate       0.16 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 10 entries, from stdin

total time to read A matrix:       0.000110 sec

n 4 # edges 5
U=triu(A) time:        0.000017 sec
L=tril(A) time:        0.000003 sec

------------------------------------- dot product method:
# triangles 2
L*U' time (dot):         0.000016 sec
tricount time:         0.000020 sec (dot product method)
tri+prep time:         0.000040 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000004 sec
rate       0.12 million edges/sec (incl time for U=triu(A))
rate       0.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 5.93558)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000024 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000001 sec
rate       0.21 million edges/sec (incl time for U=triu(A))
rate       1.21 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 4 speedup 7.58266)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000023 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000001 sec
rate       0.21 million edges/sec (incl time for U=triu(A))
rate       1.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 8 speedup 9.09821)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000023 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000001 sec
rate       0.22 million edges/sec (incl time for U=triu(A))
rate       1.81 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000023 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000001 sec
rate       0.21 million edges/sec (incl time for U=triu(A))
rate       1.55 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 2 speedup 1.08723)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000023 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000001 sec
rate       0.22 million edges/sec (incl time for U=triu(A))
rate       1.72 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 4 speedup 1.14847)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000023 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000001 sec
rate       0.22 million edges/sec (incl time for U=triu(A))
rate       1.78 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 8 speedup 1.22774)
tricount time:         0.000003 sec (dot product method)
tri+prep time:         0.000023 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000001 sec
rate       0.22 million edges/sec (incl time for U=triu(A))
rate       1.88 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000016 sec
tricount time:         0.000017 sec (saxpy method)
tri+prep time:         0.000020 sec (incl time to compute L)
compute C time:        0.000016 sec
reduce (C) time:       0.000000 sec
rate       0.25 million edges/sec (incl time for L=tril(A))
rate       0.30 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 2 speedup 3.05064)
tricount time:         0.000006 sec (saxpy method)
tri+prep time:         0.000009 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.57 million edges/sec (incl time for L=tril(A))
rate       0.90 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 4 speedup 3.36429)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000008 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000000 sec
rate       0.60 million edges/sec (incl time for L=tril(A))
rate       0.99 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000009 sec (nthreads: 8 speedup 1.85355)
tricount time:         0.000009 sec (saxpy method)
tri+prep time:         0.000012 sec (incl time to compute L)
compute C time:        0.000009 sec
reduce (C) time:       0.000000 sec
rate       0.41 million edges/sec (incl time for L=tril(A))
rate       0.55 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 7 by 7, 16 entries, from stdin

total time to read A matrix:       0.000146 sec

n 7 # edges 8
U=triu(A) time:        0.000016 sec
L=tril(A) time:        0.000004 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000021 sec
tricount time:         0.000029 sec (dot product method)
tri+prep time:         0.000050 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000008 sec
rate       0.16 million edges/sec (incl time for U=triu(A))
rate       0.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 7.00803)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       0.31 million edges/sec (incl time for U=triu(A))
rate       1.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.000002 sec (nthreads: 4 speedup 10.0356)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000024 sec (incl time to compute L and U)
compute C time:        0.000002 sec
reduce (C) time:       0.000002 sec
rate       0.33 million edges/sec (incl time for U=triu(A))
rate       2.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 7.11902)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       0.31 million edges/sec (incl time for U=triu(A))
rate       1.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       0.31 million edges/sec (incl time for U=triu(A))
rate       1.49 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 1.19393)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       0.32 million edges/sec (incl time for U=triu(A))
rate       1.78 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 1.11641)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       0.32 million edges/sec (incl time for U=triu(A))
rate       1.69 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 1.19836)
tricount time:         0.000004 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       0.32 million edges/sec (incl time for U=triu(A))
rate       1.80 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000024 sec
tricount time:         0.000025 sec (saxpy method)
tri+prep time:         0.000029 sec (incl time to compute L)
compute C time:        0.000024 sec
reduce (C) time:       0.000000 sec
rate       0.28 million edges/sec (incl time for L=tril(A))
rate       0.33 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000007 sec (nthreads: 2 speedup 3.39685)
tricount time:         0.000007 sec (saxpy method)
tri+prep time:         0.000012 sec (incl time to compute L)
compute C time:        0.000007 sec
reduce (C) time:       0.000000 sec
rate       0.69 million edges/sec (incl time for L=tril(A))
rate       1.08 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000006 sec (nthreads: 4 speedup 3.76062)
tricount time:         0.000007 sec (saxpy method)
tri+prep time:         0.000011 sec (incl time to compute L)
compute C time:        0.000006 sec
reduce (C) time:       0.000000 sec
rate       0.74 million edges/sec (incl time for L=tril(A))
rate       1.20 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000010 sec (nthreads: 8 speedup 2.50722)
tricount time:         0.000010 sec (saxpy method)
tri+prep time:         0.000014 sec (incl time to compute L)
compute C time:        0.000010 sec
reduce (C) time:       0.000000 sec
rate       0.57 million edges/sec (incl time for L=tril(A))
rate       0.80 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 304 by 304, 876 entries, from stdin

total time to read A matrix:       0.000282 sec

n 304 # edges 438
U=triu(A) time:        0.000018 sec
L=tril(A) time:        0.000005 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000023 sec
tricount time:         0.000031 sec (dot product method)
tri+prep time:         0.000055 sec (incl time to compute L and U)
compute C time:        0.000023 sec
reduce (C) time:       0.000008 sec
rate       8.03 million edges/sec (incl time for U=triu(A))
rate      13.98 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 2 speedup 2.7992)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000036 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000005 sec
rate      12.10 million edges/sec (incl time for U=triu(A))
rate      33.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 3.02595)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000035 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000004 sec
rate      12.59 million edges/sec (incl time for U=triu(A))
rate      37.83 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 8 speedup 3.22337)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000034 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000004 sec
rate      12.89 million edges/sec (incl time for U=triu(A))
rate      40.65 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000034 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000003 sec
rate      12.98 million edges/sec (incl time for U=triu(A))
rate      41.57 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 2 speedup 1.06272)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000003 sec
rate      13.17 million edges/sec (incl time for U=triu(A))
rate      43.63 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 4 speedup 1.03592)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000003 sec
rate      13.14 million edges/sec (incl time for U=triu(A))
rate      43.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 8 speedup 1.07546)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000003 sec
rate      13.23 million edges/sec (incl time for U=triu(A))
rate      44.23 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000023 sec
tricount time:         0.000023 sec (saxpy method)
tri+prep time:         0.000028 sec (incl time to compute L)
compute C time:        0.000023 sec
reduce (C) time:       0.000000 sec
rate      15.49 million edges/sec (incl time for L=tril(A))
rate      19.19 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000013 sec (nthreads: 2 speedup 1.73859)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000019 sec (incl time to compute L)
compute C time:        0.000013 sec
reduce (C) time:       0.000000 sec
rate      23.48 million edges/sec (incl time for L=tril(A))
rate      33.18 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000013 sec (nthreads: 4 speedup 1.79092)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000018 sec (incl time to compute L)
compute C time:        0.000013 sec
reduce (C) time:       0.000000 sec
rate      23.95 million edges/sec (incl time for L=tril(A))
rate      34.13 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000017 sec (nthreads: 8 speedup 1.35445)
tricount time:         0.000017 sec (saxpy method)
tri+prep time:         0.000022 sec (incl time to compute L)
compute C time:        0.000017 sec
reduce (C) time:       0.000000 sec
rate      19.55 million edges/sec (incl time for L=tril(A))
rate      25.85 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 48 by 48, 352 entries, from stdin

total time to read A matrix:       0.000167 sec

n 48 # edges 176
U=triu(A) time:        0.000015 sec
L=tril(A) time:        0.000005 sec

------------------------------------- dot product method:
# triangles 160
L*U' time (dot):         0.000017 sec
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000041 sec (incl time to compute L and U)
compute C time:        0.000017 sec
reduce (C) time:       0.000005 sec
rate       4.24 million edges/sec (incl time for U=triu(A))
rate       8.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 2 speedup 2.38058)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000030 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000003 sec
rate       5.96 million edges/sec (incl time for U=triu(A))
rate      17.56 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 4 speedup 3.07737)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000027 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000002 sec
rate       6.44 million edges/sec (incl time for U=triu(A))
rate      22.46 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 8 speedup 3.40734)
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000002 sec
rate       6.65 million edges/sec (incl time for U=triu(A))
rate      25.24 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000003 sec
rate       5.72 million edges/sec (incl time for U=triu(A))
rate      15.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 2 speedup 1.22489)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000029 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000002 sec
rate       6.11 million edges/sec (incl time for U=triu(A))
rate      18.94 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 4 speedup 1.42103)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000028 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000002 sec
rate       6.39 million edges/sec (incl time for U=triu(A))
rate      21.85 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 8 speedup 1.70397)
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000002 sec
rate       6.68 million edges/sec (incl time for U=triu(A))
rate      25.68 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000015 sec
tricount time:         0.000015 sec (saxpy method)
tri+prep time:         0.000020 sec (incl time to compute L)
compute C time:        0.000015 sec
reduce (C) time:       0.000001 sec
rate       8.70 million edges/sec (incl time for L=tril(A))
rate      11.37 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000006 sec (nthreads: 2 speedup 2.29912)
tricount time:         0.000007 sec (saxpy method)
tri+prep time:         0.000012 sec (incl time to compute L)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate      14.98 million edges/sec (incl time for L=tril(A))
rate      25.15 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 4 speedup 2.97268)
tricount time:         0.000006 sec (saxpy method)
tri+prep time:         0.000010 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate      17.17 million edges/sec (incl time for L=tril(A))
rate      32.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000005 sec (nthreads: 8 speedup 3.02616)
tricount time:         0.000005 sec (saxpy method)
tri+prep time:         0.000010 sec (incl time to compute L)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate      17.21 million edges/sec (incl time for L=tril(A))
rate      32.15 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4884 by 4884, 285494 entries, from stdin

total time to read A matrix:       0.062744 sec

n 4884 # edges 142747
U=triu(A) time:        0.002432 sec
L=tril(A) time:        0.003991 sec

------------------------------------- dot product method:
# triangles 1512964
L*U' time (dot):         0.011346 sec
tricount time:         0.012313 sec (dot product method)
tri+prep time:         0.018736 sec (incl time to compute L and U)
compute C time:        0.011346 sec
reduce (C) time:       0.000967 sec
rate       7.62 million edges/sec (incl time for U=triu(A))
rate      11.59 million edges/sec (just tricount itself)
L*U' time (dot):         0.005037 sec (nthreads: 2 speedup 2.25273)
tricount time:         0.005369 sec (dot product method)
tri+prep time:         0.011792 sec (incl time to compute L and U)
compute C time:        0.005037 sec
reduce (C) time:       0.000332 sec
rate      12.11 million edges/sec (incl time for U=triu(A))
rate      26.59 million edges/sec (just tricount itself)
L*U' time (dot):         0.002986 sec (nthreads: 4 speedup 3.79974)
tricount time:         0.004211 sec (dot product method)
tri+prep time:         0.010635 sec (incl time to compute L and U)
compute C time:        0.002986 sec
reduce (C) time:       0.001225 sec
rate      13.42 million edges/sec (incl time for U=triu(A))
rate      33.90 million edges/sec (just tricount itself)
L*U' time (dot):         0.002674 sec (nthreads: 8 speedup 4.24335)
tricount time:         0.006152 sec (dot product method)
tri+prep time:         0.012575 sec (incl time to compute L and U)
compute C time:        0.002674 sec
reduce (C) time:       0.003478 sec
rate      11.35 million edges/sec (incl time for U=triu(A))
rate      23.20 million edges/sec (just tricount itself)
L*U' time (dot):         0.011628 sec
tricount time:         0.012318 sec (dot product method)
tri+prep time:         0.018741 sec (incl time to compute L and U)
compute C time:        0.011628 sec
reduce (C) time:       0.000690 sec
rate       7.62 million edges/sec (incl time for U=triu(A))
rate      11.59 million edges/sec (just tricount itself)
L*U' time (dot):         0.005169 sec (nthreads: 2 speedup 2.24958)
tricount time:         0.005505 sec (dot product method)
tri+prep time:         0.011929 sec (incl time to compute L and U)
compute C time:        0.005169 sec
reduce (C) time:       0.000337 sec
rate      11.97 million edges/sec (incl time for U=triu(A))
rate      25.93 million edges/sec (just tricount itself)
L*U' time (dot):         0.002667 sec (nthreads: 4 speedup 4.35995)
tricount time:         0.002841 sec (dot product method)
tri+prep time:         0.009264 sec (incl time to compute L and U)
compute C time:        0.002667 sec
reduce (C) time:       0.000174 sec
rate      15.41 million edges/sec (incl time for U=triu(A))
rate      50.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.003088 sec (nthreads: 8 speedup 3.7652)
tricount time:         0.004828 sec (dot product method)
tri+prep time:         0.011252 sec (incl time to compute L and U)
compute C time:        0.003088 sec
reduce (C) time:       0.001740 sec
rate      12.69 million edges/sec (incl time for U=triu(A))
rate      29.56 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.005105 sec
tricount time:         0.005507 sec (saxpy method)
tri+prep time:         0.009498 sec (incl time to compute L)
compute C time:        0.005105 sec
reduce (C) time:       0.000402 sec
rate      15.03 million edges/sec (incl time for L=tril(A))
rate      25.92 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002801 sec (nthreads: 2 speedup 1.8224)
tricount time:         0.003000 sec (saxpy method)
tri+prep time:         0.006991 sec (incl time to compute L)
compute C time:        0.002801 sec
reduce (C) time:       0.000198 sec
rate      20.42 million edges/sec (incl time for L=tril(A))
rate      47.59 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001644 sec (nthreads: 4 speedup 3.10557)
tricount time:         0.001738 sec (saxpy method)
tri+prep time:         0.005729 sec (incl time to compute L)
compute C time:        0.001644 sec
reduce (C) time:       0.000094 sec
rate      24.92 million edges/sec (incl time for L=tril(A))
rate      82.14 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.003788 sec (nthreads: 8 speedup 1.34771)
tricount time:         0.003855 sec (saxpy method)
tri+prep time:         0.007846 sec (incl time to compute L)
compute C time:        0.003788 sec
reduce (C) time:       0.000067 sec
rate      18.19 million edges/sec (incl time for L=tril(A))
rate      37.03 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 183 by 183, 1402 entries, from stdin

total time to read A matrix:       0.000554 sec

n 183 # edges 701
U=triu(A) time:        0.000021 sec
L=tril(A) time:        0.000008 sec

------------------------------------- dot product method:
# triangles 863
L*U' time (dot):         0.000052 sec
tricount time:         0.000062 sec (dot product method)
tri+prep time:         0.000092 sec (incl time to compute L and U)
compute C time:        0.000052 sec
reduce (C) time:       0.000010 sec
rate       7.64 million edges/sec (incl time for U=triu(A))
rate      11.29 million edges/sec (just tricount itself)
L*U' time (dot):         0.000036 sec (nthreads: 2 speedup 1.42863)
tricount time:         0.000043 sec (dot product method)
tri+prep time:         0.000072 sec (incl time to compute L and U)
compute C time:        0.000036 sec
reduce (C) time:       0.000006 sec
rate       9.67 million edges/sec (incl time for U=triu(A))
rate      16.37 million edges/sec (just tricount itself)
L*U' time (dot):         0.000032 sec (nthreads: 4 speedup 1.61304)
tricount time:         0.000038 sec (dot product method)
tri+prep time:         0.000068 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000006 sec
rate      10.30 million edges/sec (incl time for U=triu(A))
rate      18.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000031 sec (nthreads: 8 speedup 1.70192)
tricount time:         0.000037 sec (dot product method)
tri+prep time:         0.000066 sec (incl time to compute L and U)
compute C time:        0.000031 sec
reduce (C) time:       0.000006 sec
rate      10.59 million edges/sec (incl time for U=triu(A))
rate      19.19 million edges/sec (just tricount itself)
L*U' time (dot):         0.000041 sec
tricount time:         0.000048 sec (dot product method)
tri+prep time:         0.000077 sec (incl time to compute L and U)
compute C time:        0.000041 sec
reduce (C) time:       0.000007 sec
rate       9.05 million edges/sec (incl time for U=triu(A))
rate      14.65 million edges/sec (just tricount itself)
L*U' time (dot):         0.000036 sec (nthreads: 2 speedup 1.1411)
tricount time:         0.000042 sec (dot product method)
tri+prep time:         0.000072 sec (incl time to compute L and U)
compute C time:        0.000036 sec
reduce (C) time:       0.000006 sec
rate       9.77 million edges/sec (incl time for U=triu(A))
rate      16.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.000033 sec (nthreads: 4 speedup 1.23581)
tricount time:         0.000039 sec (dot product method)
tri+prep time:         0.000069 sec (incl time to compute L and U)
compute C time:        0.000033 sec
reduce (C) time:       0.000006 sec
rate      10.23 million edges/sec (incl time for U=triu(A))
rate      18.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.000032 sec (nthreads: 8 speedup 1.27509)
tricount time:         0.000038 sec (dot product method)
tri+prep time:         0.000067 sec (incl time to compute L and U)
compute C time:        0.000032 sec
reduce (C) time:       0.000006 sec
rate      10.39 million edges/sec (incl time for U=triu(A))
rate      18.53 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000030 sec
tricount time:         0.000032 sec (saxpy method)
tri+prep time:         0.000040 sec (incl time to compute L)
compute C time:        0.000030 sec
reduce (C) time:       0.000001 sec
rate      17.51 million edges/sec (incl time for L=tril(A))
rate      22.02 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000019 sec (nthreads: 2 speedup 1.61951)
tricount time:         0.000020 sec (saxpy method)
tri+prep time:         0.000028 sec (incl time to compute L)
compute C time:        0.000019 sec
reduce (C) time:       0.000001 sec
rate      24.84 million edges/sec (incl time for L=tril(A))
rate      35.04 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000016 sec (nthreads: 4 speedup 1.86777)
tricount time:         0.000018 sec (saxpy method)
tri+prep time:         0.000026 sec (incl time to compute L)
compute C time:        0.000016 sec
reduce (C) time:       0.000001 sec
rate      27.25 million edges/sec (incl time for L=tril(A))
rate      40.02 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000016 sec (nthreads: 8 speedup 1.96173)
tricount time:         0.000017 sec (saxpy method)
tri+prep time:         0.000025 sec (incl time to compute L)
compute C time:        0.000016 sec
reduce (C) time:       0.000001 sec
rate      28.00 million edges/sec (incl time for L=tril(A))
rate      41.66 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000145 sec

n 63 # edges 123
U=triu(A) time:        0.000013 sec
L=tril(A) time:        0.000004 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000013 sec
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000035 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000005 sec
rate       3.49 million edges/sec (incl time for U=triu(A))
rate       6.79 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 2.50827)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000004 sec
rate       4.76 million edges/sec (incl time for U=triu(A))
rate      14.09 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 4 speedup 2.63993)
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000025 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000003 sec
rate       5.02 million edges/sec (incl time for U=triu(A))
rate      16.66 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 3.6014)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000023 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000002 sec
rate       5.33 million edges/sec (incl time for U=triu(A))
rate      20.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000024 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000003 sec
rate       5.21 million edges/sec (incl time for U=triu(A))
rate      18.96 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 1.18158)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000023 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       5.43 million edges/sec (incl time for U=triu(A))
rate      22.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 0.924713)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000024 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000002 sec
rate       5.23 million edges/sec (incl time for U=triu(A))
rate      19.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 8 speedup 0.931421)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000023 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000002 sec
rate       5.27 million edges/sec (incl time for U=triu(A))
rate      19.80 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000018 sec
tricount time:         0.000018 sec (saxpy method)
tri+prep time:         0.000022 sec (incl time to compute L)
compute C time:        0.000018 sec
reduce (C) time:       0.000000 sec
rate       5.62 million edges/sec (incl time for L=tril(A))
rate       6.78 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000009 sec (nthreads: 2 speedup 1.92654)
tricount time:         0.000010 sec (saxpy method)
tri+prep time:         0.000013 sec (incl time to compute L)
compute C time:        0.000009 sec
reduce (C) time:       0.000000 sec
rate       9.27 million edges/sec (incl time for L=tril(A))
rate      12.91 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000009 sec (nthreads: 4 speedup 2.03917)
tricount time:         0.000009 sec (saxpy method)
tri+prep time:         0.000013 sec (incl time to compute L)
compute C time:        0.000009 sec
reduce (C) time:       0.000000 sec
rate       9.68 million edges/sec (incl time for L=tril(A))
rate      13.72 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000015 sec (nthreads: 8 speedup 1.14785)
tricount time:         0.000016 sec (saxpy method)
tri+prep time:         0.000020 sec (incl time to compute L)
compute C time:        0.000015 sec
reduce (C) time:       0.000000 sec
rate       6.30 million edges/sec (incl time for L=tril(A))
rate       7.79 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000148 sec

n 63 # edges 123
U=triu(A) time:        0.000018 sec
L=tril(A) time:        0.000004 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000015 sec
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000043 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000005 sec
rate       2.86 million edges/sec (incl time for U=triu(A))
rate       5.92 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 2 speedup 2.33534)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000004 sec
rate       3.70 million edges/sec (incl time for U=triu(A))
rate      11.20 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 4 speedup 2.6376)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000004 sec
rate       3.81 million edges/sec (incl time for U=triu(A))
rate      12.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 8 speedup 2.79364)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000004 sec
rate       3.91 million edges/sec (incl time for U=triu(A))
rate      13.36 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000033 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000004 sec
rate       3.76 million edges/sec (incl time for U=triu(A))
rate      11.77 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 2 speedup 1.10284)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000004 sec
rate       3.85 million edges/sec (incl time for U=triu(A))
rate      12.68 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 4 speedup 1.05566)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000032 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000004 sec
rate       3.87 million edges/sec (incl time for U=triu(A))
rate      12.86 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 8 speedup 1.11424)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000031 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000004 sec
rate       3.93 million edges/sec (incl time for U=triu(A))
rate      13.60 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000019 sec
tricount time:         0.000020 sec (saxpy method)
tri+prep time:         0.000024 sec (incl time to compute L)
compute C time:        0.000019 sec
reduce (C) time:       0.000000 sec
rate       5.14 million edges/sec (incl time for L=tril(A))
rate       6.19 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000012 sec (nthreads: 2 speedup 1.588)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000017 sec (incl time to compute L)
compute C time:        0.000012 sec
reduce (C) time:       0.000000 sec
rate       7.32 million edges/sec (incl time for L=tril(A))
rate       9.67 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000014 sec (nthreads: 4 speedup 1.42662)
tricount time:         0.000014 sec (saxpy method)
tri+prep time:         0.000018 sec (incl time to compute L)
compute C time:        0.000014 sec
reduce (C) time:       0.000000 sec
rate       6.80 million edges/sec (incl time for L=tril(A))
rate       8.79 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000019 sec (nthreads: 8 speedup 1.03928)
tricount time:         0.000019 sec (saxpy method)
tri+prep time:         0.000023 sec (incl time to compute L)
compute C time:        0.000019 sec
reduce (C) time:       0.000000 sec
rate       5.31 million edges/sec (incl time for L=tril(A))
rate       6.44 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 78 by 78, 204 entries, from stdin

total time to read A matrix:       0.000134 sec

n 78 # edges 102
U=triu(A) time:        0.000013 sec
L=tril(A) time:        0.000004 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000012 sec
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000034 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000005 sec
rate       3.01 million edges/sec (incl time for U=triu(A))
rate       5.96 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 2.77197)
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000024 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000003 sec
rate       4.23 million edges/sec (incl time for U=triu(A))
rate      13.81 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 3.53228)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000023 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       4.53 million edges/sec (incl time for U=triu(A))
rate      17.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 3.55922)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000023 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       4.51 million edges/sec (incl time for U=triu(A))
rate      17.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000023 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000003 sec
rate       4.45 million edges/sec (incl time for U=triu(A))
rate      16.43 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 2 speedup 1.09759)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000022 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       4.57 million edges/sec (incl time for U=triu(A))
rate      18.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 4 speedup 1.14485)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000022 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       4.61 million edges/sec (incl time for U=triu(A))
rate      18.94 million edges/sec (just tricount itself)
L*U' time (dot):         0.000003 sec (nthreads: 8 speedup 1.17396)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000022 sec (incl time to compute L and U)
compute C time:        0.000003 sec
reduce (C) time:       0.000002 sec
rate       4.67 million edges/sec (incl time for U=triu(A))
rate      19.85 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000016 sec
tricount time:         0.000016 sec (saxpy method)
tri+prep time:         0.000020 sec (incl time to compute L)
compute C time:        0.000016 sec
reduce (C) time:       0.000000 sec
rate       5.11 million edges/sec (incl time for L=tril(A))
rate       6.33 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 2 speedup 1.88329)
tricount time:         0.000009 sec (saxpy method)
tri+prep time:         0.000012 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000000 sec
rate       8.20 million edges/sec (incl time for L=tril(A))
rate      11.87 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000009 sec (nthreads: 4 speedup 1.84782)
tricount time:         0.000009 sec (saxpy method)
tri+prep time:         0.000013 sec (incl time to compute L)
compute C time:        0.000009 sec
reduce (C) time:       0.000000 sec
rate       8.11 million edges/sec (incl time for L=tril(A))
rate      11.67 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000021 sec (nthreads: 8 speedup 0.755947)
tricount time:         0.000021 sec (saxpy method)
tri+prep time:         0.000025 sec (incl time to compute L)
compute C time:        0.000021 sec
reduce (C) time:       0.000000 sec
rate       4.08 million edges/sec (incl time for L=tril(A))
rate       4.82 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 982 by 982, 99840 entries, from stdin

total time to read A matrix:       0.026716 sec

n 982 # edges 49920
U=triu(A) time:        0.000087 sec
L=tril(A) time:        0.000068 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000427 sec
tricount time:         0.000504 sec (dot product method)
tri+prep time:         0.000660 sec (incl time to compute L and U)
compute C time:        0.000427 sec
reduce (C) time:       0.000077 sec
rate      75.69 million edges/sec (incl time for U=triu(A))
rate      99.05 million edges/sec (just tricount itself)
L*U' time (dot):         0.000208 sec (nthreads: 2 speedup 2.05127)
tricount time:         0.000249 sec (dot product method)
tri+prep time:         0.000405 sec (incl time to compute L and U)
compute C time:        0.000208 sec
reduce (C) time:       0.000041 sec
rate     123.35 million edges/sec (incl time for U=triu(A))
rate     200.36 million edges/sec (just tricount itself)
L*U' time (dot):         0.000211 sec (nthreads: 4 speedup 2.01957)
tricount time:         0.000242 sec (dot product method)
tri+prep time:         0.000398 sec (incl time to compute L and U)
compute C time:        0.000211 sec
reduce (C) time:       0.000031 sec
rate     125.44 million edges/sec (incl time for U=triu(A))
rate     205.93 million edges/sec (just tricount itself)
L*U' time (dot):         0.000728 sec (nthreads: 8 speedup 0.586418)
tricount time:         0.000755 sec (dot product method)
tri+prep time:         0.000910 sec (incl time to compute L and U)
compute C time:        0.000728 sec
reduce (C) time:       0.000027 sec
rate      54.84 million edges/sec (incl time for U=triu(A))
rate      66.15 million edges/sec (just tricount itself)
L*U' time (dot):         0.000372 sec
tricount time:         0.000439 sec (dot product method)
tri+prep time:         0.000594 sec (incl time to compute L and U)
compute C time:        0.000372 sec
reduce (C) time:       0.000067 sec
rate      83.99 million edges/sec (incl time for U=triu(A))
rate     113.76 million edges/sec (just tricount itself)
L*U' time (dot):         0.000193 sec (nthreads: 2 speedup 1.92925)
tricount time:         0.000233 sec (dot product method)
tri+prep time:         0.000389 sec (incl time to compute L and U)
compute C time:        0.000193 sec
reduce (C) time:       0.000041 sec
rate     128.33 million edges/sec (incl time for U=triu(A))
rate     213.82 million edges/sec (just tricount itself)
L*U' time (dot):         0.000187 sec (nthreads: 4 speedup 1.99262)
tricount time:         0.000222 sec (dot product method)
tri+prep time:         0.000378 sec (incl time to compute L and U)
compute C time:        0.000187 sec
reduce (C) time:       0.000035 sec
rate     132.21 million edges/sec (incl time for U=triu(A))
rate     224.83 million edges/sec (just tricount itself)
L*U' time (dot):         0.002995 sec (nthreads: 8 speedup 0.124184)
tricount time:         0.003021 sec (dot product method)
tri+prep time:         0.003177 sec (incl time to compute L and U)
compute C time:        0.002995 sec
reduce (C) time:       0.000026 sec
rate      15.71 million edges/sec (incl time for U=triu(A))
rate      16.52 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000151 sec
tricount time:         0.000152 sec (saxpy method)
tri+prep time:         0.000220 sec (incl time to compute L)
compute C time:        0.000151 sec
reduce (C) time:       0.000000 sec
rate     226.80 million edges/sec (incl time for L=tril(A))
rate     328.92 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000117 sec (nthreads: 2 speedup 1.28771)
tricount time:         0.000118 sec (saxpy method)
tri+prep time:         0.000186 sec (incl time to compute L)
compute C time:        0.000117 sec
reduce (C) time:       0.000001 sec
rate     267.81 million edges/sec (incl time for L=tril(A))
rate     422.83 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.003606 sec (nthreads: 4 speedup 0.0419473)
tricount time:         0.003607 sec (saxpy method)
tri+prep time:         0.003675 sec (incl time to compute L)
compute C time:        0.003606 sec
reduce (C) time:       0.000000 sec
rate      13.58 million edges/sec (incl time for L=tril(A))
rate      13.84 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000614 sec (nthreads: 8 speedup 0.246277)
tricount time:         0.000615 sec (saxpy method)
tri+prep time:         0.000683 sec (incl time to compute L)
compute C time:        0.000614 sec
reduce (C) time:       0.000001 sec
rate      73.08 million edges/sec (incl time for L=tril(A))
rate      81.20 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 67 by 67, 574 entries, from stdin

total time to read A matrix:       0.000243 sec

n 67 # edges 287
U=triu(A) time:        0.000023 sec
L=tril(A) time:        0.000006 sec

------------------------------------- dot product method:
# triangles 120
L*U' time (dot):         0.000031 sec
tricount time:         0.000039 sec (dot product method)
tri+prep time:         0.000068 sec (incl time to compute L and U)
compute C time:        0.000031 sec
reduce (C) time:       0.000008 sec
rate       4.22 million edges/sec (incl time for U=triu(A))
rate       7.30 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 2 speedup 2.92486)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000043 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000004 sec
rate       6.69 million edges/sec (incl time for U=triu(A))
rate      20.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 3.79039)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000040 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000003 sec
rate       7.20 million edges/sec (incl time for U=triu(A))
rate      25.80 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 8 speedup 4.34042)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000003 sec
rate       7.48 million edges/sec (incl time for U=triu(A))
rate      29.78 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000044 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000003 sec
rate       6.56 million edges/sec (incl time for U=triu(A))
rate      19.12 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 2 speedup 1.23584)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000041 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000003 sec
rate       6.98 million edges/sec (incl time for U=triu(A))
rate      23.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 1.4451)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000039 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000002 sec
rate       7.33 million edges/sec (incl time for U=triu(A))
rate      27.62 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 8 speedup 1.61659)
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000002 sec
rate       7.51 million edges/sec (incl time for U=triu(A))
rate      30.36 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000022 sec
tricount time:         0.000022 sec (saxpy method)
tri+prep time:         0.000028 sec (incl time to compute L)
compute C time:        0.000022 sec
reduce (C) time:       0.000001 sec
rate      10.13 million edges/sec (incl time for L=tril(A))
rate      12.88 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000009 sec (nthreads: 2 speedup 2.45772)
tricount time:         0.000009 sec (saxpy method)
tri+prep time:         0.000015 sec (incl time to compute L)
compute C time:        0.000009 sec
reduce (C) time:       0.000001 sec
rate      18.61 million edges/sec (incl time for L=tril(A))
rate      30.61 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000007 sec (nthreads: 4 speedup 3.3164)
tricount time:         0.000007 sec (saxpy method)
tri+prep time:         0.000013 sec (incl time to compute L)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate      21.91 million edges/sec (incl time for L=tril(A))
rate      40.66 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000006 sec (nthreads: 8 speedup 3.5034)
tricount time:         0.000007 sec (saxpy method)
tri+prep time:         0.000013 sec (incl time to compute L)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate      22.40 million edges/sec (incl time for L=tril(A))
rate      42.39 million edges/sec (just tricount itself)

--------------------------------------------------------------
Wathen: nx 200 ny 200 n 120801 nz 1762400 method 0, time: 0.121 sec

total time to read A matrix:       0.122673 sec

n 120801 # edges 881200
U=triu(A) time:        0.002557 sec
L=tril(A) time:        0.002492 sec

------------------------------------- dot product method:
# triangles 2160400
L*U' time (dot):         0.025900 sec
tricount time:         0.031024 sec (dot product method)
tri+prep time:         0.036073 sec (incl time to compute L and U)
compute C time:        0.025900 sec
reduce (C) time:       0.005124 sec
rate      24.43 million edges/sec (incl time for U=triu(A))
rate      28.40 million edges/sec (just tricount itself)
L*U' time (dot):         0.008875 sec (nthreads: 2 speedup 2.91826)
tricount time:         0.011376 sec (dot product method)
tri+prep time:         0.016425 sec (incl time to compute L and U)
compute C time:        0.008875 sec
reduce (C) time:       0.002501 sec
rate      53.65 million edges/sec (incl time for U=triu(A))
rate      77.46 million edges/sec (just tricount itself)
L*U' time (dot):         0.005144 sec (nthreads: 4 speedup 5.03453)
tricount time:         0.007077 sec (dot product method)
tri+prep time:         0.012126 sec (incl time to compute L and U)
compute C time:        0.005144 sec
reduce (C) time:       0.001933 sec
rate      72.67 million edges/sec (incl time for U=triu(A))
rate     124.51 million edges/sec (just tricount itself)
L*U' time (dot):         0.006594 sec (nthreads: 8 speedup 3.92778)
tricount time:         0.009655 sec (dot product method)
tri+prep time:         0.014704 sec (incl time to compute L and U)
compute C time:        0.006594 sec
reduce (C) time:       0.003061 sec
rate      59.93 million edges/sec (incl time for U=triu(A))
rate      91.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.017438 sec
tricount time:         0.020946 sec (dot product method)
tri+prep time:         0.025995 sec (incl time to compute L and U)
compute C time:        0.017438 sec
reduce (C) time:       0.003508 sec
rate      33.90 million edges/sec (incl time for U=triu(A))
rate      42.07 million edges/sec (just tricount itself)
L*U' time (dot):         0.008092 sec (nthreads: 2 speedup 2.15498)
tricount time:         0.010507 sec (dot product method)
tri+prep time:         0.015556 sec (incl time to compute L and U)
compute C time:        0.008092 sec
reduce (C) time:       0.002415 sec
rate      56.65 million edges/sec (incl time for U=triu(A))
rate      83.87 million edges/sec (just tricount itself)
L*U' time (dot):         0.005674 sec (nthreads: 4 speedup 3.07309)
tricount time:         0.007600 sec (dot product method)
tri+prep time:         0.012648 sec (incl time to compute L and U)
compute C time:        0.005674 sec
reduce (C) time:       0.001925 sec
rate      69.67 million edges/sec (incl time for U=triu(A))
rate     115.95 million edges/sec (just tricount itself)
L*U' time (dot):         0.004976 sec (nthreads: 8 speedup 3.50451)
tricount time:         0.006829 sec (dot product method)
tri+prep time:         0.011878 sec (incl time to compute L and U)
compute C time:        0.004976 sec
reduce (C) time:       0.001853 sec
rate      74.19 million edges/sec (incl time for U=triu(A))
rate     129.04 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.010754 sec
tricount time:         0.012713 sec (saxpy method)
tri+prep time:         0.015204 sec (incl time to compute L)
compute C time:        0.010754 sec
reduce (C) time:       0.001958 sec
rate      57.96 million edges/sec (incl time for L=tril(A))
rate      69.32 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.008367 sec (nthreads: 2 speedup 1.28535)
tricount time:         0.009237 sec (saxpy method)
tri+prep time:         0.011729 sec (incl time to compute L)
compute C time:        0.008367 sec
reduce (C) time:       0.000870 sec
rate      75.13 million edges/sec (incl time for L=tril(A))
rate      95.40 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.005182 sec (nthreads: 4 speedup 2.07546)
tricount time:         0.005623 sec (saxpy method)
tri+prep time:         0.008115 sec (incl time to compute L)
compute C time:        0.005182 sec
reduce (C) time:       0.000442 sec
rate     108.59 million edges/sec (incl time for L=tril(A))
rate     156.70 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.004520 sec (nthreads: 8 speedup 2.37912)
tricount time:         0.004852 sec (saxpy method)
tri+prep time:         0.007344 sec (incl time to compute L)
compute C time:        0.004520 sec
reduce (C) time:       0.000332 sec
rate     119.99 million edges/sec (incl time for L=tril(A))
rate     181.61 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 0 time 0.021 sec

total time to read A matrix:       0.022139 sec

n 10000 # edges 99884
U=triu(A) time:        0.000117 sec
L=tril(A) time:        0.000100 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.009367 sec
tricount time:         0.009721 sec (dot product method)
tri+prep time:         0.009939 sec (incl time to compute L and U)
compute C time:        0.009367 sec
reduce (C) time:       0.000355 sec
rate      10.05 million edges/sec (incl time for U=triu(A))
rate      10.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.004509 sec (nthreads: 2 speedup 2.0774)
tricount time:         0.004795 sec (dot product method)
tri+prep time:         0.005013 sec (incl time to compute L and U)
compute C time:        0.004509 sec
reduce (C) time:       0.000286 sec
rate      19.93 million edges/sec (incl time for U=triu(A))
rate      20.83 million edges/sec (just tricount itself)
L*U' time (dot):         0.002668 sec (nthreads: 4 speedup 3.51108)
tricount time:         0.002789 sec (dot product method)
tri+prep time:         0.003007 sec (incl time to compute L and U)
compute C time:        0.002668 sec
reduce (C) time:       0.000121 sec
rate      33.22 million edges/sec (incl time for U=triu(A))
rate      35.81 million edges/sec (just tricount itself)
L*U' time (dot):         0.001693 sec (nthreads: 8 speedup 5.53283)
tricount time:         0.001773 sec (dot product method)
tri+prep time:         0.001991 sec (incl time to compute L and U)
compute C time:        0.001693 sec
reduce (C) time:       0.000080 sec
rate      50.17 million edges/sec (incl time for U=triu(A))
rate      56.34 million edges/sec (just tricount itself)
L*U' time (dot):         0.009222 sec
tricount time:         0.009559 sec (dot product method)
tri+prep time:         0.009777 sec (incl time to compute L and U)
compute C time:        0.009222 sec
reduce (C) time:       0.000338 sec
rate      10.22 million edges/sec (incl time for U=triu(A))
rate      10.45 million edges/sec (just tricount itself)
L*U' time (dot):         0.004140 sec (nthreads: 2 speedup 2.22775)
tricount time:         0.004315 sec (dot product method)
tri+prep time:         0.004533 sec (incl time to compute L and U)
compute C time:        0.004140 sec
reduce (C) time:       0.000175 sec
rate      22.04 million edges/sec (incl time for U=triu(A))
rate      23.15 million edges/sec (just tricount itself)
L*U' time (dot):         0.002164 sec (nthreads: 4 speedup 4.26095)
tricount time:         0.002266 sec (dot product method)
tri+prep time:         0.002484 sec (incl time to compute L and U)
compute C time:        0.002164 sec
reduce (C) time:       0.000102 sec
rate      40.21 million edges/sec (incl time for U=triu(A))
rate      44.08 million edges/sec (just tricount itself)
L*U' time (dot):         0.001601 sec (nthreads: 8 speedup 5.76018)
tricount time:         0.001688 sec (dot product method)
tri+prep time:         0.001906 sec (incl time to compute L and U)
compute C time:        0.001601 sec
reduce (C) time:       0.000087 sec
rate      52.40 million edges/sec (incl time for U=triu(A))
rate      59.16 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.002630 sec
tricount time:         0.002635 sec (saxpy method)
tri+prep time:         0.002735 sec (incl time to compute L)
compute C time:        0.002630 sec
reduce (C) time:       0.000005 sec
rate      36.52 million edges/sec (incl time for L=tril(A))
rate      37.91 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001498 sec (nthreads: 2 speedup 1.75559)
tricount time:         0.001502 sec (saxpy method)
tri+prep time:         0.001603 sec (incl time to compute L)
compute C time:        0.001498 sec
reduce (C) time:       0.000004 sec
rate      62.31 million edges/sec (incl time for L=tril(A))
rate      66.48 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001273 sec (nthreads: 4 speedup 2.0661)
tricount time:         0.001278 sec (saxpy method)
tri+prep time:         0.001378 sec (incl time to compute L)
compute C time:        0.001273 sec
reduce (C) time:       0.000005 sec
rate      72.46 million edges/sec (incl time for L=tril(A))
rate      78.16 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000875 sec (nthreads: 8 speedup 3.00609)
tricount time:         0.000882 sec (saxpy method)
tri+prep time:         0.000982 sec (incl time to compute L)
compute C time:        0.000875 sec
reduce (C) time:       0.000007 sec
rate     101.70 million edges/sec (incl time for L=tril(A))
rate     113.29 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 1 time 0.014 sec

total time to read A matrix:       0.026240 sec

n 10000 # edges 99884
U=triu(A) time:        0.000425 sec
L=tril(A) time:        0.000240 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.010019 sec
tricount time:         0.010397 sec (dot product method)
tri+prep time:         0.011061 sec (incl time to compute L and U)
compute C time:        0.010019 sec
reduce (C) time:       0.000378 sec
rate       9.03 million edges/sec (incl time for U=triu(A))
rate       9.61 million edges/sec (just tricount itself)
L*U' time (dot):         0.004241 sec (nthreads: 2 speedup 2.36226)
tricount time:         0.004405 sec (dot product method)
tri+prep time:         0.005070 sec (incl time to compute L and U)
compute C time:        0.004241 sec
reduce (C) time:       0.000164 sec
rate      19.70 million edges/sec (incl time for U=triu(A))
rate      22.67 million edges/sec (just tricount itself)
L*U' time (dot):         0.002200 sec (nthreads: 4 speedup 4.55489)
tricount time:         0.002290 sec (dot product method)
tri+prep time:         0.002955 sec (incl time to compute L and U)
compute C time:        0.002200 sec
reduce (C) time:       0.000091 sec
rate      33.80 million edges/sec (incl time for U=triu(A))
rate      43.61 million edges/sec (just tricount itself)
L*U' time (dot):         0.003446 sec (nthreads: 8 speedup 2.90756)
tricount time:         0.003522 sec (dot product method)
tri+prep time:         0.004187 sec (incl time to compute L and U)
compute C time:        0.003446 sec
reduce (C) time:       0.000076 sec
rate      23.86 million edges/sec (incl time for U=triu(A))
rate      28.36 million edges/sec (just tricount itself)
L*U' time (dot):         0.009901 sec
tricount time:         0.010258 sec (dot product method)
tri+prep time:         0.010923 sec (incl time to compute L and U)
compute C time:        0.009901 sec
reduce (C) time:       0.000357 sec
rate       9.14 million edges/sec (incl time for U=triu(A))
rate       9.74 million edges/sec (just tricount itself)
L*U' time (dot):         0.004195 sec (nthreads: 2 speedup 2.36002)
tricount time:         0.004789 sec (dot product method)
tri+prep time:         0.005454 sec (incl time to compute L and U)
compute C time:        0.004195 sec
reduce (C) time:       0.000594 sec
rate      18.31 million edges/sec (incl time for U=triu(A))
rate      20.86 million edges/sec (just tricount itself)
L*U' time (dot):         0.002356 sec (nthreads: 4 speedup 4.20182)
tricount time:         0.002462 sec (dot product method)
tri+prep time:         0.003126 sec (incl time to compute L and U)
compute C time:        0.002356 sec
reduce (C) time:       0.000105 sec
rate      31.95 million edges/sec (incl time for U=triu(A))
rate      40.58 million edges/sec (just tricount itself)
L*U' time (dot):         0.002151 sec (nthreads: 8 speedup 4.60245)
tricount time:         0.002289 sec (dot product method)
tri+prep time:         0.002954 sec (incl time to compute L and U)
compute C time:        0.002151 sec
reduce (C) time:       0.000138 sec
rate      33.81 million edges/sec (incl time for U=triu(A))
rate      43.63 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.002504 sec
tricount time:         0.002509 sec (saxpy method)
tri+prep time:         0.002749 sec (incl time to compute L)
compute C time:        0.002504 sec
reduce (C) time:       0.000005 sec
rate      36.34 million edges/sec (incl time for L=tril(A))
rate      39.81 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001467 sec (nthreads: 2 speedup 1.70761)
tricount time:         0.001471 sec (saxpy method)
tri+prep time:         0.001711 sec (incl time to compute L)
compute C time:        0.001467 sec
reduce (C) time:       0.000004 sec
rate      58.39 million edges/sec (incl time for L=tril(A))
rate      67.91 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001258 sec (nthreads: 4 speedup 1.99028)
tricount time:         0.001263 sec (saxpy method)
tri+prep time:         0.001503 sec (incl time to compute L)
compute C time:        0.001258 sec
reduce (C) time:       0.000005 sec
rate      66.47 million edges/sec (incl time for L=tril(A))
rate      79.10 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.005025 sec (nthreads: 8 speedup 0.498352)
tricount time:         0.005030 sec (saxpy method)
tri+prep time:         0.005270 sec (incl time to compute L)
compute C time:        0.005025 sec
reduce (C) time:       0.000005 sec
rate      18.95 million edges/sec (incl time for L=tril(A))
rate      19.86 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 0 time 2.130 sec

total time to read A matrix:       2.153622 sec

n 100000 # edges 9990165
U=triu(A) time:        0.017975 sec
L=tril(A) time:        0.019019 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):         8.316624 sec
tricount time:         8.350390 sec (dot product method)
tri+prep time:         8.387384 sec (incl time to compute L and U)
compute C time:        8.316624 sec
reduce (C) time:       0.033766 sec
rate       1.19 million edges/sec (incl time for U=triu(A))
rate       1.20 million edges/sec (just tricount itself)
L*U' time (dot):         4.511790 sec (nthreads: 2 speedup 1.84331)
tricount time:         4.532451 sec (dot product method)
tri+prep time:         4.569445 sec (incl time to compute L and U)
compute C time:        4.511790 sec
reduce (C) time:       0.020661 sec
rate       2.19 million edges/sec (incl time for U=triu(A))
rate       2.20 million edges/sec (just tricount itself)
L*U' time (dot):         2.314227 sec (nthreads: 4 speedup 3.59369)
tricount time:         2.330048 sec (dot product method)
tri+prep time:         2.367042 sec (incl time to compute L and U)
compute C time:        2.314227 sec
reduce (C) time:       0.015822 sec
rate       4.22 million edges/sec (incl time for U=triu(A))
rate       4.29 million edges/sec (just tricount itself)
L*U' time (dot):         1.634788 sec (nthreads: 8 speedup 5.08728)
tricount time:         1.651045 sec (dot product method)
tri+prep time:         1.688039 sec (incl time to compute L and U)
compute C time:        1.634788 sec
reduce (C) time:       0.016257 sec
rate       5.92 million edges/sec (incl time for U=triu(A))
rate       6.05 million edges/sec (just tricount itself)
L*U' time (dot):         9.030141 sec
tricount time:         9.060756 sec (dot product method)
tri+prep time:         9.097750 sec (incl time to compute L and U)
compute C time:        9.030141 sec
reduce (C) time:       0.030615 sec
rate       1.10 million edges/sec (incl time for U=triu(A))
rate       1.10 million edges/sec (just tricount itself)
L*U' time (dot):         4.893692 sec (nthreads: 2 speedup 1.84526)
tricount time:         4.913487 sec (dot product method)
tri+prep time:         4.950480 sec (incl time to compute L and U)
compute C time:        4.893692 sec
reduce (C) time:       0.019795 sec
rate       2.02 million edges/sec (incl time for U=triu(A))
rate       2.03 million edges/sec (just tricount itself)
L*U' time (dot):         2.958895 sec (nthreads: 4 speedup 3.05186)
tricount time:         2.977357 sec (dot product method)
tri+prep time:         3.014351 sec (incl time to compute L and U)
compute C time:        2.958895 sec
reduce (C) time:       0.018463 sec
rate       3.31 million edges/sec (incl time for U=triu(A))
rate       3.36 million edges/sec (just tricount itself)
L*U' time (dot):         2.161324 sec (nthreads: 8 speedup 4.17806)
tricount time:         2.180241 sec (dot product method)
tri+prep time:         2.217235 sec (incl time to compute L and U)
compute C time:        2.161324 sec
reduce (C) time:       0.018918 sec
rate       4.51 million edges/sec (incl time for U=triu(A))
rate       4.58 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         2.808438 sec
tricount time:         2.814016 sec (saxpy method)
tri+prep time:         2.833035 sec (incl time to compute L)
compute C time:        2.808438 sec
reduce (C) time:       0.005578 sec
rate       3.53 million edges/sec (incl time for L=tril(A))
rate       3.55 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.712648 sec (nthreads: 2 speedup 1.63982)
tricount time:         1.715160 sec (saxpy method)
tri+prep time:         1.734179 sec (incl time to compute L)
compute C time:        1.712648 sec
reduce (C) time:       0.002512 sec
rate       5.76 million edges/sec (incl time for L=tril(A))
rate       5.82 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.115699 sec (nthreads: 4 speedup 2.5172)
tricount time:         1.117000 sec (saxpy method)
tri+prep time:         1.136019 sec (incl time to compute L)
compute C time:        1.115699 sec
reduce (C) time:       0.001301 sec
rate       8.79 million edges/sec (incl time for L=tril(A))
rate       8.94 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.544424 sec (nthreads: 8 speedup 1.81844)
tricount time:         1.545542 sec (saxpy method)
tri+prep time:         1.564561 sec (incl time to compute L)
compute C time:        1.544424 sec
reduce (C) time:       0.001118 sec
rate       6.39 million edges/sec (incl time for L=tril(A))
rate       6.46 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 1 time 1.643 sec

total time to read A matrix:       1.665238 sec

n 100000 # edges 9990165
U=triu(A) time:        0.018149 sec
L=tril(A) time:        0.018498 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):         8.303884 sec
tricount time:         8.337004 sec (dot product method)
tri+prep time:         8.373652 sec (incl time to compute L and U)
compute C time:        8.303884 sec
reduce (C) time:       0.033120 sec
rate       1.19 million edges/sec (incl time for U=triu(A))
rate       1.20 million edges/sec (just tricount itself)
L*U' time (dot):         4.516204 sec (nthreads: 2 speedup 1.83869)
tricount time:         4.536236 sec (dot product method)
tri+prep time:         4.572884 sec (incl time to compute L and U)
compute C time:        4.516204 sec
reduce (C) time:       0.020032 sec
rate       2.18 million edges/sec (incl time for U=triu(A))
rate       2.20 million edges/sec (just tricount itself)
L*U' time (dot):         2.874106 sec (nthreads: 4 speedup 2.88921)
tricount time:         2.891816 sec (dot product method)
tri+prep time:         2.928463 sec (incl time to compute L and U)
compute C time:        2.874106 sec
reduce (C) time:       0.017710 sec
rate       3.41 million edges/sec (incl time for U=triu(A))
rate       3.45 million edges/sec (just tricount itself)
L*U' time (dot):         2.128824 sec (nthreads: 8 speedup 3.90069)
tricount time:         2.145380 sec (dot product method)
tri+prep time:         2.182027 sec (incl time to compute L and U)
compute C time:        2.128824 sec
reduce (C) time:       0.016555 sec
rate       4.58 million edges/sec (incl time for U=triu(A))
rate       4.66 million edges/sec (just tricount itself)
L*U' time (dot):         9.128860 sec
tricount time:         9.158722 sec (dot product method)
tri+prep time:         9.195369 sec (incl time to compute L and U)
compute C time:        9.128860 sec
reduce (C) time:       0.029861 sec
rate       1.09 million edges/sec (incl time for U=triu(A))
rate       1.09 million edges/sec (just tricount itself)
L*U' time (dot):         4.849221 sec (nthreads: 2 speedup 1.88254)
tricount time:         4.869567 sec (dot product method)
tri+prep time:         4.906214 sec (incl time to compute L and U)
compute C time:        4.849221 sec
reduce (C) time:       0.020346 sec
rate       2.04 million edges/sec (incl time for U=triu(A))
rate       2.05 million edges/sec (just tricount itself)
L*U' time (dot):         3.066534 sec (nthreads: 4 speedup 2.97693)
tricount time:         3.083425 sec (dot product method)
tri+prep time:         3.120073 sec (incl time to compute L and U)
compute C time:        3.066534 sec
reduce (C) time:       0.016891 sec
rate       3.20 million edges/sec (incl time for U=triu(A))
rate       3.24 million edges/sec (just tricount itself)
L*U' time (dot):         2.164204 sec (nthreads: 8 speedup 4.21811)
tricount time:         2.180172 sec (dot product method)
tri+prep time:         2.216820 sec (incl time to compute L and U)
compute C time:        2.164204 sec
reduce (C) time:       0.015968 sec
rate       4.51 million edges/sec (incl time for U=triu(A))
rate       4.58 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         2.739352 sec
tricount time:         2.744883 sec (saxpy method)
tri+prep time:         2.763381 sec (incl time to compute L)
compute C time:        2.739352 sec
reduce (C) time:       0.005531 sec
rate       3.62 million edges/sec (incl time for L=tril(A))
rate       3.64 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.620701 sec (nthreads: 2 speedup 1.69023)
tricount time:         1.623250 sec (saxpy method)
tri+prep time:         1.641749 sec (incl time to compute L)
compute C time:        1.620701 sec
reduce (C) time:       0.002549 sec
rate       6.09 million edges/sec (incl time for L=tril(A))
rate       6.15 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.950055 sec (nthreads: 4 speedup 2.88336)
tricount time:         0.951225 sec (saxpy method)
tri+prep time:         0.969723 sec (incl time to compute L)
compute C time:        0.950055 sec
reduce (C) time:       0.001169 sec
rate      10.30 million edges/sec (incl time for L=tril(A))
rate      10.50 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.953257 sec (nthreads: 8 speedup 2.87368)
tricount time:         0.954097 sec (saxpy method)
tri+prep time:         0.972596 sec (incl time to compute L)
compute C time:        0.953257 sec
reduce (C) time:       0.000841 sec
rate      10.27 million edges/sec (incl time for L=tril(A))
rate      10.47 million edges/sec (just tricount itself)

