--------------------------------------------------------------
Wathen: nx 4 ny 4 n 65 nz 752 method 0, time: 0.001 sec

total time to read A matrix:       0.000640 sec

n 65 # edges 376
U=triu(A) time:        0.000061 sec
L=tril(A) time:        0.000022 sec

------------------------------------- dot product method:
# triangles 872
L*U' time (dot):         0.000060 sec
tricount time:         0.000094 sec (dot product method)
tri+prep time:         0.000177 sec (incl time to compute L and U)
compute C time:        0.000060 sec
reduce (C) time:       0.000034 sec
rate       2.13 million edges/sec (incl time for U=triu(A))
rate       4.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000033 sec (nthreads: 2 speedup 1.81295)
tricount time:         0.000046 sec (dot product method)
tri+prep time:         0.000129 sec (incl time to compute L and U)
compute C time:        0.000033 sec
reduce (C) time:       0.000013 sec
rate       2.92 million edges/sec (incl time for U=triu(A))
rate       8.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000026 sec (nthreads: 4 speedup 2.31193)
tricount time:         0.000038 sec (dot product method)
tri+prep time:         0.000121 sec (incl time to compute L and U)
compute C time:        0.000026 sec
reduce (C) time:       0.000012 sec
rate       3.12 million edges/sec (incl time for U=triu(A))
rate       9.92 million edges/sec (just tricount itself)
L*U' time (dot):         0.000029 sec (nthreads: 8 speedup 2.08264)
tricount time:         0.000038 sec (dot product method)
tri+prep time:         0.000121 sec (incl time to compute L and U)
compute C time:        0.000029 sec
reduce (C) time:       0.000009 sec
rate       3.12 million edges/sec (incl time for U=triu(A))
rate       9.92 million edges/sec (just tricount itself)
L*U' time (dot):         0.000027 sec (nthreads: 16 speedup 2.21053)
tricount time:         0.000035 sec (dot product method)
tri+prep time:         0.000118 sec (incl time to compute L and U)
compute C time:        0.000027 sec
reduce (C) time:       0.000008 sec
rate       3.19 million edges/sec (incl time for U=triu(A))
rate      10.73 million edges/sec (just tricount itself)
L*U' time (dot):         0.000025 sec (nthreads: 32 speedup 2.4)
tricount time:         0.000033 sec (dot product method)
tri+prep time:         0.000116 sec (incl time to compute L and U)
compute C time:        0.000025 sec
reduce (C) time:       0.000008 sec
rate       3.24 million edges/sec (incl time for U=triu(A))
rate      11.35 million edges/sec (just tricount itself)
L*U' time (dot):         0.000031 sec
tricount time:         0.000041 sec (dot product method)
tri+prep time:         0.000124 sec (incl time to compute L and U)
compute C time:        0.000031 sec
reduce (C) time:       0.000010 sec
rate       3.04 million edges/sec (incl time for U=triu(A))
rate       9.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000025 sec (nthreads: 2 speedup 1.2381)
tricount time:         0.000033 sec (dot product method)
tri+prep time:         0.000116 sec (incl time to compute L and U)
compute C time:        0.000025 sec
reduce (C) time:       0.000008 sec
rate       3.24 million edges/sec (incl time for U=triu(A))
rate      11.35 million edges/sec (just tricount itself)
L*U' time (dot):         0.000025 sec (nthreads: 4 speedup 1.2381)
tricount time:         0.000033 sec (dot product method)
tri+prep time:         0.000116 sec (incl time to compute L and U)
compute C time:        0.000025 sec
reduce (C) time:       0.000008 sec
rate       3.25 million edges/sec (incl time for U=triu(A))
rate      11.43 million edges/sec (just tricount itself)
L*U' time (dot):         0.000025 sec (nthreads: 8 speedup 1.2381)
tricount time:         0.000032 sec (dot product method)
tri+prep time:         0.000115 sec (incl time to compute L and U)
compute C time:        0.000025 sec
reduce (C) time:       0.000007 sec
rate       3.28 million edges/sec (incl time for U=triu(A))
rate      11.77 million edges/sec (just tricount itself)
L*U' time (dot):         0.000025 sec (nthreads: 16 speedup 1.2381)
tricount time:         0.000032 sec (dot product method)
tri+prep time:         0.000115 sec (incl time to compute L and U)
compute C time:        0.000025 sec
reduce (C) time:       0.000007 sec
rate       3.28 million edges/sec (incl time for U=triu(A))
rate      11.77 million edges/sec (just tricount itself)
L*U' time (dot):         0.000027 sec (nthreads: 32 speedup 1.15044)
tricount time:         0.000036 sec (dot product method)
tri+prep time:         0.000119 sec (incl time to compute L and U)
compute C time:        0.000027 sec
reduce (C) time:       0.000009 sec
rate       3.17 million edges/sec (incl time for U=triu(A))
rate      10.44 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000042 sec
tricount time:         0.000045 sec (saxpy method)
tri+prep time:         0.000067 sec (incl time to compute L)
compute C time:        0.000042 sec
reduce (C) time:       0.000003 sec
rate       5.61 million edges/sec (incl time for L=tril(A))
rate       8.34 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000019 sec (nthreads: 2 speedup 2.2125)
tricount time:         0.000022 sec (saxpy method)
tri+prep time:         0.000044 sec (incl time to compute L)
compute C time:        0.000019 sec
reduce (C) time:       0.000003 sec
rate       8.57 million edges/sec (incl time for L=tril(A))
rate      17.14 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000017 sec (nthreads: 4 speedup 2.49296)
tricount time:         0.000020 sec (saxpy method)
tri+prep time:         0.000042 sec (incl time to compute L)
compute C time:        0.000017 sec
reduce (C) time:       0.000003 sec
rate       9.01 million edges/sec (incl time for L=tril(A))
rate      19.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000016 sec (nthreads: 8 speedup 2.64179)
tricount time:         0.000019 sec (saxpy method)
tri+prep time:         0.000041 sec (incl time to compute L)
compute C time:        0.000016 sec
reduce (C) time:       0.000003 sec
rate       9.17 million edges/sec (incl time for L=tril(A))
rate      19.71 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000015 sec (nthreads: 16 speedup 2.80952)
tricount time:         0.000017 sec (saxpy method)
tri+prep time:         0.000039 sec (incl time to compute L)
compute C time:        0.000015 sec
reduce (C) time:       0.000002 sec
rate       9.68 million edges/sec (incl time for L=tril(A))
rate      22.21 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000016 sec (nthreads: 32 speedup 2.64179)
tricount time:         0.000019 sec (saxpy method)
tri+prep time:         0.000041 sec (incl time to compute L)
compute C time:        0.000016 sec
reduce (C) time:       0.000003 sec
rate       9.17 million edges/sec (incl time for L=tril(A))
rate      19.71 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 5 by 5, nz: 18, method 1 time 0.000 sec

total time to read A matrix:       0.000220 sec

n 5 # edges 9
U=triu(A) time:        0.000081 sec
L=tril(A) time:        0.000020 sec

------------------------------------- dot product method:
# triangles 7
L*U' time (dot):         0.000042 sec
tricount time:         0.000077 sec (dot product method)
tri+prep time:         0.000178 sec (incl time to compute L and U)
compute C time:        0.000042 sec
reduce (C) time:       0.000035 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.12 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 2 speedup 3.52)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000118 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000005 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 5.17647)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000113 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000004 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.74 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 5.17647)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000113 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000004 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.74 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 16 speedup 5.33333)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000113 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000004 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.75 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 32 speedup 5.86667)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000112 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000004 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.80 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000114 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000004 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 2 speedup 1.15152)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000112 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000003 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.82 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 1.11765)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000113 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000004 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.74 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 8 speedup 1.31034)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000112 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000004 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.82 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 16 speedup 1.26667)
tricount time:         0.000011 sec (dot product method)
tri+prep time:         0.000112 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000004 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.80 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 32 speedup 1)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000115 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000005 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.64 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000062 sec
tricount time:         0.000063 sec (saxpy method)
tri+prep time:         0.000083 sec (incl time to compute L)
compute C time:        0.000062 sec
reduce (C) time:       0.000001 sec
rate       0.11 million edges/sec (incl time for L=tril(A))
rate       0.14 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000042 sec (nthreads: 2 speedup 1.46893)
tricount time:         0.000043 sec (saxpy method)
tri+prep time:         0.000063 sec (incl time to compute L)
compute C time:        0.000042 sec
reduce (C) time:       0.000001 sec
rate       0.14 million edges/sec (incl time for L=tril(A))
rate       0.21 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000028 sec (nthreads: 4 speedup 2.20339)
tricount time:         0.000029 sec (saxpy method)
tri+prep time:         0.000049 sec (incl time to compute L)
compute C time:        0.000028 sec
reduce (C) time:       0.000001 sec
rate       0.18 million edges/sec (incl time for L=tril(A))
rate       0.31 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000045 sec (nthreads: 8 speedup 1.37566)
tricount time:         0.000046 sec (saxpy method)
tri+prep time:         0.000066 sec (incl time to compute L)
compute C time:        0.000045 sec
reduce (C) time:       0.000001 sec
rate       0.14 million edges/sec (incl time for L=tril(A))
rate       0.20 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000061 sec (nthreads: 16 speedup 1.01562)
tricount time:         0.000062 sec (saxpy method)
tri+prep time:         0.000082 sec (incl time to compute L)
compute C time:        0.000061 sec
reduce (C) time:       0.000001 sec
rate       0.11 million edges/sec (incl time for L=tril(A))
rate       0.15 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000180 sec (nthreads: 32 speedup 0.344371)
tricount time:         0.000182 sec (saxpy method)
tri+prep time:         0.000202 sec (incl time to compute L)
compute C time:        0.000180 sec
reduce (C) time:       0.000002 sec
rate       0.04 million edges/sec (incl time for L=tril(A))
rate       0.05 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 3 by 3, 0 entries, from stdin

total time to read A matrix:       0.000502 sec

n 3 # edges 0
U=triu(A) time:        0.000085 sec
L=tril(A) time:        0.000019 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000034 sec
tricount time:         0.000038 sec (dot product method)
tri+prep time:         0.000142 sec (incl time to compute L and U)
compute C time:        0.000034 sec
reduce (C) time:       0.000004 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 2 speedup 3.76316)
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000114 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 4 speedup 4.93103)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000112 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 8 speedup 5.72)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000110 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 16 speedup 5.72)
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000111 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 32 speedup 5.5)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000110 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000111 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 1.19048)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000110 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 4 speedup 1)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000110 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 8 speedup 1.19048)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000110 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec (nthreads: 16 speedup 0.961538)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000110 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 32 speedup 0.833333)
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000112 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000044 sec
tricount time:         0.000045 sec (saxpy method)
tri+prep time:         0.000064 sec (incl time to compute L)
compute C time:        0.000044 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000011 sec (nthreads: 2 speedup 4.02174)
tricount time:         0.000011 sec (saxpy method)
tri+prep time:         0.000030 sec (incl time to compute L)
compute C time:        0.000011 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 4 speedup 5.44118)
tricount time:         0.000009 sec (saxpy method)
tri+prep time:         0.000028 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000007 sec (nthreads: 8 speedup 6.37931)
tricount time:         0.000008 sec (saxpy method)
tri+prep time:         0.000027 sec (incl time to compute L)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000007 sec (nthreads: 16 speedup 6.37931)
tricount time:         0.000008 sec (saxpy method)
tri+prep time:         0.000027 sec (incl time to compute L)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000007 sec (nthreads: 32 speedup 6.37931)
tricount time:         0.000007 sec (saxpy method)
tri+prep time:         0.000026 sec (incl time to compute L)
compute C time:        0.000007 sec
reduce (C) time:       0.000000 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 4 entries, from stdin

total time to read A matrix:       0.000561 sec

n 4 # edges 2
U=triu(A) time:        0.000070 sec
L=tril(A) time:        0.000021 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000036 sec
tricount time:         0.000069 sec (dot product method)
tri+prep time:         0.000160 sec (incl time to compute L and U)
compute C time:        0.000036 sec
reduce (C) time:       0.000033 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.03 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 2 speedup 3.59524)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000108 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000007 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.12 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 4 speedup 3.28261)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000107 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000005 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.13 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 4.57576)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000105 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000006 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.14 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 16 speedup 4.57576)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000104 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000005 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 32 speedup 5.2069)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000103 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000005 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000105 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000006 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.14 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 2 speedup 1.13333)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000103 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000005 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 1)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000104 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000005 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.15 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 8 speedup 1.13333)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000103 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000005 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 16 speedup 1.13333)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000103 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000005 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 32 speedup 0.809524)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000107 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000006 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.13 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000064 sec
tricount time:         0.000065 sec (saxpy method)
tri+prep time:         0.000086 sec (incl time to compute L)
compute C time:        0.000064 sec
reduce (C) time:       0.000001 sec
rate       0.02 million edges/sec (incl time for L=tril(A))
rate       0.03 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000035 sec (nthreads: 2 speedup 1.82313)
tricount time:         0.000037 sec (saxpy method)
tri+prep time:         0.000058 sec (incl time to compute L)
compute C time:        0.000035 sec
reduce (C) time:       0.000002 sec
rate       0.03 million edges/sec (incl time for L=tril(A))
rate       0.05 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000035 sec (nthreads: 4 speedup 1.82313)
tricount time:         0.000036 sec (saxpy method)
tri+prep time:         0.000057 sec (incl time to compute L)
compute C time:        0.000035 sec
reduce (C) time:       0.000001 sec
rate       0.04 million edges/sec (incl time for L=tril(A))
rate       0.06 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000052 sec (nthreads: 8 speedup 1.22936)
tricount time:         0.000053 sec (saxpy method)
tri+prep time:         0.000074 sec (incl time to compute L)
compute C time:        0.000052 sec
reduce (C) time:       0.000001 sec
rate       0.03 million edges/sec (incl time for L=tril(A))
rate       0.04 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000083 sec (nthreads: 16 speedup 0.770115)
tricount time:         0.000084 sec (saxpy method)
tri+prep time:         0.000105 sec (incl time to compute L)
compute C time:        0.000083 sec
reduce (C) time:       0.000001 sec
rate       0.02 million edges/sec (incl time for L=tril(A))
rate       0.02 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000200 sec (nthreads: 32 speedup 0.319809)
tricount time:         0.000202 sec (saxpy method)
tri+prep time:         0.000223 sec (incl time to compute L)
compute C time:        0.000200 sec
reduce (C) time:       0.000002 sec
rate       0.01 million edges/sec (incl time for L=tril(A))
rate       0.01 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 10 entries, from stdin

total time to read A matrix:       0.000570 sec

n 4 # edges 5
U=triu(A) time:        0.000068 sec
L=tril(A) time:        0.000020 sec

------------------------------------- dot product method:
# triangles 2
L*U' time (dot):         0.000036 sec
tricount time:         0.000066 sec (dot product method)
tri+prep time:         0.000154 sec (incl time to compute L and U)
compute C time:        0.000036 sec
reduce (C) time:       0.000030 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.08 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 2 speedup 3.02)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000105 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000005 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.30 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 4 speedup 2.7963)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000105 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000004 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.30 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 8 speedup 3.97368)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000101 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000004 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.38 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 16 speedup 3.02)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000105 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000005 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.30 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 32 speedup 2.7963)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000105 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000004 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.30 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000103 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000005 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 2 speedup 1)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000103 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000005 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 1.27273)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000100 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000004 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.42 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 1.23529)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000100 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000004 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.42 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 16 speedup 1.23529)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000100 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000004 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.42 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 32 speedup 1)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000103 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000005 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.33 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000073 sec
tricount time:         0.000075 sec (saxpy method)
tri+prep time:         0.000095 sec (incl time to compute L)
compute C time:        0.000073 sec
reduce (C) time:       0.000002 sec
rate       0.05 million edges/sec (incl time for L=tril(A))
rate       0.07 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000027 sec (nthreads: 2 speedup 2.70796)
tricount time:         0.000028 sec (saxpy method)
tri+prep time:         0.000048 sec (incl time to compute L)
compute C time:        0.000027 sec
reduce (C) time:       0.000001 sec
rate       0.10 million edges/sec (incl time for L=tril(A))
rate       0.18 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000030 sec (nthreads: 4 speedup 2.448)
tricount time:         0.000031 sec (saxpy method)
tri+prep time:         0.000051 sec (incl time to compute L)
compute C time:        0.000030 sec
reduce (C) time:       0.000001 sec
rate       0.10 million edges/sec (incl time for L=tril(A))
rate       0.16 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000042 sec (nthreads: 8 speedup 1.73864)
tricount time:         0.000043 sec (saxpy method)
tri+prep time:         0.000063 sec (incl time to compute L)
compute C time:        0.000042 sec
reduce (C) time:       0.000001 sec
rate       0.08 million edges/sec (incl time for L=tril(A))
rate       0.12 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000064 sec (nthreads: 16 speedup 1.13755)
tricount time:         0.000065 sec (saxpy method)
tri+prep time:         0.000085 sec (incl time to compute L)
compute C time:        0.000064 sec
reduce (C) time:       0.000001 sec
rate       0.06 million edges/sec (incl time for L=tril(A))
rate       0.08 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000113 sec (nthreads: 32 speedup 0.64557)
tricount time:         0.000114 sec (saxpy method)
tri+prep time:         0.000134 sec (incl time to compute L)
compute C time:        0.000113 sec
reduce (C) time:       0.000001 sec
rate       0.04 million edges/sec (incl time for L=tril(A))
rate       0.04 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 7 by 7, 16 entries, from stdin

total time to read A matrix:       0.000880 sec

n 7 # edges 8
U=triu(A) time:        0.000061 sec
L=tril(A) time:        0.000064 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000040 sec
tricount time:         0.000073 sec (dot product method)
tri+prep time:         0.000198 sec (incl time to compute L and U)
compute C time:        0.000040 sec
reduce (C) time:       0.000033 sec
rate       0.04 million edges/sec (incl time for U=triu(A))
rate       0.11 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 2 speedup 3.36)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000144 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000007 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.42 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 4 speedup 4.42105)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000139 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000005 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.57 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 4.94118)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000138 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000005 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.61 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 16 speedup 5.09091)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000138 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000005 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.62 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 32 speedup 5.7931)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000138 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000006 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.62 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000139 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000006 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.58 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 2 speedup 1.13793)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000138 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000006 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.61 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 4 speedup 0.970588)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000138 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000005 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.61 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 0.970588)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000138 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000005 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.61 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec (nthreads: 16 speedup 1.1)
tricount time:         0.000012 sec (dot product method)
tri+prep time:         0.000137 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000005 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.66 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 32 speedup 0.785714)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000141 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000006 sec
rate       0.06 million edges/sec (incl time for U=triu(A))
rate       0.50 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000050 sec
tricount time:         0.000051 sec (saxpy method)
tri+prep time:         0.000115 sec (incl time to compute L)
compute C time:        0.000050 sec
reduce (C) time:       0.000001 sec
rate       0.07 million edges/sec (incl time for L=tril(A))
rate       0.16 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000025 sec (nthreads: 2 speedup 1.99048)
tricount time:         0.000027 sec (saxpy method)
tri+prep time:         0.000091 sec (incl time to compute L)
compute C time:        0.000025 sec
reduce (C) time:       0.000002 sec
rate       0.09 million edges/sec (incl time for L=tril(A))
rate       0.30 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000026 sec (nthreads: 4 speedup 1.91743)
tricount time:         0.000027 sec (saxpy method)
tri+prep time:         0.000091 sec (incl time to compute L)
compute C time:        0.000026 sec
reduce (C) time:       0.000001 sec
rate       0.09 million edges/sec (incl time for L=tril(A))
rate       0.30 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000037 sec (nthreads: 8 speedup 1.33974)
tricount time:         0.000038 sec (saxpy method)
tri+prep time:         0.000102 sec (incl time to compute L)
compute C time:        0.000037 sec
reduce (C) time:       0.000001 sec
rate       0.08 million edges/sec (incl time for L=tril(A))
rate       0.21 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000057 sec (nthreads: 16 speedup 0.874477)
tricount time:         0.000058 sec (saxpy method)
tri+prep time:         0.000122 sec (incl time to compute L)
compute C time:        0.000057 sec
reduce (C) time:       0.000001 sec
rate       0.07 million edges/sec (incl time for L=tril(A))
rate       0.14 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000102 sec (nthreads: 32 speedup 0.488318)
tricount time:         0.000103 sec (saxpy method)
tri+prep time:         0.000167 sec (incl time to compute L)
compute C time:        0.000102 sec
reduce (C) time:       0.000001 sec
rate       0.05 million edges/sec (incl time for L=tril(A))
rate       0.08 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 304 by 304, 876 entries, from stdin

total time to read A matrix:       0.001086 sec

n 304 # edges 438
U=triu(A) time:        0.000057 sec
L=tril(A) time:        0.000022 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000066 sec
tricount time:         0.000100 sec (dot product method)
tri+prep time:         0.000179 sec (incl time to compute L and U)
compute C time:        0.000066 sec
reduce (C) time:       0.000034 sec
rate       2.45 million edges/sec (incl time for U=triu(A))
rate       4.39 million edges/sec (just tricount itself)
L*U' time (dot):         0.000025 sec (nthreads: 2 speedup 2.62857)
tricount time:         0.000041 sec (dot product method)
tri+prep time:         0.000120 sec (incl time to compute L and U)
compute C time:        0.000025 sec
reduce (C) time:       0.000016 sec
rate       3.65 million edges/sec (incl time for U=triu(A))
rate      10.68 million edges/sec (just tricount itself)
L*U' time (dot):         0.000025 sec (nthreads: 4 speedup 2.62857)
tricount time:         0.000036 sec (dot product method)
tri+prep time:         0.000115 sec (incl time to compute L and U)
compute C time:        0.000025 sec
reduce (C) time:       0.000011 sec
rate       3.80 million edges/sec (incl time for U=triu(A))
rate      12.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000023 sec (nthreads: 8 speedup 2.875)
tricount time:         0.000033 sec (dot product method)
tri+prep time:         0.000112 sec (incl time to compute L and U)
compute C time:        0.000023 sec
reduce (C) time:       0.000010 sec
rate       3.91 million edges/sec (incl time for U=triu(A))
rate      13.31 million edges/sec (just tricount itself)
L*U' time (dot):         0.000021 sec (nthreads: 16 speedup 3.13636)
tricount time:         0.000030 sec (dot product method)
tri+prep time:         0.000109 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000009 sec
rate       4.01 million edges/sec (incl time for U=triu(A))
rate      14.58 million edges/sec (just tricount itself)
L*U' time (dot):         0.000023 sec (nthreads: 32 speedup 2.875)
tricount time:         0.000032 sec (dot product method)
tri+prep time:         0.000111 sec (incl time to compute L and U)
compute C time:        0.000023 sec
reduce (C) time:       0.000009 sec
rate       3.94 million edges/sec (incl time for U=triu(A))
rate      13.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.000021 sec
tricount time:         0.000030 sec (dot product method)
tri+prep time:         0.000109 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000009 sec
rate       4.01 million edges/sec (incl time for U=triu(A))
rate      14.58 million edges/sec (just tricount itself)
L*U' time (dot):         0.000021 sec (nthreads: 2 speedup 1)
tricount time:         0.000030 sec (dot product method)
tri+prep time:         0.000109 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000009 sec
rate       4.01 million edges/sec (incl time for U=triu(A))
rate      14.58 million edges/sec (just tricount itself)
L*U' time (dot):         0.000020 sec (nthreads: 4 speedup 1.04762)
tricount time:         0.000029 sec (dot product method)
tri+prep time:         0.000108 sec (incl time to compute L and U)
compute C time:        0.000020 sec
reduce (C) time:       0.000009 sec
rate       4.06 million edges/sec (incl time for U=triu(A))
rate      15.18 million edges/sec (just tricount itself)
L*U' time (dot):         0.000020 sec (nthreads: 8 speedup 1.04762)
tricount time:         0.000029 sec (dot product method)
tri+prep time:         0.000108 sec (incl time to compute L and U)
compute C time:        0.000020 sec
reduce (C) time:       0.000009 sec
rate       4.05 million edges/sec (incl time for U=triu(A))
rate      15.06 million edges/sec (just tricount itself)
L*U' time (dot):         0.000021 sec (nthreads: 16 speedup 1)
tricount time:         0.000030 sec (dot product method)
tri+prep time:         0.000109 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000009 sec
rate       4.01 million edges/sec (incl time for U=triu(A))
rate      14.58 million edges/sec (just tricount itself)
L*U' time (dot):         0.000022 sec (nthreads: 32 speedup 0.946237)
tricount time:         0.000032 sec (dot product method)
tri+prep time:         0.000111 sec (incl time to compute L and U)
compute C time:        0.000022 sec
reduce (C) time:       0.000010 sec
rate       3.93 million edges/sec (incl time for U=triu(A))
rate      13.61 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000066 sec
tricount time:         0.000067 sec (saxpy method)
tri+prep time:         0.000089 sec (incl time to compute L)
compute C time:        0.000066 sec
reduce (C) time:       0.000001 sec
rate       4.91 million edges/sec (incl time for L=tril(A))
rate       6.54 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000037 sec (nthreads: 2 speedup 1.78065)
tricount time:         0.000038 sec (saxpy method)
tri+prep time:         0.000060 sec (incl time to compute L)
compute C time:        0.000037 sec
reduce (C) time:       0.000001 sec
rate       7.26 million edges/sec (incl time for L=tril(A))
rate      11.48 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000038 sec (nthreads: 4 speedup 1.73585)
tricount time:         0.000039 sec (saxpy method)
tri+prep time:         0.000061 sec (incl time to compute L)
compute C time:        0.000038 sec
reduce (C) time:       0.000001 sec
rate       7.18 million edges/sec (incl time for L=tril(A))
rate      11.27 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000046 sec (nthreads: 8 speedup 1.4375)
tricount time:         0.000047 sec (saxpy method)
tri+prep time:         0.000069 sec (incl time to compute L)
compute C time:        0.000046 sec
reduce (C) time:       0.000001 sec
rate       6.33 million edges/sec (incl time for L=tril(A))
rate       9.33 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000061 sec (nthreads: 16 speedup 1.07812)
tricount time:         0.000062 sec (saxpy method)
tri+prep time:         0.000084 sec (incl time to compute L)
compute C time:        0.000061 sec
reduce (C) time:       0.000001 sec
rate       5.20 million edges/sec (incl time for L=tril(A))
rate       7.07 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000096 sec (nthreads: 32 speedup 0.686567)
tricount time:         0.000097 sec (saxpy method)
tri+prep time:         0.000119 sec (incl time to compute L)
compute C time:        0.000096 sec
reduce (C) time:       0.000001 sec
rate       3.67 million edges/sec (incl time for L=tril(A))
rate       4.51 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 48 by 48, 352 entries, from stdin

total time to read A matrix:       0.000792 sec

n 48 # edges 176
U=triu(A) time:        0.000072 sec
L=tril(A) time:        0.000024 sec

------------------------------------- dot product method:
# triangles 160
L*U' time (dot):         0.000053 sec
tricount time:         0.000085 sec (dot product method)
tri+prep time:         0.000181 sec (incl time to compute L and U)
compute C time:        0.000053 sec
reduce (C) time:       0.000032 sec
rate       0.97 million edges/sec (incl time for U=triu(A))
rate       2.07 million edges/sec (just tricount itself)
L*U' time (dot):         0.000027 sec (nthreads: 2 speedup 1.97345)
tricount time:         0.000035 sec (dot product method)
tri+prep time:         0.000131 sec (incl time to compute L and U)
compute C time:        0.000027 sec
reduce (C) time:       0.000008 sec
rate       1.34 million edges/sec (incl time for U=triu(A))
rate       5.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.000020 sec (nthreads: 4 speedup 2.65476)
tricount time:         0.000027 sec (dot product method)
tri+prep time:         0.000123 sec (incl time to compute L and U)
compute C time:        0.000020 sec
reduce (C) time:       0.000007 sec
rate       1.43 million edges/sec (incl time for U=triu(A))
rate       6.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000018 sec (nthreads: 8 speedup 2.93421)
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000120 sec (incl time to compute L and U)
compute C time:        0.000018 sec
reduce (C) time:       0.000006 sec
rate       1.47 million edges/sec (incl time for U=triu(A))
rate       7.31 million edges/sec (just tricount itself)
L*U' time (dot):         0.000017 sec (nthreads: 16 speedup 3.09722)
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000120 sec (incl time to compute L and U)
compute C time:        0.000017 sec
reduce (C) time:       0.000007 sec
rate       1.47 million edges/sec (incl time for U=triu(A))
rate       7.31 million edges/sec (just tricount itself)
L*U' time (dot):         0.000017 sec (nthreads: 32 speedup 3.09722)
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000119 sec (incl time to compute L and U)
compute C time:        0.000017 sec
reduce (C) time:       0.000006 sec
rate       1.48 million edges/sec (incl time for U=triu(A))
rate       7.61 million edges/sec (just tricount itself)
L*U' time (dot):         0.000025 sec
tricount time:         0.000035 sec (dot product method)
tri+prep time:         0.000131 sec (incl time to compute L and U)
compute C time:        0.000025 sec
reduce (C) time:       0.000010 sec
rate       1.34 million edges/sec (incl time for U=triu(A))
rate       5.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.000022 sec (nthreads: 2 speedup 1.1413)
tricount time:         0.000030 sec (dot product method)
tri+prep time:         0.000126 sec (incl time to compute L and U)
compute C time:        0.000022 sec
reduce (C) time:       0.000008 sec
rate       1.40 million edges/sec (incl time for U=triu(A))
rate       5.86 million edges/sec (just tricount itself)
L*U' time (dot):         0.000019 sec (nthreads: 4 speedup 1.3125)
tricount time:         0.000026 sec (dot product method)
tri+prep time:         0.000122 sec (incl time to compute L and U)
compute C time:        0.000019 sec
reduce (C) time:       0.000007 sec
rate       1.44 million edges/sec (incl time for U=triu(A))
rate       6.77 million edges/sec (just tricount itself)
L*U' time (dot):         0.000018 sec (nthreads: 8 speedup 1.4)
tricount time:         0.000025 sec (dot product method)
tri+prep time:         0.000121 sec (incl time to compute L and U)
compute C time:        0.000018 sec
reduce (C) time:       0.000007 sec
rate       1.46 million edges/sec (incl time for U=triu(A))
rate       7.03 million edges/sec (just tricount itself)
L*U' time (dot):         0.000017 sec (nthreads: 16 speedup 1.47887)
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000119 sec (incl time to compute L and U)
compute C time:        0.000017 sec
reduce (C) time:       0.000006 sec
rate       1.48 million edges/sec (incl time for U=triu(A))
rate       7.69 million edges/sec (just tricount itself)
L*U' time (dot):         0.000020 sec (nthreads: 32 speedup 1.25)
tricount time:         0.000027 sec (dot product method)
tri+prep time:         0.000123 sec (incl time to compute L and U)
compute C time:        0.000020 sec
reduce (C) time:       0.000007 sec
rate       1.43 million edges/sec (incl time for U=triu(A))
rate       6.53 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000046 sec
tricount time:         0.000048 sec (saxpy method)
tri+prep time:         0.000072 sec (incl time to compute L)
compute C time:        0.000046 sec
reduce (C) time:       0.000002 sec
rate       2.45 million edges/sec (incl time for L=tril(A))
rate       3.67 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000020 sec (nthreads: 2 speedup 2.29762)
tricount time:         0.000021 sec (saxpy method)
tri+prep time:         0.000045 sec (incl time to compute L)
compute C time:        0.000020 sec
reduce (C) time:       0.000001 sec
rate       3.93 million edges/sec (incl time for L=tril(A))
rate       8.39 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000016 sec (nthreads: 4 speedup 2.8806)
tricount time:         0.000018 sec (saxpy method)
tri+prep time:         0.000042 sec (incl time to compute L)
compute C time:        0.000016 sec
reduce (C) time:       0.000002 sec
rate       4.19 million edges/sec (incl time for L=tril(A))
rate       9.71 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000014 sec (nthreads: 8 speedup 3.27119)
tricount time:         0.000015 sec (saxpy method)
tri+prep time:         0.000039 sec (incl time to compute L)
compute C time:        0.000014 sec
reduce (C) time:       0.000001 sec
rate       4.53 million edges/sec (incl time for L=tril(A))
rate      11.72 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000013 sec (nthreads: 16 speedup 3.57407)
tricount time:         0.000014 sec (saxpy method)
tri+prep time:         0.000038 sec (incl time to compute L)
compute C time:        0.000013 sec
reduce (C) time:       0.000001 sec
rate       4.67 million edges/sec (incl time for L=tril(A))
rate      12.73 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000012 sec (nthreads: 32 speedup 3.86)
tricount time:         0.000014 sec (saxpy method)
tri+prep time:         0.000038 sec (incl time to compute L)
compute C time:        0.000012 sec
reduce (C) time:       0.000002 sec
rate       4.64 million edges/sec (incl time for L=tril(A))
rate      12.51 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4884 by 4884, 285494 entries, from stdin

total time to read A matrix:       0.117294 sec

n 4884 # edges 142747
U=triu(A) time:        0.000406 sec
L=tril(A) time:        0.000420 sec

------------------------------------- dot product method:
# triangles 1512964
L*U' time (dot):         0.021627 sec
tricount time:         0.024023 sec (dot product method)
tri+prep time:         0.024849 sec (incl time to compute L and U)
compute C time:        0.021627 sec
reduce (C) time:       0.002396 sec
rate       5.74 million edges/sec (incl time for U=triu(A))
rate       5.94 million edges/sec (just tricount itself)
L*U' time (dot):         0.010920 sec (nthreads: 2 speedup 1.98048)
tricount time:         0.011745 sec (dot product method)
tri+prep time:         0.012571 sec (incl time to compute L and U)
compute C time:        0.010920 sec
reduce (C) time:       0.000825 sec
rate      11.36 million edges/sec (incl time for U=triu(A))
rate      12.15 million edges/sec (just tricount itself)
L*U' time (dot):         0.005625 sec (nthreads: 4 speedup 3.84478)
tricount time:         0.006056 sec (dot product method)
tri+prep time:         0.006882 sec (incl time to compute L and U)
compute C time:        0.005625 sec
reduce (C) time:       0.000431 sec
rate      20.74 million edges/sec (incl time for U=triu(A))
rate      23.57 million edges/sec (just tricount itself)
L*U' time (dot):         0.003088 sec (nthreads: 8 speedup 7.00355)
tricount time:         0.003357 sec (dot product method)
tri+prep time:         0.004183 sec (incl time to compute L and U)
compute C time:        0.003088 sec
reduce (C) time:       0.000269 sec
rate      34.13 million edges/sec (incl time for U=triu(A))
rate      42.52 million edges/sec (just tricount itself)
L*U' time (dot):         0.001975 sec (nthreads: 16 speedup 10.95)
tricount time:         0.002186 sec (dot product method)
tri+prep time:         0.003012 sec (incl time to compute L and U)
compute C time:        0.001975 sec
reduce (C) time:       0.000211 sec
rate      47.39 million edges/sec (incl time for U=triu(A))
rate      65.30 million edges/sec (just tricount itself)
L*U' time (dot):         0.001641 sec (nthreads: 32 speedup 13.1788)
tricount time:         0.001921 sec (dot product method)
tri+prep time:         0.002747 sec (incl time to compute L and U)
compute C time:        0.001641 sec
reduce (C) time:       0.000280 sec
rate      51.96 million edges/sec (incl time for U=triu(A))
rate      74.31 million edges/sec (just tricount itself)
L*U' time (dot):         0.022458 sec
tricount time:         0.024150 sec (dot product method)
tri+prep time:         0.024976 sec (incl time to compute L and U)
compute C time:        0.022458 sec
reduce (C) time:       0.001692 sec
rate       5.72 million edges/sec (incl time for U=triu(A))
rate       5.91 million edges/sec (just tricount itself)
L*U' time (dot):         0.012025 sec (nthreads: 2 speedup 1.8676)
tricount time:         0.012870 sec (dot product method)
tri+prep time:         0.013696 sec (incl time to compute L and U)
compute C time:        0.012025 sec
reduce (C) time:       0.000845 sec
rate      10.42 million edges/sec (incl time for U=triu(A))
rate      11.09 million edges/sec (just tricount itself)
L*U' time (dot):         0.005983 sec (nthreads: 4 speedup 3.75358)
tricount time:         0.006432 sec (dot product method)
tri+prep time:         0.007258 sec (incl time to compute L and U)
compute C time:        0.005983 sec
reduce (C) time:       0.000449 sec
rate      19.67 million edges/sec (incl time for U=triu(A))
rate      22.19 million edges/sec (just tricount itself)
L*U' time (dot):         0.003268 sec (nthreads: 8 speedup 6.87211)
tricount time:         0.003544 sec (dot product method)
tri+prep time:         0.004370 sec (incl time to compute L and U)
compute C time:        0.003268 sec
reduce (C) time:       0.000276 sec
rate      32.67 million edges/sec (incl time for U=triu(A))
rate      40.28 million edges/sec (just tricount itself)
L*U' time (dot):         0.002028 sec (nthreads: 16 speedup 11.0741)
tricount time:         0.002242 sec (dot product method)
tri+prep time:         0.003068 sec (incl time to compute L and U)
compute C time:        0.002028 sec
reduce (C) time:       0.000214 sec
rate      46.52 million edges/sec (incl time for U=triu(A))
rate      63.67 million edges/sec (just tricount itself)
L*U' time (dot):         0.001708 sec (nthreads: 32 speedup 13.1485)
tricount time:         0.001990 sec (dot product method)
tri+prep time:         0.002816 sec (incl time to compute L and U)
compute C time:        0.001708 sec
reduce (C) time:       0.000282 sec
rate      50.69 million edges/sec (incl time for U=triu(A))
rate      71.73 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.014518 sec
tricount time:         0.015536 sec (saxpy method)
tri+prep time:         0.015956 sec (incl time to compute L)
compute C time:        0.014518 sec
reduce (C) time:       0.001018 sec
rate       8.95 million edges/sec (incl time for L=tril(A))
rate       9.19 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.009351 sec (nthreads: 2 speedup 1.55256)
tricount time:         0.009831 sec (saxpy method)
tri+prep time:         0.010251 sec (incl time to compute L)
compute C time:        0.009351 sec
reduce (C) time:       0.000480 sec
rate      13.93 million edges/sec (incl time for L=tril(A))
rate      14.52 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.004650 sec (nthreads: 4 speedup 3.12208)
tricount time:         0.004905 sec (saxpy method)
tri+prep time:         0.005325 sec (incl time to compute L)
compute C time:        0.004650 sec
reduce (C) time:       0.000255 sec
rate      26.81 million edges/sec (incl time for L=tril(A))
rate      29.10 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002453 sec (nthreads: 8 speedup 5.91826)
tricount time:         0.002591 sec (saxpy method)
tri+prep time:         0.003011 sec (incl time to compute L)
compute C time:        0.002453 sec
reduce (C) time:       0.000138 sec
rate      47.40 million edges/sec (incl time for L=tril(A))
rate      55.09 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001518 sec (nthreads: 16 speedup 9.56384)
tricount time:         0.001626 sec (saxpy method)
tri+prep time:         0.002046 sec (incl time to compute L)
compute C time:        0.001518 sec
reduce (C) time:       0.000108 sec
rate      69.77 million edges/sec (incl time for L=tril(A))
rate      87.79 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001138 sec (nthreads: 32 speedup 12.7578)
tricount time:         0.001306 sec (saxpy method)
tri+prep time:         0.001726 sec (incl time to compute L)
compute C time:        0.001138 sec
reduce (C) time:       0.000168 sec
rate      82.70 million edges/sec (incl time for L=tril(A))
rate     109.30 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 183 by 183, 1402 entries, from stdin

total time to read A matrix:       0.001042 sec

n 183 # edges 701
U=triu(A) time:        0.000047 sec
L=tril(A) time:        0.000018 sec

------------------------------------- dot product method:
# triangles 863
L*U' time (dot):         0.000071 sec
tricount time:         0.000098 sec (dot product method)
tri+prep time:         0.000163 sec (incl time to compute L and U)
compute C time:        0.000071 sec
reduce (C) time:       0.000027 sec
rate       4.30 million edges/sec (incl time for U=triu(A))
rate       7.15 million edges/sec (just tricount itself)
L*U' time (dot):         0.000060 sec (nthreads: 2 speedup 1.18725)
tricount time:         0.000071 sec (dot product method)
tri+prep time:         0.000136 sec (incl time to compute L and U)
compute C time:        0.000060 sec
reduce (C) time:       0.000011 sec
rate       5.16 million edges/sec (incl time for U=triu(A))
rate       9.90 million edges/sec (just tricount itself)
L*U' time (dot):         0.000051 sec (nthreads: 4 speedup 1.39252)
tricount time:         0.000060 sec (dot product method)
tri+prep time:         0.000125 sec (incl time to compute L and U)
compute C time:        0.000051 sec
reduce (C) time:       0.000009 sec
rate       5.61 million edges/sec (incl time for U=triu(A))
rate      11.71 million edges/sec (just tricount itself)
L*U' time (dot):         0.000049 sec (nthreads: 8 speedup 1.4466)
tricount time:         0.000058 sec (dot product method)
tri+prep time:         0.000123 sec (incl time to compute L and U)
compute C time:        0.000049 sec
reduce (C) time:       0.000009 sec
rate       5.69 million edges/sec (incl time for U=triu(A))
rate      12.05 million edges/sec (just tricount itself)
L*U' time (dot):         0.000047 sec (nthreads: 16 speedup 1.51269)
tricount time:         0.000056 sec (dot product method)
tri+prep time:         0.000121 sec (incl time to compute L and U)
compute C time:        0.000047 sec
reduce (C) time:       0.000009 sec
rate       5.79 million edges/sec (incl time for U=triu(A))
rate      12.51 million edges/sec (just tricount itself)
L*U' time (dot):         0.000046 sec (nthreads: 32 speedup 1.54404)
tricount time:         0.000055 sec (dot product method)
tri+prep time:         0.000120 sec (incl time to compute L and U)
compute C time:        0.000046 sec
reduce (C) time:       0.000009 sec
rate       5.83 million edges/sec (incl time for U=triu(A))
rate      12.73 million edges/sec (just tricount itself)
L*U' time (dot):         0.000056 sec
tricount time:         0.000067 sec (dot product method)
tri+prep time:         0.000132 sec (incl time to compute L and U)
compute C time:        0.000056 sec
reduce (C) time:       0.000011 sec
rate       5.31 million edges/sec (incl time for U=triu(A))
rate      10.46 million edges/sec (just tricount itself)
L*U' time (dot):         0.000062 sec (nthreads: 2 speedup 0.903846)
tricount time:         0.000073 sec (dot product method)
tri+prep time:         0.000138 sec (incl time to compute L and U)
compute C time:        0.000062 sec
reduce (C) time:       0.000011 sec
rate       5.08 million edges/sec (incl time for U=triu(A))
rate       9.61 million edges/sec (just tricount itself)
L*U' time (dot):         0.000052 sec (nthreads: 4 speedup 1.07798)
tricount time:         0.000061 sec (dot product method)
tri+prep time:         0.000126 sec (incl time to compute L and U)
compute C time:        0.000052 sec
reduce (C) time:       0.000009 sec
rate       5.56 million edges/sec (incl time for U=triu(A))
rate      11.49 million edges/sec (just tricount itself)
L*U' time (dot):         0.000050 sec (nthreads: 8 speedup 1.11905)
tricount time:         0.000059 sec (dot product method)
tri+prep time:         0.000124 sec (incl time to compute L and U)
compute C time:        0.000050 sec
reduce (C) time:       0.000009 sec
rate       5.64 million edges/sec (incl time for U=triu(A))
rate      11.86 million edges/sec (just tricount itself)
L*U' time (dot):         0.000048 sec (nthreads: 16 speedup 1.16915)
tricount time:         0.000057 sec (dot product method)
tri+prep time:         0.000122 sec (incl time to compute L and U)
compute C time:        0.000048 sec
reduce (C) time:       0.000009 sec
rate       5.74 million edges/sec (incl time for U=triu(A))
rate      12.30 million edges/sec (just tricount itself)
L*U' time (dot):         0.000049 sec (nthreads: 32 speedup 1.14078)
tricount time:         0.000058 sec (dot product method)
tri+prep time:         0.000123 sec (incl time to compute L and U)
compute C time:        0.000049 sec
reduce (C) time:       0.000009 sec
rate       5.69 million edges/sec (incl time for U=triu(A))
rate      12.05 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000048 sec
tricount time:         0.000050 sec (saxpy method)
tri+prep time:         0.000068 sec (incl time to compute L)
compute C time:        0.000048 sec
reduce (C) time:       0.000002 sec
rate      10.28 million edges/sec (incl time for L=tril(A))
rate      14.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000031 sec (nthreads: 2 speedup 1.54615)
tricount time:         0.000033 sec (saxpy method)
tri+prep time:         0.000051 sec (incl time to compute L)
compute C time:        0.000031 sec
reduce (C) time:       0.000002 sec
rate      13.74 million edges/sec (incl time for L=tril(A))
rate      21.31 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000027 sec (nthreads: 4 speedup 1.76316)
tricount time:         0.000029 sec (saxpy method)
tri+prep time:         0.000047 sec (incl time to compute L)
compute C time:        0.000027 sec
reduce (C) time:       0.000002 sec
rate      14.85 million edges/sec (incl time for L=tril(A))
rate      24.10 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000025 sec (nthreads: 8 speedup 1.91429)
tricount time:         0.000027 sec (saxpy method)
tri+prep time:         0.000045 sec (incl time to compute L)
compute C time:        0.000025 sec
reduce (C) time:       0.000002 sec
rate      15.56 million edges/sec (incl time for L=tril(A))
rate      26.02 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000023 sec (nthreads: 16 speedup 2.09375)
tricount time:         0.000026 sec (saxpy method)
tri+prep time:         0.000044 sec (incl time to compute L)
compute C time:        0.000023 sec
reduce (C) time:       0.000003 sec
rate      15.89 million edges/sec (incl time for L=tril(A))
rate      26.97 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000022 sec (nthreads: 32 speedup 2.16129)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000042 sec (incl time to compute L)
compute C time:        0.000022 sec
reduce (C) time:       0.000002 sec
rate      16.61 million edges/sec (incl time for L=tril(A))
rate      29.11 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000724 sec

n 63 # edges 123
U=triu(A) time:        0.000048 sec
L=tril(A) time:        0.000017 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000031 sec
tricount time:         0.000057 sec (dot product method)
tri+prep time:         0.000122 sec (incl time to compute L and U)
compute C time:        0.000031 sec
reduce (C) time:       0.000026 sec
rate       1.01 million edges/sec (incl time for U=triu(A))
rate       2.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 2 speedup 2.54902)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000084 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000007 sec
rate       1.46 million edges/sec (incl time for U=triu(A))
rate       6.45 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 4 speedup 2.36364)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000084 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000006 sec
rate       1.46 million edges/sec (incl time for U=triu(A))
rate       6.45 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 8 speedup 2.6)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000082 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000005 sec
rate       1.50 million edges/sec (incl time for U=triu(A))
rate       7.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 16 speedup 3.42105)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000079 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000005 sec
rate       1.55 million edges/sec (incl time for U=triu(A))
rate       8.74 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 32 speedup 3.42105)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000079 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000005 sec
rate       1.55 million edges/sec (incl time for U=triu(A))
rate       8.74 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000081 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000006 sec
rate       1.52 million edges/sec (incl time for U=triu(A))
rate       7.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 2 speedup 1.10526)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000004 sec
rate       1.57 million edges/sec (incl time for U=triu(A))
rate       9.38 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 4 speedup 1.10526)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000004 sec
rate       1.57 million edges/sec (incl time for U=triu(A))
rate       9.38 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 8 speedup 1.23529)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000005 sec
rate       1.57 million edges/sec (incl time for U=triu(A))
rate       9.38 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 16 speedup 1.23529)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000005 sec
rate       1.57 million edges/sec (incl time for U=triu(A))
rate       9.38 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 32 speedup 1)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000080 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000005 sec
rate       1.54 million edges/sec (incl time for U=triu(A))
rate       8.19 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000042 sec
tricount time:         0.000043 sec (saxpy method)
tri+prep time:         0.000060 sec (incl time to compute L)
compute C time:        0.000042 sec
reduce (C) time:       0.000001 sec
rate       2.05 million edges/sec (incl time for L=tril(A))
rate       2.87 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000045 sec (nthreads: 2 speedup 0.931217)
tricount time:         0.000047 sec (saxpy method)
tri+prep time:         0.000064 sec (incl time to compute L)
compute C time:        0.000045 sec
reduce (C) time:       0.000002 sec
rate       1.92 million edges/sec (incl time for L=tril(A))
rate       2.62 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000024 sec (nthreads: 4 speedup 1.76)
tricount time:         0.000025 sec (saxpy method)
tri+prep time:         0.000042 sec (incl time to compute L)
compute C time:        0.000024 sec
reduce (C) time:       0.000001 sec
rate       2.91 million edges/sec (incl time for L=tril(A))
rate       4.91 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000030 sec (nthreads: 8 speedup 1.39683)
tricount time:         0.000031 sec (saxpy method)
tri+prep time:         0.000048 sec (incl time to compute L)
compute C time:        0.000030 sec
reduce (C) time:       0.000001 sec
rate       2.55 million edges/sec (incl time for L=tril(A))
rate       3.97 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000044 sec (nthreads: 16 speedup 0.956522)
tricount time:         0.000045 sec (saxpy method)
tri+prep time:         0.000062 sec (incl time to compute L)
compute C time:        0.000044 sec
reduce (C) time:       0.000001 sec
rate       1.98 million edges/sec (incl time for L=tril(A))
rate       2.74 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000074 sec (nthreads: 32 speedup 0.567742)
tricount time:         0.000075 sec (saxpy method)
tri+prep time:         0.000092 sec (incl time to compute L)
compute C time:        0.000074 sec
reduce (C) time:       0.000001 sec
rate       1.33 million edges/sec (incl time for L=tril(A))
rate       1.64 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000734 sec

n 63 # edges 123
U=triu(A) time:        0.000049 sec
L=tril(A) time:        0.000016 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000034 sec
tricount time:         0.000060 sec (dot product method)
tri+prep time:         0.000125 sec (incl time to compute L and U)
compute C time:        0.000034 sec
reduce (C) time:       0.000026 sec
rate       0.98 million edges/sec (incl time for U=triu(A))
rate       2.05 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 2 speedup 2.86)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000084 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000007 sec
rate       1.46 million edges/sec (incl time for U=triu(A))
rate       6.45 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec (nthreads: 4 speedup 3.40476)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000080 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000005 sec
rate       1.54 million edges/sec (incl time for U=triu(A))
rate       8.19 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 8 speedup 3.76316)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000080 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000006 sec
rate       1.54 million edges/sec (incl time for U=triu(A))
rate       8.19 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 16 speedup 3.86486)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000004 sec
rate       1.58 million edges/sec (incl time for U=triu(A))
rate       9.55 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 32 speedup 3.86486)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000079 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000005 sec
rate       1.56 million edges/sec (incl time for U=triu(A))
rate       8.89 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000080 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000005 sec
rate       1.54 million edges/sec (incl time for U=triu(A))
rate       8.32 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 2 speedup 1.07895)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000080 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000006 sec
rate       1.54 million edges/sec (incl time for U=triu(A))
rate       8.19 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 4 speedup 1.10811)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000079 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000005 sec
rate       1.56 million edges/sec (incl time for U=triu(A))
rate       8.89 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 8 speedup 1.10811)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000004 sec
rate       1.58 million edges/sec (incl time for U=triu(A))
rate       9.55 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec (nthreads: 16 speedup 1.24242)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000005 sec
rate       1.58 million edges/sec (incl time for U=triu(A))
rate       9.55 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 32 speedup 0.891304)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000082 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000006 sec
rate       1.50 million edges/sec (incl time for U=triu(A))
rate       7.27 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000041 sec
tricount time:         0.000042 sec (saxpy method)
tri+prep time:         0.000058 sec (incl time to compute L)
compute C time:        0.000041 sec
reduce (C) time:       0.000001 sec
rate       2.11 million edges/sec (incl time for L=tril(A))
rate       2.91 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000022 sec (nthreads: 2 speedup 1.86957)
tricount time:         0.000023 sec (saxpy method)
tri+prep time:         0.000039 sec (incl time to compute L)
compute C time:        0.000022 sec
reduce (C) time:       0.000001 sec
rate       3.17 million edges/sec (incl time for L=tril(A))
rate       5.37 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000057 sec (nthreads: 4 speedup 0.719665)
tricount time:         0.000059 sec (saxpy method)
tri+prep time:         0.000075 sec (incl time to compute L)
compute C time:        0.000057 sec
reduce (C) time:       0.000002 sec
rate       1.64 million edges/sec (incl time for L=tril(A))
rate       2.08 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000034 sec (nthreads: 8 speedup 1.21127)
tricount time:         0.000035 sec (saxpy method)
tri+prep time:         0.000051 sec (incl time to compute L)
compute C time:        0.000034 sec
reduce (C) time:       0.000001 sec
rate       2.41 million edges/sec (incl time for L=tril(A))
rate       3.51 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000045 sec (nthreads: 16 speedup 0.910053)
tricount time:         0.000046 sec (saxpy method)
tri+prep time:         0.000062 sec (incl time to compute L)
compute C time:        0.000045 sec
reduce (C) time:       0.000001 sec
rate       1.98 million edges/sec (incl time for L=tril(A))
rate       2.67 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000076 sec (nthreads: 32 speedup 0.540881)
tricount time:         0.000077 sec (saxpy method)
tri+prep time:         0.000093 sec (incl time to compute L)
compute C time:        0.000076 sec
reduce (C) time:       0.000001 sec
rate       1.32 million edges/sec (incl time for L=tril(A))
rate       1.60 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 78 by 78, 204 entries, from stdin

total time to read A matrix:       0.000720 sec

n 78 # edges 102
U=triu(A) time:        0.000050 sec
L=tril(A) time:        0.000018 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000030 sec
tricount time:         0.000055 sec (dot product method)
tri+prep time:         0.000123 sec (incl time to compute L and U)
compute C time:        0.000030 sec
reduce (C) time:       0.000025 sec
rate       0.83 million edges/sec (incl time for U=triu(A))
rate       1.85 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 2 speedup 2.47059)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000087 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000007 sec
rate       1.17 million edges/sec (incl time for U=triu(A))
rate       5.35 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 4 speedup 2.17241)
tricount time:         0.000020 sec (dot product method)
tri+prep time:         0.000088 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000006 sec
rate       1.16 million edges/sec (incl time for U=triu(A))
rate       5.09 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 8 speedup 2.68085)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000087 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000008 sec
rate       1.17 million edges/sec (incl time for U=triu(A))
rate       5.35 million edges/sec (just tricount itself)
L*U' time (dot):         0.000011 sec (nthreads: 16 speedup 2.73913)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000084 sec (incl time to compute L and U)
compute C time:        0.000011 sec
reduce (C) time:       0.000005 sec
rate       1.22 million edges/sec (incl time for U=triu(A))
rate       6.39 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 32 speedup 3.31579)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000083 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000006 sec
rate       1.23 million edges/sec (incl time for U=triu(A))
rate       6.79 million edges/sec (just tricount itself)
L*U' time (dot):         0.000010 sec
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000084 sec (incl time to compute L and U)
compute C time:        0.000010 sec
reduce (C) time:       0.000006 sec
rate       1.22 million edges/sec (incl time for U=triu(A))
rate       6.39 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 2 speedup 1.10526)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000082 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000005 sec
rate       1.24 million edges/sec (incl time for U=triu(A))
rate       7.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 4 speedup 1.10526)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000082 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000005 sec
rate       1.24 million edges/sec (incl time for U=triu(A))
rate       7.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 8 speedup 1.13514)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000082 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000005 sec
rate       1.25 million edges/sec (incl time for U=triu(A))
rate       7.38 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec (nthreads: 16 speedup 1.10526)
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000082 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000005 sec
rate       1.24 million edges/sec (incl time for U=triu(A))
rate       7.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 32 speedup 0.823529)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000085 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000005 sec
rate       1.20 million edges/sec (incl time for U=triu(A))
rate       5.94 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000049 sec
tricount time:         0.000050 sec (saxpy method)
tri+prep time:         0.000068 sec (incl time to compute L)
compute C time:        0.000049 sec
reduce (C) time:       0.000001 sec
rate       1.50 million edges/sec (incl time for L=tril(A))
rate       2.04 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000023 sec (nthreads: 2 speedup 2.12371)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000042 sec (incl time to compute L)
compute C time:        0.000023 sec
reduce (C) time:       0.000001 sec
rate       2.43 million edges/sec (incl time for L=tril(A))
rate       4.24 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000024 sec (nthreads: 4 speedup 2.06)
tricount time:         0.000024 sec (saxpy method)
tri+prep time:         0.000042 sec (incl time to compute L)
compute C time:        0.000024 sec
reduce (C) time:       0.000000 sec
rate       2.44 million edges/sec (incl time for L=tril(A))
rate       4.28 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000031 sec (nthreads: 8 speedup 1.58462)
tricount time:         0.000032 sec (saxpy method)
tri+prep time:         0.000050 sec (incl time to compute L)
compute C time:        0.000031 sec
reduce (C) time:       0.000001 sec
rate       2.04 million edges/sec (incl time for L=tril(A))
rate       3.17 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000045 sec (nthreads: 16 speedup 1.08995)
tricount time:         0.000046 sec (saxpy method)
tri+prep time:         0.000064 sec (incl time to compute L)
compute C time:        0.000045 sec
reduce (C) time:       0.000001 sec
rate       1.60 million edges/sec (incl time for L=tril(A))
rate       2.22 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000076 sec (nthreads: 32 speedup 0.645768)
tricount time:         0.000077 sec (saxpy method)
tri+prep time:         0.000095 sec (incl time to compute L)
compute C time:        0.000076 sec
reduce (C) time:       0.000001 sec
rate       1.07 million edges/sec (incl time for L=tril(A))
rate       1.32 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 982 by 982, 99840 entries, from stdin

total time to read A matrix:       0.046055 sec

n 982 # edges 49920
U=triu(A) time:        0.000407 sec
L=tril(A) time:        0.000201 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.001047 sec
tricount time:         0.001216 sec (dot product method)
tri+prep time:         0.001824 sec (incl time to compute L and U)
compute C time:        0.001047 sec
reduce (C) time:       0.000169 sec
rate      27.37 million edges/sec (incl time for U=triu(A))
rate      41.05 million edges/sec (just tricount itself)
L*U' time (dot):         0.000610 sec (nthreads: 2 speedup 1.71697)
tricount time:         0.000698 sec (dot product method)
tri+prep time:         0.001306 sec (incl time to compute L and U)
compute C time:        0.000610 sec
reduce (C) time:       0.000088 sec
rate      38.23 million edges/sec (incl time for U=triu(A))
rate      71.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000383 sec (nthreads: 4 speedup 2.73474)
tricount time:         0.000439 sec (dot product method)
tri+prep time:         0.001047 sec (incl time to compute L and U)
compute C time:        0.000383 sec
reduce (C) time:       0.000056 sec
rate      47.68 million edges/sec (incl time for U=triu(A))
rate     113.73 million edges/sec (just tricount itself)
L*U' time (dot):         0.000320 sec (nthreads: 8 speedup 3.27273)
tricount time:         0.000361 sec (dot product method)
tri+prep time:         0.000969 sec (incl time to compute L and U)
compute C time:        0.000320 sec
reduce (C) time:       0.000041 sec
rate      51.52 million edges/sec (incl time for U=triu(A))
rate     138.30 million edges/sec (just tricount itself)
L*U' time (dot):         0.000425 sec (nthreads: 16 speedup 2.46465)
tricount time:         0.000470 sec (dot product method)
tri+prep time:         0.001078 sec (incl time to compute L and U)
compute C time:        0.000425 sec
reduce (C) time:       0.000045 sec
rate      46.31 million edges/sec (incl time for U=triu(A))
rate     106.23 million edges/sec (just tricount itself)
L*U' time (dot):         0.001351 sec (nthreads: 32 speedup 0.77515)
tricount time:         0.001406 sec (dot product method)
tri+prep time:         0.002014 sec (incl time to compute L and U)
compute C time:        0.001351 sec
reduce (C) time:       0.000055 sec
rate      24.79 million edges/sec (incl time for U=triu(A))
rate      35.51 million edges/sec (just tricount itself)
L*U' time (dot):         0.001009 sec
tricount time:         0.001151 sec (dot product method)
tri+prep time:         0.001759 sec (incl time to compute L and U)
compute C time:        0.001009 sec
reduce (C) time:       0.000142 sec
rate      28.38 million edges/sec (incl time for U=triu(A))
rate      43.37 million edges/sec (just tricount itself)
L*U' time (dot):         0.000593 sec (nthreads: 2 speedup 1.70096)
tricount time:         0.000681 sec (dot product method)
tri+prep time:         0.001289 sec (incl time to compute L and U)
compute C time:        0.000593 sec
reduce (C) time:       0.000088 sec
rate      38.72 million edges/sec (incl time for U=triu(A))
rate      73.29 million edges/sec (just tricount itself)
L*U' time (dot):         0.000406 sec (nthreads: 4 speedup 2.48503)
tricount time:         0.000465 sec (dot product method)
tri+prep time:         0.001073 sec (incl time to compute L and U)
compute C time:        0.000406 sec
reduce (C) time:       0.000059 sec
rate      46.53 million edges/sec (incl time for U=triu(A))
rate     107.37 million edges/sec (just tricount itself)
L*U' time (dot):         0.000381 sec (nthreads: 8 speedup 2.64831)
tricount time:         0.000427 sec (dot product method)
tri+prep time:         0.001035 sec (incl time to compute L and U)
compute C time:        0.000381 sec
reduce (C) time:       0.000046 sec
rate      48.23 million edges/sec (incl time for U=triu(A))
rate     116.91 million edges/sec (just tricount itself)
L*U' time (dot):         0.000405 sec (nthreads: 16 speedup 2.49234)
tricount time:         0.000451 sec (dot product method)
tri+prep time:         0.001059 sec (incl time to compute L and U)
compute C time:        0.000405 sec
reduce (C) time:       0.000046 sec
rate      47.15 million edges/sec (incl time for U=triu(A))
rate     110.72 million edges/sec (just tricount itself)
L*U' time (dot):         0.000501 sec (nthreads: 32 speedup 2.01428)
tricount time:         0.000555 sec (dot product method)
tri+prep time:         0.001163 sec (incl time to compute L and U)
compute C time:        0.000501 sec
reduce (C) time:       0.000054 sec
rate      42.92 million edges/sec (incl time for U=triu(A))
rate      89.94 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000397 sec
tricount time:         0.000399 sec (saxpy method)
tri+prep time:         0.000600 sec (incl time to compute L)
compute C time:        0.000397 sec
reduce (C) time:       0.000002 sec
rate      83.19 million edges/sec (incl time for L=tril(A))
rate     125.08 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000320 sec (nthreads: 2 speedup 1.24069)
tricount time:         0.000322 sec (saxpy method)
tri+prep time:         0.000523 sec (incl time to compute L)
compute C time:        0.000320 sec
reduce (C) time:       0.000002 sec
rate      95.48 million edges/sec (incl time for L=tril(A))
rate     155.10 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000295 sec (nthreads: 4 speedup 1.346)
tricount time:         0.000296 sec (saxpy method)
tri+prep time:         0.000497 sec (incl time to compute L)
compute C time:        0.000295 sec
reduce (C) time:       0.000001 sec
rate     100.47 million edges/sec (incl time for L=tril(A))
rate     168.72 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000315 sec (nthreads: 8 speedup 1.26041)
tricount time:         0.000316 sec (saxpy method)
tri+prep time:         0.000517 sec (incl time to compute L)
compute C time:        0.000315 sec
reduce (C) time:       0.000001 sec
rate      96.53 million edges/sec (incl time for L=tril(A))
rate     157.90 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000360 sec (nthreads: 16 speedup 1.10265)
tricount time:         0.000362 sec (saxpy method)
tri+prep time:         0.000563 sec (incl time to compute L)
compute C time:        0.000360 sec
reduce (C) time:       0.000002 sec
rate      88.68 million edges/sec (incl time for L=tril(A))
rate     137.93 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000373 sec (nthreads: 32 speedup 1.06458)
tricount time:         0.000374 sec (saxpy method)
tri+prep time:         0.000575 sec (incl time to compute L)
compute C time:        0.000373 sec
reduce (C) time:       0.000001 sec
rate      86.81 million edges/sec (incl time for L=tril(A))
rate     133.45 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 67 by 67, 574 entries, from stdin

total time to read A matrix:       0.000494 sec

n 67 # edges 287
U=triu(A) time:        0.000037 sec
L=tril(A) time:        0.000020 sec

------------------------------------- dot product method:
# triangles 120
L*U' time (dot):         0.000034 sec
tricount time:         0.000054 sec (dot product method)
tri+prep time:         0.000111 sec (incl time to compute L and U)
compute C time:        0.000034 sec
reduce (C) time:       0.000020 sec
rate       2.58 million edges/sec (incl time for U=triu(A))
rate       5.30 million edges/sec (just tricount itself)
L*U' time (dot):         0.000020 sec (nthreads: 2 speedup 1.70238)
tricount time:         0.000026 sec (dot product method)
tri+prep time:         0.000083 sec (incl time to compute L and U)
compute C time:        0.000020 sec
reduce (C) time:       0.000006 sec
rate       3.45 million edges/sec (incl time for U=triu(A))
rate      11.04 million edges/sec (just tricount itself)
L*U' time (dot):         0.000016 sec (nthreads: 4 speedup 2.13433)
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000005 sec
rate       3.67 million edges/sec (incl time for U=triu(A))
rate      13.68 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 8 speedup 2.42373)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000004 sec
rate       3.81 million edges/sec (incl time for U=triu(A))
rate      15.84 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 16 speedup 2.42373)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000004 sec
rate       3.81 million edges/sec (incl time for U=triu(A))
rate      15.84 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec (nthreads: 32 speedup 2.64815)
tricount time:         0.000017 sec (dot product method)
tri+prep time:         0.000074 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000004 sec
rate       3.87 million edges/sec (incl time for U=triu(A))
rate      16.95 million edges/sec (just tricount itself)
L*U' time (dot):         0.000018 sec
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000080 sec (incl time to compute L and U)
compute C time:        0.000018 sec
reduce (C) time:       0.000005 sec
rate       3.57 million edges/sec (incl time for U=triu(A))
rate      12.41 million edges/sec (just tricount itself)
L*U' time (dot):         0.000016 sec (nthreads: 2 speedup 1.13433)
tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000078 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000005 sec
rate       3.67 million edges/sec (incl time for U=triu(A))
rate      13.68 million edges/sec (just tricount itself)
L*U' time (dot):         0.000015 sec (nthreads: 4 speedup 1.20635)
tricount time:         0.000019 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000004 sec
rate       3.77 million edges/sec (incl time for U=triu(A))
rate      15.24 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 8 speedup 1.28814)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000004 sec
rate       3.81 million edges/sec (incl time for U=triu(A))
rate      15.84 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 16 speedup 1.28814)
tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000075 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000004 sec
rate       3.81 million edges/sec (incl time for U=triu(A))
rate      15.84 million edges/sec (just tricount itself)
L*U' time (dot):         0.000017 sec (nthreads: 32 speedup 1.07042)
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000079 sec (incl time to compute L and U)
compute C time:        0.000017 sec
reduce (C) time:       0.000005 sec
rate       3.63 million edges/sec (incl time for U=triu(A))
rate      13.08 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000027 sec
tricount time:         0.000028 sec (saxpy method)
tri+prep time:         0.000048 sec (incl time to compute L)
compute C time:        0.000027 sec
reduce (C) time:       0.000001 sec
rate       5.99 million edges/sec (incl time for L=tril(A))
rate      10.29 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000014 sec (nthreads: 2 speedup 1.91525)
tricount time:         0.000015 sec (saxpy method)
tri+prep time:         0.000035 sec (incl time to compute L)
compute C time:        0.000014 sec
reduce (C) time:       0.000001 sec
rate       8.19 million edges/sec (incl time for L=tril(A))
rate      19.11 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000011 sec (nthreads: 4 speedup 2.45652)
tricount time:         0.000012 sec (saxpy method)
tri+prep time:         0.000032 sec (incl time to compute L)
compute C time:        0.000011 sec
reduce (C) time:       0.000001 sec
rate       8.98 million edges/sec (incl time for L=tril(A))
rate      24.08 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000010 sec (nthreads: 8 speedup 2.69048)
tricount time:         0.000011 sec (saxpy method)
tri+prep time:         0.000031 sec (incl time to compute L)
compute C time:        0.000010 sec
reduce (C) time:       0.000001 sec
rate       9.26 million edges/sec (incl time for L=tril(A))
rate      26.17 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000009 sec (nthreads: 16 speedup 2.97368)
tricount time:         0.000010 sec (saxpy method)
tri+prep time:         0.000030 sec (incl time to compute L)
compute C time:        0.000009 sec
reduce (C) time:       0.000001 sec
rate       9.55 million edges/sec (incl time for L=tril(A))
rate      28.66 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 32 speedup 3.42424)
tricount time:         0.000009 sec (saxpy method)
tri+prep time:         0.000029 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate       9.95 million edges/sec (incl time for L=tril(A))
rate      32.53 million edges/sec (just tricount itself)

--------------------------------------------------------------
Wathen: nx 200 ny 200 n 120801 nz 1762400 method 0, time: 0.336 sec

total time to read A matrix:       0.336544 sec

n 120801 # edges 881200
U=triu(A) time:        0.000717 sec
L=tril(A) time:        0.000692 sec

------------------------------------- dot product method:
# triangles 2160400
L*U' time (dot):         0.045109 sec
tricount time:         0.054391 sec (dot product method)
tri+prep time:         0.055800 sec (incl time to compute L and U)
compute C time:        0.045109 sec
reduce (C) time:       0.009282 sec
rate      15.79 million edges/sec (incl time for U=triu(A))
rate      16.20 million edges/sec (just tricount itself)
L*U' time (dot):         0.023703 sec (nthreads: 2 speedup 1.90309)
tricount time:         0.028208 sec (dot product method)
tri+prep time:         0.029617 sec (incl time to compute L and U)
compute C time:        0.023703 sec
reduce (C) time:       0.004505 sec
rate      29.75 million edges/sec (incl time for U=triu(A))
rate      31.24 million edges/sec (just tricount itself)
L*U' time (dot):         0.011960 sec (nthreads: 4 speedup 3.77165)
tricount time:         0.014302 sec (dot product method)
tri+prep time:         0.015711 sec (incl time to compute L and U)
compute C time:        0.011960 sec
reduce (C) time:       0.002342 sec
rate      56.09 million edges/sec (incl time for U=triu(A))
rate      61.61 million edges/sec (just tricount itself)
L*U' time (dot):         0.006368 sec (nthreads: 8 speedup 7.08379)
tricount time:         0.007638 sec (dot product method)
tri+prep time:         0.009047 sec (incl time to compute L and U)
compute C time:        0.006368 sec
reduce (C) time:       0.001270 sec
rate      97.41 million edges/sec (incl time for U=triu(A))
rate     115.37 million edges/sec (just tricount itself)
L*U' time (dot):         0.003863 sec (nthreads: 16 speedup 11.6776)
tricount time:         0.004631 sec (dot product method)
tri+prep time:         0.006040 sec (incl time to compute L and U)
compute C time:        0.003863 sec
reduce (C) time:       0.000768 sec
rate     145.90 million edges/sec (incl time for U=triu(A))
rate     190.28 million edges/sec (just tricount itself)
L*U' time (dot):         0.002981 sec (nthreads: 32 speedup 15.1324)
tricount time:         0.003538 sec (dot product method)
tri+prep time:         0.004947 sec (incl time to compute L and U)
compute C time:        0.002981 sec
reduce (C) time:       0.000557 sec
rate     178.14 million edges/sec (incl time for U=triu(A))
rate     249.07 million edges/sec (just tricount itself)
L*U' time (dot):         0.043795 sec
tricount time:         0.052895 sec (dot product method)
tri+prep time:         0.054304 sec (incl time to compute L and U)
compute C time:        0.043795 sec
reduce (C) time:       0.009100 sec
rate      16.23 million edges/sec (incl time for U=triu(A))
rate      16.66 million edges/sec (just tricount itself)
L*U' time (dot):         0.022818 sec (nthreads: 2 speedup 1.9193)
tricount time:         0.027298 sec (dot product method)
tri+prep time:         0.028707 sec (incl time to compute L and U)
compute C time:        0.022818 sec
reduce (C) time:       0.004480 sec
rate      30.70 million edges/sec (incl time for U=triu(A))
rate      32.28 million edges/sec (just tricount itself)
L*U' time (dot):         0.011536 sec (nthreads: 4 speedup 3.7964)
tricount time:         0.013857 sec (dot product method)
tri+prep time:         0.015266 sec (incl time to compute L and U)
compute C time:        0.011536 sec
reduce (C) time:       0.002321 sec
rate      57.72 million edges/sec (incl time for U=triu(A))
rate      63.59 million edges/sec (just tricount itself)
L*U' time (dot):         0.006155 sec (nthreads: 8 speedup 7.11532)
tricount time:         0.007430 sec (dot product method)
tri+prep time:         0.008839 sec (incl time to compute L and U)
compute C time:        0.006155 sec
reduce (C) time:       0.001275 sec
rate      99.70 million edges/sec (incl time for U=triu(A))
rate     118.60 million edges/sec (just tricount itself)
L*U' time (dot):         0.003378 sec (nthreads: 16 speedup 12.9641)
tricount time:         0.004083 sec (dot product method)
tri+prep time:         0.005492 sec (incl time to compute L and U)
compute C time:        0.003378 sec
reduce (C) time:       0.000705 sec
rate     160.45 million edges/sec (incl time for U=triu(A))
rate     215.81 million edges/sec (just tricount itself)
L*U' time (dot):         0.002709 sec (nthreads: 32 speedup 16.1655)
tricount time:         0.003256 sec (dot product method)
tri+prep time:         0.004665 sec (incl time to compute L and U)
compute C time:        0.002709 sec
reduce (C) time:       0.000547 sec
rate     188.90 million edges/sec (incl time for U=triu(A))
rate     270.63 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.025488 sec
tricount time:         0.030545 sec (saxpy method)
tri+prep time:         0.031237 sec (incl time to compute L)
compute C time:        0.025488 sec
reduce (C) time:       0.005057 sec
rate      28.21 million edges/sec (incl time for L=tril(A))
rate      28.85 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.023584 sec (nthreads: 2 speedup 1.08072)
tricount time:         0.025910 sec (saxpy method)
tri+prep time:         0.026602 sec (incl time to compute L)
compute C time:        0.023584 sec
reduce (C) time:       0.002326 sec
rate      33.13 million edges/sec (incl time for L=tril(A))
rate      34.01 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.012068 sec (nthreads: 4 speedup 2.11202)
tricount time:         0.013248 sec (saxpy method)
tri+prep time:         0.013940 sec (incl time to compute L)
compute C time:        0.012068 sec
reduce (C) time:       0.001180 sec
rate      63.21 million edges/sec (incl time for L=tril(A))
rate      66.52 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.006509 sec (nthreads: 8 speedup 3.91575)
tricount time:         0.007110 sec (saxpy method)
tri+prep time:         0.007802 sec (incl time to compute L)
compute C time:        0.006509 sec
reduce (C) time:       0.000601 sec
rate     112.95 million edges/sec (incl time for L=tril(A))
rate     123.94 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.003940 sec (nthreads: 16 speedup 6.46923)
tricount time:         0.004233 sec (saxpy method)
tri+prep time:         0.004925 sec (incl time to compute L)
compute C time:        0.003940 sec
reduce (C) time:       0.000293 sec
rate     178.93 million edges/sec (incl time for L=tril(A))
rate     208.18 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.003757 sec (nthreads: 32 speedup 6.78411)
tricount time:         0.003971 sec (saxpy method)
tri+prep time:         0.004663 sec (incl time to compute L)
compute C time:        0.003757 sec
reduce (C) time:       0.000214 sec
rate     188.99 million edges/sec (incl time for L=tril(A))
rate     221.92 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 0 time 0.060 sec

total time to read A matrix:       0.060664 sec

n 10000 # edges 99884
U=triu(A) time:        0.000325 sec
L=tril(A) time:        0.000252 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.014600 sec
tricount time:         0.015280 sec (dot product method)
tri+prep time:         0.015857 sec (incl time to compute L and U)
compute C time:        0.014600 sec
reduce (C) time:       0.000680 sec
rate       6.30 million edges/sec (incl time for U=triu(A))
rate       6.54 million edges/sec (just tricount itself)
L*U' time (dot):         0.007655 sec (nthreads: 2 speedup 1.90722)
tricount time:         0.008032 sec (dot product method)
tri+prep time:         0.008609 sec (incl time to compute L and U)
compute C time:        0.007655 sec
reduce (C) time:       0.000377 sec
rate      11.60 million edges/sec (incl time for U=triu(A))
rate      12.44 million edges/sec (just tricount itself)
L*U' time (dot):         0.003937 sec (nthreads: 4 speedup 3.70841)
tricount time:         0.004144 sec (dot product method)
tri+prep time:         0.004721 sec (incl time to compute L and U)
compute C time:        0.003937 sec
reduce (C) time:       0.000207 sec
rate      21.16 million edges/sec (incl time for U=triu(A))
rate      24.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.002185 sec (nthreads: 8 speedup 6.68161)
tricount time:         0.002319 sec (dot product method)
tri+prep time:         0.002896 sec (incl time to compute L and U)
compute C time:        0.002185 sec
reduce (C) time:       0.000134 sec
rate      34.49 million edges/sec (incl time for U=triu(A))
rate      43.07 million edges/sec (just tricount itself)
L*U' time (dot):         0.001357 sec (nthreads: 16 speedup 10.7603)
tricount time:         0.001483 sec (dot product method)
tri+prep time:         0.002060 sec (incl time to compute L and U)
compute C time:        0.001357 sec
reduce (C) time:       0.000126 sec
rate      48.49 million edges/sec (incl time for U=triu(A))
rate      67.35 million edges/sec (just tricount itself)
L*U' time (dot):         0.000995 sec (nthreads: 32 speedup 14.6746)
tricount time:         0.001149 sec (dot product method)
tri+prep time:         0.001726 sec (incl time to compute L and U)
compute C time:        0.000995 sec
reduce (C) time:       0.000154 sec
rate      57.87 million edges/sec (incl time for U=triu(A))
rate      86.94 million edges/sec (just tricount itself)
L*U' time (dot):         0.014766 sec
tricount time:         0.015397 sec (dot product method)
tri+prep time:         0.015974 sec (incl time to compute L and U)
compute C time:        0.014766 sec
reduce (C) time:       0.000631 sec
rate       6.25 million edges/sec (incl time for U=triu(A))
rate       6.49 million edges/sec (just tricount itself)
L*U' time (dot):         0.007730 sec (nthreads: 2 speedup 1.91022)
tricount time:         0.008109 sec (dot product method)
tri+prep time:         0.008686 sec (incl time to compute L and U)
compute C time:        0.007730 sec
reduce (C) time:       0.000379 sec
rate      11.50 million edges/sec (incl time for U=triu(A))
rate      12.32 million edges/sec (just tricount itself)
L*U' time (dot):         0.003998 sec (nthreads: 4 speedup 3.6933)
tricount time:         0.004219 sec (dot product method)
tri+prep time:         0.004796 sec (incl time to compute L and U)
compute C time:        0.003998 sec
reduce (C) time:       0.000221 sec
rate      20.83 million edges/sec (incl time for U=triu(A))
rate      23.67 million edges/sec (just tricount itself)
L*U' time (dot):         0.002208 sec (nthreads: 8 speedup 6.68751)
tricount time:         0.002357 sec (dot product method)
tri+prep time:         0.002934 sec (incl time to compute L and U)
compute C time:        0.002208 sec
reduce (C) time:       0.000149 sec
rate      34.04 million edges/sec (incl time for U=triu(A))
rate      42.38 million edges/sec (just tricount itself)
L*U' time (dot):         0.001386 sec (nthreads: 16 speedup 10.6524)
tricount time:         0.001526 sec (dot product method)
tri+prep time:         0.002103 sec (incl time to compute L and U)
compute C time:        0.001386 sec
reduce (C) time:       0.000140 sec
rate      47.49 million edges/sec (incl time for U=triu(A))
rate      65.45 million edges/sec (just tricount itself)
L*U' time (dot):         0.000994 sec (nthreads: 32 speedup 14.852)
tricount time:         0.001154 sec (dot product method)
tri+prep time:         0.001731 sec (incl time to compute L and U)
compute C time:        0.000994 sec
reduce (C) time:       0.000160 sec
rate      57.70 million edges/sec (incl time for U=triu(A))
rate      86.54 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.005197 sec
tricount time:         0.005210 sec (saxpy method)
tri+prep time:         0.005462 sec (incl time to compute L)
compute C time:        0.005197 sec
reduce (C) time:       0.000013 sec
rate      18.29 million edges/sec (incl time for L=tril(A))
rate      19.17 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.004288 sec (nthreads: 2 speedup 1.21201)
tricount time:         0.004300 sec (saxpy method)
tri+prep time:         0.004552 sec (incl time to compute L)
compute C time:        0.004288 sec
reduce (C) time:       0.000012 sec
rate      21.94 million edges/sec (incl time for L=tril(A))
rate      23.23 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002452 sec (nthreads: 4 speedup 2.1194)
tricount time:         0.002464 sec (saxpy method)
tri+prep time:         0.002716 sec (incl time to compute L)
compute C time:        0.002452 sec
reduce (C) time:       0.000012 sec
rate      36.78 million edges/sec (incl time for L=tril(A))
rate      40.54 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001527 sec (nthreads: 8 speedup 3.40328)
tricount time:         0.001539 sec (saxpy method)
tri+prep time:         0.001791 sec (incl time to compute L)
compute C time:        0.001527 sec
reduce (C) time:       0.000012 sec
rate      55.76 million edges/sec (incl time for L=tril(A))
rate      64.89 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001094 sec (nthreads: 16 speedup 4.75109)
tricount time:         0.001107 sec (saxpy method)
tri+prep time:         0.001359 sec (incl time to compute L)
compute C time:        0.001094 sec
reduce (C) time:       0.000013 sec
rate      73.50 million edges/sec (incl time for L=tril(A))
rate      90.23 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001049 sec (nthreads: 32 speedup 4.95522)
tricount time:         0.001061 sec (saxpy method)
tri+prep time:         0.001313 sec (incl time to compute L)
compute C time:        0.001049 sec
reduce (C) time:       0.000012 sec
rate      76.07 million edges/sec (incl time for L=tril(A))
rate      94.14 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 1 time 0.048 sec

total time to read A matrix:       0.048794 sec

n 10000 # edges 99884
U=triu(A) time:        0.000377 sec
L=tril(A) time:        0.000294 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.015248 sec
tricount time:         0.015916 sec (dot product method)
tri+prep time:         0.016587 sec (incl time to compute L and U)
compute C time:        0.015248 sec
reduce (C) time:       0.000668 sec
rate       6.02 million edges/sec (incl time for U=triu(A))
rate       6.28 million edges/sec (just tricount itself)
L*U' time (dot):         0.007545 sec (nthreads: 2 speedup 2.02095)
tricount time:         0.007903 sec (dot product method)
tri+prep time:         0.008574 sec (incl time to compute L and U)
compute C time:        0.007545 sec
reduce (C) time:       0.000358 sec
rate      11.65 million edges/sec (incl time for U=triu(A))
rate      12.64 million edges/sec (just tricount itself)
L*U' time (dot):         0.003942 sec (nthreads: 4 speedup 3.86809)
tricount time:         0.004153 sec (dot product method)
tri+prep time:         0.004824 sec (incl time to compute L and U)
compute C time:        0.003942 sec
reduce (C) time:       0.000211 sec
rate      20.71 million edges/sec (incl time for U=triu(A))
rate      24.05 million edges/sec (just tricount itself)
L*U' time (dot):         0.002191 sec (nthreads: 8 speedup 6.95919)
tricount time:         0.002318 sec (dot product method)
tri+prep time:         0.002989 sec (incl time to compute L and U)
compute C time:        0.002191 sec
reduce (C) time:       0.000127 sec
rate      33.42 million edges/sec (incl time for U=triu(A))
rate      43.09 million edges/sec (just tricount itself)
L*U' time (dot):         0.001523 sec (nthreads: 16 speedup 10.0117)
tricount time:         0.001650 sec (dot product method)
tri+prep time:         0.002321 sec (incl time to compute L and U)
compute C time:        0.001523 sec
reduce (C) time:       0.000127 sec
rate      43.03 million edges/sec (incl time for U=triu(A))
rate      60.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.001145 sec (nthreads: 32 speedup 13.3156)
tricount time:         0.001299 sec (dot product method)
tri+prep time:         0.001970 sec (incl time to compute L and U)
compute C time:        0.001145 sec
reduce (C) time:       0.000154 sec
rate      50.70 million edges/sec (incl time for U=triu(A))
rate      76.88 million edges/sec (just tricount itself)
L*U' time (dot):         0.014830 sec
tricount time:         0.015460 sec (dot product method)
tri+prep time:         0.016131 sec (incl time to compute L and U)
compute C time:        0.014830 sec
reduce (C) time:       0.000630 sec
rate       6.19 million edges/sec (incl time for U=triu(A))
rate       6.46 million edges/sec (just tricount itself)
L*U' time (dot):         0.007629 sec (nthreads: 2 speedup 1.94393)
tricount time:         0.007999 sec (dot product method)
tri+prep time:         0.008670 sec (incl time to compute L and U)
compute C time:        0.007629 sec
reduce (C) time:       0.000370 sec
rate      11.52 million edges/sec (incl time for U=triu(A))
rate      12.49 million edges/sec (just tricount itself)
L*U' time (dot):         0.003940 sec (nthreads: 4 speedup 3.76389)
tricount time:         0.004162 sec (dot product method)
tri+prep time:         0.004833 sec (incl time to compute L and U)
compute C time:        0.003940 sec
reduce (C) time:       0.000222 sec
rate      20.67 million edges/sec (incl time for U=triu(A))
rate      24.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.002223 sec (nthreads: 8 speedup 6.67117)
tricount time:         0.002372 sec (dot product method)
tri+prep time:         0.003043 sec (incl time to compute L and U)
compute C time:        0.002223 sec
reduce (C) time:       0.000149 sec
rate      32.82 million edges/sec (incl time for U=triu(A))
rate      42.11 million edges/sec (just tricount itself)
L*U' time (dot):         0.001389 sec (nthreads: 16 speedup 10.6766)
tricount time:         0.001530 sec (dot product method)
tri+prep time:         0.002201 sec (incl time to compute L and U)
compute C time:        0.001389 sec
reduce (C) time:       0.000141 sec
rate      45.38 million edges/sec (incl time for U=triu(A))
rate      65.29 million edges/sec (just tricount itself)
L*U' time (dot):         0.000987 sec (nthreads: 32 speedup 15.0246)
tricount time:         0.001148 sec (dot product method)
tri+prep time:         0.001819 sec (incl time to compute L and U)
compute C time:        0.000987 sec
reduce (C) time:       0.000161 sec
rate      54.91 million edges/sec (incl time for U=triu(A))
rate      87.01 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.005232 sec
tricount time:         0.005244 sec (saxpy method)
tri+prep time:         0.005538 sec (incl time to compute L)
compute C time:        0.005232 sec
reduce (C) time:       0.000012 sec
rate      18.04 million edges/sec (incl time for L=tril(A))
rate      19.05 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.003844 sec (nthreads: 2 speedup 1.3611)
tricount time:         0.003856 sec (saxpy method)
tri+prep time:         0.004150 sec (incl time to compute L)
compute C time:        0.003844 sec
reduce (C) time:       0.000012 sec
rate      24.07 million edges/sec (incl time for L=tril(A))
rate      25.90 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.002267 sec (nthreads: 4 speedup 2.30781)
tricount time:         0.002279 sec (saxpy method)
tri+prep time:         0.002573 sec (incl time to compute L)
compute C time:        0.002267 sec
reduce (C) time:       0.000012 sec
rate      38.82 million edges/sec (incl time for L=tril(A))
rate      43.83 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001441 sec (nthreads: 8 speedup 3.63087)
tricount time:         0.001453 sec (saxpy method)
tri+prep time:         0.001747 sec (incl time to compute L)
compute C time:        0.001441 sec
reduce (C) time:       0.000012 sec
rate      57.18 million edges/sec (incl time for L=tril(A))
rate      68.75 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001081 sec (nthreads: 16 speedup 4.8401)
tricount time:         0.001093 sec (saxpy method)
tri+prep time:         0.001387 sec (incl time to compute L)
compute C time:        0.001081 sec
reduce (C) time:       0.000012 sec
rate      72.02 million edges/sec (incl time for L=tril(A))
rate      91.39 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.001142 sec (nthreads: 32 speedup 4.58142)
tricount time:         0.001154 sec (saxpy method)
tri+prep time:         0.001448 sec (incl time to compute L)
compute C time:        0.001142 sec
reduce (C) time:       0.000012 sec
rate      68.98 million edges/sec (incl time for L=tril(A))
rate      86.56 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 0 time 5.126 sec

total time to read A matrix:       5.137507 sec

n 100000 # edges 9990165
U=triu(A) time:        0.008280 sec
L=tril(A) time:        0.007853 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):         8.617361 sec
tricount time:         8.669375 sec (dot product method)
tri+prep time:         8.685508 sec (incl time to compute L and U)
compute C time:        8.617361 sec
reduce (C) time:       0.052014 sec
rate       1.15 million edges/sec (incl time for U=triu(A))
rate       1.15 million edges/sec (just tricount itself)
L*U' time (dot):         4.386282 sec (nthreads: 2 speedup 1.96462)
tricount time:         4.416001 sec (dot product method)
tri+prep time:         4.432134 sec (incl time to compute L and U)
compute C time:        4.386282 sec
reduce (C) time:       0.029719 sec
rate       2.25 million edges/sec (incl time for U=triu(A))
rate       2.26 million edges/sec (just tricount itself)
L*U' time (dot):         2.212450 sec (nthreads: 4 speedup 3.89494)
tricount time:         2.229476 sec (dot product method)
tri+prep time:         2.245609 sec (incl time to compute L and U)
compute C time:        2.212450 sec
reduce (C) time:       0.017026 sec
rate       4.45 million edges/sec (incl time for U=triu(A))
rate       4.48 million edges/sec (just tricount itself)
L*U' time (dot):         1.123254 sec (nthreads: 8 speedup 7.67178)
tricount time:         1.135754 sec (dot product method)
tri+prep time:         1.151887 sec (incl time to compute L and U)
compute C time:        1.123254 sec
reduce (C) time:       0.012500 sec
rate       8.67 million edges/sec (incl time for U=triu(A))
rate       8.80 million edges/sec (just tricount itself)
L*U' time (dot):         0.572161 sec (nthreads: 16 speedup 15.0611)
tricount time:         0.583256 sec (dot product method)
tri+prep time:         0.599389 sec (incl time to compute L and U)
compute C time:        0.572161 sec
reduce (C) time:       0.011095 sec
rate      16.67 million edges/sec (incl time for U=triu(A))
rate      17.13 million edges/sec (just tricount itself)
L*U' time (dot):         0.345717 sec (nthreads: 32 speedup 24.9261)
tricount time:         0.360183 sec (dot product method)
tri+prep time:         0.376316 sec (incl time to compute L and U)
compute C time:        0.345717 sec
reduce (C) time:       0.014466 sec
rate      26.55 million edges/sec (incl time for U=triu(A))
rate      27.74 million edges/sec (just tricount itself)
L*U' time (dot):         9.152605 sec
tricount time:         9.197165 sec (dot product method)
tri+prep time:         9.213298 sec (incl time to compute L and U)
compute C time:        9.152605 sec
reduce (C) time:       0.044560 sec
rate       1.08 million edges/sec (incl time for U=triu(A))
rate       1.09 million edges/sec (just tricount itself)
L*U' time (dot):         4.618772 sec (nthreads: 2 speedup 1.98161)
tricount time:         4.644908 sec (dot product method)
tri+prep time:         4.661041 sec (incl time to compute L and U)
compute C time:        4.618772 sec
reduce (C) time:       0.026136 sec
rate       2.14 million edges/sec (incl time for U=triu(A))
rate       2.15 million edges/sec (just tricount itself)
L*U' time (dot):         2.347046 sec (nthreads: 4 speedup 3.89963)
tricount time:         2.364062 sec (dot product method)
tri+prep time:         2.380195 sec (incl time to compute L and U)
compute C time:        2.347046 sec
reduce (C) time:       0.017016 sec
rate       4.20 million edges/sec (incl time for U=triu(A))
rate       4.23 million edges/sec (just tricount itself)
L*U' time (dot):         1.195614 sec (nthreads: 8 speedup 7.65515)
tricount time:         1.208287 sec (dot product method)
tri+prep time:         1.224420 sec (incl time to compute L and U)
compute C time:        1.195614 sec
reduce (C) time:       0.012673 sec
rate       8.16 million edges/sec (incl time for U=triu(A))
rate       8.27 million edges/sec (just tricount itself)
L*U' time (dot):         0.603466 sec (nthreads: 16 speedup 15.1667)
tricount time:         0.614836 sec (dot product method)
tri+prep time:         0.630969 sec (incl time to compute L and U)
compute C time:        0.603466 sec
reduce (C) time:       0.011370 sec
rate      15.83 million edges/sec (incl time for U=triu(A))
rate      16.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.366615 sec (nthreads: 32 speedup 24.9652)
tricount time:         0.381595 sec (dot product method)
tri+prep time:         0.397728 sec (incl time to compute L and U)
compute C time:        0.366615 sec
reduce (C) time:       0.014980 sec
rate      25.12 million edges/sec (incl time for U=triu(A))
rate      26.18 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         2.323073 sec
tricount time:         2.329818 sec (saxpy method)
tri+prep time:         2.337671 sec (incl time to compute L)
compute C time:        2.323073 sec
reduce (C) time:       0.006745 sec
rate       4.27 million edges/sec (incl time for L=tril(A))
rate       4.29 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.323182 sec (nthreads: 2 speedup 1.75567)
tricount time:         1.325924 sec (saxpy method)
tri+prep time:         1.333777 sec (incl time to compute L)
compute C time:        1.323182 sec
reduce (C) time:       0.002742 sec
rate       7.49 million edges/sec (incl time for L=tril(A))
rate       7.53 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.689473 sec (nthreads: 4 speedup 3.36934)
tricount time:         0.690856 sec (saxpy method)
tri+prep time:         0.698709 sec (incl time to compute L)
compute C time:        0.689473 sec
reduce (C) time:       0.001383 sec
rate      14.30 million edges/sec (incl time for L=tril(A))
rate      14.46 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.363747 sec (nthreads: 8 speedup 6.38651)
tricount time:         0.364446 sec (saxpy method)
tri+prep time:         0.372299 sec (incl time to compute L)
compute C time:        0.363747 sec
reduce (C) time:       0.000699 sec
rate      26.83 million edges/sec (incl time for L=tril(A))
rate      27.41 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.202916 sec (nthreads: 16 speedup 11.4485)
tricount time:         0.203278 sec (saxpy method)
tri+prep time:         0.211131 sec (incl time to compute L)
compute C time:        0.202916 sec
reduce (C) time:       0.000362 sec
rate      47.32 million edges/sec (incl time for L=tril(A))
rate      49.15 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.188445 sec (nthreads: 32 speedup 12.3276)
tricount time:         0.188743 sec (saxpy method)
tri+prep time:         0.196596 sec (incl time to compute L)
compute C time:        0.188445 sec
reduce (C) time:       0.000298 sec
rate      50.82 million edges/sec (incl time for L=tril(A))
rate      52.93 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 1 time 4.318 sec

total time to read A matrix:       4.329059 sec

n 100000 # edges 9990165
U=triu(A) time:        0.008069 sec
L=tril(A) time:        0.007686 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):         8.619956 sec
tricount time:         8.671963 sec (dot product method)
tri+prep time:         8.687718 sec (incl time to compute L and U)
compute C time:        8.619956 sec
reduce (C) time:       0.052007 sec
rate       1.15 million edges/sec (incl time for U=triu(A))
rate       1.15 million edges/sec (just tricount itself)
L*U' time (dot):         4.332419 sec (nthreads: 2 speedup 1.98964)
tricount time:         4.362089 sec (dot product method)
tri+prep time:         4.377844 sec (incl time to compute L and U)
compute C time:        4.332419 sec
reduce (C) time:       0.029670 sec
rate       2.28 million edges/sec (incl time for U=triu(A))
rate       2.29 million edges/sec (just tricount itself)
L*U' time (dot):         2.178924 sec (nthreads: 4 speedup 3.95606)
tricount time:         2.195953 sec (dot product method)
tri+prep time:         2.211708 sec (incl time to compute L and U)
compute C time:        2.178924 sec
reduce (C) time:       0.017029 sec
rate       4.52 million edges/sec (incl time for U=triu(A))
rate       4.55 million edges/sec (just tricount itself)
L*U' time (dot):         1.126517 sec (nthreads: 8 speedup 7.65186)
tricount time:         1.139016 sec (dot product method)
tri+prep time:         1.154771 sec (incl time to compute L and U)
compute C time:        1.126517 sec
reduce (C) time:       0.012499 sec
rate       8.65 million edges/sec (incl time for U=triu(A))
rate       8.77 million edges/sec (just tricount itself)
L*U' time (dot):         0.573258 sec (nthreads: 16 speedup 15.0368)
tricount time:         0.584322 sec (dot product method)
tri+prep time:         0.600077 sec (incl time to compute L and U)
compute C time:        0.573258 sec
reduce (C) time:       0.011064 sec
rate      16.65 million edges/sec (incl time for U=triu(A))
rate      17.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.346188 sec (nthreads: 32 speedup 24.8996)
tricount time:         0.357102 sec (dot product method)
tri+prep time:         0.372857 sec (incl time to compute L and U)
compute C time:        0.346188 sec
reduce (C) time:       0.010914 sec
rate      26.79 million edges/sec (incl time for U=triu(A))
rate      27.98 million edges/sec (just tricount itself)
L*U' time (dot):         9.053730 sec
tricount time:         9.098173 sec (dot product method)
tri+prep time:         9.113928 sec (incl time to compute L and U)
compute C time:        9.053730 sec
reduce (C) time:       0.044443 sec
rate       1.10 million edges/sec (incl time for U=triu(A))
rate       1.10 million edges/sec (just tricount itself)
L*U' time (dot):         4.584478 sec (nthreads: 2 speedup 1.97487)
tricount time:         4.610478 sec (dot product method)
tri+prep time:         4.626233 sec (incl time to compute L and U)
compute C time:        4.584478 sec
reduce (C) time:       0.026000 sec
rate       2.16 million edges/sec (incl time for U=triu(A))
rate       2.17 million edges/sec (just tricount itself)
L*U' time (dot):         2.327223 sec (nthreads: 4 speedup 3.89036)
tricount time:         2.344235 sec (dot product method)
tri+prep time:         2.359990 sec (incl time to compute L and U)
compute C time:        2.327223 sec
reduce (C) time:       0.017012 sec
rate       4.23 million edges/sec (incl time for U=triu(A))
rate       4.26 million edges/sec (just tricount itself)
L*U' time (dot):         1.181471 sec (nthreads: 8 speedup 7.6631)
tricount time:         1.194123 sec (dot product method)
tri+prep time:         1.209878 sec (incl time to compute L and U)
compute C time:        1.181471 sec
reduce (C) time:       0.012652 sec
rate       8.26 million edges/sec (incl time for U=triu(A))
rate       8.37 million edges/sec (just tricount itself)
L*U' time (dot):         0.604787 sec (nthreads: 16 speedup 14.9701)
tricount time:         0.616166 sec (dot product method)
tri+prep time:         0.631921 sec (incl time to compute L and U)
compute C time:        0.604787 sec
reduce (C) time:       0.011379 sec
rate      15.81 million edges/sec (incl time for U=triu(A))
rate      16.21 million edges/sec (just tricount itself)
L*U' time (dot):         0.367060 sec (nthreads: 32 speedup 24.6655)
tricount time:         0.378511 sec (dot product method)
tri+prep time:         0.394266 sec (incl time to compute L and U)
compute C time:        0.367060 sec
reduce (C) time:       0.011451 sec
rate      25.34 million edges/sec (incl time for U=triu(A))
rate      26.39 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         2.251831 sec
tricount time:         2.258572 sec (saxpy method)
tri+prep time:         2.266258 sec (incl time to compute L)
compute C time:        2.251831 sec
reduce (C) time:       0.006741 sec
rate       4.41 million edges/sec (incl time for L=tril(A))
rate       4.42 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.313977 sec (nthreads: 2 speedup 1.71375)
tricount time:         1.316704 sec (saxpy method)
tri+prep time:         1.324390 sec (incl time to compute L)
compute C time:        1.313977 sec
reduce (C) time:       0.002727 sec
rate       7.54 million edges/sec (incl time for L=tril(A))
rate       7.59 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.698306 sec (nthreads: 4 speedup 3.22471)
tricount time:         0.699681 sec (saxpy method)
tri+prep time:         0.707367 sec (incl time to compute L)
compute C time:        0.698306 sec
reduce (C) time:       0.001375 sec
rate      14.12 million edges/sec (incl time for L=tril(A))
rate      14.28 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.371057 sec (nthreads: 8 speedup 6.06869)
tricount time:         0.371760 sec (saxpy method)
tri+prep time:         0.379446 sec (incl time to compute L)
compute C time:        0.371057 sec
reduce (C) time:       0.000703 sec
rate      26.33 million edges/sec (incl time for L=tril(A))
rate      26.87 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.206505 sec (nthreads: 16 speedup 10.9045)
tricount time:         0.206869 sec (saxpy method)
tri+prep time:         0.214555 sec (incl time to compute L)
compute C time:        0.206505 sec
reduce (C) time:       0.000364 sec
rate      46.56 million edges/sec (incl time for L=tril(A))
rate      48.29 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.189203 sec (nthreads: 32 speedup 11.9017)
tricount time:         0.189495 sec (saxpy method)
tri+prep time:         0.197181 sec (incl time to compute L)
compute C time:        0.189203 sec
reduce (C) time:       0.000292 sec
rate      50.66 million edges/sec (incl time for L=tril(A))
rate      52.72 million edges/sec (just tricount itself)

