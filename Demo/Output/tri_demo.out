--------------------------------------------------------------
Wathen: nx 4 ny 4 n 65 nz 752 method 0, time: 0.000 sec

total time to read A matrix:       0.000485 sec

n 65 # edges 376
U=triu(A) time:        0.000015 sec
L=tril(A) time:        0.000005 sec

------------------------------------- dot product method:
# triangles 872
L*U' time (dot):         0.000063 sec
tricount time:         0.000092 sec (dot product method)
tri+prep time:         0.000112 sec (incl time to compute L and U)
compute C time:        0.000063 sec
reduce (C) time:       0.000029 sec
rate       3.36 million edges/sec (incl time for U=triu(A))
rate       4.09 million edges/sec (just tricount itself)
L*U' time (dot):         0.000191 sec (nthreads: 2 speedup 0.329177)
tricount time:         0.000200 sec (dot product method)
tri+prep time:         0.000220 sec (incl time to compute L and U)
compute C time:        0.000191 sec
reduce (C) time:       0.000009 sec
rate       1.71 million edges/sec (incl time for U=triu(A))
rate       1.88 million edges/sec (just tricount itself)
L*U' time (dot):         0.000205 sec (nthreads: 4 speedup 0.306977)
tricount time:         0.000209 sec (dot product method)
tri+prep time:         0.000229 sec (incl time to compute L and U)
compute C time:        0.000205 sec
reduce (C) time:       0.000004 sec
rate       1.64 million edges/sec (incl time for U=triu(A))
rate       1.80 million edges/sec (just tricount itself)
L*U' time (dot):         0.000020 sec
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000043 sec (incl time to compute L and U)
compute C time:        0.000020 sec
reduce (C) time:       0.000003 sec
rate       8.76 million edges/sec (incl time for U=triu(A))
rate      16.43 million edges/sec (just tricount itself)
L*U' time (dot):         0.000050 sec (nthreads: 2 speedup 0.4)
tricount time:         0.000054 sec (dot product method)
tri+prep time:         0.000074 sec (incl time to compute L and U)
compute C time:        0.000050 sec
reduce (C) time:       0.000004 sec
rate       5.07 million edges/sec (incl time for U=triu(A))
rate       6.95 million edges/sec (just tricount itself)
L*U' time (dot):         0.000056 sec (nthreads: 4 speedup 0.357447)
tricount time:         0.000059 sec (dot product method)
tri+prep time:         0.000079 sec (incl time to compute L and U)
compute C time:        0.000056 sec
reduce (C) time:       0.000003 sec
rate       4.75 million edges/sec (incl time for U=triu(A))
rate       6.36 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000048 sec
tricount time:         0.000051 sec (saxpy method)
tri+prep time:         0.000056 sec (incl time to compute L)
compute C time:        0.000048 sec
reduce (C) time:       0.000003 sec
rate       6.71 million edges/sec (incl time for L=tril(A))
rate       7.37 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000023 sec (nthreads: 2 speedup 2.08247)
tricount time:         0.000026 sec (saxpy method)
tri+prep time:         0.000031 sec (incl time to compute L)
compute C time:        0.000023 sec
reduce (C) time:       0.000003 sec
rate      12.13 million edges/sec (incl time for L=tril(A))
rate      14.47 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000019 sec (nthreads: 4 speedup 2.525)
tricount time:         0.000022 sec (saxpy method)
tri+prep time:         0.000027 sec (incl time to compute L)
compute C time:        0.000019 sec
reduce (C) time:       0.000003 sec
rate      13.96 million edges/sec (incl time for L=tril(A))
rate      17.14 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 5 by 5, nz: 18, method 1 time 0.000 sec

total time to read A matrix:       0.000480 sec

n 5 # edges 9
U=triu(A) time:        0.000030 sec
L=tril(A) time:        0.000005 sec

------------------------------------- dot product method:
# triangles 7
L*U' time (dot):         0.000123 sec
tricount time:         0.000142 sec (dot product method)
tri+prep time:         0.000177 sec (incl time to compute L and U)
compute C time:        0.000123 sec
reduce (C) time:       0.000019 sec
rate       0.05 million edges/sec (incl time for U=triu(A))
rate       0.06 million edges/sec (just tricount itself)
L*U' time (dot):         0.000431 sec (nthreads: 2 speedup 0.284845)
tricount time:         0.000433 sec (dot product method)
tri+prep time:         0.000468 sec (incl time to compute L and U)
compute C time:        0.000431 sec
reduce (C) time:       0.000002 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.000329 sec (nthreads: 4 speedup 0.373459)
tricount time:         0.000331 sec (dot product method)
tri+prep time:         0.000366 sec (incl time to compute L and U)
compute C time:        0.000329 sec
reduce (C) time:       0.000002 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.03 million edges/sec (just tricount itself)
L*U' time (dot):         0.000009 sec
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000045 sec (incl time to compute L and U)
compute C time:        0.000009 sec
reduce (C) time:       0.000001 sec
rate       0.20 million edges/sec (incl time for U=triu(A))
rate       0.90 million edges/sec (just tricount itself)
L*U' time (dot):         0.000022 sec (nthreads: 2 speedup 0.402174)
tricount time:         0.000024 sec (dot product method)
tri+prep time:         0.000059 sec (incl time to compute L and U)
compute C time:        0.000022 sec
reduce (C) time:       0.000002 sec
rate       0.15 million edges/sec (incl time for U=triu(A))
rate       0.37 million edges/sec (just tricount itself)
L*U' time (dot):         0.000218 sec (nthreads: 4 speedup 0.0404814)
tricount time:         0.000220 sec (dot product method)
tri+prep time:         0.000255 sec (incl time to compute L and U)
compute C time:        0.000218 sec
reduce (C) time:       0.000002 sec
rate       0.04 million edges/sec (incl time for U=triu(A))
rate       0.04 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000085 sec
tricount time:         0.000086 sec (saxpy method)
tri+prep time:         0.000091 sec (incl time to compute L)
compute C time:        0.000085 sec
reduce (C) time:       0.000001 sec
rate       0.10 million edges/sec (incl time for L=tril(A))
rate       0.10 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000025 sec (nthreads: 2 speedup 3.39048)
tricount time:         0.000027 sec (saxpy method)
tri+prep time:         0.000032 sec (incl time to compute L)
compute C time:        0.000025 sec
reduce (C) time:       0.000002 sec
rate       0.28 million edges/sec (incl time for L=tril(A))
rate       0.33 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000014 sec (nthreads: 4 speedup 6.13793)
tricount time:         0.000016 sec (saxpy method)
tri+prep time:         0.000021 sec (incl time to compute L)
compute C time:        0.000014 sec
reduce (C) time:       0.000002 sec
rate       0.43 million edges/sec (incl time for L=tril(A))
rate       0.56 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 3 by 3, 0 entries, from stdin

total time to read A matrix:       0.000293 sec

n 3 # edges 0
U=triu(A) time:        0.000013 sec
L=tril(A) time:        0.000003 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000052 sec
tricount time:         0.000060 sec (dot product method)
tri+prep time:         0.000076 sec (incl time to compute L and U)
compute C time:        0.000052 sec
reduce (C) time:       0.000008 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000005 sec (nthreads: 2 speedup 10.381)
tricount time:         0.000006 sec (dot product method)
tri+prep time:         0.000022 sec (incl time to compute L and U)
compute C time:        0.000005 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 12.8235)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000021 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000021 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 2 speedup 1)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000021 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.000004 sec (nthreads: 4 speedup 1)
tricount time:         0.000005 sec (dot product method)
tri+prep time:         0.000021 sec (incl time to compute L and U)
compute C time:        0.000004 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000118 sec
tricount time:         0.000120 sec (saxpy method)
tri+prep time:         0.000123 sec (incl time to compute L)
compute C time:        0.000118 sec
reduce (C) time:       0.000002 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000011 sec (nthreads: 2 speedup 10.7609)
tricount time:         0.000012 sec (saxpy method)
tri+prep time:         0.000015 sec (incl time to compute L)
compute C time:        0.000011 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000008 sec (nthreads: 4 speedup 14.5588)
tricount time:         0.000009 sec (saxpy method)
tri+prep time:         0.000012 sec (incl time to compute L)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate       0.00 million edges/sec (incl time for L=tril(A))
rate       0.00 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 4 entries, from stdin

total time to read A matrix:       0.000321 sec

n 4 # edges 2
U=triu(A) time:        0.000010 sec
L=tril(A) time:        0.000003 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000043 sec
tricount time:         0.000050 sec (dot product method)
tri+prep time:         0.000063 sec (incl time to compute L and U)
compute C time:        0.000043 sec
reduce (C) time:       0.000007 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.04 million edges/sec (just tricount itself)
L*U' time (dot):         0.000191 sec (nthreads: 2 speedup 0.225968)
tricount time:         0.000192 sec (dot product method)
tri+prep time:         0.000205 sec (incl time to compute L and U)
compute C time:        0.000191 sec
reduce (C) time:       0.000001 sec
rate       0.01 million edges/sec (incl time for U=triu(A))
rate       0.01 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 4 speedup 3.0678)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000029 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000002 sec
rate       0.07 million edges/sec (incl time for U=triu(A))
rate       0.13 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000020 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate       0.10 million edges/sec (incl time for U=triu(A))
rate       0.28 million edges/sec (just tricount itself)
L*U' time (dot):         0.000012 sec (nthreads: 2 speedup 0.490196)
tricount time:         0.000013 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000012 sec
reduce (C) time:       0.000001 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.15 million edges/sec (just tricount itself)
L*U' time (dot):         0.000049 sec (nthreads: 4 speedup 0.121951)
tricount time:         0.000050 sec (dot product method)
tri+prep time:         0.000063 sec (incl time to compute L and U)
compute C time:        0.000049 sec
reduce (C) time:       0.000001 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.04 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000070 sec
tricount time:         0.000072 sec (saxpy method)
tri+prep time:         0.000075 sec (incl time to compute L)
compute C time:        0.000070 sec
reduce (C) time:       0.000002 sec
rate       0.03 million edges/sec (incl time for L=tril(A))
rate       0.03 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000038 sec (nthreads: 2 speedup 1.83125)
tricount time:         0.000039 sec (saxpy method)
tri+prep time:         0.000042 sec (incl time to compute L)
compute C time:        0.000038 sec
reduce (C) time:       0.000001 sec
rate       0.05 million edges/sec (incl time for L=tril(A))
rate       0.05 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000141 sec (nthreads: 4 speedup 0.494932)
tricount time:         0.000143 sec (saxpy method)
tri+prep time:         0.000146 sec (incl time to compute L)
compute C time:        0.000141 sec
reduce (C) time:       0.000002 sec
rate       0.01 million edges/sec (incl time for L=tril(A))
rate       0.01 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4 by 4, 10 entries, from stdin

total time to read A matrix:       0.000359 sec

n 4 # edges 5
U=triu(A) time:        0.000010 sec
L=tril(A) time:        0.000002 sec

------------------------------------- dot product method:
# triangles 2
L*U' time (dot):         0.000037 sec
tricount time:         0.000043 sec (dot product method)
tri+prep time:         0.000055 sec (incl time to compute L and U)
compute C time:        0.000037 sec
reduce (C) time:       0.000006 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.12 million edges/sec (just tricount itself)
L*U' time (dot):         0.000165 sec (nthreads: 2 speedup 0.223988)
tricount time:         0.000167 sec (dot product method)
tri+prep time:         0.000179 sec (incl time to compute L and U)
compute C time:        0.000165 sec
reduce (C) time:       0.000002 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.03 million edges/sec (just tricount itself)
L*U' time (dot):         0.000167 sec (nthreads: 4 speedup 0.221429)
tricount time:         0.000169 sec (dot product method)
tri+prep time:         0.000181 sec (incl time to compute L and U)
compute C time:        0.000167 sec
reduce (C) time:       0.000002 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.03 million edges/sec (just tricount itself)
L*U' time (dot):         0.000006 sec
tricount time:         0.000007 sec (dot product method)
tri+prep time:         0.000019 sec (incl time to compute L and U)
compute C time:        0.000006 sec
reduce (C) time:       0.000001 sec
rate       0.26 million edges/sec (incl time for U=triu(A))
rate       0.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 2 speedup 0.423729)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000027 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000001 sec
rate       0.19 million edges/sec (incl time for U=triu(A))
rate       0.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000056 sec (nthreads: 4 speedup 0.106383)
tricount time:         0.000058 sec (dot product method)
tri+prep time:         0.000070 sec (incl time to compute L and U)
compute C time:        0.000056 sec
reduce (C) time:       0.000002 sec
rate       0.07 million edges/sec (incl time for U=triu(A))
rate       0.09 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000040 sec
tricount time:         0.000041 sec (saxpy method)
tri+prep time:         0.000043 sec (incl time to compute L)
compute C time:        0.000040 sec
reduce (C) time:       0.000001 sec
rate       0.12 million edges/sec (incl time for L=tril(A))
rate       0.12 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000015 sec (nthreads: 2 speedup 2.66667)
tricount time:         0.000016 sec (saxpy method)
tri+prep time:         0.000018 sec (incl time to compute L)
compute C time:        0.000015 sec
reduce (C) time:       0.000001 sec
rate       0.28 million edges/sec (incl time for L=tril(A))
rate       0.31 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000011 sec (nthreads: 4 speedup 3.65217)
tricount time:         0.000013 sec (saxpy method)
tri+prep time:         0.000015 sec (incl time to compute L)
compute C time:        0.000011 sec
reduce (C) time:       0.000002 sec
rate       0.34 million edges/sec (incl time for L=tril(A))
rate       0.39 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 7 by 7, 16 entries, from stdin

total time to read A matrix:       0.000384 sec

n 7 # edges 8
U=triu(A) time:        0.000012 sec
L=tril(A) time:        0.000003 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000043 sec
tricount time:         0.000049 sec (dot product method)
tri+prep time:         0.000064 sec (incl time to compute L and U)
compute C time:        0.000043 sec
reduce (C) time:       0.000006 sec
rate       0.12 million edges/sec (incl time for U=triu(A))
rate       0.16 million edges/sec (just tricount itself)
L*U' time (dot):         0.000178 sec (nthreads: 2 speedup 0.240964)
tricount time:         0.000179 sec (dot product method)
tri+prep time:         0.000194 sec (incl time to compute L and U)
compute C time:        0.000178 sec
reduce (C) time:       0.000001 sec
rate       0.04 million edges/sec (incl time for U=triu(A))
rate       0.04 million edges/sec (just tricount itself)
L*U' time (dot):         0.000162 sec (nthreads: 4 speedup 0.264706)
tricount time:         0.000163 sec (dot product method)
tri+prep time:         0.000178 sec (incl time to compute L and U)
compute C time:        0.000162 sec
reduce (C) time:       0.000001 sec
rate       0.04 million edges/sec (incl time for U=triu(A))
rate       0.05 million edges/sec (just tricount itself)
L*U' time (dot):         0.000007 sec
tricount time:         0.000008 sec (dot product method)
tri+prep time:         0.000023 sec (incl time to compute L and U)
compute C time:        0.000007 sec
reduce (C) time:       0.000001 sec
rate       0.34 million edges/sec (incl time for U=triu(A))
rate       0.99 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec (nthreads: 2 speedup 0.508475)
tricount time:         0.000015 sec (dot product method)
tri+prep time:         0.000030 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000001 sec
rate       0.26 million edges/sec (incl time for U=triu(A))
rate       0.53 million edges/sec (just tricount itself)
L*U' time (dot):         0.000235 sec (nthreads: 4 speedup 0.030426)
tricount time:         0.000236 sec (dot product method)
tri+prep time:         0.000251 sec (incl time to compute L and U)
compute C time:        0.000235 sec
reduce (C) time:       0.000001 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.03 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000049 sec
tricount time:         0.000050 sec (saxpy method)
tri+prep time:         0.000053 sec (incl time to compute L)
compute C time:        0.000049 sec
reduce (C) time:       0.000001 sec
rate       0.15 million edges/sec (incl time for L=tril(A))
rate       0.16 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000015 sec (nthreads: 2 speedup 3.26984)
tricount time:         0.000016 sec (saxpy method)
tri+prep time:         0.000019 sec (incl time to compute L)
compute C time:        0.000015 sec
reduce (C) time:       0.000001 sec
rate       0.42 million edges/sec (incl time for L=tril(A))
rate       0.50 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000013 sec (nthreads: 4 speedup 3.81481)
tricount time:         0.000014 sec (saxpy method)
tri+prep time:         0.000017 sec (incl time to compute L)
compute C time:        0.000013 sec
reduce (C) time:       0.000001 sec
rate       0.47 million edges/sec (incl time for L=tril(A))
rate       0.58 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 304 by 304, 876 entries, from stdin

total time to read A matrix:       0.000597 sec

n 304 # edges 438
U=triu(A) time:        0.000025 sec
L=tril(A) time:        0.000018 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000058 sec
tricount time:         0.000066 sec (dot product method)
tri+prep time:         0.000109 sec (incl time to compute L and U)
compute C time:        0.000058 sec
reduce (C) time:       0.000008 sec
rate       4.01 million edges/sec (incl time for U=triu(A))
rate       6.63 million edges/sec (just tricount itself)
L*U' time (dot):         0.000203 sec (nthreads: 2 speedup 0.286722)
tricount time:         0.000204 sec (dot product method)
tri+prep time:         0.000247 sec (incl time to compute L and U)
compute C time:        0.000203 sec
reduce (C) time:       0.000001 sec
rate       1.77 million edges/sec (incl time for U=triu(A))
rate       2.15 million edges/sec (just tricount itself)
L*U' time (dot):         0.015200 sec (nthreads: 4 speedup 0.00382721)
tricount time:         0.015203 sec (dot product method)
tri+prep time:         0.015246 sec (incl time to compute L and U)
compute C time:        0.015200 sec
reduce (C) time:       0.000003 sec
rate       0.03 million edges/sec (incl time for U=triu(A))
rate       0.03 million edges/sec (just tricount itself)
L*U' time (dot):         0.000026 sec
tricount time:         0.000027 sec (dot product method)
tri+prep time:         0.000070 sec (incl time to compute L and U)
compute C time:        0.000026 sec
reduce (C) time:       0.000001 sec
rate       6.25 million edges/sec (incl time for U=triu(A))
rate      16.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000028 sec (nthreads: 2 speedup 0.923729)
tricount time:         0.000029 sec (dot product method)
tri+prep time:         0.000072 sec (incl time to compute L and U)
compute C time:        0.000028 sec
reduce (C) time:       0.000001 sec
rate       6.06 million edges/sec (incl time for U=triu(A))
rate      15.06 million edges/sec (just tricount itself)
L*U' time (dot):         0.000033 sec (nthreads: 4 speedup 0.789855)
tricount time:         0.000034 sec (dot product method)
tri+prep time:         0.000077 sec (incl time to compute L and U)
compute C time:        0.000033 sec
reduce (C) time:       0.000001 sec
rate       5.67 million edges/sec (incl time for U=triu(A))
rate      12.85 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000072 sec
tricount time:         0.000073 sec (saxpy method)
tri+prep time:         0.000091 sec (incl time to compute L)
compute C time:        0.000072 sec
reduce (C) time:       0.000001 sec
rate       4.81 million edges/sec (incl time for L=tril(A))
rate       6.00 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000031 sec (nthreads: 2 speedup 2.32308)
tricount time:         0.000032 sec (saxpy method)
tri+prep time:         0.000050 sec (incl time to compute L)
compute C time:        0.000031 sec
reduce (C) time:       0.000001 sec
rate       8.75 million edges/sec (incl time for L=tril(A))
rate      13.71 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000030 sec (nthreads: 4 speedup 2.39683)
tricount time:         0.000031 sec (saxpy method)
tri+prep time:         0.000049 sec (incl time to compute L)
compute C time:        0.000030 sec
reduce (C) time:       0.000001 sec
rate       8.92 million edges/sec (incl time for L=tril(A))
rate      14.13 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 48 by 48, 352 entries, from stdin

total time to read A matrix:       0.000475 sec

n 48 # edges 176
U=triu(A) time:        0.000020 sec
L=tril(A) time:        0.000007 sec

------------------------------------- dot product method:
# triangles 160
L*U' time (dot):         0.000059 sec
tricount time:         0.000066 sec (dot product method)
tri+prep time:         0.000093 sec (incl time to compute L and U)
compute C time:        0.000059 sec
reduce (C) time:       0.000007 sec
rate       1.89 million edges/sec (incl time for U=triu(A))
rate       2.67 million edges/sec (just tricount itself)
L*U' time (dot):         0.000176 sec (nthreads: 2 speedup 0.334688)
tricount time:         0.000178 sec (dot product method)
tri+prep time:         0.000205 sec (incl time to compute L and U)
compute C time:        0.000176 sec
reduce (C) time:       0.000002 sec
rate       0.86 million edges/sec (incl time for U=triu(A))
rate       0.99 million edges/sec (just tricount itself)
L*U' time (dot):         0.000185 sec (nthreads: 4 speedup 0.318299)
tricount time:         0.000187 sec (dot product method)
tri+prep time:         0.000214 sec (incl time to compute L and U)
compute C time:        0.000185 sec
reduce (C) time:       0.000002 sec
rate       0.82 million edges/sec (incl time for U=triu(A))
rate       0.94 million edges/sec (just tricount itself)
L*U' time (dot):         0.000014 sec
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000043 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000002 sec
rate       4.08 million edges/sec (incl time for U=triu(A))
rate      11.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.000019 sec (nthreads: 2 speedup 0.7375)
tricount time:         0.000043 sec (dot product method)
tri+prep time:         0.000070 sec (incl time to compute L and U)
compute C time:        0.000019 sec
reduce (C) time:       0.000024 sec
rate       2.51 million edges/sec (incl time for U=triu(A))
rate       4.10 million edges/sec (just tricount itself)
L*U' time (dot):         0.000070 sec (nthreads: 4 speedup 0.201365)
tricount time:         0.000072 sec (dot product method)
tri+prep time:         0.000099 sec (incl time to compute L and U)
compute C time:        0.000070 sec
reduce (C) time:       0.000002 sec
rate       1.77 million edges/sec (incl time for U=triu(A))
rate       2.44 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000039 sec
tricount time:         0.000041 sec (saxpy method)
tri+prep time:         0.000048 sec (incl time to compute L)
compute C time:        0.000039 sec
reduce (C) time:       0.000002 sec
rate       3.65 million edges/sec (incl time for L=tril(A))
rate       4.29 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000018 sec (nthreads: 2 speedup 2.15789)
tricount time:         0.000020 sec (saxpy method)
tri+prep time:         0.000027 sec (incl time to compute L)
compute C time:        0.000018 sec
reduce (C) time:       0.000002 sec
rate       6.48 million edges/sec (incl time for L=tril(A))
rate       8.79 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000013 sec (nthreads: 4 speedup 3.03704)
tricount time:         0.000015 sec (saxpy method)
tri+prep time:         0.000022 sec (incl time to compute L)
compute C time:        0.000013 sec
reduce (C) time:       0.000002 sec
rate       7.94 million edges/sec (incl time for L=tril(A))
rate      11.72 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 4884 by 4884, 285494 entries, from stdin

total time to read A matrix:       0.085773 sec

n 4884 # edges 142747
U=triu(A) time:        0.001010 sec
L=tril(A) time:        0.001398 sec

------------------------------------- dot product method:
# triangles 1512964
L*U' time (dot):         0.012158 sec
tricount time:         0.012711 sec (dot product method)
tri+prep time:         0.015119 sec (incl time to compute L and U)
compute C time:        0.012158 sec
reduce (C) time:       0.000553 sec
rate       9.44 million edges/sec (incl time for U=triu(A))
rate      11.23 million edges/sec (just tricount itself)
L*U' time (dot):         0.007211 sec (nthreads: 2 speedup 1.68603)
tricount time:         0.007774 sec (dot product method)
tri+prep time:         0.010182 sec (incl time to compute L and U)
compute C time:        0.007211 sec
reduce (C) time:       0.000563 sec
rate      14.02 million edges/sec (incl time for U=triu(A))
rate      18.36 million edges/sec (just tricount itself)
L*U' time (dot):         0.005506 sec (nthreads: 4 speedup 2.20811)
tricount time:         0.006427 sec (dot product method)
tri+prep time:         0.008835 sec (incl time to compute L and U)
compute C time:        0.005506 sec
reduce (C) time:       0.000921 sec
rate      16.16 million edges/sec (incl time for U=triu(A))
rate      22.21 million edges/sec (just tricount itself)
L*U' time (dot):         0.020503 sec
tricount time:         0.021368 sec (dot product method)
tri+prep time:         0.023776 sec (incl time to compute L and U)
compute C time:        0.020503 sec
reduce (C) time:       0.000865 sec
rate       6.00 million edges/sec (incl time for U=triu(A))
rate       6.68 million edges/sec (just tricount itself)
L*U' time (dot):         0.011593 sec (nthreads: 2 speedup 1.76859)
tricount time:         0.012700 sec (dot product method)
tri+prep time:         0.015108 sec (incl time to compute L and U)
compute C time:        0.011593 sec
reduce (C) time:       0.001107 sec
rate       9.45 million edges/sec (incl time for U=triu(A))
rate      11.24 million edges/sec (just tricount itself)
L*U' time (dot):         0.006306 sec (nthreads: 4 speedup 3.25139)
tricount time:         0.007172 sec (dot product method)
tri+prep time:         0.009580 sec (incl time to compute L and U)
compute C time:        0.006306 sec
reduce (C) time:       0.000866 sec
rate      14.90 million edges/sec (incl time for U=triu(A))
rate      19.90 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.013432 sec
tricount time:         0.014290 sec (saxpy method)
tri+prep time:         0.015688 sec (incl time to compute L)
compute C time:        0.013432 sec
reduce (C) time:       0.000858 sec
rate       9.10 million edges/sec (incl time for L=tril(A))
rate       9.99 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.014908 sec (nthreads: 2 speedup 0.900974)
tricount time:         0.015787 sec (saxpy method)
tri+prep time:         0.017185 sec (incl time to compute L)
compute C time:        0.014908 sec
reduce (C) time:       0.000879 sec
rate       8.31 million edges/sec (incl time for L=tril(A))
rate       9.04 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.004582 sec (nthreads: 4 speedup 2.93147)
tricount time:         0.005554 sec (saxpy method)
tri+prep time:         0.006952 sec (incl time to compute L)
compute C time:        0.004582 sec
reduce (C) time:       0.000972 sec
rate      20.53 million edges/sec (incl time for L=tril(A))
rate      25.70 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 183 by 183, 1402 entries, from stdin

total time to read A matrix:       0.000974 sec

n 183 # edges 701
U=triu(A) time:        0.000018 sec
L=tril(A) time:        0.000008 sec

------------------------------------- dot product method:
# triangles 863
L*U' time (dot):         0.000084 sec
tricount time:         0.000091 sec (dot product method)
tri+prep time:         0.000117 sec (incl time to compute L and U)
compute C time:        0.000084 sec
reduce (C) time:       0.000007 sec
rate       5.99 million edges/sec (incl time for U=triu(A))
rate       7.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000195 sec (nthreads: 2 speedup 0.43154)
tricount time:         0.000202 sec (dot product method)
tri+prep time:         0.000228 sec (incl time to compute L and U)
compute C time:        0.000195 sec
reduce (C) time:       0.000007 sec
rate       3.08 million edges/sec (incl time for U=triu(A))
rate       3.47 million edges/sec (just tricount itself)
L*U' time (dot):         0.000203 sec (nthreads: 4 speedup 0.414806)
tricount time:         0.000208 sec (dot product method)
tri+prep time:         0.000234 sec (incl time to compute L and U)
compute C time:        0.000203 sec
reduce (C) time:       0.000005 sec
rate       3.00 million edges/sec (incl time for U=triu(A))
rate       3.37 million edges/sec (just tricount itself)
L*U' time (dot):         0.000073 sec
tricount time:         0.000079 sec (dot product method)
tri+prep time:         0.000105 sec (incl time to compute L and U)
compute C time:        0.000073 sec
reduce (C) time:       0.000006 sec
rate       6.67 million edges/sec (incl time for U=triu(A))
rate       8.86 million edges/sec (just tricount itself)
L*U' time (dot):         0.000048 sec (nthreads: 2 speedup 1.51485)
tricount time:         0.000051 sec (dot product method)
tri+prep time:         0.000077 sec (incl time to compute L and U)
compute C time:        0.000048 sec
reduce (C) time:       0.000003 sec
rate       9.07 million edges/sec (incl time for U=triu(A))
rate      13.68 million edges/sec (just tricount itself)
L*U' time (dot):         0.000043 sec (nthreads: 4 speedup 1.69061)
tricount time:         0.000046 sec (dot product method)
tri+prep time:         0.000072 sec (incl time to compute L and U)
compute C time:        0.000043 sec
reduce (C) time:       0.000003 sec
rate       9.74 million edges/sec (incl time for U=triu(A))
rate      15.23 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000060 sec
tricount time:         0.000063 sec (saxpy method)
tri+prep time:         0.000071 sec (incl time to compute L)
compute C time:        0.000060 sec
reduce (C) time:       0.000003 sec
rate       9.90 million edges/sec (incl time for L=tril(A))
rate      11.14 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000038 sec (nthreads: 2 speedup 1.57862)
tricount time:         0.000041 sec (saxpy method)
tri+prep time:         0.000049 sec (incl time to compute L)
compute C time:        0.000038 sec
reduce (C) time:       0.000003 sec
rate      14.34 million edges/sec (incl time for L=tril(A))
rate      17.09 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000032 sec (nthreads: 4 speedup 1.87313)
tricount time:         0.000035 sec (saxpy method)
tri+prep time:         0.000043 sec (incl time to compute L)
compute C time:        0.000032 sec
reduce (C) time:       0.000003 sec
rate      16.43 million edges/sec (incl time for L=tril(A))
rate      20.14 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000504 sec

n 63 # edges 123
U=triu(A) time:        0.000017 sec
L=tril(A) time:        0.000011 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000061 sec
tricount time:         0.000077 sec (dot product method)
tri+prep time:         0.000105 sec (incl time to compute L and U)
compute C time:        0.000061 sec
reduce (C) time:       0.000016 sec
rate       1.18 million edges/sec (incl time for U=triu(A))
rate       1.60 million edges/sec (just tricount itself)
L*U' time (dot):         0.000213 sec (nthreads: 2 speedup 0.285554)
tricount time:         0.000214 sec (dot product method)
tri+prep time:         0.000242 sec (incl time to compute L and U)
compute C time:        0.000213 sec
reduce (C) time:       0.000001 sec
rate       0.51 million edges/sec (incl time for U=triu(A))
rate       0.57 million edges/sec (just tricount itself)
L*U' time (dot):         0.000174 sec (nthreads: 4 speedup 0.349315)
tricount time:         0.000176 sec (dot product method)
tri+prep time:         0.000204 sec (incl time to compute L and U)
compute C time:        0.000174 sec
reduce (C) time:       0.000002 sec
rate       0.60 million edges/sec (incl time for U=triu(A))
rate       0.70 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec
tricount time:         0.000010 sec (dot product method)
tri+prep time:         0.000038 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000002 sec
rate       3.24 million edges/sec (incl time for U=triu(A))
rate      12.28 million edges/sec (just tricount itself)
L*U' time (dot):         0.000104 sec (nthreads: 2 speedup 0.0779817)
tricount time:         0.000105 sec (dot product method)
tri+prep time:         0.000133 sec (incl time to compute L and U)
compute C time:        0.000104 sec
reduce (C) time:       0.000001 sec
rate       0.92 million edges/sec (incl time for U=triu(A))
rate       1.17 million edges/sec (just tricount itself)
L*U' time (dot):         0.000021 sec (nthreads: 4 speedup 0.386364)
tricount time:         0.000022 sec (dot product method)
tri+prep time:         0.000050 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000001 sec
rate       2.47 million edges/sec (incl time for U=triu(A))
rate       5.61 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000060 sec
tricount time:         0.000061 sec (saxpy method)
tri+prep time:         0.000072 sec (incl time to compute L)
compute C time:        0.000060 sec
reduce (C) time:       0.000001 sec
rate       1.71 million edges/sec (incl time for L=tril(A))
rate       2.02 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000018 sec (nthreads: 2 speedup 3.31579)
tricount time:         0.000019 sec (saxpy method)
tri+prep time:         0.000030 sec (incl time to compute L)
compute C time:        0.000018 sec
reduce (C) time:       0.000001 sec
rate       4.09 million edges/sec (incl time for L=tril(A))
rate       6.45 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000017 sec (nthreads: 4 speedup 3.5493)
tricount time:         0.000018 sec (saxpy method)
tri+prep time:         0.000029 sec (incl time to compute L)
compute C time:        0.000017 sec
reduce (C) time:       0.000001 sec
rate       4.26 million edges/sec (incl time for L=tril(A))
rate       6.88 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000423 sec

n 63 # edges 123
U=triu(A) time:        0.000018 sec
L=tril(A) time:        0.000009 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000053 sec
tricount time:         0.000062 sec (dot product method)
tri+prep time:         0.000089 sec (incl time to compute L and U)
compute C time:        0.000053 sec
reduce (C) time:       0.000009 sec
rate       1.38 million edges/sec (incl time for U=triu(A))
rate       1.98 million edges/sec (just tricount itself)
L*U' time (dot):         0.000196 sec (nthreads: 2 speedup 0.27096)
tricount time:         0.000197 sec (dot product method)
tri+prep time:         0.000224 sec (incl time to compute L and U)
compute C time:        0.000196 sec
reduce (C) time:       0.000001 sec
rate       0.55 million edges/sec (incl time for U=triu(A))
rate       0.62 million edges/sec (just tricount itself)
L*U' time (dot):         0.006259 sec (nthreads: 4 speedup 0.00849459)
tricount time:         0.006261 sec (dot product method)
tri+prep time:         0.006288 sec (incl time to compute L and U)
compute C time:        0.006259 sec
reduce (C) time:       0.000002 sec
rate       0.02 million edges/sec (incl time for U=triu(A))
rate       0.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.000013 sec
tricount time:         0.000014 sec (dot product method)
tri+prep time:         0.000041 sec (incl time to compute L and U)
compute C time:        0.000013 sec
reduce (C) time:       0.000001 sec
rate       3.00 million edges/sec (incl time for U=triu(A))
rate       8.89 million edges/sec (just tricount itself)
L*U' time (dot):         0.000021 sec (nthreads: 2 speedup 0.613636)
tricount time:         0.000023 sec (dot product method)
tri+prep time:         0.000050 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000002 sec
rate       2.46 million edges/sec (incl time for U=triu(A))
rate       5.37 million edges/sec (just tricount itself)
L*U' time (dot):         0.000024 sec (nthreads: 4 speedup 0.54)
tricount time:         0.000026 sec (dot product method)
tri+prep time:         0.000053 sec (incl time to compute L and U)
compute C time:        0.000024 sec
reduce (C) time:       0.000002 sec
rate       2.31 million edges/sec (incl time for U=triu(A))
rate       4.73 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000071 sec
tricount time:         0.000073 sec (saxpy method)
tri+prep time:         0.000082 sec (incl time to compute L)
compute C time:        0.000071 sec
reduce (C) time:       0.000002 sec
rate       1.50 million edges/sec (incl time for L=tril(A))
rate       1.68 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000027 sec (nthreads: 2 speedup 2.63717)
tricount time:         0.000029 sec (saxpy method)
tri+prep time:         0.000038 sec (incl time to compute L)
compute C time:        0.000027 sec
reduce (C) time:       0.000002 sec
rate       3.22 million edges/sec (incl time for L=tril(A))
rate       4.23 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000023 sec (nthreads: 4 speedup 3.10417)
tricount time:         0.000025 sec (saxpy method)
tri+prep time:         0.000034 sec (incl time to compute L)
compute C time:        0.000023 sec
reduce (C) time:       0.000002 sec
rate       3.63 million edges/sec (incl time for L=tril(A))
rate       4.96 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 78 by 78, 204 entries, from stdin

total time to read A matrix:       0.000424 sec

n 78 # edges 102
U=triu(A) time:        0.000015 sec
L=tril(A) time:        0.000005 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000046 sec
tricount time:         0.000052 sec (dot product method)
tri+prep time:         0.000072 sec (incl time to compute L and U)
compute C time:        0.000046 sec
reduce (C) time:       0.000006 sec
rate       1.42 million edges/sec (incl time for U=triu(A))
rate       1.96 million edges/sec (just tricount itself)
L*U' time (dot):         0.000136 sec (nthreads: 2 speedup 0.338596)
tricount time:         0.000138 sec (dot product method)
tri+prep time:         0.000158 sec (incl time to compute L and U)
compute C time:        0.000136 sec
reduce (C) time:       0.000002 sec
rate       0.65 million edges/sec (incl time for U=triu(A))
rate       0.74 million edges/sec (just tricount itself)
L*U' time (dot):         0.000166 sec (nthreads: 4 speedup 0.277299)
tricount time:         0.000168 sec (dot product method)
tri+prep time:         0.000188 sec (incl time to compute L and U)
compute C time:        0.000166 sec
reduce (C) time:       0.000002 sec
rate       0.54 million edges/sec (incl time for U=triu(A))
rate       0.61 million edges/sec (just tricount itself)
L*U' time (dot):         0.000008 sec
tricount time:         0.000009 sec (dot product method)
tri+prep time:         0.000029 sec (incl time to compute L and U)
compute C time:        0.000008 sec
reduce (C) time:       0.000001 sec
rate       3.51 million edges/sec (incl time for U=triu(A))
rate      11.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.000015 sec (nthreads: 2 speedup 0.539683)
tricount time:         0.000016 sec (dot product method)
tri+prep time:         0.000036 sec (incl time to compute L and U)
compute C time:        0.000015 sec
reduce (C) time:       0.000001 sec
rate       2.83 million edges/sec (incl time for U=triu(A))
rate       6.39 million edges/sec (just tricount itself)
L*U' time (dot):         0.000072 sec (nthreads: 4 speedup 0.112583)
tricount time:         0.000074 sec (dot product method)
tri+prep time:         0.000094 sec (incl time to compute L and U)
compute C time:        0.000072 sec
reduce (C) time:       0.000002 sec
rate       1.09 million edges/sec (incl time for U=triu(A))
rate       1.38 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000061 sec
tricount time:         0.000062 sec (saxpy method)
tri+prep time:         0.000067 sec (incl time to compute L)
compute C time:        0.000061 sec
reduce (C) time:       0.000001 sec
rate       1.52 million edges/sec (incl time for L=tril(A))
rate       1.65 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000020 sec (nthreads: 2 speedup 3.04762)
tricount time:         0.000021 sec (saxpy method)
tri+prep time:         0.000026 sec (incl time to compute L)
compute C time:        0.000020 sec
reduce (C) time:       0.000001 sec
rate       3.92 million edges/sec (incl time for L=tril(A))
rate       4.86 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000016 sec (nthreads: 4 speedup 3.8209)
tricount time:         0.000017 sec (saxpy method)
tri+prep time:         0.000022 sec (incl time to compute L)
compute C time:        0.000016 sec
reduce (C) time:       0.000001 sec
rate       4.65 million edges/sec (incl time for L=tril(A))
rate       6.03 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 982 by 982, 99840 entries, from stdin

total time to read A matrix:       0.036318 sec

n 982 # edges 49920
U=triu(A) time:        0.000516 sec
L=tril(A) time:        0.000495 sec

------------------------------------- dot product method:
# triangles 0
L*U' time (dot):         0.000459 sec
tricount time:         0.000473 sec (dot product method)
tri+prep time:         0.001484 sec (incl time to compute L and U)
compute C time:        0.000459 sec
reduce (C) time:       0.000014 sec
rate      33.65 million edges/sec (incl time for U=triu(A))
rate     105.59 million edges/sec (just tricount itself)
L*U' time (dot):         0.000555 sec (nthreads: 2 speedup 0.82689)
tricount time:         0.000556 sec (dot product method)
tri+prep time:         0.001567 sec (incl time to compute L and U)
compute C time:        0.000555 sec
reduce (C) time:       0.000001 sec
rate      31.86 million edges/sec (incl time for U=triu(A))
rate      89.79 million edges/sec (just tricount itself)
L*U' time (dot):         0.000318 sec (nthreads: 4 speedup 1.44303)
tricount time:         0.000320 sec (dot product method)
tri+prep time:         0.001331 sec (incl time to compute L and U)
compute C time:        0.000318 sec
reduce (C) time:       0.000002 sec
rate      37.51 million edges/sec (incl time for U=triu(A))
rate     156.02 million edges/sec (just tricount itself)
L*U' time (dot):         0.000323 sec
tricount time:         0.000325 sec (dot product method)
tri+prep time:         0.001336 sec (incl time to compute L and U)
compute C time:        0.000323 sec
reduce (C) time:       0.000002 sec
rate      37.37 million edges/sec (incl time for U=triu(A))
rate     153.62 million edges/sec (just tricount itself)
L*U' time (dot):         0.000181 sec (nthreads: 2 speedup 1.78393)
tricount time:         0.000182 sec (dot product method)
tri+prep time:         0.001193 sec (incl time to compute L and U)
compute C time:        0.000181 sec
reduce (C) time:       0.000001 sec
rate      41.85 million edges/sec (incl time for U=triu(A))
rate     274.42 million edges/sec (just tricount itself)
L*U' time (dot):         0.000139 sec (nthreads: 4 speedup 2.32247)
tricount time:         0.000141 sec (dot product method)
tri+prep time:         0.001152 sec (incl time to compute L and U)
compute C time:        0.000139 sec
reduce (C) time:       0.000002 sec
rate      43.33 million edges/sec (incl time for U=triu(A))
rate     353.68 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000290 sec
tricount time:         0.000291 sec (saxpy method)
tri+prep time:         0.000786 sec (incl time to compute L)
compute C time:        0.000290 sec
reduce (C) time:       0.000001 sec
rate      63.51 million edges/sec (incl time for L=tril(A))
rate     171.48 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000232 sec (nthreads: 2 speedup 1.24974)
tricount time:         0.000233 sec (saxpy method)
tri+prep time:         0.000728 sec (incl time to compute L)
compute C time:        0.000232 sec
reduce (C) time:       0.000001 sec
rate      68.56 million edges/sec (incl time for L=tril(A))
rate     214.09 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000486 sec (nthreads: 4 speedup 0.596371)
tricount time:         0.000487 sec (saxpy method)
tri+prep time:         0.000982 sec (incl time to compute L)
compute C time:        0.000486 sec
reduce (C) time:       0.000001 sec
rate      50.83 million edges/sec (incl time for L=tril(A))
rate     102.49 million edges/sec (just tricount itself)

--------------------------------------------------------------
matrix 67 by 67, 574 entries, from stdin

total time to read A matrix:       0.000464 sec

n 67 # edges 287
U=triu(A) time:        0.000017 sec
L=tril(A) time:        0.000011 sec

------------------------------------- dot product method:
# triangles 120
L*U' time (dot):         0.000050 sec
tricount time:         0.000057 sec (dot product method)
tri+prep time:         0.000085 sec (incl time to compute L and U)
compute C time:        0.000050 sec
reduce (C) time:       0.000007 sec
rate       3.38 million edges/sec (incl time for U=triu(A))
rate       5.04 million edges/sec (just tricount itself)
L*U' time (dot):         0.000158 sec (nthreads: 2 speedup 0.316742)
tricount time:         0.000160 sec (dot product method)
tri+prep time:         0.000188 sec (incl time to compute L and U)
compute C time:        0.000158 sec
reduce (C) time:       0.000002 sec
rate       1.53 million edges/sec (incl time for U=triu(A))
rate       1.79 million edges/sec (just tricount itself)
L*U' time (dot):         0.000263 sec (nthreads: 4 speedup 0.19039)
tricount time:         0.000265 sec (dot product method)
tri+prep time:         0.000293 sec (incl time to compute L and U)
compute C time:        0.000263 sec
reduce (C) time:       0.000002 sec
rate       0.98 million edges/sec (incl time for U=triu(A))
rate       1.08 million edges/sec (just tricount itself)
L*U' time (dot):         0.000018 sec
tricount time:         0.000020 sec (dot product method)
tri+prep time:         0.000048 sec (incl time to compute L and U)
compute C time:        0.000018 sec
reduce (C) time:       0.000002 sec
rate       5.99 million edges/sec (incl time for U=triu(A))
rate      14.33 million edges/sec (just tricount itself)
L*U' time (dot):         0.000023 sec (nthreads: 2 speedup 0.78125)
tricount time:         0.000025 sec (dot product method)
tri+prep time:         0.000053 sec (incl time to compute L and U)
compute C time:        0.000023 sec
reduce (C) time:       0.000002 sec
rate       5.42 million edges/sec (incl time for U=triu(A))
rate      11.46 million edges/sec (just tricount itself)
L*U' time (dot):         0.000082 sec (nthreads: 4 speedup 0.218023)
tricount time:         0.000084 sec (dot product method)
tri+prep time:         0.000112 sec (incl time to compute L and U)
compute C time:        0.000082 sec
reduce (C) time:       0.000002 sec
rate       2.56 million edges/sec (incl time for U=triu(A))
rate       3.41 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.000043 sec
tricount time:         0.000044 sec (saxpy method)
tri+prep time:         0.000055 sec (incl time to compute L)
compute C time:        0.000043 sec
reduce (C) time:       0.000001 sec
rate       5.23 million edges/sec (incl time for L=tril(A))
rate       6.54 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000020 sec (nthreads: 2 speedup 2.16867)
tricount time:         0.000021 sec (saxpy method)
tri+prep time:         0.000032 sec (incl time to compute L)
compute C time:        0.000020 sec
reduce (C) time:       0.000001 sec
rate       8.98 million edges/sec (incl time for L=tril(A))
rate      13.68 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.000016 sec (nthreads: 4 speedup 2.68657)
tricount time:         0.000018 sec (saxpy method)
tri+prep time:         0.000029 sec (incl time to compute L)
compute C time:        0.000016 sec
reduce (C) time:       0.000002 sec
rate       9.87 million edges/sec (incl time for L=tril(A))
rate      15.84 million edges/sec (just tricount itself)

--------------------------------------------------------------
Wathen: nx 200 ny 200 n 120801 nz 1762400 method 0, time: 0.361 sec

total time to read A matrix:       0.367014 sec

n 120801 # edges 881200
U=triu(A) time:        0.008919 sec
L=tril(A) time:        0.007754 sec

------------------------------------- dot product method:
# triangles 2160400
L*U' time (dot):         0.020168 sec
tricount time:         0.022905 sec (dot product method)
tri+prep time:         0.039578 sec (incl time to compute L and U)
compute C time:        0.020168 sec
reduce (C) time:       0.002737 sec
rate      22.26 million edges/sec (incl time for U=triu(A))
rate      38.47 million edges/sec (just tricount itself)
L*U' time (dot):         0.019408 sec (nthreads: 2 speedup 1.03916)
tricount time:         0.024288 sec (dot product method)
tri+prep time:         0.040961 sec (incl time to compute L and U)
compute C time:        0.019408 sec
reduce (C) time:       0.004880 sec
rate      21.51 million edges/sec (incl time for U=triu(A))
rate      36.28 million edges/sec (just tricount itself)
L*U' time (dot):         0.032322 sec (nthreads: 4 speedup 0.623975)
tricount time:         0.038000 sec (dot product method)
tri+prep time:         0.054673 sec (incl time to compute L and U)
compute C time:        0.032322 sec
reduce (C) time:       0.005678 sec
rate      16.12 million edges/sec (incl time for U=triu(A))
rate      23.19 million edges/sec (just tricount itself)
L*U' time (dot):         0.035831 sec
tricount time:         0.041463 sec (dot product method)
tri+prep time:         0.058136 sec (incl time to compute L and U)
compute C time:        0.035831 sec
reduce (C) time:       0.005632 sec
rate      15.16 million edges/sec (incl time for U=triu(A))
rate      21.25 million edges/sec (just tricount itself)
L*U' time (dot):         0.029178 sec (nthreads: 2 speedup 1.22802)
tricount time:         0.034386 sec (dot product method)
tri+prep time:         0.051059 sec (incl time to compute L and U)
compute C time:        0.029178 sec
reduce (C) time:       0.005208 sec
rate      17.26 million edges/sec (incl time for U=triu(A))
rate      25.63 million edges/sec (just tricount itself)
L*U' time (dot):         0.025059 sec (nthreads: 4 speedup 1.42987)
tricount time:         0.030037 sec (dot product method)
tri+prep time:         0.046710 sec (incl time to compute L and U)
compute C time:        0.025059 sec
reduce (C) time:       0.004978 sec
rate      18.87 million edges/sec (incl time for U=triu(A))
rate      29.34 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.026946 sec
tricount time:         0.031642 sec (saxpy method)
tri+prep time:         0.039396 sec (incl time to compute L)
compute C time:        0.026946 sec
reduce (C) time:       0.004696 sec
rate      22.37 million edges/sec (incl time for L=tril(A))
rate      27.85 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.035613 sec (nthreads: 2 speedup 0.756634)
tricount time:         0.041430 sec (saxpy method)
tri+prep time:         0.049184 sec (incl time to compute L)
compute C time:        0.035613 sec
reduce (C) time:       0.005817 sec
rate      17.92 million edges/sec (incl time for L=tril(A))
rate      21.27 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.018870 sec (nthreads: 4 speedup 1.42799)
tricount time:         0.023266 sec (saxpy method)
tri+prep time:         0.031020 sec (incl time to compute L)
compute C time:        0.018870 sec
reduce (C) time:       0.004396 sec
rate      28.41 million edges/sec (incl time for L=tril(A))
rate      37.87 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 0 time 0.041 sec

total time to read A matrix:       0.041746 sec

n 10000 # edges 99884
U=triu(A) time:        0.001239 sec
L=tril(A) time:        0.001106 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.009944 sec
tricount time:         0.009988 sec (dot product method)
tri+prep time:         0.012333 sec (incl time to compute L and U)
compute C time:        0.009944 sec
reduce (C) time:       0.000044 sec
rate       8.10 million edges/sec (incl time for U=triu(A))
rate      10.00 million edges/sec (just tricount itself)
L*U' time (dot):         0.007189 sec (nthreads: 2 speedup 1.38321)
tricount time:         0.007197 sec (dot product method)
tri+prep time:         0.009542 sec (incl time to compute L and U)
compute C time:        0.007189 sec
reduce (C) time:       0.000008 sec
rate      10.47 million edges/sec (incl time for U=triu(A))
rate      13.88 million edges/sec (just tricount itself)
L*U' time (dot):         0.003809 sec (nthreads: 4 speedup 2.61067)
tricount time:         0.003820 sec (dot product method)
tri+prep time:         0.006165 sec (incl time to compute L and U)
compute C time:        0.003809 sec
reduce (C) time:       0.000011 sec
rate      16.20 million edges/sec (incl time for U=triu(A))
rate      26.15 million edges/sec (just tricount itself)
L*U' time (dot):         0.011013 sec
tricount time:         0.011024 sec (dot product method)
tri+prep time:         0.013369 sec (incl time to compute L and U)
compute C time:        0.011013 sec
reduce (C) time:       0.000011 sec
rate       7.47 million edges/sec (incl time for U=triu(A))
rate       9.06 million edges/sec (just tricount itself)
L*U' time (dot):         0.025557 sec (nthreads: 2 speedup 0.43091)
tricount time:         0.025573 sec (dot product method)
tri+prep time:         0.027918 sec (incl time to compute L and U)
compute C time:        0.025557 sec
reduce (C) time:       0.000016 sec
rate       3.58 million edges/sec (incl time for U=triu(A))
rate       3.91 million edges/sec (just tricount itself)
L*U' time (dot):         0.004515 sec (nthreads: 4 speedup 2.43919)
tricount time:         0.004526 sec (dot product method)
tri+prep time:         0.006871 sec (incl time to compute L and U)
compute C time:        0.004515 sec
reduce (C) time:       0.000011 sec
rate      14.54 million edges/sec (incl time for U=triu(A))
rate      22.07 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.004006 sec
tricount time:         0.004020 sec (saxpy method)
tri+prep time:         0.005126 sec (incl time to compute L)
compute C time:        0.004006 sec
reduce (C) time:       0.000014 sec
rate      19.49 million edges/sec (incl time for L=tril(A))
rate      24.85 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.004439 sec (nthreads: 2 speedup 0.90246)
tricount time:         0.004454 sec (saxpy method)
tri+prep time:         0.005560 sec (incl time to compute L)
compute C time:        0.004439 sec
reduce (C) time:       0.000015 sec
rate      17.97 million edges/sec (incl time for L=tril(A))
rate      22.43 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.004418 sec (nthreads: 4 speedup 0.906697)
tricount time:         0.004432 sec (saxpy method)
tri+prep time:         0.005538 sec (incl time to compute L)
compute C time:        0.004418 sec
reduce (C) time:       0.000014 sec
rate      18.04 million edges/sec (incl time for L=tril(A))
rate      22.54 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 10000 by 10000, nz: 199768, method 1 time 0.034 sec

total time to read A matrix:       0.034192 sec

n 10000 # edges 99884
U=triu(A) time:        0.000916 sec
L=tril(A) time:        0.000724 sec

------------------------------------- dot product method:
# triangles 1357
L*U' time (dot):         0.008846 sec
tricount time:         0.008868 sec (dot product method)
tri+prep time:         0.010508 sec (incl time to compute L and U)
compute C time:        0.008846 sec
reduce (C) time:       0.000022 sec
rate       9.51 million edges/sec (incl time for U=triu(A))
rate      11.26 million edges/sec (just tricount itself)
L*U' time (dot):         0.005600 sec (nthreads: 2 speedup 1.57962)
tricount time:         0.005608 sec (dot product method)
tri+prep time:         0.007248 sec (incl time to compute L and U)
compute C time:        0.005600 sec
reduce (C) time:       0.000008 sec
rate      13.78 million edges/sec (incl time for U=triu(A))
rate      17.81 million edges/sec (just tricount itself)
L*U' time (dot):         0.004110 sec (nthreads: 4 speedup 2.15221)
tricount time:         0.004121 sec (dot product method)
tri+prep time:         0.005761 sec (incl time to compute L and U)
compute C time:        0.004110 sec
reduce (C) time:       0.000011 sec
rate      17.34 million edges/sec (incl time for U=triu(A))
rate      24.24 million edges/sec (just tricount itself)
L*U' time (dot):         0.010652 sec
tricount time:         0.010663 sec (dot product method)
tri+prep time:         0.012303 sec (incl time to compute L and U)
compute C time:        0.010652 sec
reduce (C) time:       0.000011 sec
rate       8.12 million edges/sec (incl time for U=triu(A))
rate       9.37 million edges/sec (just tricount itself)
L*U' time (dot):         0.015393 sec (nthreads: 2 speedup 0.691991)
tricount time:         0.015406 sec (dot product method)
tri+prep time:         0.017046 sec (incl time to compute L and U)
compute C time:        0.015393 sec
reduce (C) time:       0.000013 sec
rate       5.86 million edges/sec (incl time for U=triu(A))
rate       6.48 million edges/sec (just tricount itself)
L*U' time (dot):         0.007261 sec (nthreads: 4 speedup 1.46698)
tricount time:         0.007277 sec (dot product method)
tri+prep time:         0.008917 sec (incl time to compute L and U)
compute C time:        0.007261 sec
reduce (C) time:       0.000016 sec
rate      11.20 million edges/sec (incl time for U=triu(A))
rate      13.73 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         0.006811 sec
tricount time:         0.006827 sec (saxpy method)
tri+prep time:         0.007551 sec (incl time to compute L)
compute C time:        0.006811 sec
reduce (C) time:       0.000016 sec
rate      13.23 million edges/sec (incl time for L=tril(A))
rate      14.63 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.004310 sec (nthreads: 2 speedup 1.58021)
tricount time:         0.004325 sec (saxpy method)
tri+prep time:         0.005049 sec (incl time to compute L)
compute C time:        0.004310 sec
reduce (C) time:       0.000015 sec
rate      19.78 million edges/sec (incl time for L=tril(A))
rate      23.09 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         0.004029 sec (nthreads: 4 speedup 1.69056)
tricount time:         0.004042 sec (saxpy method)
tri+prep time:         0.004766 sec (incl time to compute L)
compute C time:        0.004029 sec
reduce (C) time:       0.000013 sec
rate      20.96 million edges/sec (incl time for L=tril(A))
rate      24.71 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 0 time 4.871 sec

total time to read A matrix:       5.017732 sec

n 100000 # edges 9990165
U=triu(A) time:        0.143974 sec
L=tril(A) time:        0.130548 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):         8.756354 sec
tricount time:         8.761693 sec (dot product method)
tri+prep time:         9.036215 sec (incl time to compute L and U)
compute C time:        8.756354 sec
reduce (C) time:       0.005339 sec
rate       1.11 million edges/sec (incl time for U=triu(A))
rate       1.14 million edges/sec (just tricount itself)
L*U' time (dot):         5.692100 sec (nthreads: 2 speedup 1.53833)
tricount time:         5.698333 sec (dot product method)
tri+prep time:         5.972855 sec (incl time to compute L and U)
compute C time:        5.692100 sec
reduce (C) time:       0.006233 sec
rate       1.67 million edges/sec (incl time for U=triu(A))
rate       1.75 million edges/sec (just tricount itself)
L*U' time (dot):         3.629455 sec (nthreads: 4 speedup 2.41258)
tricount time:         3.645561 sec (dot product method)
tri+prep time:         3.920083 sec (incl time to compute L and U)
compute C time:        3.629455 sec
reduce (C) time:       0.016106 sec
rate       2.55 million edges/sec (incl time for U=triu(A))
rate       2.74 million edges/sec (just tricount itself)
L*U' time (dot):         9.856422 sec
tricount time:         9.863095 sec (dot product method)
tri+prep time:        10.137617 sec (incl time to compute L and U)
compute C time:        9.856422 sec
reduce (C) time:       0.006673 sec
rate       0.99 million edges/sec (incl time for U=triu(A))
rate       1.01 million edges/sec (just tricount itself)
L*U' time (dot):         5.511954 sec (nthreads: 2 speedup 1.78819)
tricount time:         5.518286 sec (dot product method)
tri+prep time:         5.792808 sec (incl time to compute L and U)
compute C time:        5.511954 sec
reduce (C) time:       0.006332 sec
rate       1.72 million edges/sec (incl time for U=triu(A))
rate       1.81 million edges/sec (just tricount itself)
L*U' time (dot):         3.847059 sec (nthreads: 4 speedup 2.56207)
tricount time:         3.856087 sec (dot product method)
tri+prep time:         4.130609 sec (incl time to compute L and U)
compute C time:        3.847059 sec
reduce (C) time:       0.009028 sec
rate       2.42 million edges/sec (incl time for U=triu(A))
rate       2.59 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         3.099206 sec
tricount time:         3.107711 sec (saxpy method)
tri+prep time:         3.238259 sec (incl time to compute L)
compute C time:        3.099206 sec
reduce (C) time:       0.008505 sec
rate       3.09 million edges/sec (incl time for L=tril(A))
rate       3.21 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.771954 sec (nthreads: 2 speedup 1.74903)
tricount time:         1.778033 sec (saxpy method)
tri+prep time:         1.908581 sec (incl time to compute L)
compute C time:        1.771954 sec
reduce (C) time:       0.006079 sec
rate       5.23 million edges/sec (incl time for L=tril(A))
rate       5.62 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.557983 sec (nthreads: 4 speedup 1.98924)
tricount time:         1.566516 sec (saxpy method)
tri+prep time:         1.697064 sec (incl time to compute L)
compute C time:        1.557983 sec
reduce (C) time:       0.008533 sec
rate       5.89 million edges/sec (incl time for L=tril(A))
rate       6.38 million edges/sec (just tricount itself)

--------------------------------------------------------------
random 100000 by 100000, nz: 19980330, method 1 time 4.385 sec

total time to read A matrix:       4.527213 sec

n 100000 # edges 9990165
U=triu(A) time:        0.135308 sec
L=tril(A) time:        0.117953 sec

------------------------------------- dot product method:
# triangles 1330131
L*U' time (dot):         8.533687 sec
tricount time:         8.538586 sec (dot product method)
tri+prep time:         8.791847 sec (incl time to compute L and U)
compute C time:        8.533687 sec
reduce (C) time:       0.004899 sec
rate       1.14 million edges/sec (incl time for U=triu(A))
rate       1.17 million edges/sec (just tricount itself)
L*U' time (dot):         5.382120 sec (nthreads: 2 speedup 1.58556)
tricount time:         5.388219 sec (dot product method)
tri+prep time:         5.641480 sec (incl time to compute L and U)
compute C time:        5.382120 sec
reduce (C) time:       0.006099 sec
rate       1.77 million edges/sec (incl time for U=triu(A))
rate       1.85 million edges/sec (just tricount itself)
L*U' time (dot):         3.387687 sec (nthreads: 4 speedup 2.51903)
tricount time:         3.396831 sec (dot product method)
tri+prep time:         3.650092 sec (incl time to compute L and U)
compute C time:        3.387687 sec
reduce (C) time:       0.009144 sec
rate       2.74 million edges/sec (incl time for U=triu(A))
rate       2.94 million edges/sec (just tricount itself)
L*U' time (dot):         9.507523 sec
tricount time:         9.513371 sec (dot product method)
tri+prep time:         9.766632 sec (incl time to compute L and U)
compute C time:        9.507523 sec
reduce (C) time:       0.005848 sec
rate       1.02 million edges/sec (incl time for U=triu(A))
rate       1.05 million edges/sec (just tricount itself)
L*U' time (dot):         5.319152 sec (nthreads: 2 speedup 1.78741)
tricount time:         5.326311 sec (dot product method)
tri+prep time:         5.579572 sec (incl time to compute L and U)
compute C time:        5.319152 sec
reduce (C) time:       0.007159 sec
rate       1.79 million edges/sec (incl time for U=triu(A))
rate       1.88 million edges/sec (just tricount itself)
L*U' time (dot):         3.366866 sec (nthreads: 4 speedup 2.82385)
tricount time:         3.377131 sec (dot product method)
tri+prep time:         3.630392 sec (incl time to compute L and U)
compute C time:        3.366866 sec
reduce (C) time:       0.010265 sec
rate       2.75 million edges/sec (incl time for U=triu(A))
rate       2.96 million edges/sec (just tricount itself)

----------------------------------- saxpy method:
C<L>=L*L time (saxpy):         3.016558 sec
tricount time:         3.024793 sec (saxpy method)
tri+prep time:         3.142746 sec (incl time to compute L)
compute C time:        3.016558 sec
reduce (C) time:       0.008235 sec
rate       3.18 million edges/sec (incl time for L=tril(A))
rate       3.30 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.728529 sec (nthreads: 2 speedup 1.74516)
tricount time:         1.734626 sec (saxpy method)
tri+prep time:         1.852579 sec (incl time to compute L)
compute C time:        1.728529 sec
reduce (C) time:       0.006097 sec
rate       5.39 million edges/sec (incl time for L=tril(A))
rate       5.76 million edges/sec (just tricount itself)
C<L>=L*L time (saxpy):         1.505015 sec (nthreads: 4 speedup 2.00434)
tricount time:         1.513785 sec (saxpy method)
tri+prep time:         1.631738 sec (incl time to compute L)
compute C time:        1.505015 sec
reduce (C) time:       0.008770 sec
rate       6.12 million edges/sec (incl time for L=tril(A))
rate       6.60 million edges/sec (just tricount itself)

