
--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Mallya/lhr71_adj.tsv.gz
--------------------------------------------------------------
matrix 70304 by 70304, 2985588 entries, from stdin

total time to read A matrix:       1.855056 sec

n 70304 # edges 1492794
U=triu(A) time:        0.012980 sec

------------------------------------- dot product method:
L=tril(A) time:        0.012563 sec
# triangles 160592

L'*U time (dot):         0.025229 sec
tricount time:         0.025508 sec (dot product method)
tri+prep time:         0.051050 sec (incl time to compute L and U)
compute C time:        0.025229 sec
reduce (C) time:       0.000279 sec
rate      29.24 million edges/sec (incl time for U=triu(A))
rate      58.52 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.019929 sec
tricount time:         0.020202 sec (saxpy method)
tri+prep time:         0.032765 sec (incl time to compute L)
compute C time:        0.019929 sec
reduce (C) time:       0.000273 sec
rate      45.56 million edges/sec (incl time for L=tril(A))
rate      73.89 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Freescale/Freescale2_adj.tsv.gz
--------------------------------------------------------------
matrix 2999349 by 2999349, 11489868 entries, from stdin

total time to read A matrix:       7.779247 sec

n 2999349 # edges 5744934
U=triu(A) time:        0.088602 sec

------------------------------------- dot product method:
L=tril(A) time:        0.072137 sec
# triangles 21027280

L'*U time (dot):         0.361856 sec
tricount time:         0.374402 sec (dot product method)
tri+prep time:         0.535142 sec (incl time to compute L and U)
compute C time:        0.361856 sec
reduce (C) time:       0.012547 sec
rate      10.74 million edges/sec (incl time for U=triu(A))
rate      15.34 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.202699 sec
tricount time:         0.215288 sec (saxpy method)
tri+prep time:         0.287426 sec (incl time to compute L)
compute C time:        0.202699 sec
reduce (C) time:       0.012589 sec
rate      19.99 million edges/sec (incl time for L=tril(A))
rate      26.68 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/cit-HepPh/cit-HepPh_adj.tsv.gz
--------------------------------------------------------------
matrix 34546 by 34546, 841754 entries, from stdin

total time to read A matrix:       0.537399 sec

n 34546 # edges 420877
U=triu(A) time:        0.004334 sec

------------------------------------- dot product method:
L=tril(A) time:        0.003656 sec
# triangles 1276868

L'*U time (dot):         0.078617 sec
tricount time:         0.080389 sec (dot product method)
tri+prep time:         0.088378 sec (incl time to compute L and U)
compute C time:        0.078617 sec
reduce (C) time:       0.001772 sec
rate       4.76 million edges/sec (incl time for U=triu(A))
rate       5.24 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.033563 sec
tricount time:         0.035337 sec (saxpy method)
tri+prep time:         0.038993 sec (incl time to compute L)
compute C time:        0.033563 sec
reduce (C) time:       0.001774 sec
rate      10.79 million edges/sec (incl time for L=tril(A))
rate      11.91 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/cit-HepTh/cit-HepTh_adj.tsv.gz
--------------------------------------------------------------
matrix 27770 by 27770, 704570 entries, from stdin

total time to read A matrix:       0.441967 sec

n 27770 # edges 352285
U=triu(A) time:        0.003553 sec

------------------------------------- dot product method:
L=tril(A) time:        0.003056 sec
# triangles 1478735

L'*U time (dot):         0.084185 sec
tricount time:         0.085799 sec (dot product method)
tri+prep time:         0.092408 sec (incl time to compute L and U)
compute C time:        0.084185 sec
reduce (C) time:       0.001614 sec
rate       3.81 million edges/sec (incl time for U=triu(A))
rate       4.11 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.038928 sec
tricount time:         0.040544 sec (saxpy method)
tri+prep time:         0.043600 sec (incl time to compute L)
compute C time:        0.038928 sec
reduce (C) time:       0.001616 sec
rate       8.08 million edges/sec (incl time for L=tril(A))
rate       8.69 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/email-EuAll/email-EuAll_adj.tsv.gz
--------------------------------------------------------------
matrix 265214 by 265214, 728962 entries, from stdin

total time to read A matrix:       0.489253 sec

n 265214 # edges 364481
U=triu(A) time:        0.006346 sec

------------------------------------- dot product method:
L=tril(A) time:        0.005769 sec
# triangles 267313

L'*U time (dot):         0.055012 sec
tricount time:         0.055395 sec (dot product method)
tri+prep time:         0.067511 sec (incl time to compute L and U)
compute C time:        0.055012 sec
reduce (C) time:       0.000384 sec
rate       5.40 million edges/sec (incl time for U=triu(A))
rate       6.58 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.038483 sec
tricount time:         0.038863 sec (saxpy method)
tri+prep time:         0.044632 sec (incl time to compute L)
compute C time:        0.038483 sec
reduce (C) time:       0.000380 sec
rate       8.17 million edges/sec (incl time for L=tril(A))
rate       9.38 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/soc-Epinions1/soc-Epinions1_adj.tsv.gz
--------------------------------------------------------------
matrix 75879 by 75879, 811480 entries, from stdin

total time to read A matrix:       0.508798 sec

n 75879 # edges 405740
U=triu(A) time:        0.004528 sec

------------------------------------- dot product method:
L=tril(A) time:        0.004049 sec
# triangles 1624481

L'*U time (dot):         0.162938 sec
tricount time:         0.164296 sec (dot product method)
tri+prep time:         0.172873 sec (incl time to compute L and U)
compute C time:        0.162938 sec
reduce (C) time:       0.001358 sec
rate       2.35 million edges/sec (incl time for U=triu(A))
rate       2.47 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.055687 sec
tricount time:         0.057041 sec (saxpy method)
tri+prep time:         0.061090 sec (incl time to compute L)
compute C time:        0.055687 sec
reduce (C) time:       0.001354 sec
rate       6.64 million edges/sec (incl time for L=tril(A))
rate       7.11 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/soc-Slashdot0811/soc-Slashdot0811_adj.tsv.gz
--------------------------------------------------------------
matrix 77360 by 77360, 938360 entries, from stdin

total time to read A matrix:       0.646061 sec

n 77360 # edges 469180
U=triu(A) time:        0.005169 sec

------------------------------------- dot product method:
L=tril(A) time:        0.004628 sec
# triangles 551724

L'*U time (dot):         0.136371 sec
tricount time:         0.137212 sec (dot product method)
tri+prep time:         0.147010 sec (incl time to compute L and U)
compute C time:        0.136371 sec
reduce (C) time:       0.000841 sec
rate       3.19 million edges/sec (incl time for U=triu(A))
rate       3.42 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.049507 sec
tricount time:         0.050344 sec (saxpy method)
tri+prep time:         0.054972 sec (incl time to compute L)
compute C time:        0.049507 sec
reduce (C) time:       0.000837 sec
rate       8.53 million edges/sec (incl time for L=tril(A))
rate       9.32 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/soc-Slashdot0902/soc-Slashdot0902_adj.tsv.gz
--------------------------------------------------------------
matrix 82168 by 82168, 1008460 entries, from stdin

total time to read A matrix:       0.639100 sec

n 82168 # edges 504230
U=triu(A) time:        0.005586 sec

------------------------------------- dot product method:
L=tril(A) time:        0.004928 sec
# triangles 602592

L'*U time (dot):         0.146525 sec
tricount time:         0.147429 sec (dot product method)
tri+prep time:         0.157943 sec (incl time to compute L and U)
compute C time:        0.146525 sec
reduce (C) time:       0.000904 sec
rate       3.19 million edges/sec (incl time for U=triu(A))
rate       3.42 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.054301 sec
tricount time:         0.055204 sec (saxpy method)
tri+prep time:         0.060132 sec (incl time to compute L)
compute C time:        0.054301 sec
reduce (C) time:       0.000903 sec
rate       8.39 million edges/sec (incl time for L=tril(A))
rate       9.13 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0312/amazon0312_adj.tsv.gz
--------------------------------------------------------------
matrix 400727 by 400727, 4699738 entries, from stdin

total time to read A matrix:       3.225121 sec

n 400727 # edges 2349869
U=triu(A) time:        0.029675 sec

------------------------------------- dot product method:
L=tril(A) time:        0.022741 sec
# triangles 3686467

L'*U time (dot):         0.283991 sec
tricount time:         0.292455 sec (dot product method)
tri+prep time:         0.344870 sec (incl time to compute L and U)
compute C time:        0.283991 sec
reduce (C) time:       0.008464 sec
rate       6.81 million edges/sec (incl time for U=triu(A))
rate       8.03 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.194061 sec
tricount time:         0.202521 sec (saxpy method)
tri+prep time:         0.225262 sec (incl time to compute L)
compute C time:        0.194061 sec
reduce (C) time:       0.008460 sec
rate      10.43 million edges/sec (incl time for L=tril(A))
rate      11.60 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0505/amazon0505_adj.tsv.gz
--------------------------------------------------------------
matrix 410236 by 410236, 4878874 entries, from stdin

total time to read A matrix:       3.254653 sec

n 410236 # edges 2439437
U=triu(A) time:        0.030679 sec

------------------------------------- dot product method:
L=tril(A) time:        0.023498 sec
# triangles 3951063

L'*U time (dot):         0.296228 sec
tricount time:         0.305111 sec (dot product method)
tri+prep time:         0.359288 sec (incl time to compute L and U)
compute C time:        0.296228 sec
reduce (C) time:       0.008883 sec
rate       6.79 million edges/sec (incl time for U=triu(A))
rate       8.00 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.206108 sec
tricount time:         0.215005 sec (saxpy method)
tri+prep time:         0.238503 sec (incl time to compute L)
compute C time:        0.206108 sec
reduce (C) time:       0.008896 sec
rate      10.23 million edges/sec (incl time for L=tril(A))
rate      11.35 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0601/amazon0601_adj.tsv.gz
--------------------------------------------------------------
matrix 403394 by 403394, 4886816 entries, from stdin

total time to read A matrix:       3.317446 sec

n 403394 # edges 2443408
U=triu(A) time:        0.030579 sec

------------------------------------- dot product method:
L=tril(A) time:        0.023489 sec
# triangles 3986507

L'*U time (dot):         0.302597 sec
tricount time:         0.311530 sec (dot product method)
tri+prep time:         0.365598 sec (incl time to compute L and U)
compute C time:        0.302597 sec
reduce (C) time:       0.008933 sec
rate       6.68 million edges/sec (incl time for U=triu(A))
rate       7.84 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.199075 sec
tricount time:         0.209502 sec (saxpy method)
tri+prep time:         0.232990 sec (incl time to compute L)
compute C time:        0.199075 sec
reduce (C) time:       0.010427 sec
rate      10.49 million edges/sec (incl time for L=tril(A))
rate      11.66 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/flickrEdges/flickrEdges_adj.tsv.gz
--------------------------------------------------------------
matrix 105938 by 105938, 4633896 entries, from stdin

total time to read A matrix:       3.031690 sec

n 105938 # edges 2316948
U=triu(A) time:        0.020952 sec

------------------------------------- dot product method:
L=tril(A) time:        0.019004 sec
# triangles 107987357

L'*U time (dot):         2.298667 sec
tricount time:         2.309722 sec (dot product method)
tri+prep time:         2.349677 sec (incl time to compute L and U)
compute C time:        2.298667 sec
reduce (C) time:       0.011054 sec
rate       0.99 million edges/sec (incl time for U=triu(A))
rate       1.00 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.999028 sec
tricount time:         1.010496 sec (saxpy method)
tri+prep time:         1.029500 sec (incl time to compute L)
compute C time:        0.999028 sec
reduce (C) time:       0.011468 sec
rate       2.25 million edges/sec (incl time for L=tril(A))
rate       2.29 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/cit-Patents/cit-Patents_adj.tsv.gz
--------------------------------------------------------------
matrix 3774768 by 3774768, 33037894 entries, from stdin

total time to read A matrix:      25.188952 sec

n 3774768 # edges 16518947
U=triu(A) time:        0.220143 sec

------------------------------------- dot product method:
L=tril(A) time:        0.160338 sec
# triangles 7515023

L'*U time (dot):         3.574169 sec
tricount time:         3.598381 sec (dot product method)
tri+prep time:         3.978862 sec (incl time to compute L and U)
compute C time:        3.574169 sec
reduce (C) time:       0.024211 sec
rate       4.15 million edges/sec (incl time for U=triu(A))
rate       4.59 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         2.398166 sec
tricount time:         2.422472 sec (saxpy method)
tri+prep time:         2.582809 sec (incl time to compute L)
compute C time:        2.398166 sec
reduce (C) time:       0.024306 sec
rate       6.40 million edges/sec (incl time for L=tril(A))
rate       6.82 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/SNAP/soc-LiveJournal1_adj.tsv.gz
--------------------------------------------------------------
matrix 4847571 by 4847571, 85702474 entries, from stdin

total time to read A matrix:      62.697382 sec

n 4847571 # edges 42851237
U=triu(A) time:        0.470066 sec

------------------------------------- dot product method:
L=tril(A) time:        0.390355 sec
# triangles 285730264

L'*U time (dot):        19.275701 sec
tricount time:        19.436227 sec (dot product method)
tri+prep time:        20.296648 sec (incl time to compute L and U)
compute C time:       19.275701 sec
reduce (C) time:       0.160526 sec
rate       2.11 million edges/sec (incl time for U=triu(A))
rate       2.20 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):        10.126122 sec
tricount time:        10.285344 sec (saxpy method)
tri+prep time:        10.675699 sec (incl time to compute L)
compute C time:       10.126122 sec
reduce (C) time:       0.159222 sec
rate       4.01 million edges/sec (incl time for L=tril(A))
rate       4.17 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Gleich/wb-edu_adj.tsv.gz
--------------------------------------------------------------
matrix 9845725 by 9845725, 92472210 entries, from stdin

total time to read A matrix:      63.064359 sec

n 9845725 # edges 46236105
U=triu(A) time:        0.555551 sec

------------------------------------- dot product method:
L=tril(A) time:        0.463972 sec
# triangles 254718147

L'*U time (dot):         5.564479 sec
tricount time:         5.746094 sec (dot product method)
tri+prep time:         6.765617 sec (incl time to compute L and U)
compute C time:        5.564479 sec
reduce (C) time:       0.181615 sec
rate       6.83 million edges/sec (incl time for U=triu(A))
rate       8.05 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         3.938741 sec
tricount time:         4.120277 sec (saxpy method)
tri+prep time:         4.584250 sec (incl time to compute L)
compute C time:        3.938741 sec
reduce (C) time:       0.181537 sec
rate      10.09 million edges/sec (incl time for L=tril(A))
rate      11.22 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0302/amazon0302_adj.tsv.gz
--------------------------------------------------------------
matrix 262111 by 262111, 1799584 entries, from stdin

total time to read A matrix:       1.212536 sec

n 262111 # edges 899792
U=triu(A) time:        0.013199 sec

------------------------------------- dot product method:
L=tril(A) time:        0.010150 sec
# triangles 717719

L'*U time (dot):         0.055366 sec
tricount time:         0.057935 sec (dot product method)
tri+prep time:         0.081283 sec (incl time to compute L and U)
compute C time:        0.055366 sec
reduce (C) time:       0.002568 sec
rate      11.07 million edges/sec (incl time for U=triu(A))
rate      15.53 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.046736 sec
tricount time:         0.049297 sec (saxpy method)
tri+prep time:         0.059447 sec (incl time to compute L)
compute C time:        0.046736 sec
reduce (C) time:       0.002561 sec
rate      15.14 million edges/sec (incl time for L=tril(A))
rate      18.25 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/as-caida20071105/as-caida20071105_adj.tsv.gz
--------------------------------------------------------------
matrix 26475 by 26475, 106762 entries, from stdin

total time to read A matrix:       0.066061 sec

n 26475 # edges 53381
U=triu(A) time:        0.000892 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000732 sec
# triangles 36365

L'*U time (dot):         0.005663 sec
tricount time:         0.005739 sec (dot product method)
tri+prep time:         0.007364 sec (incl time to compute L and U)
compute C time:        0.005663 sec
reduce (C) time:       0.000077 sec
rate       7.25 million edges/sec (incl time for U=triu(A))
rate       9.30 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004973 sec
tricount time:         0.005048 sec (saxpy method)
tri+prep time:         0.005780 sec (incl time to compute L)
compute C time:        0.004973 sec
reduce (C) time:       0.000075 sec
rate       9.23 million edges/sec (incl time for L=tril(A))
rate      10.57 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/as20000102/as20000102_adj.tsv.gz
--------------------------------------------------------------
matrix 6474 by 6474, 25144 entries, from stdin

total time to read A matrix:       0.014672 sec

n 6474 # edges 12572
U=triu(A) time:        0.000220 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000174 sec
# triangles 6584

L'*U time (dot):         0.000876 sec
tricount time:         0.000893 sec (dot product method)
tri+prep time:         0.001286 sec (incl time to compute L and U)
compute C time:        0.000876 sec
reduce (C) time:       0.000017 sec
rate       9.77 million edges/sec (incl time for U=triu(A))
rate      14.08 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000530 sec
tricount time:         0.000546 sec (saxpy method)
tri+prep time:         0.000719 sec (incl time to compute L)
compute C time:        0.000530 sec
reduce (C) time:       0.000016 sec
rate      17.47 million edges/sec (incl time for L=tril(A))
rate      23.03 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-AstroPh/ca-AstroPh_adj.tsv.gz
--------------------------------------------------------------
matrix 18772 by 18772, 396100 entries, from stdin

total time to read A matrix:       0.247357 sec

n 18772 # edges 198050
U=triu(A) time:        0.002004 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001740 sec
# triangles 1351441

L'*U time (dot):         0.041116 sec
tricount time:         0.042089 sec (dot product method)
tri+prep time:         0.045833 sec (incl time to compute L and U)
compute C time:        0.041116 sec
reduce (C) time:       0.000972 sec
rate       4.32 million edges/sec (incl time for U=triu(A))
rate       4.71 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.017942 sec
tricount time:         0.018912 sec (saxpy method)
tri+prep time:         0.020652 sec (incl time to compute L)
compute C time:        0.017942 sec
reduce (C) time:       0.000969 sec
rate       9.59 million edges/sec (incl time for L=tril(A))
rate      10.47 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-CondMat/ca-CondMat_adj.tsv.gz
--------------------------------------------------------------
matrix 23133 by 23133, 186878 entries, from stdin

total time to read A matrix:       0.116688 sec

n 23133 # edges 93439
U=triu(A) time:        0.001268 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001023 sec
# triangles 173361

L'*U time (dot):         0.007613 sec
tricount time:         0.007972 sec (dot product method)
tri+prep time:         0.010263 sec (incl time to compute L and U)
compute C time:        0.007613 sec
reduce (C) time:       0.000359 sec
rate       9.10 million edges/sec (incl time for U=triu(A))
rate      11.72 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004538 sec
tricount time:         0.004894 sec (saxpy method)
tri+prep time:         0.005917 sec (incl time to compute L)
compute C time:        0.004538 sec
reduce (C) time:       0.000356 sec
rate      15.79 million edges/sec (incl time for L=tril(A))
rate      19.09 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-GrQc/ca-GrQc_adj.tsv.gz
--------------------------------------------------------------
matrix 5242 by 5242, 28968 entries, from stdin

total time to read A matrix:       0.017154 sec

n 5242 # edges 14484
U=triu(A) time:        0.000233 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000184 sec
# triangles 48260

L'*U time (dot):         0.000903 sec
tricount time:         0.000956 sec (dot product method)
tri+prep time:         0.001373 sec (incl time to compute L and U)
compute C time:        0.000903 sec
reduce (C) time:       0.000053 sec
rate      10.55 million edges/sec (incl time for U=triu(A))
rate      15.15 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000613 sec
tricount time:         0.000664 sec (saxpy method)
tri+prep time:         0.000848 sec (incl time to compute L)
compute C time:        0.000613 sec
reduce (C) time:       0.000051 sec
rate      17.09 million edges/sec (incl time for L=tril(A))
rate      21.81 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-HepPh/ca-HepPh_adj.tsv.gz
--------------------------------------------------------------
matrix 12008 by 12008, 236978 entries, from stdin

total time to read A matrix:       0.143055 sec

n 12008 # edges 118489
U=triu(A) time:        0.001189 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001033 sec
# triangles 3358499

L'*U time (dot):         0.038695 sec
tricount time:         0.039296 sec (dot product method)
tri+prep time:         0.041519 sec (incl time to compute L and U)
compute C time:        0.038695 sec
reduce (C) time:       0.000602 sec
rate       2.85 million edges/sec (incl time for U=triu(A))
rate       3.02 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.017896 sec
tricount time:         0.018495 sec (saxpy method)
tri+prep time:         0.019528 sec (incl time to compute L)
compute C time:        0.017896 sec
reduce (C) time:       0.000599 sec
rate       6.07 million edges/sec (incl time for L=tril(A))
rate       6.41 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-HepTh/ca-HepTh_adj.tsv.gz
--------------------------------------------------------------
matrix 9877 by 9877, 51946 entries, from stdin

total time to read A matrix:       0.030862 sec

n 9877 # edges 25973
U=triu(A) time:        0.000425 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000354 sec
# triangles 28339

L'*U time (dot):         0.001471 sec
tricount time:         0.001547 sec (dot product method)
tri+prep time:         0.002325 sec (incl time to compute L and U)
compute C time:        0.001471 sec
reduce (C) time:       0.000075 sec
rate      11.17 million edges/sec (incl time for U=triu(A))
rate      16.79 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.001056 sec
tricount time:         0.001129 sec (saxpy method)
tri+prep time:         0.001483 sec (incl time to compute L)
compute C time:        0.001056 sec
reduce (C) time:       0.000074 sec
rate      17.51 million edges/sec (incl time for L=tril(A))
rate      23.00 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/email-Enron/email-Enron_adj.tsv.gz
--------------------------------------------------------------
matrix 36692 by 36692, 367662 entries, from stdin

total time to read A matrix:       0.230841 sec

n 36692 # edges 183831
U=triu(A) time:        0.002237 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001845 sec
# triangles 727044

L'*U time (dot):         0.044441 sec
tricount time:         0.045216 sec (dot product method)
tri+prep time:         0.049298 sec (incl time to compute L and U)
compute C time:        0.044441 sec
reduce (C) time:       0.000775 sec
rate       3.73 million edges/sec (incl time for U=triu(A))
rate       4.07 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.019423 sec
tricount time:         0.020194 sec (saxpy method)
tri+prep time:         0.022039 sec (incl time to compute L)
compute C time:        0.019423 sec
reduce (C) time:       0.000772 sec
rate       8.34 million edges/sec (incl time for L=tril(A))
rate       9.10 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/facebook_combined/facebook_combined_adj.tsv.gz
--------------------------------------------------------------
matrix 4039 by 4039, 176468 entries, from stdin

total time to read A matrix:       0.103112 sec

n 4039 # edges 88234
U=triu(A) time:        0.000777 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000699 sec
# triangles 1612010

L'*U time (dot):         0.027237 sec
tricount time:         0.027718 sec (dot product method)
tri+prep time:         0.029194 sec (incl time to compute L and U)
compute C time:        0.027237 sec
reduce (C) time:       0.000481 sec
rate       3.02 million edges/sec (incl time for U=triu(A))
rate       3.18 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.010736 sec
tricount time:         0.011214 sec (saxpy method)
tri+prep time:         0.011914 sec (incl time to compute L)
compute C time:        0.010736 sec
reduce (C) time:       0.000479 sec
rate       7.41 million edges/sec (incl time for L=tril(A))
rate       7.87 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/loc-brightkite_edges/loc-brightkite_edges_adj.tsv.gz
--------------------------------------------------------------
matrix 58228 by 58228, 428156 entries, from stdin

total time to read A matrix:       0.271421 sec

n 58228 # edges 214078
U=triu(A) time:        0.002802 sec

------------------------------------- dot product method:
L=tril(A) time:        0.002386 sec
# triangles 494728

L'*U time (dot):         0.031388 sec
tricount time:         0.031938 sec (dot product method)
tri+prep time:         0.037126 sec (incl time to compute L and U)
compute C time:        0.031388 sec
reduce (C) time:       0.000550 sec
rate       5.77 million edges/sec (incl time for U=triu(A))
rate       6.70 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.013213 sec
tricount time:         0.013759 sec (saxpy method)
tri+prep time:         0.016145 sec (incl time to compute L)
compute C time:        0.013213 sec
reduce (C) time:       0.000546 sec
rate      13.26 million edges/sec (incl time for L=tril(A))
rate      15.56 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/loc-gowalla_edges/loc-gowalla_edges_adj.tsv.gz
--------------------------------------------------------------
matrix 196591 by 196591, 1900654 entries, from stdin

total time to read A matrix:       1.255973 sec

n 196591 # edges 950327
U=triu(A) time:        0.011638 sec

------------------------------------- dot product method:
L=tril(A) time:        0.009555 sec
# triangles 2273138

L'*U time (dot):         0.212600 sec
tricount time:         0.215577 sec (dot product method)
tri+prep time:         0.236770 sec (incl time to compute L and U)
compute C time:        0.212600 sec
reduce (C) time:       0.002978 sec
rate       4.01 million edges/sec (incl time for U=triu(A))
rate       4.41 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.206675 sec
tricount time:         0.209655 sec (saxpy method)
tri+prep time:         0.219210 sec (incl time to compute L)
compute C time:        0.206675 sec
reduce (C) time:       0.002980 sec
rate       4.34 million edges/sec (incl time for L=tril(A))
rate       4.53 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010331/oregon1_010331_adj.tsv.gz
--------------------------------------------------------------
matrix 10670 by 10670, 44004 entries, from stdin

total time to read A matrix:       0.026126 sec

n 10670 # edges 22002
U=triu(A) time:        0.000354 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000287 sec
# triangles 17144

L'*U time (dot):         0.001876 sec
tricount time:         0.001917 sec (dot product method)
tri+prep time:         0.002558 sec (incl time to compute L and U)
compute C time:        0.001876 sec
reduce (C) time:       0.000041 sec
rate       8.60 million edges/sec (incl time for U=triu(A))
rate      11.48 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002118 sec
tricount time:         0.002157 sec (saxpy method)
tri+prep time:         0.002444 sec (incl time to compute L)
compute C time:        0.002118 sec
reduce (C) time:       0.000039 sec
rate       9.00 million edges/sec (incl time for L=tril(A))
rate      10.20 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010407/oregon1_010407_adj.tsv.gz
--------------------------------------------------------------
matrix 10729 by 10729, 43998 entries, from stdin

total time to read A matrix:       0.026029 sec

n 10729 # edges 21999
U=triu(A) time:        0.000356 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000288 sec
# triangles 15834

L'*U time (dot):         0.001915 sec
tricount time:         0.001955 sec (dot product method)
tri+prep time:         0.002599 sec (incl time to compute L and U)
compute C time:        0.001915 sec
reduce (C) time:       0.000041 sec
rate       8.46 million edges/sec (incl time for U=triu(A))
rate      11.25 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002113 sec
tricount time:         0.002151 sec (saxpy method)
tri+prep time:         0.002439 sec (incl time to compute L)
compute C time:        0.002113 sec
reduce (C) time:       0.000038 sec
rate       9.02 million edges/sec (incl time for L=tril(A))
rate      10.23 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010414/oregon1_010414_adj.tsv.gz
--------------------------------------------------------------
matrix 10790 by 10790, 44938 entries, from stdin

total time to read A matrix:       0.026595 sec

n 10790 # edges 22469
U=triu(A) time:        0.000366 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000295 sec
# triangles 18237

L'*U time (dot):         0.001955 sec
tricount time:         0.001997 sec (dot product method)
tri+prep time:         0.002658 sec (incl time to compute L and U)
compute C time:        0.001955 sec
reduce (C) time:       0.000042 sec
rate       8.45 million edges/sec (incl time for U=triu(A))
rate      11.25 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002260 sec
tricount time:         0.002301 sec (saxpy method)
tri+prep time:         0.002595 sec (incl time to compute L)
compute C time:        0.002260 sec
reduce (C) time:       0.000041 sec
rate       8.66 million edges/sec (incl time for L=tril(A))
rate       9.77 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010421/oregon1_010421_adj.tsv.gz
--------------------------------------------------------------
matrix 10859 by 10859, 45494 entries, from stdin

total time to read A matrix:       0.026948 sec

n 10859 # edges 22747
U=triu(A) time:        0.000369 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000300 sec
# triangles 19108

L'*U time (dot):         0.002008 sec
tricount time:         0.002051 sec (dot product method)
tri+prep time:         0.002719 sec (incl time to compute L and U)
compute C time:        0.002008 sec
reduce (C) time:       0.000043 sec
rate       8.36 million edges/sec (incl time for U=triu(A))
rate      11.09 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002299 sec
tricount time:         0.002340 sec (saxpy method)
tri+prep time:         0.002640 sec (incl time to compute L)
compute C time:        0.002299 sec
reduce (C) time:       0.000042 sec
rate       8.62 million edges/sec (incl time for L=tril(A))
rate       9.72 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010428/oregon1_010428_adj.tsv.gz
--------------------------------------------------------------
matrix 10886 by 10886, 44986 entries, from stdin

total time to read A matrix:       0.026641 sec

n 10886 # edges 22493
U=triu(A) time:        0.000367 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000296 sec
# triangles 17645

L'*U time (dot):         0.001942 sec
tricount time:         0.001983 sec (dot product method)
tri+prep time:         0.002646 sec (incl time to compute L and U)
compute C time:        0.001942 sec
reduce (C) time:       0.000041 sec
rate       8.50 million edges/sec (incl time for U=triu(A))
rate      11.34 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002267 sec
tricount time:         0.002307 sec (saxpy method)
tri+prep time:         0.002603 sec (incl time to compute L)
compute C time:        0.002267 sec
reduce (C) time:       0.000040 sec
rate       8.64 million edges/sec (incl time for L=tril(A))
rate       9.75 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010505/oregon1_010505_adj.tsv.gz
--------------------------------------------------------------
matrix 10943 by 10943, 45214 entries, from stdin

total time to read A matrix:       0.026757 sec

n 10943 # edges 22607
U=triu(A) time:        0.000368 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000299 sec
# triangles 17597

L'*U time (dot):         0.001934 sec
tricount time:         0.001975 sec (dot product method)
tri+prep time:         0.002642 sec (incl time to compute L and U)
compute C time:        0.001934 sec
reduce (C) time:       0.000041 sec
rate       8.56 million edges/sec (incl time for U=triu(A))
rate      11.45 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002268 sec
tricount time:         0.002308 sec (saxpy method)
tri+prep time:         0.002607 sec (incl time to compute L)
compute C time:        0.002268 sec
reduce (C) time:       0.000039 sec
rate       8.67 million edges/sec (incl time for L=tril(A))
rate       9.80 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010512/oregon1_010512_adj.tsv.gz
--------------------------------------------------------------
matrix 11011 by 11011, 45354 entries, from stdin

total time to read A matrix:       0.026983 sec

n 11011 # edges 22677
U=triu(A) time:        0.000370 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000301 sec
# triangles 17598

L'*U time (dot):         0.001945 sec
tricount time:         0.001987 sec (dot product method)
tri+prep time:         0.002657 sec (incl time to compute L and U)
compute C time:        0.001945 sec
reduce (C) time:       0.000041 sec
rate       8.53 million edges/sec (incl time for U=triu(A))
rate      11.42 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002289 sec
tricount time:         0.002329 sec (saxpy method)
tri+prep time:         0.002630 sec (incl time to compute L)
compute C time:        0.002289 sec
reduce (C) time:       0.000040 sec
rate       8.62 million edges/sec (incl time for L=tril(A))
rate       9.74 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010519/oregon1_010519_adj.tsv.gz
--------------------------------------------------------------
matrix 11051 by 11051, 45448 entries, from stdin

total time to read A matrix:       0.027061 sec

n 11051 # edges 22724
U=triu(A) time:        0.000370 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000297 sec
# triangles 17677

L'*U time (dot):         0.002017 sec
tricount time:         0.002059 sec (dot product method)
tri+prep time:         0.002726 sec (incl time to compute L and U)
compute C time:        0.002017 sec
reduce (C) time:       0.000041 sec
rate       8.34 million edges/sec (incl time for U=triu(A))
rate      11.04 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002278 sec
tricount time:         0.002318 sec (saxpy method)
tri+prep time:         0.002615 sec (incl time to compute L)
compute C time:        0.002278 sec
reduce (C) time:       0.000040 sec
rate       8.69 million edges/sec (incl time for L=tril(A))
rate       9.80 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010526/oregon1_010526_adj.tsv.gz
--------------------------------------------------------------
matrix 11174 by 11174, 46818 entries, from stdin

total time to read A matrix:       0.027777 sec

n 11174 # edges 23409
U=triu(A) time:        0.000379 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000306 sec
# triangles 19894

L'*U time (dot):         0.002088 sec
tricount time:         0.002132 sec (dot product method)
tri+prep time:         0.002816 sec (incl time to compute L and U)
compute C time:        0.002088 sec
reduce (C) time:       0.000044 sec
rate       8.31 million edges/sec (incl time for U=triu(A))
rate      10.98 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002363 sec
tricount time:         0.002406 sec (saxpy method)
tri+prep time:         0.002712 sec (incl time to compute L)
compute C time:        0.002363 sec
reduce (C) time:       0.000043 sec
rate       8.63 million edges/sec (incl time for L=tril(A))
rate       9.73 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010331/oregon2_010331_adj.tsv.gz
--------------------------------------------------------------
matrix 10900 by 10900, 62360 entries, from stdin

total time to read A matrix:       0.039491 sec

n 10900 # edges 31180
U=triu(A) time:        0.000445 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000362 sec
# triangles 82856

L'*U time (dot):         0.004098 sec
tricount time:         0.004191 sec (dot product method)
tri+prep time:         0.004999 sec (incl time to compute L and U)
compute C time:        0.004098 sec
reduce (C) time:       0.000093 sec
rate       6.24 million edges/sec (incl time for U=triu(A))
rate       7.44 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003224 sec
tricount time:         0.003313 sec (saxpy method)
tri+prep time:         0.003675 sec (incl time to compute L)
compute C time:        0.003224 sec
reduce (C) time:       0.000089 sec
rate       8.48 million edges/sec (incl time for L=tril(A))
rate       9.41 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010407/oregon2_010407_adj.tsv.gz
--------------------------------------------------------------
matrix 10981 by 10981, 61710 entries, from stdin

total time to read A matrix:       0.039237 sec

n 10981 # edges 30855
U=triu(A) time:        0.000440 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000361 sec
# triangles 78138

L'*U time (dot):         0.003967 sec
tricount time:         0.004055 sec (dot product method)
tri+prep time:         0.004855 sec (incl time to compute L and U)
compute C time:        0.003967 sec
reduce (C) time:       0.000087 sec
rate       6.35 million edges/sec (incl time for U=triu(A))
rate       7.61 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003200 sec
tricount time:         0.003286 sec (saxpy method)
tri+prep time:         0.003646 sec (incl time to compute L)
compute C time:        0.003200 sec
reduce (C) time:       0.000086 sec
rate       8.46 million edges/sec (incl time for L=tril(A))
rate       9.39 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010414/oregon2_010414_adj.tsv.gz
--------------------------------------------------------------
matrix 11019 by 11019, 63522 entries, from stdin

total time to read A matrix:       0.040334 sec

n 11019 # edges 31761
U=triu(A) time:        0.000451 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000368 sec
# triangles 88905

L'*U time (dot):         0.004293 sec
tricount time:         0.004385 sec (dot product method)
tri+prep time:         0.005204 sec (incl time to compute L and U)
compute C time:        0.004293 sec
reduce (C) time:       0.000092 sec
rate       6.10 million edges/sec (incl time for U=triu(A))
rate       7.24 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003425 sec
tricount time:         0.003515 sec (saxpy method)
tri+prep time:         0.003883 sec (incl time to compute L)
compute C time:        0.003425 sec
reduce (C) time:       0.000091 sec
rate       8.18 million edges/sec (incl time for L=tril(A))
rate       9.04 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010421/oregon2_010421_adj.tsv.gz
--------------------------------------------------------------
matrix 11080 by 11080, 63076 entries, from stdin

total time to read A matrix:       0.040264 sec

n 11080 # edges 31538
U=triu(A) time:        0.000451 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000367 sec
# triangles 82129

L'*U time (dot):         0.004229 sec
tricount time:         0.004319 sec (dot product method)
tri+prep time:         0.005137 sec (incl time to compute L and U)
compute C time:        0.004229 sec
reduce (C) time:       0.000090 sec
rate       6.14 million edges/sec (incl time for U=triu(A))
rate       7.30 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003330 sec
tricount time:         0.003418 sec (saxpy method)
tri+prep time:         0.003785 sec (incl time to compute L)
compute C time:        0.003330 sec
reduce (C) time:       0.000089 sec
rate       8.33 million edges/sec (incl time for L=tril(A))
rate       9.23 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010428/oregon2_010428_adj.tsv.gz
--------------------------------------------------------------
matrix 11113 by 11113, 62868 entries, from stdin

total time to read A matrix:       0.040395 sec

n 11113 # edges 31434
U=triu(A) time:        0.000451 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000364 sec
# triangles 78000

L'*U time (dot):         0.004088 sec
tricount time:         0.004177 sec (dot product method)
tri+prep time:         0.004992 sec (incl time to compute L and U)
compute C time:        0.004088 sec
reduce (C) time:       0.000089 sec
rate       6.30 million edges/sec (incl time for U=triu(A))
rate       7.53 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003299 sec
tricount time:         0.003386 sec (saxpy method)
tri+prep time:         0.003751 sec (incl time to compute L)
compute C time:        0.003299 sec
reduce (C) time:       0.000087 sec
rate       8.38 million edges/sec (incl time for L=tril(A))
rate       9.28 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010505/oregon2_010505_adj.tsv.gz
--------------------------------------------------------------
matrix 11157 by 11157, 61886 entries, from stdin

total time to read A matrix:       0.039193 sec

n 11157 # edges 30943
U=triu(A) time:        0.000446 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000364 sec
# triangles 72182

L'*U time (dot):         0.003911 sec
tricount time:         0.003996 sec (dot product method)
tri+prep time:         0.004805 sec (incl time to compute L and U)
compute C time:        0.003911 sec
reduce (C) time:       0.000085 sec
rate       6.44 million edges/sec (incl time for U=triu(A))
rate       7.74 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003268 sec
tricount time:         0.003351 sec (saxpy method)
tri+prep time:         0.003715 sec (incl time to compute L)
compute C time:        0.003268 sec
reduce (C) time:       0.000084 sec
rate       8.33 million edges/sec (incl time for L=tril(A))
rate       9.23 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010512/oregon2_010512_adj.tsv.gz
--------------------------------------------------------------
matrix 11260 by 11260, 62606 entries, from stdin

total time to read A matrix:       0.039796 sec

n 11260 # edges 31303
U=triu(A) time:        0.000453 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000364 sec
# triangles 72866

L'*U time (dot):         0.004022 sec
tricount time:         0.004109 sec (dot product method)
tri+prep time:         0.004926 sec (incl time to compute L and U)
compute C time:        0.004022 sec
reduce (C) time:       0.000086 sec
rate       6.35 million edges/sec (incl time for U=triu(A))
rate       7.62 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003262 sec
tricount time:         0.003346 sec (saxpy method)
tri+prep time:         0.003711 sec (incl time to compute L)
compute C time:        0.003262 sec
reduce (C) time:       0.000085 sec
rate       8.44 million edges/sec (incl time for L=tril(A))
rate       9.35 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010519/oregon2_010519_adj.tsv.gz
--------------------------------------------------------------
matrix 11375 by 11375, 64574 entries, from stdin

total time to read A matrix:       0.040988 sec

n 11375 # edges 32287
U=triu(A) time:        0.000462 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000376 sec
# triangles 83709

L'*U time (dot):         0.004308 sec
tricount time:         0.004399 sec (dot product method)
tri+prep time:         0.005236 sec (incl time to compute L and U)
compute C time:        0.004308 sec
reduce (C) time:       0.000091 sec
rate       6.17 million edges/sec (incl time for U=triu(A))
rate       7.34 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003463 sec
tricount time:         0.003553 sec (saxpy method)
tri+prep time:         0.003929 sec (incl time to compute L)
compute C time:        0.003463 sec
reduce (C) time:       0.000090 sec
rate       8.22 million edges/sec (incl time for L=tril(A))
rate       9.09 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010526/oregon2_010526_adj.tsv.gz
--------------------------------------------------------------
matrix 11461 by 11461, 65460 entries, from stdin

total time to read A matrix:       0.041755 sec

n 11461 # edges 32730
U=triu(A) time:        0.000467 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000380 sec
# triangles 89541

L'*U time (dot):         0.004443 sec
tricount time:         0.004537 sec (dot product method)
tri+prep time:         0.005384 sec (incl time to compute L and U)
compute C time:        0.004443 sec
reduce (C) time:       0.000094 sec
rate       6.08 million edges/sec (incl time for U=triu(A))
rate       7.21 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003515 sec
tricount time:         0.003607 sec (saxpy method)
tri+prep time:         0.003987 sec (incl time to compute L)
compute C time:        0.003515 sec
reduce (C) time:       0.000092 sec
rate       8.21 million edges/sec (incl time for L=tril(A))
rate       9.07 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella04/p2p-Gnutella04_adj.tsv.gz
--------------------------------------------------------------
matrix 10876 by 10876, 79988 entries, from stdin

total time to read A matrix:       0.047535 sec

n 10876 # edges 39994
U=triu(A) time:        0.000563 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000447 sec
# triangles 934

L'*U time (dot):         0.002050 sec
tricount time:         0.002058 sec (dot product method)
tri+prep time:         0.003068 sec (incl time to compute L and U)
compute C time:        0.002050 sec
reduce (C) time:       0.000008 sec
rate      13.04 million edges/sec (incl time for U=triu(A))
rate      19.44 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.001167 sec
tricount time:         0.001174 sec (saxpy method)
tri+prep time:         0.001620 sec (incl time to compute L)
compute C time:        0.001167 sec
reduce (C) time:       0.000006 sec
rate      24.68 million edges/sec (incl time for L=tril(A))
rate      34.08 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella05/p2p-Gnutella05_adj.tsv.gz
--------------------------------------------------------------
matrix 8846 by 8846, 63678 entries, from stdin

total time to read A matrix:       0.039945 sec

n 8846 # edges 31839
U=triu(A) time:        0.000460 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000349 sec
# triangles 1112

L'*U time (dot):         0.001745 sec
tricount time:         0.001754 sec (dot product method)
tri+prep time:         0.002564 sec (incl time to compute L and U)
compute C time:        0.001745 sec
reduce (C) time:       0.000010 sec
rate      12.42 million edges/sec (incl time for U=triu(A))
rate      18.15 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000948 sec
tricount time:         0.000955 sec (saxpy method)
tri+prep time:         0.001304 sec (incl time to compute L)
compute C time:        0.000948 sec
reduce (C) time:       0.000006 sec
rate      24.42 million edges/sec (incl time for L=tril(A))
rate      33.36 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella06/p2p-Gnutella06_adj.tsv.gz
--------------------------------------------------------------
matrix 8717 by 8717, 63050 entries, from stdin

total time to read A matrix:       0.039588 sec

n 8717 # edges 31525
U=triu(A) time:        0.000455 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000344 sec
# triangles 1142

L'*U time (dot):         0.001660 sec
tricount time:         0.001668 sec (dot product method)
tri+prep time:         0.002467 sec (incl time to compute L and U)
compute C time:        0.001660 sec
reduce (C) time:       0.000008 sec
rate      12.78 million edges/sec (incl time for U=triu(A))
rate      18.90 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000932 sec
tricount time:         0.000939 sec (saxpy method)
tri+prep time:         0.001282 sec (incl time to compute L)
compute C time:        0.000932 sec
reduce (C) time:       0.000007 sec
rate      24.58 million edges/sec (incl time for L=tril(A))
rate      33.58 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella08/p2p-Gnutella08_adj.tsv.gz
--------------------------------------------------------------
matrix 6301 by 6301, 41554 entries, from stdin

total time to read A matrix:       0.024493 sec

n 6301 # edges 20777
U=triu(A) time:        0.000306 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000240 sec
# triangles 2383

L'*U time (dot):         0.001237 sec
tricount time:         0.001248 sec (dot product method)
tri+prep time:         0.001794 sec (incl time to compute L and U)
compute C time:        0.001237 sec
reduce (C) time:       0.000011 sec
rate      11.58 million edges/sec (incl time for U=triu(A))
rate      16.65 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000648 sec
tricount time:         0.000658 sec (saxpy method)
tri+prep time:         0.000898 sec (incl time to compute L)
compute C time:        0.000648 sec
reduce (C) time:       0.000010 sec
rate      23.15 million edges/sec (incl time for L=tril(A))
rate      31.59 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella09/p2p-Gnutella09_adj.tsv.gz
--------------------------------------------------------------
matrix 8114 by 8114, 52026 entries, from stdin

total time to read A matrix:       0.030775 sec

n 8114 # edges 26013
U=triu(A) time:        0.000392 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000365 sec
# triangles 2354

L'*U time (dot):         0.001518 sec
tricount time:         0.001529 sec (dot product method)
tri+prep time:         0.002286 sec (incl time to compute L and U)
compute C time:        0.001518 sec
reduce (C) time:       0.000011 sec
rate      11.38 million edges/sec (incl time for U=triu(A))
rate      17.02 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000792 sec
tricount time:         0.000802 sec (saxpy method)
tri+prep time:         0.001167 sec (incl time to compute L)
compute C time:        0.000792 sec
reduce (C) time:       0.000009 sec
rate      22.30 million edges/sec (incl time for L=tril(A))
rate      32.45 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella24/p2p-Gnutella24_adj.tsv.gz
--------------------------------------------------------------
matrix 26518 by 26518, 130738 entries, from stdin

total time to read A matrix:       0.085605 sec

n 26518 # edges 65369
U=triu(A) time:        0.001075 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000818 sec
# triangles 986

L'*U time (dot):         0.003037 sec
tricount time:         0.003045 sec (dot product method)
tri+prep time:         0.004938 sec (incl time to compute L and U)
compute C time:        0.003037 sec
reduce (C) time:       0.000009 sec
rate      13.24 million edges/sec (incl time for U=triu(A))
rate      21.46 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002116 sec
tricount time:         0.002123 sec (saxpy method)
tri+prep time:         0.002941 sec (incl time to compute L)
compute C time:        0.002116 sec
reduce (C) time:       0.000007 sec
rate      22.23 million edges/sec (incl time for L=tril(A))
rate      30.79 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella25/p2p-Gnutella25_adj.tsv.gz
--------------------------------------------------------------
matrix 22687 by 22687, 109410 entries, from stdin

total time to read A matrix:       0.067205 sec

n 22687 # edges 54705
U=triu(A) time:        0.000897 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000690 sec
# triangles 806

L'*U time (dot):         0.002423 sec
tricount time:         0.002430 sec (dot product method)
tri+prep time:         0.004017 sec (incl time to compute L and U)
compute C time:        0.002423 sec
reduce (C) time:       0.000007 sec
rate      13.62 million edges/sec (incl time for U=triu(A))
rate      22.51 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.001717 sec
tricount time:         0.001722 sec (saxpy method)
tri+prep time:         0.002412 sec (incl time to compute L)
compute C time:        0.001717 sec
reduce (C) time:       0.000006 sec
rate      22.68 million edges/sec (incl time for L=tril(A))
rate      31.76 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella30/p2p-Gnutella30_adj.tsv.gz
--------------------------------------------------------------
matrix 36682 by 36682, 176656 entries, from stdin

total time to read A matrix:       0.110631 sec

n 36682 # edges 88328
U=triu(A) time:        0.001427 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001109 sec
# triangles 1590

L'*U time (dot):         0.004098 sec
tricount time:         0.004110 sec (dot product method)
tri+prep time:         0.006646 sec (incl time to compute L and U)
compute C time:        0.004098 sec
reduce (C) time:       0.000012 sec
rate      13.29 million edges/sec (incl time for U=triu(A))
rate      21.49 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002795 sec
tricount time:         0.002805 sec (saxpy method)
tri+prep time:         0.003914 sec (incl time to compute L)
compute C time:        0.002795 sec
reduce (C) time:       0.000010 sec
rate      22.57 million edges/sec (incl time for L=tril(A))
rate      31.49 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella31/p2p-Gnutella31_adj.tsv.gz
--------------------------------------------------------------
matrix 62586 by 62586, 295784 entries, from stdin

total time to read A matrix:       0.187505 sec

n 62586 # edges 147892
U=triu(A) time:        0.002412 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001961 sec
# triangles 2024

L'*U time (dot):         0.006848 sec
tricount time:         0.006864 sec (dot product method)
tri+prep time:         0.011237 sec (incl time to compute L and U)
compute C time:        0.006848 sec
reduce (C) time:       0.000016 sec
rate      13.16 million edges/sec (incl time for U=triu(A))
rate      21.55 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004658 sec
tricount time:         0.004671 sec (saxpy method)
tri+prep time:         0.006632 sec (incl time to compute L)
compute C time:        0.004658 sec
reduce (C) time:       0.000013 sec
rate      22.30 million edges/sec (incl time for L=tril(A))
rate      31.66 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/roadNet-CA/roadNet-CA_adj.tsv.gz
--------------------------------------------------------------
matrix 1965206 by 1965206, 5533214 entries, from stdin

total time to read A matrix:       3.629200 sec

n 1965206 # edges 2766607
U=triu(A) time:        0.056231 sec

------------------------------------- dot product method:
L=tril(A) time:        0.043052 sec
# triangles 120676

L'*U time (dot):         0.077313 sec
tricount time:         0.078038 sec (dot product method)
tri+prep time:         0.177321 sec (incl time to compute L and U)
compute C time:        0.077313 sec
reduce (C) time:       0.000725 sec
rate      15.60 million edges/sec (incl time for U=triu(A))
rate      35.45 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.183054 sec
tricount time:         0.184234 sec (saxpy method)
tri+prep time:         0.227287 sec (incl time to compute L)
compute C time:        0.183054 sec
reduce (C) time:       0.001180 sec
rate      12.17 million edges/sec (incl time for L=tril(A))
rate      15.02 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/roadNet-PA/roadNet-PA_adj.tsv.gz
--------------------------------------------------------------
matrix 1088092 by 1088092, 3083796 entries, from stdin

total time to read A matrix:       2.042234 sec

n 1088092 # edges 1541898
U=triu(A) time:        0.030809 sec

------------------------------------- dot product method:
L=tril(A) time:        0.024032 sec
# triangles 67150

L'*U time (dot):         0.042075 sec
tricount time:         0.042482 sec (dot product method)
tri+prep time:         0.097323 sec (incl time to compute L and U)
compute C time:        0.042075 sec
reduce (C) time:       0.000408 sec
rate      15.84 million edges/sec (incl time for U=triu(A))
rate      36.30 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.099221 sec
tricount time:         0.099624 sec (saxpy method)
tri+prep time:         0.123656 sec (incl time to compute L)
compute C time:        0.099221 sec
reduce (C) time:       0.000403 sec
rate      12.47 million edges/sec (incl time for L=tril(A))
rate      15.48 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/roadNet-TX/roadNet-TX_adj.tsv.gz
--------------------------------------------------------------
matrix 1379917 by 1379917, 3843320 entries, from stdin

total time to read A matrix:       2.503855 sec

n 1379917 # edges 1921660
U=triu(A) time:        0.038510 sec

------------------------------------- dot product method:
L=tril(A) time:        0.030395 sec
# triangles 82869

L'*U time (dot):         0.052171 sec
tricount time:         0.052673 sec (dot product method)
tri+prep time:         0.121578 sec (incl time to compute L and U)
compute C time:        0.052171 sec
reduce (C) time:       0.000502 sec
rate      15.81 million edges/sec (incl time for U=triu(A))
rate      36.48 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.125190 sec
tricount time:         0.125685 sec (saxpy method)
tri+prep time:         0.156080 sec (incl time to compute L)
compute C time:        0.125190 sec
reduce (C) time:       0.000496 sec
rate      12.31 million edges/sec (incl time for L=tril(A))
rate      15.29 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-1045506-262144_adj.tsv.gz
--------------------------------------------------------------
matrix 262144 by 262144, 2091012 entries, from stdin

total time to read A matrix:       1.529043 sec

n 262144 # edges 1045506
U=triu(A) time:        0.012101 sec

------------------------------------- dot product method:
L=tril(A) time:        0.011040 sec
# triangles 1044484

L'*U time (dot):         0.028844 sec
tricount time:         0.031979 sec (dot product method)
tri+prep time:         0.055119 sec (incl time to compute L and U)
compute C time:        0.028844 sec
reduce (C) time:       0.003135 sec
rate      18.97 million edges/sec (incl time for U=triu(A))
rate      32.69 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.019120 sec
tricount time:         0.022252 sec (saxpy method)
tri+prep time:         0.033291 sec (incl time to compute L)
compute C time:        0.019120 sec
reduce (C) time:       0.003131 sec
rate      31.40 million edges/sec (incl time for L=tril(A))
rate      46.99 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-16764930-4194304_adj.tsv.gz
--------------------------------------------------------------
matrix 4194304 by 4194304, 33529860 entries, from stdin

total time to read A matrix:      22.408619 sec

n 4194304 # edges 16764930
U=triu(A) time:        0.204700 sec

------------------------------------- dot product method:
L=tril(A) time:        0.177718 sec
# triangles 16760836

L'*U time (dot):         0.473161 sec
tricount time:         0.524870 sec (dot product method)
tri+prep time:         0.907289 sec (incl time to compute L and U)
compute C time:        0.473161 sec
reduce (C) time:       0.051709 sec
rate      18.48 million edges/sec (incl time for U=triu(A))
rate      31.94 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.317898 sec
tricount time:         0.369653 sec (saxpy method)
tri+prep time:         0.547371 sec (incl time to compute L)
compute C time:        0.317898 sec
reduce (C) time:       0.051755 sec
rate      30.63 million edges/sec (incl time for L=tril(A))
rate      45.35 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-260610-65536_adj.tsv.gz
--------------------------------------------------------------
matrix 65536 by 65536, 521220 entries, from stdin

total time to read A matrix:       0.357644 sec

n 65536 # edges 260610
U=triu(A) time:        0.003020 sec

------------------------------------- dot product method:
L=tril(A) time:        0.002760 sec
# triangles 260100

L'*U time (dot):         0.007221 sec
tricount time:         0.008012 sec (dot product method)
tri+prep time:         0.013792 sec (incl time to compute L and U)
compute C time:        0.007221 sec
reduce (C) time:       0.000790 sec
rate      18.90 million edges/sec (incl time for U=triu(A))
rate      32.53 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004861 sec
tricount time:         0.005642 sec (saxpy method)
tri+prep time:         0.008403 sec (incl time to compute L)
compute C time:        0.004861 sec
reduce (C) time:       0.000782 sec
rate      31.02 million edges/sec (incl time for L=tril(A))
rate      46.19 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-268386306-67108864_adj.tsv.gz
--------------------------------------------------------------
matrix 67108864 by 67108864, 536772612 entries, from stdin

total time to read A matrix:     380.887089 sec

n 67108864 # edges 268386306
U=triu(A) time:        3.254342 sec

------------------------------------- dot product method:
L=tril(A) time:        2.860389 sec
# triangles 268369924

L'*U time (dot):         7.560678 sec
tricount time:         8.416237 sec (dot product method)
tri+prep time:        14.530968 sec (incl time to compute L and U)
compute C time:        7.560678 sec
reduce (C) time:       0.855559 sec
rate      18.47 million edges/sec (incl time for U=triu(A))
rate      31.89 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         5.317474 sec
tricount time:         6.143994 sec (saxpy method)
tri+prep time:         9.004383 sec (incl time to compute L)
compute C time:        5.317474 sec
reduce (C) time:       0.826520 sec
rate      29.81 million edges/sec (incl time for L=tril(A))
rate      43.68 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-4188162-1048576_adj.tsv.gz
--------------------------------------------------------------
matrix 1048576 by 1048576, 8376324 entries, from stdin

total time to read A matrix:       5.305026 sec

n 1048576 # edges 4188162
U=triu(A) time:        0.050431 sec

------------------------------------- dot product method:
L=tril(A) time:        0.043793 sec
# triangles 4186116

L'*U time (dot):         0.118079 sec
tricount time:         0.131038 sec (dot product method)
tri+prep time:         0.225262 sec (incl time to compute L and U)
compute C time:        0.118079 sec
reduce (C) time:       0.012959 sec
rate      18.59 million edges/sec (incl time for U=triu(A))
rate      31.96 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.079693 sec
tricount time:         0.092481 sec (saxpy method)
tri+prep time:         0.136274 sec (incl time to compute L)
compute C time:        0.079693 sec
reduce (C) time:       0.012788 sec
rate      30.73 million edges/sec (incl time for L=tril(A))
rate      45.29 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/DIMACS10/hugebubbles-00020_adj.tsv.gz
--------------------------------------------------------------
matrix 21198119 by 21198119, 63580358 entries, from stdin

total time to read A matrix:      47.869620 sec

n 21198119 # edges 31790179
U=triu(A) time:        0.567392 sec

------------------------------------- dot product method:
L=tril(A) time:        0.483204 sec
# triangles 0

L'*U time (dot):         2.683724 sec
tricount time:         2.683736 sec (dot product method)
tri+prep time:         3.734332 sec (incl time to compute L and U)
compute C time:        2.683724 sec
reduce (C) time:       0.000012 sec
rate       8.51 million edges/sec (incl time for U=triu(A))
rate      11.85 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         5.874137 sec
tricount time:         5.874145 sec (saxpy method)
tri+prep time:         6.357348 sec (incl time to compute L)
compute C time:        5.874137 sec
reduce (C) time:       0.000007 sec
rate       5.00 million edges/sec (incl time for L=tril(A))
rate       5.41 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/vanHeukelum/cage15_adj.tsv.gz
--------------------------------------------------------------
matrix 5154859 by 5154859, 94044692 entries, from stdin

total time to read A matrix:      66.282032 sec

n 5154859 # edges 47022346
U=triu(A) time:        0.488073 sec

------------------------------------- dot product method:
L=tril(A) time:        0.424216 sec
# triangles 36106416

L'*U time (dot):         2.458687 sec
tricount time:         2.603259 sec (dot product method)
tri+prep time:         3.515548 sec (incl time to compute L and U)
compute C time:        2.458687 sec
reduce (C) time:       0.144572 sec
rate      13.38 million edges/sec (incl time for U=triu(A))
rate      18.06 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         1.531645 sec
tricount time:         1.676357 sec (saxpy method)
tri+prep time:         2.100573 sec (incl time to compute L)
compute C time:        1.531645 sec
reduce (C) time:       0.144712 sec
rate      22.39 million edges/sec (incl time for L=tril(A))
rate      28.05 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Freescale/circuit5M_adj.tsv.gz
--------------------------------------------------------------
matrix 5558326 by 5558326, 53967852 entries, from stdin

total time to read A matrix:      37.027194 sec

n 5558326 # edges 26983926
U=triu(A) time:        0.245256 sec

------------------------------------- dot product method:
L=tril(A) time:        0.274223 sec
# triangles 31019473

L'*U time (dot):         2.052102 sec
tricount time:         2.179004 sec (dot product method)
tri+prep time:         2.698483 sec (incl time to compute L and U)
compute C time:        2.052102 sec
reduce (C) time:       0.126903 sec
rate      10.00 million edges/sec (incl time for U=triu(A))
rate      12.38 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):       450.791148 sec
tricount time:       450.927692 sec (saxpy method)
tri+prep time:       451.201915 sec (incl time to compute L)
compute C time:      450.791148 sec
reduce (C) time:       0.136544 sec
rate       0.06 million edges/sec (incl time for L=tril(A))
rate       0.06 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale18-ef16/graph500-scale18-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 174147 by 174147, 7600696 entries, from stdin

total time to read A matrix:       5.930358 sec

n 174147 # edges 3800348
U=triu(A) time:        0.034142 sec

------------------------------------- dot product method:
L=tril(A) time:        0.031627 sec
# triangles 82287285

L'*U time (dot):         8.215886 sec
tricount time:         8.233303 sec (dot product method)
tri+prep time:         8.299072 sec (incl time to compute L and U)
compute C time:        8.215886 sec
reduce (C) time:       0.017418 sec
rate       0.46 million edges/sec (incl time for U=triu(A))
rate       0.46 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         3.502773 sec
tricount time:         3.519602 sec (saxpy method)
tri+prep time:         3.551230 sec (incl time to compute L)
compute C time:        3.502773 sec
reduce (C) time:       0.016830 sec
rate       1.07 million edges/sec (incl time for L=tril(A))
rate       1.08 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale19-ef16/graph500-scale19-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 335318 by 335318, 15459350 entries, from stdin

total time to read A matrix:      12.462007 sec

n 335318 # edges 7729675
U=triu(A) time:        0.069066 sec

------------------------------------- dot product method:
L=tril(A) time:        0.063664 sec
# triangles 186288972

L'*U time (dot):        21.791508 sec
tricount time:        21.826763 sec (dot product method)
tri+prep time:        21.959494 sec (incl time to compute L and U)
compute C time:       21.791508 sec
reduce (C) time:       0.035255 sec
rate       0.35 million edges/sec (incl time for U=triu(A))
rate       0.35 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         9.353868 sec
tricount time:         9.388072 sec (saxpy method)
tri+prep time:         9.451737 sec (incl time to compute L)
compute C time:        9.353868 sec
reduce (C) time:       0.034204 sec
rate       0.82 million edges/sec (incl time for L=tril(A))
rate       0.82 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale20-ef16/graph500-scale20-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 645820 by 645820, 31361722 entries, from stdin

total time to read A matrix:      23.666507 sec

n 645820 # edges 15680861
U=triu(A) time:        0.137862 sec

------------------------------------- dot product method:
L=tril(A) time:        0.128049 sec
# triangles 419349784

L'*U time (dot):        57.522379 sec
tricount time:        57.594128 sec (dot product method)
tri+prep time:        57.860039 sec (incl time to compute L and U)
compute C time:       57.522379 sec
reduce (C) time:       0.071749 sec
rate       0.27 million edges/sec (incl time for U=triu(A))
rate       0.27 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):        28.771933 sec
tricount time:        28.845360 sec (saxpy method)
tri+prep time:        28.973409 sec (incl time to compute L)
compute C time:       28.771933 sec
reduce (C) time:       0.073427 sec
rate       0.54 million edges/sec (incl time for L=tril(A))
rate       0.54 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale21-ef16/graph500-scale21-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 1243072 by 1243072, 63463300 entries, from stdin

total time to read A matrix:      47.123679 sec

n 1243072 # edges 31731650
U=triu(A) time:        0.278155 sec

------------------------------------- dot product method:
L=tril(A) time:        0.259027 sec
# triangles 935100883

L'*U time (dot):       147.051314 sec
tricount time:       147.197225 sec (dot product method)
tri+prep time:       147.734407 sec (incl time to compute L and U)
compute C time:      147.051314 sec
reduce (C) time:       0.145911 sec
rate       0.21 million edges/sec (incl time for U=triu(A))
rate       0.22 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):       108.952900 sec
tricount time:       109.093653 sec (saxpy method)
tri+prep time:       109.352680 sec (incl time to compute L)
compute C time:      108.952900 sec
reduce (C) time:       0.140753 sec
rate       0.29 million edges/sec (incl time for L=tril(A))
rate       0.29 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale22-ef16/graph500-scale22-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 2393285 by 2393285, 128194008 entries, from stdin

total time to read A matrix:     101.422175 sec

n 2393285 # edges 64097004
U=triu(A) time:        0.556562 sec

------------------------------------- dot product method:
L=tril(A) time:        0.521380 sec
# triangles 2067392370

L'*U time (dot):       392.386427 sec
tricount time:       392.665192 sec (dot product method)
tri+prep time:       393.743134 sec (incl time to compute L and U)
compute C time:      392.386427 sec
reduce (C) time:       0.278765 sec
rate       0.16 million edges/sec (incl time for U=triu(A))
rate       0.16 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):       369.480179 sec
tricount time:       369.763128 sec (saxpy method)
tri+prep time:       370.284508 sec (incl time to compute L)
compute C time:      369.480179 sec
reduce (C) time:       0.282949 sec
rate       0.17 million edges/sec (incl time for L=tril(A))
rate       0.17 million edges/sec (just tricount itself)


