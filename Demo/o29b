
--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Mallya/lhr71_adj.tsv.gz
--------------------------------------------------------------
matrix 70304 by 70304, 2985588 entries, from stdin

total time to read A matrix:       1.850635 sec

n 70304 # edges 1492794
U=triu(A) time:        0.012703 sec
L=tril(A) time:        0.011892 sec

------------------------------------- dot product method:
# triangles 160592

L*U' time (dot):         0.023328 sec
tricount time:         0.023606 sec (dot product method)
tri+prep time:         0.048200 sec (incl time to compute L and U)
compute C time:        0.023328 sec
reduce (C) time:       0.000278 sec
rate      30.97 million edges/sec (incl time for U=triu(A))
rate      63.24 million edges/sec (just tricount itself)

# triangles 160592

L*U' time (dot):         0.019727 sec
tricount time:         0.020000 sec (dot product method)
tri+prep time:         0.044595 sec (incl time to compute L and U)
compute C time:        0.019727 sec
reduce (C) time:       0.000273 sec
rate      33.47 million edges/sec (incl time for U=triu(A))
rate      74.64 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.020127 sec
tricount time:         0.020401 sec (saxpy method)
tri+prep time:         0.032292 sec (incl time to compute L)
compute C time:        0.020127 sec
reduce (C) time:       0.000273 sec
rate      46.23 million edges/sec (incl time for L=tril(A))
rate      73.17 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Freescale/Freescale2_adj.tsv.gz
--------------------------------------------------------------
matrix 2999349 by 2999349, 11489868 entries, from stdin

total time to read A matrix:       7.647250 sec

n 2999349 # edges 5744934
U=triu(A) time:        0.090283 sec
L=tril(A) time:        0.072031 sec

------------------------------------- dot product method:
# triangles 21027280

L*U' time (dot):         0.337345 sec
tricount time:         0.349910 sec (dot product method)
tri+prep time:         0.512224 sec (incl time to compute L and U)
compute C time:        0.337345 sec
reduce (C) time:       0.012565 sec
rate      11.22 million edges/sec (incl time for U=triu(A))
rate      16.42 million edges/sec (just tricount itself)

# triangles 21027280

L*U' time (dot):         0.309157 sec
tricount time:         0.321715 sec (dot product method)
tri+prep time:         0.484029 sec (incl time to compute L and U)
compute C time:        0.309157 sec
reduce (C) time:       0.012558 sec
rate      11.87 million edges/sec (incl time for U=triu(A))
rate      17.86 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.202465 sec
tricount time:         0.215046 sec (saxpy method)
tri+prep time:         0.287077 sec (incl time to compute L)
compute C time:        0.202465 sec
reduce (C) time:       0.012581 sec
rate      20.01 million edges/sec (incl time for L=tril(A))
rate      26.71 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/cit-HepPh/cit-HepPh_adj.tsv.gz
--------------------------------------------------------------
matrix 34546 by 34546, 841754 entries, from stdin

total time to read A matrix:       0.523861 sec

n 34546 # edges 420877
U=triu(A) time:        0.004282 sec
L=tril(A) time:        0.003529 sec

------------------------------------- dot product method:
# triangles 1276868

L*U' time (dot):         0.078454 sec
tricount time:         0.080226 sec (dot product method)
tri+prep time:         0.088037 sec (incl time to compute L and U)
compute C time:        0.078454 sec
reduce (C) time:       0.001771 sec
rate       4.78 million edges/sec (incl time for U=triu(A))
rate       5.25 million edges/sec (just tricount itself)

# triangles 1276868

L*U' time (dot):         0.074383 sec
tricount time:         0.076152 sec (dot product method)
tri+prep time:         0.083963 sec (incl time to compute L and U)
compute C time:        0.074383 sec
reduce (C) time:       0.001769 sec
rate       5.01 million edges/sec (incl time for U=triu(A))
rate       5.53 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.033447 sec
tricount time:         0.035224 sec (saxpy method)
tri+prep time:         0.038753 sec (incl time to compute L)
compute C time:        0.033447 sec
reduce (C) time:       0.001777 sec
rate      10.86 million edges/sec (incl time for L=tril(A))
rate      11.95 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/cit-HepTh/cit-HepTh_adj.tsv.gz
--------------------------------------------------------------
matrix 27770 by 27770, 704570 entries, from stdin

total time to read A matrix:       0.446605 sec

n 27770 # edges 352285
U=triu(A) time:        0.003534 sec
L=tril(A) time:        0.002936 sec

------------------------------------- dot product method:
# triangles 1478735

L*U' time (dot):         0.084150 sec
tricount time:         0.085765 sec (dot product method)
tri+prep time:         0.092235 sec (incl time to compute L and U)
compute C time:        0.084150 sec
reduce (C) time:       0.001615 sec
rate       3.82 million edges/sec (incl time for U=triu(A))
rate       4.11 million edges/sec (just tricount itself)

# triangles 1478735

L*U' time (dot):         0.080360 sec
tricount time:         0.081971 sec (dot product method)
tri+prep time:         0.088441 sec (incl time to compute L and U)
compute C time:        0.080360 sec
reduce (C) time:       0.001611 sec
rate       3.98 million edges/sec (incl time for U=triu(A))
rate       4.30 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.038661 sec
tricount time:         0.040272 sec (saxpy method)
tri+prep time:         0.043208 sec (incl time to compute L)
compute C time:        0.038661 sec
reduce (C) time:       0.001611 sec
rate       8.15 million edges/sec (incl time for L=tril(A))
rate       8.75 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/email-EuAll/email-EuAll_adj.tsv.gz
--------------------------------------------------------------
matrix 265214 by 265214, 728962 entries, from stdin

total time to read A matrix:       0.490024 sec

n 265214 # edges 364481
U=triu(A) time:        0.006347 sec
L=tril(A) time:        0.005802 sec

------------------------------------- dot product method:
# triangles 267313

L*U' time (dot):         0.053222 sec
tricount time:         0.053605 sec (dot product method)
tri+prep time:         0.065754 sec (incl time to compute L and U)
compute C time:        0.053222 sec
reduce (C) time:       0.000383 sec
rate       5.54 million edges/sec (incl time for U=triu(A))
rate       6.80 million edges/sec (just tricount itself)

# triangles 267313

L*U' time (dot):         0.051516 sec
tricount time:         0.051896 sec (dot product method)
tri+prep time:         0.064045 sec (incl time to compute L and U)
compute C time:        0.051516 sec
reduce (C) time:       0.000380 sec
rate       5.69 million edges/sec (incl time for U=triu(A))
rate       7.02 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.038606 sec
tricount time:         0.038986 sec (saxpy method)
tri+prep time:         0.044788 sec (incl time to compute L)
compute C time:        0.038606 sec
reduce (C) time:       0.000380 sec
rate       8.14 million edges/sec (incl time for L=tril(A))
rate       9.35 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/soc-Epinions1/soc-Epinions1_adj.tsv.gz
--------------------------------------------------------------
matrix 75879 by 75879, 811480 entries, from stdin

total time to read A matrix:       0.514200 sec

n 75879 # edges 405740
U=triu(A) time:        0.004551 sec
L=tril(A) time:        0.004171 sec

------------------------------------- dot product method:
# triangles 1624481

L*U' time (dot):         0.162957 sec
tricount time:         0.164321 sec (dot product method)
tri+prep time:         0.173043 sec (incl time to compute L and U)
compute C time:        0.162957 sec
reduce (C) time:       0.001364 sec
rate       2.34 million edges/sec (incl time for U=triu(A))
rate       2.47 million edges/sec (just tricount itself)

# triangles 1624481

L*U' time (dot):         0.155078 sec
tricount time:         0.156434 sec (dot product method)
tri+prep time:         0.165156 sec (incl time to compute L and U)
compute C time:        0.155078 sec
reduce (C) time:       0.001356 sec
rate       2.46 million edges/sec (incl time for U=triu(A))
rate       2.59 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.055385 sec
tricount time:         0.056740 sec (saxpy method)
tri+prep time:         0.060911 sec (incl time to compute L)
compute C time:        0.055385 sec
reduce (C) time:       0.001354 sec
rate       6.66 million edges/sec (incl time for L=tril(A))
rate       7.15 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/soc-Slashdot0811/soc-Slashdot0811_adj.tsv.gz
--------------------------------------------------------------
matrix 77360 by 77360, 938360 entries, from stdin

total time to read A matrix:       0.644543 sec

n 77360 # edges 469180
U=triu(A) time:        0.005169 sec
L=tril(A) time:        0.004489 sec

------------------------------------- dot product method:
# triangles 551724

L*U' time (dot):         0.135738 sec
tricount time:         0.136577 sec (dot product method)
tri+prep time:         0.146235 sec (incl time to compute L and U)
compute C time:        0.135738 sec
reduce (C) time:       0.000840 sec
rate       3.21 million edges/sec (incl time for U=triu(A))
rate       3.44 million edges/sec (just tricount itself)

# triangles 551724

L*U' time (dot):         0.127282 sec
tricount time:         0.128118 sec (dot product method)
tri+prep time:         0.137776 sec (incl time to compute L and U)
compute C time:        0.127282 sec
reduce (C) time:       0.000837 sec
rate       3.41 million edges/sec (incl time for U=triu(A))
rate       3.66 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.049505 sec
tricount time:         0.050344 sec (saxpy method)
tri+prep time:         0.054833 sec (incl time to compute L)
compute C time:        0.049505 sec
reduce (C) time:       0.000839 sec
rate       8.56 million edges/sec (incl time for L=tril(A))
rate       9.32 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/soc-Slashdot0902/soc-Slashdot0902_adj.tsv.gz
--------------------------------------------------------------
matrix 82168 by 82168, 1008460 entries, from stdin

total time to read A matrix:       0.649334 sec

n 82168 # edges 504230
U=triu(A) time:        0.005579 sec
L=tril(A) time:        0.004834 sec

------------------------------------- dot product method:
# triangles 602592

L*U' time (dot):         0.146406 sec
tricount time:         0.147313 sec (dot product method)
tri+prep time:         0.157726 sec (incl time to compute L and U)
compute C time:        0.146406 sec
reduce (C) time:       0.000907 sec
rate       3.20 million edges/sec (incl time for U=triu(A))
rate       3.42 million edges/sec (just tricount itself)

# triangles 602592

L*U' time (dot):         0.138431 sec
tricount time:         0.139333 sec (dot product method)
tri+prep time:         0.149746 sec (incl time to compute L and U)
compute C time:        0.138431 sec
reduce (C) time:       0.000902 sec
rate       3.37 million edges/sec (incl time for U=triu(A))
rate       3.62 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.053986 sec
tricount time:         0.054888 sec (saxpy method)
tri+prep time:         0.059721 sec (incl time to compute L)
compute C time:        0.053986 sec
reduce (C) time:       0.000902 sec
rate       8.44 million edges/sec (incl time for L=tril(A))
rate       9.19 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0312/amazon0312_adj.tsv.gz
--------------------------------------------------------------
matrix 400727 by 400727, 4699738 entries, from stdin

total time to read A matrix:       3.141266 sec

n 400727 # edges 2349869
U=triu(A) time:        0.029710 sec
L=tril(A) time:        0.022109 sec

------------------------------------- dot product method:
# triangles 3686467

L*U' time (dot):         0.277004 sec
tricount time:         0.285471 sec (dot product method)
tri+prep time:         0.337289 sec (incl time to compute L and U)
compute C time:        0.277004 sec
reduce (C) time:       0.008467 sec
rate       6.97 million edges/sec (incl time for U=triu(A))
rate       8.23 million edges/sec (just tricount itself)

# triangles 3686467

L*U' time (dot):         0.277566 sec
tricount time:         0.286029 sec (dot product method)
tri+prep time:         0.337847 sec (incl time to compute L and U)
compute C time:        0.277566 sec
reduce (C) time:       0.008464 sec
rate       6.96 million edges/sec (incl time for U=triu(A))
rate       8.22 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.188867 sec
tricount time:         0.197318 sec (saxpy method)
tri+prep time:         0.219427 sec (incl time to compute L)
compute C time:        0.188867 sec
reduce (C) time:       0.008451 sec
rate      10.71 million edges/sec (incl time for L=tril(A))
rate      11.91 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0505/amazon0505_adj.tsv.gz
--------------------------------------------------------------
matrix 410236 by 410236, 4878874 entries, from stdin

total time to read A matrix:       3.232767 sec

n 410236 # edges 2439437
U=triu(A) time:        0.030836 sec
L=tril(A) time:        0.022813 sec

------------------------------------- dot product method:
# triangles 3951063

L*U' time (dot):         0.290820 sec
tricount time:         0.299717 sec (dot product method)
tri+prep time:         0.353365 sec (incl time to compute L and U)
compute C time:        0.290820 sec
reduce (C) time:       0.008896 sec
rate       6.90 million edges/sec (incl time for U=triu(A))
rate       8.14 million edges/sec (just tricount itself)

# triangles 3951063

L*U' time (dot):         0.348409 sec
tricount time:         0.357305 sec (dot product method)
tri+prep time:         0.410954 sec (incl time to compute L and U)
compute C time:        0.348409 sec
reduce (C) time:       0.008896 sec
rate       5.94 million edges/sec (incl time for U=triu(A))
rate       6.83 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.199246 sec
tricount time:         0.208290 sec (saxpy method)
tri+prep time:         0.231103 sec (incl time to compute L)
compute C time:        0.199246 sec
reduce (C) time:       0.009044 sec
rate      10.56 million edges/sec (incl time for L=tril(A))
rate      11.71 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0601/amazon0601_adj.tsv.gz
--------------------------------------------------------------
matrix 403394 by 403394, 4886816 entries, from stdin

total time to read A matrix:       3.252850 sec

n 403394 # edges 2443408
U=triu(A) time:        0.030675 sec
L=tril(A) time:        0.022909 sec

------------------------------------- dot product method:
# triangles 3986507

L*U' time (dot):         0.294056 sec
tricount time:         0.302988 sec (dot product method)
tri+prep time:         0.356572 sec (incl time to compute L and U)
compute C time:        0.294056 sec
reduce (C) time:       0.008932 sec
rate       6.85 million edges/sec (incl time for U=triu(A))
rate       8.06 million edges/sec (just tricount itself)

# triangles 3986507

L*U' time (dot):         0.297637 sec
tricount time:         0.306562 sec (dot product method)
tri+prep time:         0.360146 sec (incl time to compute L and U)
compute C time:        0.297637 sec
reduce (C) time:       0.008925 sec
rate       6.78 million edges/sec (incl time for U=triu(A))
rate       7.97 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.192455 sec
tricount time:         0.201446 sec (saxpy method)
tri+prep time:         0.224355 sec (incl time to compute L)
compute C time:        0.192455 sec
reduce (C) time:       0.008991 sec
rate      10.89 million edges/sec (incl time for L=tril(A))
rate      12.13 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/flickrEdges/flickrEdges_adj.tsv.gz
--------------------------------------------------------------
matrix 105938 by 105938, 4633896 entries, from stdin

total time to read A matrix:       3.056707 sec

n 105938 # edges 2316948
U=triu(A) time:        0.020983 sec
L=tril(A) time:        0.018294 sec

------------------------------------- dot product method:
# triangles 107987357

L*U' time (dot):         2.289396 sec
tricount time:         2.300392 sec (dot product method)
tri+prep time:         2.339669 sec (incl time to compute L and U)
compute C time:        2.289396 sec
reduce (C) time:       0.010997 sec
rate       0.99 million edges/sec (incl time for U=triu(A))
rate       1.01 million edges/sec (just tricount itself)

# triangles 107987357

L*U' time (dot):         2.214365 sec
tricount time:         2.225375 sec (dot product method)
tri+prep time:         2.264652 sec (incl time to compute L and U)
compute C time:        2.214365 sec
reduce (C) time:       0.011010 sec
rate       1.02 million edges/sec (incl time for U=triu(A))
rate       1.04 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         1.006102 sec
tricount time:         1.017019 sec (saxpy method)
tri+prep time:         1.035312 sec (incl time to compute L)
compute C time:        1.006102 sec
reduce (C) time:       0.010917 sec
rate       2.24 million edges/sec (incl time for L=tril(A))
rate       2.28 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/cit-Patents/cit-Patents_adj.tsv.gz
--------------------------------------------------------------
matrix 3774768 by 3774768, 33037894 entries, from stdin

total time to read A matrix:      24.927970 sec

n 3774768 # edges 16518947
U=triu(A) time:        0.220062 sec
L=tril(A) time:        0.156643 sec

------------------------------------- dot product method:
# triangles 7515023

L*U' time (dot):         3.381281 sec
tricount time:         3.405454 sec (dot product method)
tri+prep time:         3.782159 sec (incl time to compute L and U)
compute C time:        3.381281 sec
reduce (C) time:       0.024173 sec
rate       4.37 million edges/sec (incl time for U=triu(A))
rate       4.85 million edges/sec (just tricount itself)

# triangles 7515023

L*U' time (dot):         3.194231 sec
tricount time:         3.218459 sec (dot product method)
tri+prep time:         3.595164 sec (incl time to compute L and U)
compute C time:        3.194231 sec
reduce (C) time:       0.024228 sec
rate       4.59 million edges/sec (incl time for U=triu(A))
rate       5.13 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         2.407841 sec
tricount time:         2.432261 sec (saxpy method)
tri+prep time:         2.588904 sec (incl time to compute L)
compute C time:        2.407841 sec
reduce (C) time:       0.024420 sec
rate       6.38 million edges/sec (incl time for L=tril(A))
rate       6.79 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/SNAP/soc-LiveJournal1_adj.tsv.gz
--------------------------------------------------------------
matrix 4847571 by 4847571, 85702474 entries, from stdin

total time to read A matrix:      63.070119 sec

n 4847571 # edges 42851237
U=triu(A) time:        0.470757 sec
L=tril(A) time:        0.377785 sec

------------------------------------- dot product method:
# triangles 285730264

L*U' time (dot):        18.899363 sec
tricount time:        19.058800 sec (dot product method)
tri+prep time:        19.907341 sec (incl time to compute L and U)
compute C time:       18.899363 sec
reduce (C) time:       0.159437 sec
rate       2.15 million edges/sec (incl time for U=triu(A))
rate       2.25 million edges/sec (just tricount itself)

# triangles 285730264

L*U' time (dot):        18.186162 sec
tricount time:        18.344917 sec (dot product method)
tri+prep time:        19.193458 sec (incl time to compute L and U)
compute C time:       18.186162 sec
reduce (C) time:       0.158755 sec
rate       2.23 million edges/sec (incl time for U=triu(A))
rate       2.34 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):        10.257278 sec
tricount time:        10.416432 sec (saxpy method)
tri+prep time:        10.794217 sec (incl time to compute L)
compute C time:       10.257278 sec
reduce (C) time:       0.159154 sec
rate       3.97 million edges/sec (incl time for L=tril(A))
rate       4.11 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Gleich/wb-edu_adj.tsv.gz
--------------------------------------------------------------
matrix 9845725 by 9845725, 92472210 entries, from stdin

total time to read A matrix:      63.634468 sec

n 9845725 # edges 46236105
U=triu(A) time:        0.555173 sec
L=tril(A) time:        0.448947 sec

------------------------------------- dot product method:
# triangles 254718147

L*U' time (dot):         5.394780 sec
tricount time:         5.576641 sec (dot product method)
tri+prep time:         6.580760 sec (incl time to compute L and U)
compute C time:        5.394780 sec
reduce (C) time:       0.181861 sec
rate       7.03 million edges/sec (incl time for U=triu(A))
rate       8.29 million edges/sec (just tricount itself)

# triangles 254718147

L*U' time (dot):         5.248285 sec
tricount time:         5.440064 sec (dot product method)
tri+prep time:         6.444183 sec (incl time to compute L and U)
compute C time:        5.248285 sec
reduce (C) time:       0.191779 sec
rate       7.17 million edges/sec (incl time for U=triu(A))
rate       8.50 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         4.007924 sec
tricount time:         4.197862 sec (saxpy method)
tri+prep time:         4.646808 sec (incl time to compute L)
compute C time:        4.007924 sec
reduce (C) time:       0.189938 sec
rate       9.95 million edges/sec (incl time for L=tril(A))
rate      11.01 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0302/amazon0302_adj.tsv.gz
--------------------------------------------------------------
matrix 262111 by 262111, 1799584 entries, from stdin

total time to read A matrix:       1.189981 sec

n 262111 # edges 899792
U=triu(A) time:        0.013175 sec
L=tril(A) time:        0.009956 sec

------------------------------------- dot product method:
# triangles 717719

L*U' time (dot):         0.053447 sec
tricount time:         0.056019 sec (dot product method)
tri+prep time:         0.079150 sec (incl time to compute L and U)
compute C time:        0.053447 sec
reduce (C) time:       0.002572 sec
rate      11.37 million edges/sec (incl time for U=triu(A))
rate      16.06 million edges/sec (just tricount itself)

# triangles 717719

L*U' time (dot):         0.053485 sec
tricount time:         0.056045 sec (dot product method)
tri+prep time:         0.079176 sec (incl time to compute L and U)
compute C time:        0.053485 sec
reduce (C) time:       0.002560 sec
rate      11.36 million edges/sec (incl time for U=triu(A))
rate      16.05 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.045278 sec
tricount time:         0.047841 sec (saxpy method)
tri+prep time:         0.057797 sec (incl time to compute L)
compute C time:        0.045278 sec
reduce (C) time:       0.002563 sec
rate      15.57 million edges/sec (incl time for L=tril(A))
rate      18.81 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/as-caida20071105/as-caida20071105_adj.tsv.gz
--------------------------------------------------------------
matrix 26475 by 26475, 106762 entries, from stdin

total time to read A matrix:       0.066004 sec

n 26475 # edges 53381
U=triu(A) time:        0.000891 sec
L=tril(A) time:        0.000724 sec

------------------------------------- dot product method:
# triangles 36365

L*U' time (dot):         0.005556 sec
tricount time:         0.005634 sec (dot product method)
tri+prep time:         0.007249 sec (incl time to compute L and U)
compute C time:        0.005556 sec
reduce (C) time:       0.000078 sec
rate       7.36 million edges/sec (incl time for U=triu(A))
rate       9.48 million edges/sec (just tricount itself)

# triangles 36365

L*U' time (dot):         0.005503 sec
tricount time:         0.005579 sec (dot product method)
tri+prep time:         0.007193 sec (incl time to compute L and U)
compute C time:        0.005503 sec
reduce (C) time:       0.000076 sec
rate       7.42 million edges/sec (incl time for U=triu(A))
rate       9.57 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004982 sec
tricount time:         0.005057 sec (saxpy method)
tri+prep time:         0.005781 sec (incl time to compute L)
compute C time:        0.004982 sec
reduce (C) time:       0.000075 sec
rate       9.23 million edges/sec (incl time for L=tril(A))
rate      10.56 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/as20000102/as20000102_adj.tsv.gz
--------------------------------------------------------------
matrix 6474 by 6474, 25144 entries, from stdin

total time to read A matrix:       0.014736 sec

n 6474 # edges 12572
U=triu(A) time:        0.000221 sec
L=tril(A) time:        0.000173 sec

------------------------------------- dot product method:
# triangles 6584

L*U' time (dot):         0.000838 sec
tricount time:         0.000856 sec (dot product method)
tri+prep time:         0.001250 sec (incl time to compute L and U)
compute C time:        0.000838 sec
reduce (C) time:       0.000018 sec
rate      10.06 million edges/sec (incl time for U=triu(A))
rate      14.69 million edges/sec (just tricount itself)

# triangles 6584

L*U' time (dot):         0.000787 sec
tricount time:         0.000803 sec (dot product method)
tri+prep time:         0.001196 sec (incl time to compute L and U)
compute C time:        0.000787 sec
reduce (C) time:       0.000016 sec
rate      10.51 million edges/sec (incl time for U=triu(A))
rate      15.67 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000538 sec
tricount time:         0.000553 sec (saxpy method)
tri+prep time:         0.000726 sec (incl time to compute L)
compute C time:        0.000538 sec
reduce (C) time:       0.000016 sec
rate      17.31 million edges/sec (incl time for L=tril(A))
rate      22.72 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-AstroPh/ca-AstroPh_adj.tsv.gz
--------------------------------------------------------------
matrix 18772 by 18772, 396100 entries, from stdin

total time to read A matrix:       0.249153 sec

n 18772 # edges 198050
U=triu(A) time:        0.002016 sec
L=tril(A) time:        0.001693 sec

------------------------------------- dot product method:
# triangles 1351441

L*U' time (dot):         0.041107 sec
tricount time:         0.042083 sec (dot product method)
tri+prep time:         0.045792 sec (incl time to compute L and U)
compute C time:        0.041107 sec
reduce (C) time:       0.000976 sec
rate       4.32 million edges/sec (incl time for U=triu(A))
rate       4.71 million edges/sec (just tricount itself)

# triangles 1351441

L*U' time (dot):         0.038855 sec
tricount time:         0.039824 sec (dot product method)
tri+prep time:         0.043533 sec (incl time to compute L and U)
compute C time:        0.038855 sec
reduce (C) time:       0.000969 sec
rate       4.55 million edges/sec (incl time for U=triu(A))
rate       4.97 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.017911 sec
tricount time:         0.018881 sec (saxpy method)
tri+prep time:         0.020575 sec (incl time to compute L)
compute C time:        0.017911 sec
reduce (C) time:       0.000970 sec
rate       9.63 million edges/sec (incl time for L=tril(A))
rate      10.49 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-CondMat/ca-CondMat_adj.tsv.gz
--------------------------------------------------------------
matrix 23133 by 23133, 186878 entries, from stdin

total time to read A matrix:       0.116752 sec

n 23133 # edges 93439
U=triu(A) time:        0.001266 sec
L=tril(A) time:        0.000955 sec

------------------------------------- dot product method:
# triangles 173361

L*U' time (dot):         0.007464 sec
tricount time:         0.007822 sec (dot product method)
tri+prep time:         0.010043 sec (incl time to compute L and U)
compute C time:        0.007464 sec
reduce (C) time:       0.000358 sec
rate       9.30 million edges/sec (incl time for U=triu(A))
rate      11.95 million edges/sec (just tricount itself)

# triangles 173361

L*U' time (dot):         0.007212 sec
tricount time:         0.007568 sec (dot product method)
tri+prep time:         0.009789 sec (incl time to compute L and U)
compute C time:        0.007212 sec
reduce (C) time:       0.000357 sec
rate       9.55 million edges/sec (incl time for U=triu(A))
rate      12.35 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004534 sec
tricount time:         0.004891 sec (saxpy method)
tri+prep time:         0.005845 sec (incl time to compute L)
compute C time:        0.004534 sec
reduce (C) time:       0.000357 sec
rate      15.99 million edges/sec (incl time for L=tril(A))
rate      19.11 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-GrQc/ca-GrQc_adj.tsv.gz
--------------------------------------------------------------
matrix 5242 by 5242, 28968 entries, from stdin

total time to read A matrix:       0.016980 sec

n 5242 # edges 14484
U=triu(A) time:        0.000232 sec
L=tril(A) time:        0.000181 sec

------------------------------------- dot product method:
# triangles 48260

L*U' time (dot):         0.000861 sec
tricount time:         0.000913 sec (dot product method)
tri+prep time:         0.001326 sec (incl time to compute L and U)
compute C time:        0.000861 sec
reduce (C) time:       0.000052 sec
rate      10.92 million edges/sec (incl time for U=triu(A))
rate      15.87 million edges/sec (just tricount itself)

# triangles 48260

L*U' time (dot):         0.000798 sec
tricount time:         0.000848 sec (dot product method)
tri+prep time:         0.001262 sec (incl time to compute L and U)
compute C time:        0.000798 sec
reduce (C) time:       0.000051 sec
rate      11.48 million edges/sec (incl time for U=triu(A))
rate      17.07 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000612 sec
tricount time:         0.000663 sec (saxpy method)
tri+prep time:         0.000844 sec (incl time to compute L)
compute C time:        0.000612 sec
reduce (C) time:       0.000051 sec
rate      17.16 million edges/sec (incl time for L=tril(A))
rate      21.84 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-HepPh/ca-HepPh_adj.tsv.gz
--------------------------------------------------------------
matrix 12008 by 12008, 236978 entries, from stdin

total time to read A matrix:       0.143846 sec

n 12008 # edges 118489
U=triu(A) time:        0.001189 sec
L=tril(A) time:        0.000992 sec

------------------------------------- dot product method:
# triangles 3358499

L*U' time (dot):         0.038254 sec
tricount time:         0.038857 sec (dot product method)
tri+prep time:         0.041038 sec (incl time to compute L and U)
compute C time:        0.038254 sec
reduce (C) time:       0.000603 sec
rate       2.89 million edges/sec (incl time for U=triu(A))
rate       3.05 million edges/sec (just tricount itself)

# triangles 3358499

L*U' time (dot):         0.035422 sec
tricount time:         0.036020 sec (dot product method)
tri+prep time:         0.038201 sec (incl time to compute L and U)
compute C time:        0.035422 sec
reduce (C) time:       0.000599 sec
rate       3.10 million edges/sec (incl time for U=triu(A))
rate       3.29 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.017700 sec
tricount time:         0.018299 sec (saxpy method)
tri+prep time:         0.019291 sec (incl time to compute L)
compute C time:        0.017700 sec
reduce (C) time:       0.000599 sec
rate       6.14 million edges/sec (incl time for L=tril(A))
rate       6.48 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-HepTh/ca-HepTh_adj.tsv.gz
--------------------------------------------------------------
matrix 9877 by 9877, 51946 entries, from stdin

total time to read A matrix:       0.030885 sec

n 9877 # edges 25973
U=triu(A) time:        0.000426 sec
L=tril(A) time:        0.000319 sec

------------------------------------- dot product method:
# triangles 28339

L*U' time (dot):         0.001388 sec
tricount time:         0.001464 sec (dot product method)
tri+prep time:         0.002208 sec (incl time to compute L and U)
compute C time:        0.001388 sec
reduce (C) time:       0.000075 sec
rate      11.76 million edges/sec (incl time for U=triu(A))
rate      17.74 million edges/sec (just tricount itself)

# triangles 28339

L*U' time (dot):         0.001317 sec
tricount time:         0.001391 sec (dot product method)
tri+prep time:         0.002135 sec (incl time to compute L and U)
compute C time:        0.001317 sec
reduce (C) time:       0.000074 sec
rate      12.16 million edges/sec (incl time for U=triu(A))
rate      18.68 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.001057 sec
tricount time:         0.001131 sec (saxpy method)
tri+prep time:         0.001450 sec (incl time to compute L)
compute C time:        0.001057 sec
reduce (C) time:       0.000074 sec
rate      17.91 million edges/sec (incl time for L=tril(A))
rate      22.96 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/email-Enron/email-Enron_adj.tsv.gz
--------------------------------------------------------------
matrix 36692 by 36692, 367662 entries, from stdin

total time to read A matrix:       0.230993 sec

n 36692 # edges 183831
U=triu(A) time:        0.002195 sec
L=tril(A) time:        0.001799 sec

------------------------------------- dot product method:
# triangles 727044

L*U' time (dot):         0.044309 sec
tricount time:         0.045085 sec (dot product method)
tri+prep time:         0.049079 sec (incl time to compute L and U)
compute C time:        0.044309 sec
reduce (C) time:       0.000776 sec
rate       3.75 million edges/sec (incl time for U=triu(A))
rate       4.08 million edges/sec (just tricount itself)

# triangles 727044

L*U' time (dot):         0.042272 sec
tricount time:         0.043044 sec (dot product method)
tri+prep time:         0.047039 sec (incl time to compute L and U)
compute C time:        0.042272 sec
reduce (C) time:       0.000772 sec
rate       3.91 million edges/sec (incl time for U=triu(A))
rate       4.27 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.019506 sec
tricount time:         0.020279 sec (saxpy method)
tri+prep time:         0.022078 sec (incl time to compute L)
compute C time:        0.019506 sec
reduce (C) time:       0.000773 sec
rate       8.33 million edges/sec (incl time for L=tril(A))
rate       9.07 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/facebook_combined/facebook_combined_adj.tsv.gz
--------------------------------------------------------------
matrix 4039 by 4039, 176468 entries, from stdin

total time to read A matrix:       0.102601 sec

n 4039 # edges 88234
U=triu(A) time:        0.000777 sec
L=tril(A) time:        0.000670 sec

------------------------------------- dot product method:
# triangles 1612010

L*U' time (dot):         0.027007 sec
tricount time:         0.027488 sec (dot product method)
tri+prep time:         0.028935 sec (incl time to compute L and U)
compute C time:        0.027007 sec
reduce (C) time:       0.000481 sec
rate       3.05 million edges/sec (incl time for U=triu(A))
rate       3.21 million edges/sec (just tricount itself)

# triangles 1612010

L*U' time (dot):         0.025251 sec
tricount time:         0.025729 sec (dot product method)
tri+prep time:         0.027176 sec (incl time to compute L and U)
compute C time:        0.025251 sec
reduce (C) time:       0.000479 sec
rate       3.25 million edges/sec (incl time for U=triu(A))
rate       3.43 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.010711 sec
tricount time:         0.011194 sec (saxpy method)
tri+prep time:         0.011864 sec (incl time to compute L)
compute C time:        0.010711 sec
reduce (C) time:       0.000483 sec
rate       7.44 million edges/sec (incl time for L=tril(A))
rate       7.88 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/loc-brightkite_edges/loc-brightkite_edges_adj.tsv.gz
--------------------------------------------------------------
matrix 58228 by 58228, 428156 entries, from stdin

total time to read A matrix:       0.271697 sec

n 58228 # edges 214078
U=triu(A) time:        0.002802 sec
L=tril(A) time:        0.002393 sec

------------------------------------- dot product method:
# triangles 494728

L*U' time (dot):         0.031275 sec
tricount time:         0.031826 sec (dot product method)
tri+prep time:         0.037021 sec (incl time to compute L and U)
compute C time:        0.031275 sec
reduce (C) time:       0.000552 sec
rate       5.78 million edges/sec (incl time for U=triu(A))
rate       6.73 million edges/sec (just tricount itself)

# triangles 494728

L*U' time (dot):         0.029769 sec
tricount time:         0.030317 sec (dot product method)
tri+prep time:         0.035512 sec (incl time to compute L and U)
compute C time:        0.029769 sec
reduce (C) time:       0.000549 sec
rate       6.03 million edges/sec (incl time for U=triu(A))
rate       7.06 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.013213 sec
tricount time:         0.013761 sec (saxpy method)
tri+prep time:         0.016154 sec (incl time to compute L)
compute C time:        0.013213 sec
reduce (C) time:       0.000548 sec
rate      13.25 million edges/sec (incl time for L=tril(A))
rate      15.56 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/loc-gowalla_edges/loc-gowalla_edges_adj.tsv.gz
--------------------------------------------------------------
matrix 196591 by 196591, 1900654 entries, from stdin

total time to read A matrix:       1.282897 sec

n 196591 # edges 950327
U=triu(A) time:        0.011723 sec
L=tril(A) time:        0.009358 sec

------------------------------------- dot product method:
# triangles 2273138

L*U' time (dot):         0.210364 sec
tricount time:         0.213341 sec (dot product method)
tri+prep time:         0.234422 sec (incl time to compute L and U)
compute C time:        0.210364 sec
reduce (C) time:       0.002977 sec
rate       4.05 million edges/sec (incl time for U=triu(A))
rate       4.45 million edges/sec (just tricount itself)

# triangles 2273138

L*U' time (dot):         0.202874 sec
tricount time:         0.205846 sec (dot product method)
tri+prep time:         0.226927 sec (incl time to compute L and U)
compute C time:        0.202874 sec
reduce (C) time:       0.002972 sec
rate       4.19 million edges/sec (incl time for U=triu(A))
rate       4.62 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.205482 sec
tricount time:         0.208457 sec (saxpy method)
tri+prep time:         0.217815 sec (incl time to compute L)
compute C time:        0.205482 sec
reduce (C) time:       0.002974 sec
rate       4.36 million edges/sec (incl time for L=tril(A))
rate       4.56 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010331/oregon1_010331_adj.tsv.gz
--------------------------------------------------------------
matrix 10670 by 10670, 44004 entries, from stdin

total time to read A matrix:       0.026132 sec

n 10670 # edges 22002
U=triu(A) time:        0.000355 sec
L=tril(A) time:        0.000285 sec

------------------------------------- dot product method:
# triangles 17144

L*U' time (dot):         0.001848 sec
tricount time:         0.001888 sec (dot product method)
tri+prep time:         0.002527 sec (incl time to compute L and U)
compute C time:        0.001848 sec
reduce (C) time:       0.000040 sec
rate       8.71 million edges/sec (incl time for U=triu(A))
rate      11.65 million edges/sec (just tricount itself)

# triangles 17144

L*U' time (dot):         0.001793 sec
tricount time:         0.001832 sec (dot product method)
tri+prep time:         0.002471 sec (incl time to compute L and U)
compute C time:        0.001793 sec
reduce (C) time:       0.000038 sec
rate       8.90 million edges/sec (incl time for U=triu(A))
rate      12.01 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002110 sec
tricount time:         0.002149 sec (saxpy method)
tri+prep time:         0.002434 sec (incl time to compute L)
compute C time:        0.002110 sec
reduce (C) time:       0.000039 sec
rate       9.04 million edges/sec (incl time for L=tril(A))
rate      10.24 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010407/oregon1_010407_adj.tsv.gz
--------------------------------------------------------------
matrix 10729 by 10729, 43998 entries, from stdin

total time to read A matrix:       0.026024 sec

n 10729 # edges 21999
U=triu(A) time:        0.000355 sec
L=tril(A) time:        0.000284 sec

------------------------------------- dot product method:
# triangles 15834

L*U' time (dot):         0.001816 sec
tricount time:         0.001856 sec (dot product method)
tri+prep time:         0.002495 sec (incl time to compute L and U)
compute C time:        0.001816 sec
reduce (C) time:       0.000039 sec
rate       8.82 million edges/sec (incl time for U=triu(A))
rate      11.85 million edges/sec (just tricount itself)

# triangles 15834

L*U' time (dot):         0.001780 sec
tricount time:         0.001818 sec (dot product method)
tri+prep time:         0.002457 sec (incl time to compute L and U)
compute C time:        0.001780 sec
reduce (C) time:       0.000038 sec
rate       8.95 million edges/sec (incl time for U=triu(A))
rate      12.10 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002166 sec
tricount time:         0.002204 sec (saxpy method)
tri+prep time:         0.002488 sec (incl time to compute L)
compute C time:        0.002166 sec
reduce (C) time:       0.000038 sec
rate       8.84 million edges/sec (incl time for L=tril(A))
rate       9.98 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010414/oregon1_010414_adj.tsv.gz
--------------------------------------------------------------
matrix 10790 by 10790, 44938 entries, from stdin

total time to read A matrix:       0.026607 sec

n 10790 # edges 22469
U=triu(A) time:        0.000366 sec
L=tril(A) time:        0.000290 sec

------------------------------------- dot product method:
# triangles 18237

L*U' time (dot):         0.001922 sec
tricount time:         0.001964 sec (dot product method)
tri+prep time:         0.002620 sec (incl time to compute L and U)
compute C time:        0.001922 sec
reduce (C) time:       0.000042 sec
rate       8.58 million edges/sec (incl time for U=triu(A))
rate      11.44 million edges/sec (just tricount itself)

# triangles 18237

L*U' time (dot):         0.001884 sec
tricount time:         0.001925 sec (dot product method)
tri+prep time:         0.002581 sec (incl time to compute L and U)
compute C time:        0.001884 sec
reduce (C) time:       0.000041 sec
rate       8.70 million edges/sec (incl time for U=triu(A))
rate      11.67 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002263 sec
tricount time:         0.002304 sec (saxpy method)
tri+prep time:         0.002594 sec (incl time to compute L)
compute C time:        0.002263 sec
reduce (C) time:       0.000040 sec
rate       8.66 million edges/sec (incl time for L=tril(A))
rate       9.75 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010421/oregon1_010421_adj.tsv.gz
--------------------------------------------------------------
matrix 10859 by 10859, 45494 entries, from stdin

total time to read A matrix:       0.027027 sec

n 10859 # edges 22747
U=triu(A) time:        0.000369 sec
L=tril(A) time:        0.000295 sec

------------------------------------- dot product method:
# triangles 19108

L*U' time (dot):         0.001977 sec
tricount time:         0.002020 sec (dot product method)
tri+prep time:         0.002684 sec (incl time to compute L and U)
compute C time:        0.001977 sec
reduce (C) time:       0.000043 sec
rate       8.48 million edges/sec (incl time for U=triu(A))
rate      11.26 million edges/sec (just tricount itself)

# triangles 19108

L*U' time (dot):         0.001938 sec
tricount time:         0.001979 sec (dot product method)
tri+prep time:         0.002643 sec (incl time to compute L and U)
compute C time:        0.001938 sec
reduce (C) time:       0.000041 sec
rate       8.61 million edges/sec (incl time for U=triu(A))
rate      11.49 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002298 sec
tricount time:         0.002339 sec (saxpy method)
tri+prep time:         0.002635 sec (incl time to compute L)
compute C time:        0.002298 sec
reduce (C) time:       0.000041 sec
rate       8.63 million edges/sec (incl time for L=tril(A))
rate       9.72 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010428/oregon1_010428_adj.tsv.gz
--------------------------------------------------------------
matrix 10886 by 10886, 44986 entries, from stdin

total time to read A matrix:       0.026655 sec

n 10886 # edges 22493
U=triu(A) time:        0.000367 sec
L=tril(A) time:        0.000292 sec

------------------------------------- dot product method:
# triangles 17645

L*U' time (dot):         0.001899 sec
tricount time:         0.001940 sec (dot product method)
tri+prep time:         0.002599 sec (incl time to compute L and U)
compute C time:        0.001899 sec
reduce (C) time:       0.000041 sec
rate       8.66 million edges/sec (incl time for U=triu(A))
rate      11.60 million edges/sec (just tricount itself)

# triangles 17645

L*U' time (dot):         0.001869 sec
tricount time:         0.001908 sec (dot product method)
tri+prep time:         0.002567 sec (incl time to compute L and U)
compute C time:        0.001869 sec
reduce (C) time:       0.000039 sec
rate       8.76 million edges/sec (incl time for U=triu(A))
rate      11.79 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002267 sec
tricount time:         0.002307 sec (saxpy method)
tri+prep time:         0.002599 sec (incl time to compute L)
compute C time:        0.002267 sec
reduce (C) time:       0.000039 sec
rate       8.66 million edges/sec (incl time for L=tril(A))
rate       9.75 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010505/oregon1_010505_adj.tsv.gz
--------------------------------------------------------------
matrix 10943 by 10943, 45214 entries, from stdin

total time to read A matrix:       0.026795 sec

n 10943 # edges 22607
U=triu(A) time:        0.000369 sec
L=tril(A) time:        0.000296 sec

------------------------------------- dot product method:
# triangles 17597

L*U' time (dot):         0.001900 sec
tricount time:         0.001941 sec (dot product method)
tri+prep time:         0.002606 sec (incl time to compute L and U)
compute C time:        0.001900 sec
reduce (C) time:       0.000041 sec
rate       8.67 million edges/sec (incl time for U=triu(A))
rate      11.65 million edges/sec (just tricount itself)

# triangles 17597

L*U' time (dot):         0.001866 sec
tricount time:         0.001906 sec (dot product method)
tri+prep time:         0.002571 sec (incl time to compute L and U)
compute C time:        0.001866 sec
reduce (C) time:       0.000040 sec
rate       8.79 million edges/sec (incl time for U=triu(A))
rate      11.86 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002271 sec
tricount time:         0.002310 sec (saxpy method)
tri+prep time:         0.002606 sec (incl time to compute L)
compute C time:        0.002271 sec
reduce (C) time:       0.000039 sec
rate       8.68 million edges/sec (incl time for L=tril(A))
rate       9.79 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010512/oregon1_010512_adj.tsv.gz
--------------------------------------------------------------
matrix 11011 by 11011, 45354 entries, from stdin

total time to read A matrix:       0.027063 sec

n 11011 # edges 22677
U=triu(A) time:        0.000379 sec
L=tril(A) time:        0.000297 sec

------------------------------------- dot product method:
# triangles 17598

L*U' time (dot):         0.001909 sec
tricount time:         0.001950 sec (dot product method)
tri+prep time:         0.002626 sec (incl time to compute L and U)
compute C time:        0.001909 sec
reduce (C) time:       0.000041 sec
rate       8.63 million edges/sec (incl time for U=triu(A))
rate      11.63 million edges/sec (just tricount itself)

# triangles 17598

L*U' time (dot):         0.001879 sec
tricount time:         0.001919 sec (dot product method)
tri+prep time:         0.002595 sec (incl time to compute L and U)
compute C time:        0.001879 sec
reduce (C) time:       0.000040 sec
rate       8.74 million edges/sec (incl time for U=triu(A))
rate      11.82 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002283 sec
tricount time:         0.002323 sec (saxpy method)
tri+prep time:         0.002620 sec (incl time to compute L)
compute C time:        0.002283 sec
reduce (C) time:       0.000040 sec
rate       8.65 million edges/sec (incl time for L=tril(A))
rate       9.76 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010519/oregon1_010519_adj.tsv.gz
--------------------------------------------------------------
matrix 11051 by 11051, 45448 entries, from stdin

total time to read A matrix:       0.026972 sec

n 11051 # edges 22724
U=triu(A) time:        0.000371 sec
L=tril(A) time:        0.000294 sec

------------------------------------- dot product method:
# triangles 17677

L*U' time (dot):         0.001970 sec
tricount time:         0.002011 sec (dot product method)
tri+prep time:         0.002676 sec (incl time to compute L and U)
compute C time:        0.001970 sec
reduce (C) time:       0.000041 sec
rate       8.49 million edges/sec (incl time for U=triu(A))
rate      11.30 million edges/sec (just tricount itself)

# triangles 17677

L*U' time (dot):         0.001885 sec
tricount time:         0.001925 sec (dot product method)
tri+prep time:         0.002590 sec (incl time to compute L and U)
compute C time:        0.001885 sec
reduce (C) time:       0.000040 sec
rate       8.77 million edges/sec (incl time for U=triu(A))
rate      11.81 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002277 sec
tricount time:         0.002317 sec (saxpy method)
tri+prep time:         0.002611 sec (incl time to compute L)
compute C time:        0.002277 sec
reduce (C) time:       0.000040 sec
rate       8.70 million edges/sec (incl time for L=tril(A))
rate       9.81 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010526/oregon1_010526_adj.tsv.gz
--------------------------------------------------------------
matrix 11174 by 11174, 46818 entries, from stdin

total time to read A matrix:       0.027782 sec

n 11174 # edges 23409
U=triu(A) time:        0.000380 sec
L=tril(A) time:        0.000301 sec

------------------------------------- dot product method:
# triangles 19894

L*U' time (dot):         0.002060 sec
tricount time:         0.002104 sec (dot product method)
tri+prep time:         0.002785 sec (incl time to compute L and U)
compute C time:        0.002060 sec
reduce (C) time:       0.000044 sec
rate       8.41 million edges/sec (incl time for U=triu(A))
rate      11.13 million edges/sec (just tricount itself)

# triangles 19894

L*U' time (dot):         0.002020 sec
tricount time:         0.002063 sec (dot product method)
tri+prep time:         0.002744 sec (incl time to compute L and U)
compute C time:        0.002020 sec
reduce (C) time:       0.000043 sec
rate       8.53 million edges/sec (incl time for U=triu(A))
rate      11.35 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002353 sec
tricount time:         0.002396 sec (saxpy method)
tri+prep time:         0.002698 sec (incl time to compute L)
compute C time:        0.002353 sec
reduce (C) time:       0.000043 sec
rate       8.68 million edges/sec (incl time for L=tril(A))
rate       9.77 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010331/oregon2_010331_adj.tsv.gz
--------------------------------------------------------------
matrix 10900 by 10900, 62360 entries, from stdin

total time to read A matrix:       0.039519 sec

n 10900 # edges 31180
U=triu(A) time:        0.000445 sec
L=tril(A) time:        0.000355 sec

------------------------------------- dot product method:
# triangles 82856

L*U' time (dot):         0.004008 sec
tricount time:         0.004098 sec (dot product method)
tri+prep time:         0.004897 sec (incl time to compute L and U)
compute C time:        0.004008 sec
reduce (C) time:       0.000090 sec
rate       6.37 million edges/sec (incl time for U=triu(A))
rate       7.61 million edges/sec (just tricount itself)

# triangles 82856

L*U' time (dot):         0.003877 sec
tricount time:         0.003965 sec (dot product method)
tri+prep time:         0.004765 sec (incl time to compute L and U)
compute C time:        0.003877 sec
reduce (C) time:       0.000089 sec
rate       6.54 million edges/sec (incl time for U=triu(A))
rate       7.86 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003207 sec
tricount time:         0.003296 sec (saxpy method)
tri+prep time:         0.003650 sec (incl time to compute L)
compute C time:        0.003207 sec
reduce (C) time:       0.000089 sec
rate       8.54 million edges/sec (incl time for L=tril(A))
rate       9.46 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010407/oregon2_010407_adj.tsv.gz
--------------------------------------------------------------
matrix 10981 by 10981, 61710 entries, from stdin

total time to read A matrix:       0.039236 sec

n 10981 # edges 30855
U=triu(A) time:        0.000441 sec
L=tril(A) time:        0.000354 sec

------------------------------------- dot product method:
# triangles 78138

L*U' time (dot):         0.003923 sec
tricount time:         0.004010 sec (dot product method)
tri+prep time:         0.004805 sec (incl time to compute L and U)
compute C time:        0.003923 sec
reduce (C) time:       0.000087 sec
rate       6.42 million edges/sec (incl time for U=triu(A))
rate       7.69 million edges/sec (just tricount itself)

# triangles 78138

L*U' time (dot):         0.003780 sec
tricount time:         0.003865 sec (dot product method)
tri+prep time:         0.004660 sec (incl time to compute L and U)
compute C time:        0.003780 sec
reduce (C) time:       0.000086 sec
rate       6.62 million edges/sec (incl time for U=triu(A))
rate       7.98 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003223 sec
tricount time:         0.003309 sec (saxpy method)
tri+prep time:         0.003662 sec (incl time to compute L)
compute C time:        0.003223 sec
reduce (C) time:       0.000086 sec
rate       8.43 million edges/sec (incl time for L=tril(A))
rate       9.33 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010414/oregon2_010414_adj.tsv.gz
--------------------------------------------------------------
matrix 11019 by 11019, 63522 entries, from stdin

total time to read A matrix:       0.040333 sec

n 11019 # edges 31761
U=triu(A) time:        0.000451 sec
L=tril(A) time:        0.000361 sec

------------------------------------- dot product method:
# triangles 88905

L*U' time (dot):         0.004253 sec
tricount time:         0.004345 sec (dot product method)
tri+prep time:         0.005157 sec (incl time to compute L and U)
compute C time:        0.004253 sec
reduce (C) time:       0.000092 sec
rate       6.16 million edges/sec (incl time for U=triu(A))
rate       7.31 million edges/sec (just tricount itself)

# triangles 88905

L*U' time (dot):         0.004090 sec
tricount time:         0.004181 sec (dot product method)
tri+prep time:         0.004992 sec (incl time to compute L and U)
compute C time:        0.004090 sec
reduce (C) time:       0.000091 sec
rate       6.36 million edges/sec (incl time for U=triu(A))
rate       7.60 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003367 sec
tricount time:         0.003458 sec (saxpy method)
tri+prep time:         0.003818 sec (incl time to compute L)
compute C time:        0.003367 sec
reduce (C) time:       0.000091 sec
rate       8.32 million edges/sec (incl time for L=tril(A))
rate       9.19 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010421/oregon2_010421_adj.tsv.gz
--------------------------------------------------------------
matrix 11080 by 11080, 63076 entries, from stdin

total time to read A matrix:       0.040173 sec

n 11080 # edges 31538
U=triu(A) time:        0.000451 sec
L=tril(A) time:        0.000360 sec

------------------------------------- dot product method:
# triangles 82129

L*U' time (dot):         0.004123 sec
tricount time:         0.004213 sec (dot product method)
tri+prep time:         0.005023 sec (incl time to compute L and U)
compute C time:        0.004123 sec
reduce (C) time:       0.000090 sec
rate       6.28 million edges/sec (incl time for U=triu(A))
rate       7.49 million edges/sec (just tricount itself)

# triangles 82129

L*U' time (dot):         0.003988 sec
tricount time:         0.004076 sec (dot product method)
tri+prep time:         0.004886 sec (incl time to compute L and U)
compute C time:        0.003988 sec
reduce (C) time:       0.000088 sec
rate       6.45 million edges/sec (incl time for U=triu(A))
rate       7.74 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003327 sec
tricount time:         0.003415 sec (saxpy method)
tri+prep time:         0.003775 sec (incl time to compute L)
compute C time:        0.003327 sec
reduce (C) time:       0.000088 sec
rate       8.35 million edges/sec (incl time for L=tril(A))
rate       9.23 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010428/oregon2_010428_adj.tsv.gz
--------------------------------------------------------------
matrix 11113 by 11113, 62868 entries, from stdin

total time to read A matrix:       0.040052 sec

n 11113 # edges 31434
U=triu(A) time:        0.000451 sec
L=tril(A) time:        0.000357 sec

------------------------------------- dot product method:
# triangles 78000

L*U' time (dot):         0.004044 sec
tricount time:         0.004132 sec (dot product method)
tri+prep time:         0.004940 sec (incl time to compute L and U)
compute C time:        0.004044 sec
reduce (C) time:       0.000088 sec
rate       6.36 million edges/sec (incl time for U=triu(A))
rate       7.61 million edges/sec (just tricount itself)

# triangles 78000

L*U' time (dot):         0.003928 sec
tricount time:         0.004016 sec (dot product method)
tri+prep time:         0.004823 sec (incl time to compute L and U)
compute C time:        0.003928 sec
reduce (C) time:       0.000087 sec
rate       6.52 million edges/sec (incl time for U=triu(A))
rate       7.83 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003297 sec
tricount time:         0.003384 sec (saxpy method)
tri+prep time:         0.003740 sec (incl time to compute L)
compute C time:        0.003297 sec
reduce (C) time:       0.000087 sec
rate       8.40 million edges/sec (incl time for L=tril(A))
rate       9.29 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010505/oregon2_010505_adj.tsv.gz
--------------------------------------------------------------
matrix 11157 by 11157, 61886 entries, from stdin

total time to read A matrix:       0.039390 sec

n 11157 # edges 30943
U=triu(A) time:        0.000446 sec
L=tril(A) time:        0.000356 sec

------------------------------------- dot product method:
# triangles 72182

L*U' time (dot):         0.003877 sec
tricount time:         0.003962 sec (dot product method)
tri+prep time:         0.004764 sec (incl time to compute L and U)
compute C time:        0.003877 sec
reduce (C) time:       0.000085 sec
rate       6.50 million edges/sec (incl time for U=triu(A))
rate       7.81 million edges/sec (just tricount itself)

# triangles 72182

L*U' time (dot):         0.003743 sec
tricount time:         0.003827 sec (dot product method)
tri+prep time:         0.004629 sec (incl time to compute L and U)
compute C time:        0.003743 sec
reduce (C) time:       0.000084 sec
rate       6.68 million edges/sec (incl time for U=triu(A))
rate       8.09 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003213 sec
tricount time:         0.003296 sec (saxpy method)
tri+prep time:         0.003652 sec (incl time to compute L)
compute C time:        0.003213 sec
reduce (C) time:       0.000084 sec
rate       8.47 million edges/sec (incl time for L=tril(A))
rate       9.39 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010512/oregon2_010512_adj.tsv.gz
--------------------------------------------------------------
matrix 11260 by 11260, 62606 entries, from stdin

total time to read A matrix:       0.039994 sec

n 11260 # edges 31303
U=triu(A) time:        0.000453 sec
L=tril(A) time:        0.000358 sec

------------------------------------- dot product method:
# triangles 72866

L*U' time (dot):         0.003915 sec
tricount time:         0.004001 sec (dot product method)
tri+prep time:         0.004812 sec (incl time to compute L and U)
compute C time:        0.003915 sec
reduce (C) time:       0.000086 sec
rate       6.50 million edges/sec (incl time for U=triu(A))
rate       7.82 million edges/sec (just tricount itself)

# triangles 72866

L*U' time (dot):         0.003813 sec
tricount time:         0.003897 sec (dot product method)
tri+prep time:         0.004709 sec (incl time to compute L and U)
compute C time:        0.003813 sec
reduce (C) time:       0.000085 sec
rate       6.65 million edges/sec (incl time for U=triu(A))
rate       8.03 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003264 sec
tricount time:         0.003348 sec (saxpy method)
tri+prep time:         0.003707 sec (incl time to compute L)
compute C time:        0.003264 sec
reduce (C) time:       0.000085 sec
rate       8.45 million edges/sec (incl time for L=tril(A))
rate       9.35 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010519/oregon2_010519_adj.tsv.gz
--------------------------------------------------------------
matrix 11375 by 11375, 64574 entries, from stdin

total time to read A matrix:       0.041100 sec

n 11375 # edges 32287
U=triu(A) time:        0.000462 sec
L=tril(A) time:        0.000369 sec

------------------------------------- dot product method:
# triangles 83709

L*U' time (dot):         0.004257 sec
tricount time:         0.004348 sec (dot product method)
tri+prep time:         0.005178 sec (incl time to compute L and U)
compute C time:        0.004257 sec
reduce (C) time:       0.000091 sec
rate       6.24 million edges/sec (incl time for U=triu(A))
rate       7.43 million edges/sec (just tricount itself)

# triangles 83709

L*U' time (dot):         0.004173 sec
tricount time:         0.004263 sec (dot product method)
tri+prep time:         0.005093 sec (incl time to compute L and U)
compute C time:        0.004173 sec
reduce (C) time:       0.000090 sec
rate       6.34 million edges/sec (incl time for U=triu(A))
rate       7.57 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003450 sec
tricount time:         0.003540 sec (saxpy method)
tri+prep time:         0.003908 sec (incl time to compute L)
compute C time:        0.003450 sec
reduce (C) time:       0.000090 sec
rate       8.26 million edges/sec (incl time for L=tril(A))
rate       9.12 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010526/oregon2_010526_adj.tsv.gz
--------------------------------------------------------------
matrix 11461 by 11461, 65460 entries, from stdin

total time to read A matrix:       0.041649 sec

n 11461 # edges 32730
U=triu(A) time:        0.000467 sec
L=tril(A) time:        0.000372 sec

------------------------------------- dot product method:
# triangles 89541

L*U' time (dot):         0.004389 sec
tricount time:         0.004482 sec (dot product method)
tri+prep time:         0.005321 sec (incl time to compute L and U)
compute C time:        0.004389 sec
reduce (C) time:       0.000093 sec
rate       6.15 million edges/sec (incl time for U=triu(A))
rate       7.30 million edges/sec (just tricount itself)

# triangles 89541

L*U' time (dot):         0.004247 sec
tricount time:         0.004339 sec (dot product method)
tri+prep time:         0.005177 sec (incl time to compute L and U)
compute C time:        0.004247 sec
reduce (C) time:       0.000092 sec
rate       6.32 million edges/sec (incl time for U=triu(A))
rate       7.54 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003521 sec
tricount time:         0.003613 sec (saxpy method)
tri+prep time:         0.003984 sec (incl time to compute L)
compute C time:        0.003521 sec
reduce (C) time:       0.000092 sec
rate       8.21 million edges/sec (incl time for L=tril(A))
rate       9.06 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella04/p2p-Gnutella04_adj.tsv.gz
--------------------------------------------------------------
matrix 10876 by 10876, 79988 entries, from stdin

total time to read A matrix:       0.047433 sec

n 10876 # edges 39994
U=triu(A) time:        0.000563 sec
L=tril(A) time:        0.000430 sec

------------------------------------- dot product method:
# triangles 934

L*U' time (dot):         0.001941 sec
tricount time:         0.001949 sec (dot product method)
tri+prep time:         0.002942 sec (incl time to compute L and U)
compute C time:        0.001941 sec
reduce (C) time:       0.000008 sec
rate      13.59 million edges/sec (incl time for U=triu(A))
rate      20.52 million edges/sec (just tricount itself)

# triangles 934

L*U' time (dot):         0.001841 sec
tricount time:         0.001847 sec (dot product method)
tri+prep time:         0.002840 sec (incl time to compute L and U)
compute C time:        0.001841 sec
reduce (C) time:       0.000006 sec
rate      14.08 million edges/sec (incl time for U=triu(A))
rate      21.65 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.001163 sec
tricount time:         0.001170 sec (saxpy method)
tri+prep time:         0.001600 sec (incl time to compute L)
compute C time:        0.001163 sec
reduce (C) time:       0.000006 sec
rate      24.99 million edges/sec (incl time for L=tril(A))
rate      34.19 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella05/p2p-Gnutella05_adj.tsv.gz
--------------------------------------------------------------
matrix 8846 by 8846, 63678 entries, from stdin

total time to read A matrix:       0.039948 sec

n 8846 # edges 31839
U=triu(A) time:        0.000463 sec
L=tril(A) time:        0.000344 sec

------------------------------------- dot product method:
# triangles 1112

L*U' time (dot):         0.001599 sec
tricount time:         0.001606 sec (dot product method)
tri+prep time:         0.002413 sec (incl time to compute L and U)
compute C time:        0.001599 sec
reduce (C) time:       0.000008 sec
rate      13.19 million edges/sec (incl time for U=triu(A))
rate      19.82 million edges/sec (just tricount itself)

# triangles 1112

L*U' time (dot):         0.001504 sec
tricount time:         0.001510 sec (dot product method)
tri+prep time:         0.002317 sec (incl time to compute L and U)
compute C time:        0.001504 sec
reduce (C) time:       0.000006 sec
rate      13.74 million edges/sec (incl time for U=triu(A))
rate      21.08 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000937 sec
tricount time:         0.000944 sec (saxpy method)
tri+prep time:         0.001287 sec (incl time to compute L)
compute C time:        0.000937 sec
reduce (C) time:       0.000006 sec
rate      24.73 million edges/sec (incl time for L=tril(A))
rate      33.74 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella06/p2p-Gnutella06_adj.tsv.gz
--------------------------------------------------------------
matrix 8717 by 8717, 63050 entries, from stdin

total time to read A matrix:       0.039599 sec

n 8717 # edges 31525
U=triu(A) time:        0.000457 sec
L=tril(A) time:        0.000339 sec

------------------------------------- dot product method:
# triangles 1142

L*U' time (dot):         0.001581 sec
tricount time:         0.001589 sec (dot product method)
tri+prep time:         0.002384 sec (incl time to compute L and U)
compute C time:        0.001581 sec
reduce (C) time:       0.000008 sec
rate      13.22 million edges/sec (incl time for U=triu(A))
rate      19.84 million edges/sec (just tricount itself)

# triangles 1142

L*U' time (dot):         0.001466 sec
tricount time:         0.001472 sec (dot product method)
tri+prep time:         0.002268 sec (incl time to compute L and U)
compute C time:        0.001466 sec
reduce (C) time:       0.000007 sec
rate      13.90 million edges/sec (incl time for U=triu(A))
rate      21.41 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000926 sec
tricount time:         0.000932 sec (saxpy method)
tri+prep time:         0.001271 sec (incl time to compute L)
compute C time:        0.000926 sec
reduce (C) time:       0.000007 sec
rate      24.80 million edges/sec (incl time for L=tril(A))
rate      33.81 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella08/p2p-Gnutella08_adj.tsv.gz
--------------------------------------------------------------
matrix 6301 by 6301, 41554 entries, from stdin

total time to read A matrix:       0.024429 sec

n 6301 # edges 20777
U=triu(A) time:        0.000308 sec
L=tril(A) time:        0.000236 sec

------------------------------------- dot product method:
# triangles 2383

L*U' time (dot):         0.001179 sec
tricount time:         0.001191 sec (dot product method)
tri+prep time:         0.001735 sec (incl time to compute L and U)
compute C time:        0.001179 sec
reduce (C) time:       0.000011 sec
rate      11.98 million edges/sec (incl time for U=triu(A))
rate      17.45 million edges/sec (just tricount itself)

# triangles 2383

L*U' time (dot):         0.001110 sec
tricount time:         0.001120 sec (dot product method)
tri+prep time:         0.001664 sec (incl time to compute L and U)
compute C time:        0.001110 sec
reduce (C) time:       0.000010 sec
rate      12.48 million edges/sec (incl time for U=triu(A))
rate      18.55 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000649 sec
tricount time:         0.000659 sec (saxpy method)
tri+prep time:         0.000895 sec (incl time to compute L)
compute C time:        0.000649 sec
reduce (C) time:       0.000010 sec
rate      23.22 million edges/sec (incl time for L=tril(A))
rate      31.53 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella09/p2p-Gnutella09_adj.tsv.gz
--------------------------------------------------------------
matrix 8114 by 8114, 52026 entries, from stdin

total time to read A matrix:       0.030658 sec

n 8114 # edges 26013
U=triu(A) time:        0.000392 sec
L=tril(A) time:        0.000292 sec

------------------------------------- dot product method:
# triangles 2354

L*U' time (dot):         0.001448 sec
tricount time:         0.001459 sec (dot product method)
tri+prep time:         0.002143 sec (incl time to compute L and U)
compute C time:        0.001448 sec
reduce (C) time:       0.000011 sec
rate      12.14 million edges/sec (incl time for U=triu(A))
rate      17.83 million edges/sec (just tricount itself)

# triangles 2354

L*U' time (dot):         0.001353 sec
tricount time:         0.001362 sec (dot product method)
tri+prep time:         0.002047 sec (incl time to compute L and U)
compute C time:        0.001353 sec
reduce (C) time:       0.000009 sec
rate      12.71 million edges/sec (incl time for U=triu(A))
rate      19.09 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000799 sec
tricount time:         0.000808 sec (saxpy method)
tri+prep time:         0.001101 sec (incl time to compute L)
compute C time:        0.000799 sec
reduce (C) time:       0.000009 sec
rate      23.63 million edges/sec (incl time for L=tril(A))
rate      32.18 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella24/p2p-Gnutella24_adj.tsv.gz
--------------------------------------------------------------
matrix 26518 by 26518, 130738 entries, from stdin

total time to read A matrix:       0.085676 sec

n 26518 # edges 65369
U=triu(A) time:        0.001076 sec
L=tril(A) time:        0.000813 sec

------------------------------------- dot product method:
# triangles 986

L*U' time (dot):         0.002929 sec
tricount time:         0.002937 sec (dot product method)
tri+prep time:         0.004826 sec (incl time to compute L and U)
compute C time:        0.002929 sec
reduce (C) time:       0.000008 sec
rate      13.54 million edges/sec (incl time for U=triu(A))
rate      22.26 million edges/sec (just tricount itself)

# triangles 986

L*U' time (dot):         0.002697 sec
tricount time:         0.002703 sec (dot product method)
tri+prep time:         0.004593 sec (incl time to compute L and U)
compute C time:        0.002697 sec
reduce (C) time:       0.000007 sec
rate      14.23 million edges/sec (incl time for U=triu(A))
rate      24.18 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002090 sec
tricount time:         0.002096 sec (saxpy method)
tri+prep time:         0.002909 sec (incl time to compute L)
compute C time:        0.002090 sec
reduce (C) time:       0.000007 sec
rate      22.47 million edges/sec (incl time for L=tril(A))
rate      31.18 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella25/p2p-Gnutella25_adj.tsv.gz
--------------------------------------------------------------
matrix 22687 by 22687, 109410 entries, from stdin

total time to read A matrix:       0.067317 sec

n 22687 # edges 54705
U=triu(A) time:        0.000897 sec
L=tril(A) time:        0.000747 sec

------------------------------------- dot product method:
# triangles 806

L*U' time (dot):         0.002244 sec
tricount time:         0.002251 sec (dot product method)
tri+prep time:         0.003895 sec (incl time to compute L and U)
compute C time:        0.002244 sec
reduce (C) time:       0.000007 sec
rate      14.05 million edges/sec (incl time for U=triu(A))
rate      24.30 million edges/sec (just tricount itself)

# triangles 806

L*U' time (dot):         0.002122 sec
tricount time:         0.002128 sec (dot product method)
tri+prep time:         0.003772 sec (incl time to compute L and U)
compute C time:        0.002122 sec
reduce (C) time:       0.000006 sec
rate      14.50 million edges/sec (incl time for U=triu(A))
rate      25.71 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.001722 sec
tricount time:         0.001727 sec (saxpy method)
tri+prep time:         0.002474 sec (incl time to compute L)
compute C time:        0.001722 sec
reduce (C) time:       0.000006 sec
rate      22.11 million edges/sec (incl time for L=tril(A))
rate      31.67 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella30/p2p-Gnutella30_adj.tsv.gz
--------------------------------------------------------------
matrix 36682 by 36682, 176656 entries, from stdin

total time to read A matrix:       0.110495 sec

n 36682 # edges 88328
U=triu(A) time:        0.001423 sec
L=tril(A) time:        0.001105 sec

------------------------------------- dot product method:
# triangles 1590

L*U' time (dot):         0.003784 sec
tricount time:         0.003795 sec (dot product method)
tri+prep time:         0.006323 sec (incl time to compute L and U)
compute C time:        0.003784 sec
reduce (C) time:       0.000012 sec
rate      13.97 million edges/sec (incl time for U=triu(A))
rate      23.27 million edges/sec (just tricount itself)

# triangles 1590

L*U' time (dot):         0.003618 sec
tricount time:         0.003628 sec (dot product method)
tri+prep time:         0.006155 sec (incl time to compute L and U)
compute C time:        0.003618 sec
reduce (C) time:       0.000010 sec
rate      14.35 million edges/sec (incl time for U=triu(A))
rate      24.35 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002801 sec
tricount time:         0.002811 sec (saxpy method)
tri+prep time:         0.003916 sec (incl time to compute L)
compute C time:        0.002801 sec
reduce (C) time:       0.000010 sec
rate      22.56 million edges/sec (incl time for L=tril(A))
rate      31.42 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella31/p2p-Gnutella31_adj.tsv.gz
--------------------------------------------------------------
matrix 62586 by 62586, 295784 entries, from stdin

total time to read A matrix:       0.187252 sec

n 62586 # edges 147892
U=triu(A) time:        0.002411 sec
L=tril(A) time:        0.001884 sec

------------------------------------- dot product method:
# triangles 2024

L*U' time (dot):         0.006306 sec
tricount time:         0.006321 sec (dot product method)
tri+prep time:         0.010616 sec (incl time to compute L and U)
compute C time:        0.006306 sec
reduce (C) time:       0.000015 sec
rate      13.93 million edges/sec (incl time for U=triu(A))
rate      23.40 million edges/sec (just tricount itself)

# triangles 2024

L*U' time (dot):         0.006068 sec
tricount time:         0.006081 sec (dot product method)
tri+prep time:         0.010376 sec (incl time to compute L and U)
compute C time:        0.006068 sec
reduce (C) time:       0.000013 sec
rate      14.25 million edges/sec (incl time for U=triu(A))
rate      24.32 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004660 sec
tricount time:         0.004673 sec (saxpy method)
tri+prep time:         0.006557 sec (incl time to compute L)
compute C time:        0.004660 sec
reduce (C) time:       0.000013 sec
rate      22.55 million edges/sec (incl time for L=tril(A))
rate      31.65 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/roadNet-CA/roadNet-CA_adj.tsv.gz
--------------------------------------------------------------
matrix 1965206 by 1965206, 5533214 entries, from stdin

total time to read A matrix:       3.683737 sec

n 1965206 # edges 2766607
U=triu(A) time:        0.056559 sec
L=tril(A) time:        0.043283 sec

------------------------------------- dot product method:
# triangles 120676

L*U' time (dot):         0.060139 sec
tricount time:         0.060864 sec (dot product method)
tri+prep time:         0.160705 sec (incl time to compute L and U)
compute C time:        0.060139 sec
reduce (C) time:       0.000725 sec
rate      17.22 million edges/sec (incl time for U=triu(A))
rate      45.46 million edges/sec (just tricount itself)

# triangles 120676

L*U' time (dot):         0.066586 sec
tricount time:         0.067305 sec (dot product method)
tri+prep time:         0.167147 sec (incl time to compute L and U)
compute C time:        0.066586 sec
reduce (C) time:       0.000719 sec
rate      16.55 million edges/sec (incl time for U=triu(A))
rate      41.11 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.187419 sec
tricount time:         0.188660 sec (saxpy method)
tri+prep time:         0.231943 sec (incl time to compute L)
compute C time:        0.187419 sec
reduce (C) time:       0.001241 sec
rate      11.93 million edges/sec (incl time for L=tril(A))
rate      14.66 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/roadNet-PA/roadNet-PA_adj.tsv.gz
--------------------------------------------------------------
matrix 1088092 by 1088092, 3083796 entries, from stdin

total time to read A matrix:       2.017551 sec

n 1088092 # edges 1541898
U=triu(A) time:        0.030770 sec
L=tril(A) time:        0.024128 sec

------------------------------------- dot product method:
# triangles 67150

L*U' time (dot):         0.032855 sec
tricount time:         0.033262 sec (dot product method)
tri+prep time:         0.088160 sec (incl time to compute L and U)
compute C time:        0.032855 sec
reduce (C) time:       0.000407 sec
rate      17.49 million edges/sec (incl time for U=triu(A))
rate      46.36 million edges/sec (just tricount itself)

# triangles 67150

L*U' time (dot):         0.036627 sec
tricount time:         0.037029 sec (dot product method)
tri+prep time:         0.091927 sec (incl time to compute L and U)
compute C time:        0.036627 sec
reduce (C) time:       0.000402 sec
rate      16.77 million edges/sec (incl time for U=triu(A))
rate      41.64 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.100053 sec
tricount time:         0.100456 sec (saxpy method)
tri+prep time:         0.124584 sec (incl time to compute L)
compute C time:        0.100053 sec
reduce (C) time:       0.000402 sec
rate      12.38 million edges/sec (incl time for L=tril(A))
rate      15.35 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/roadNet-TX/roadNet-TX_adj.tsv.gz
--------------------------------------------------------------
matrix 1379917 by 1379917, 3843320 entries, from stdin

total time to read A matrix:       2.546661 sec

n 1379917 # edges 1921660
U=triu(A) time:        0.038464 sec
L=tril(A) time:        0.030346 sec

------------------------------------- dot product method:
# triangles 82869

L*U' time (dot):         0.040786 sec
tricount time:         0.041286 sec (dot product method)
tri+prep time:         0.110096 sec (incl time to compute L and U)
compute C time:        0.040786 sec
reduce (C) time:       0.000500 sec
rate      17.45 million edges/sec (incl time for U=triu(A))
rate      46.54 million edges/sec (just tricount itself)

# triangles 82869

L*U' time (dot):         0.045377 sec
tricount time:         0.045874 sec (dot product method)
tri+prep time:         0.114683 sec (incl time to compute L and U)
compute C time:        0.045377 sec
reduce (C) time:       0.000496 sec
rate      16.76 million edges/sec (incl time for U=triu(A))
rate      41.89 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.124597 sec
tricount time:         0.125094 sec (saxpy method)
tri+prep time:         0.155440 sec (incl time to compute L)
compute C time:        0.124597 sec
reduce (C) time:       0.000497 sec
rate      12.36 million edges/sec (incl time for L=tril(A))
rate      15.36 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-1045506-262144_adj.tsv.gz
--------------------------------------------------------------
matrix 262144 by 262144, 2091012 entries, from stdin

total time to read A matrix:       1.515304 sec

n 262144 # edges 1045506
U=triu(A) time:        0.012030 sec
L=tril(A) time:        0.010889 sec

------------------------------------- dot product method:
# triangles 1044484

L*U' time (dot):         0.021652 sec
tricount time:         0.024789 sec (dot product method)
tri+prep time:         0.047708 sec (incl time to compute L and U)
compute C time:        0.021652 sec
reduce (C) time:       0.003137 sec
rate      21.91 million edges/sec (incl time for U=triu(A))
rate      42.18 million edges/sec (just tricount itself)

# triangles 1044484

L*U' time (dot):         0.020031 sec
tricount time:         0.023170 sec (dot product method)
tri+prep time:         0.046089 sec (incl time to compute L and U)
compute C time:        0.020031 sec
reduce (C) time:       0.003139 sec
rate      22.68 million edges/sec (incl time for U=triu(A))
rate      45.12 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.019494 sec
tricount time:         0.022632 sec (saxpy method)
tri+prep time:         0.033521 sec (incl time to compute L)
compute C time:        0.019494 sec
reduce (C) time:       0.003138 sec
rate      31.19 million edges/sec (incl time for L=tril(A))
rate      46.19 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-16764930-4194304_adj.tsv.gz
--------------------------------------------------------------
matrix 4194304 by 4194304, 33529860 entries, from stdin

total time to read A matrix:      22.514639 sec

n 4194304 # edges 16764930
U=triu(A) time:        0.202205 sec
L=tril(A) time:        0.173674 sec

------------------------------------- dot product method:
# triangles 16760836

L*U' time (dot):         0.359875 sec
tricount time:         0.411509 sec (dot product method)
tri+prep time:         0.787387 sec (incl time to compute L and U)
compute C time:        0.359875 sec
reduce (C) time:       0.051634 sec
rate      21.29 million edges/sec (incl time for U=triu(A))
rate      40.74 million edges/sec (just tricount itself)

# triangles 16760836

L*U' time (dot):         0.330897 sec
tricount time:         0.382492 sec (dot product method)
tri+prep time:         0.758371 sec (incl time to compute L and U)
compute C time:        0.330897 sec
reduce (C) time:       0.051595 sec
rate      22.11 million edges/sec (incl time for U=triu(A))
rate      43.83 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.323324 sec
tricount time:         0.374983 sec (saxpy method)
tri+prep time:         0.548657 sec (incl time to compute L)
compute C time:        0.323324 sec
reduce (C) time:       0.051659 sec
rate      30.56 million edges/sec (incl time for L=tril(A))
rate      44.71 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-260610-65536_adj.tsv.gz
--------------------------------------------------------------
matrix 65536 by 65536, 521220 entries, from stdin

total time to read A matrix:       0.358167 sec

n 65536 # edges 260610
U=triu(A) time:        0.002987 sec
L=tril(A) time:        0.002701 sec

------------------------------------- dot product method:
# triangles 260100

L*U' time (dot):         0.005489 sec
tricount time:         0.006281 sec (dot product method)
tri+prep time:         0.011969 sec (incl time to compute L and U)
compute C time:        0.005489 sec
reduce (C) time:       0.000792 sec
rate      21.77 million edges/sec (incl time for U=triu(A))
rate      41.49 million edges/sec (just tricount itself)

# triangles 260100

L*U' time (dot):         0.005023 sec
tricount time:         0.005808 sec (dot product method)
tri+prep time:         0.011496 sec (incl time to compute L and U)
compute C time:        0.005023 sec
reduce (C) time:       0.000785 sec
rate      22.67 million edges/sec (incl time for U=triu(A))
rate      44.87 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004900 sec
tricount time:         0.005683 sec (saxpy method)
tri+prep time:         0.008384 sec (incl time to compute L)
compute C time:        0.004900 sec
reduce (C) time:       0.000783 sec
rate      31.08 million edges/sec (incl time for L=tril(A))
rate      45.86 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-268386306-67108864_adj.tsv.gz
--------------------------------------------------------------
matrix 67108864 by 67108864, 536772612 entries, from stdin

total time to read A matrix:     383.129140 sec

n 67108864 # edges 268386306
U=triu(A) time:        3.217478 sec
L=tril(A) time:        2.860097 sec

------------------------------------- dot product method:
# triangles 268369924

L*U' time (dot):         5.864969 sec
tricount time:         6.691248 sec (dot product method)
tri+prep time:        12.768822 sec (incl time to compute L and U)
compute C time:        5.864969 sec
reduce (C) time:       0.826279 sec
rate      21.02 million edges/sec (incl time for U=triu(A))
rate      40.11 million edges/sec (just tricount itself)

# triangles 268369924

L*U' time (dot):         5.297103 sec
tricount time:         6.119943 sec (dot product method)
tri+prep time:        12.197518 sec (incl time to compute L and U)
compute C time:        5.297103 sec
reduce (C) time:       0.822840 sec
rate      22.00 million edges/sec (incl time for U=triu(A))
rate      43.85 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         5.438085 sec
tricount time:         6.268461 sec (saxpy method)
tri+prep time:         9.128558 sec (incl time to compute L)
compute C time:        5.438085 sec
reduce (C) time:       0.830376 sec
rate      29.40 million edges/sec (incl time for L=tril(A))
rate      42.82 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-4188162-1048576_adj.tsv.gz
--------------------------------------------------------------
matrix 1048576 by 1048576, 8376324 entries, from stdin

total time to read A matrix:       5.354388 sec

n 1048576 # edges 4188162
U=triu(A) time:        0.049841 sec
L=tril(A) time:        0.042858 sec

------------------------------------- dot product method:
# triangles 4186116

L*U' time (dot):         0.089581 sec
tricount time:         0.102421 sec (dot product method)
tri+prep time:         0.195120 sec (incl time to compute L and U)
compute C time:        0.089581 sec
reduce (C) time:       0.012839 sec
rate      21.46 million edges/sec (incl time for U=triu(A))
rate      40.89 million edges/sec (just tricount itself)

# triangles 4186116

L*U' time (dot):         0.082316 sec
tricount time:         0.095064 sec (dot product method)
tri+prep time:         0.187763 sec (incl time to compute L and U)
compute C time:        0.082316 sec
reduce (C) time:       0.012748 sec
rate      22.31 million edges/sec (incl time for U=triu(A))
rate      44.06 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.081183 sec
tricount time:         0.094489 sec (saxpy method)
tri+prep time:         0.137348 sec (incl time to compute L)
compute C time:        0.081183 sec
reduce (C) time:       0.013307 sec
rate      30.49 million edges/sec (incl time for L=tril(A))
rate      44.32 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/DIMACS10/hugebubbles-00020_adj.tsv.gz
--------------------------------------------------------------
matrix 21198119 by 21198119, 63580358 entries, from stdin

total time to read A matrix:      46.999478 sec

n 21198119 # edges 31790179
U=triu(A) time:        0.569452 sec
L=tril(A) time:        0.465036 sec

------------------------------------- dot product method:
# triangles 0

L*U' time (dot):         2.387902 sec
tricount time:         2.387914 sec (dot product method)
tri+prep time:         3.422402 sec (incl time to compute L and U)
compute C time:        2.387902 sec
reduce (C) time:       0.000012 sec
rate       9.29 million edges/sec (incl time for U=triu(A))
rate      13.31 million edges/sec (just tricount itself)

# triangles 0

L*U' time (dot):         2.242009 sec
tricount time:         2.242016 sec (dot product method)
tri+prep time:         3.276503 sec (incl time to compute L and U)
compute C time:        2.242009 sec
reduce (C) time:       0.000007 sec
rate       9.70 million edges/sec (incl time for U=triu(A))
rate      14.18 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         6.474644 sec
tricount time:         6.474652 sec (saxpy method)
tri+prep time:         6.939687 sec (incl time to compute L)
compute C time:        6.474644 sec
reduce (C) time:       0.000008 sec
rate       4.58 million edges/sec (incl time for L=tril(A))
rate       4.91 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/vanHeukelum/cage15_adj.tsv.gz
--------------------------------------------------------------
matrix 5154859 by 5154859, 94044692 entries, from stdin

total time to read A matrix:      65.973351 sec

n 5154859 # edges 47022346
U=triu(A) time:        0.487427 sec
L=tril(A) time:        0.401171 sec

------------------------------------- dot product method:
# triangles 36106416

L*U' time (dot):         2.383320 sec
tricount time:         2.528575 sec (dot product method)
tri+prep time:         3.417173 sec (incl time to compute L and U)
compute C time:        2.383320 sec
reduce (C) time:       0.145256 sec
rate      13.76 million edges/sec (incl time for U=triu(A))
rate      18.60 million edges/sec (just tricount itself)

# triangles 36106416

L*U' time (dot):         2.264827 sec
tricount time:         2.409771 sec (dot product method)
tri+prep time:         3.298370 sec (incl time to compute L and U)
compute C time:        2.264827 sec
reduce (C) time:       0.144944 sec
rate      14.26 million edges/sec (incl time for U=triu(A))
rate      19.51 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         1.549618 sec
tricount time:         1.694550 sec (saxpy method)
tri+prep time:         2.095722 sec (incl time to compute L)
compute C time:        1.549618 sec
reduce (C) time:       0.144933 sec
rate      22.44 million edges/sec (incl time for L=tril(A))
rate      27.75 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Freescale/circuit5M_adj.tsv.gz
--------------------------------------------------------------
matrix 5558326 by 5558326, 53967852 entries, from stdin

total time to read A matrix:      36.990943 sec

n 5558326 # edges 26983926
U=triu(A) time:        0.244640 sec
L=tril(A) time:        0.276384 sec

------------------------------------- dot product method:
# triangles 31019473

L*U' time (dot):         1.902981 sec
tricount time:         2.029889 sec (dot product method)
tri+prep time:         2.550912 sec (incl time to compute L and U)
compute C time:        1.902981 sec
reduce (C) time:       0.126908 sec
rate      10.58 million edges/sec (incl time for U=triu(A))
rate      13.29 million edges/sec (just tricount itself)

# triangles 31019473

L*U' time (dot):         1.632723 sec
tricount time:         1.759540 sec (dot product method)
tri+prep time:         2.280564 sec (incl time to compute L and U)
compute C time:        1.632723 sec
reduce (C) time:       0.126817 sec
rate      11.83 million edges/sec (incl time for U=triu(A))
rate      15.34 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):       450.914769 sec
tricount time:       451.045665 sec (saxpy method)
tri+prep time:       451.322048 sec (incl time to compute L)
compute C time:      450.914769 sec
reduce (C) time:       0.130896 sec
rate       0.06 million edges/sec (incl time for L=tril(A))
rate       0.06 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale18-ef16/graph500-scale18-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 174147 by 174147, 7600696 entries, from stdin

total time to read A matrix:       6.071281 sec

n 174147 # edges 3800348
U=triu(A) time:        0.034091 sec
L=tril(A) time:        0.030328 sec

------------------------------------- dot product method:
# triangles 82287285

L*U' time (dot):         8.149581 sec
tricount time:         8.166920 sec (dot product method)
tri+prep time:         8.231340 sec (incl time to compute L and U)
compute C time:        8.149581 sec
reduce (C) time:       0.017340 sec
rate       0.46 million edges/sec (incl time for U=triu(A))
rate       0.47 million edges/sec (just tricount itself)

# triangles 82287285

L*U' time (dot):         7.825516 sec
tricount time:         7.842747 sec (dot product method)
tri+prep time:         7.907167 sec (incl time to compute L and U)
compute C time:        7.825516 sec
reduce (C) time:       0.017232 sec
rate       0.48 million edges/sec (incl time for U=triu(A))
rate       0.48 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         3.547712 sec
tricount time:         3.564978 sec (saxpy method)
tri+prep time:         3.595307 sec (incl time to compute L)
compute C time:        3.547712 sec
reduce (C) time:       0.017267 sec
rate       1.06 million edges/sec (incl time for L=tril(A))
rate       1.07 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale19-ef16/graph500-scale19-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 335318 by 335318, 15459350 entries, from stdin

total time to read A matrix:      12.293302 sec

n 335318 # edges 7729675
U=triu(A) time:        0.070673 sec
L=tril(A) time:        0.062503 sec

------------------------------------- dot product method:
# triangles 186288972

L*U' time (dot):        21.983347 sec
tricount time:        22.019439 sec (dot product method)
tri+prep time:        22.152615 sec (incl time to compute L and U)
compute C time:       21.983347 sec
reduce (C) time:       0.036093 sec
rate       0.35 million edges/sec (incl time for U=triu(A))
rate       0.35 million edges/sec (just tricount itself)

# triangles 186288972

L*U' time (dot):        21.296275 sec
tricount time:        21.331331 sec (dot product method)
tri+prep time:        21.464507 sec (incl time to compute L and U)
compute C time:       21.296275 sec
reduce (C) time:       0.035056 sec
rate       0.36 million edges/sec (incl time for U=triu(A))
rate       0.36 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         9.539223 sec
tricount time:         9.574396 sec (saxpy method)
tri+prep time:         9.636899 sec (incl time to compute L)
compute C time:        9.539223 sec
reduce (C) time:       0.035173 sec
rate       0.80 million edges/sec (incl time for L=tril(A))
rate       0.81 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale20-ef16/graph500-scale20-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 645820 by 645820, 31361722 entries, from stdin

total time to read A matrix:      23.641909 sec

n 645820 # edges 15680861
U=triu(A) time:        0.138622 sec
L=tril(A) time:        0.123873 sec

------------------------------------- dot product method:
# triangles 419349784

L*U' time (dot):        55.932769 sec
tricount time:        56.003765 sec (dot product method)
tri+prep time:        56.266260 sec (incl time to compute L and U)
compute C time:       55.932769 sec
reduce (C) time:       0.070996 sec
rate       0.28 million edges/sec (incl time for U=triu(A))
rate       0.28 million edges/sec (just tricount itself)

# triangles 419349784

L*U' time (dot):        54.294715 sec
tricount time:        54.364061 sec (dot product method)
tri+prep time:        54.626556 sec (incl time to compute L and U)
compute C time:       54.294715 sec
reduce (C) time:       0.069345 sec
rate       0.29 million edges/sec (incl time for U=triu(A))
rate       0.29 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):        28.931505 sec
tricount time:        29.000111 sec (saxpy method)
tri+prep time:        29.123984 sec (incl time to compute L)
compute C time:       28.931505 sec
reduce (C) time:       0.068606 sec
rate       0.54 million edges/sec (incl time for L=tril(A))
rate       0.54 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale21-ef16/graph500-scale21-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 1243072 by 1243072, 63463300 entries, from stdin

total time to read A matrix:      47.264045 sec

n 1243072 # edges 31731650
U=triu(A) time:        0.278507 sec
L=tril(A) time:        0.249754 sec

------------------------------------- dot product method:
# triangles 935100883

L*U' time (dot):       142.389195 sec
tricount time:       142.536372 sec (dot product method)
tri+prep time:       143.064633 sec (incl time to compute L and U)
compute C time:      142.389195 sec
reduce (C) time:       0.147177 sec
rate       0.22 million edges/sec (incl time for U=triu(A))
rate       0.22 million edges/sec (just tricount itself)

# triangles 935100883

L*U' time (dot):       138.385003 sec
tricount time:       138.524739 sec (dot product method)
tri+prep time:       139.053000 sec (incl time to compute L and U)
compute C time:      138.385003 sec
reduce (C) time:       0.139735 sec
rate       0.23 million edges/sec (incl time for U=triu(A))
rate       0.23 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):       102.674032 sec
tricount time:       102.821510 sec (saxpy method)
tri+prep time:       103.071264 sec (incl time to compute L)
compute C time:      102.674032 sec
reduce (C) time:       0.147479 sec
rate       0.31 million edges/sec (incl time for L=tril(A))
rate       0.31 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale22-ef16/graph500-scale22-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 2393285 by 2393285, 128194008 entries, from stdin

total time to read A matrix:     101.598604 sec

n 2393285 # edges 64097004
U=triu(A) time:        0.561254 sec
L=tril(A) time:        0.501109 sec

------------------------------------- dot product method:
# triangles 2067392370

L*U' time (dot):       378.455255 sec
tricount time:       378.735366 sec (dot product method)
tri+prep time:       379.797730 sec (incl time to compute L and U)
compute C time:      378.455255 sec
reduce (C) time:       0.280111 sec
rate       0.17 million edges/sec (incl time for U=triu(A))
rate       0.17 million edges/sec (just tricount itself)

# triangles 2067392370

L*U' time (dot):       367.900644 sec
tricount time:       368.181124 sec (dot product method)
tri+prep time:       369.243487 sec (incl time to compute L and U)
compute C time:      367.900644 sec
reduce (C) time:       0.280480 sec
rate       0.17 million edges/sec (incl time for U=triu(A))
rate       0.17 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):       349.954156 sec
tricount time:       350.229095 sec (saxpy method)
tri+prep time:       350.730204 sec (incl time to compute L)
compute C time:      349.954156 sec
reduce (C) time:       0.274939 sec
rate       0.18 million edges/sec (incl time for L=tril(A))
rate       0.18 million edges/sec (just tricount itself)


