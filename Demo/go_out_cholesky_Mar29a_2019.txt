
--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Mallya/lhr71_adj.tsv.gz
--------------------------------------------------------------
matrix 70304 by 70304, 2985588 entries, from stdin

total time to read A matrix:       1.834177 sec

n 70304 # edges 1492794
U=triu(A) time:        0.012746 sec

------------------------------------- dot product method:
L=tril(A) time:        0.012235 sec
# triangles 160592

L'*U time (dot):         0.022449 sec
tricount time:         0.022726 sec (dot product method)
tri+prep time:         0.047707 sec (incl time to compute L and U)
compute C time:        0.022449 sec
reduce (C) time:       0.000277 sec
rate      31.29 million edges/sec (incl time for U=triu(A))
rate      65.69 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.020255 sec
tricount time:         0.020537 sec (saxpy method)
tri+prep time:         0.032772 sec (incl time to compute L)
compute C time:        0.020255 sec
reduce (C) time:       0.000283 sec
rate      45.55 million edges/sec (incl time for L=tril(A))
rate      72.69 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Freescale/Freescale2_adj.tsv.gz
--------------------------------------------------------------
matrix 2999349 by 2999349, 11489868 entries, from stdin

total time to read A matrix:       7.680480 sec

n 2999349 # edges 5744934
U=triu(A) time:        0.088246 sec

------------------------------------- dot product method:
L=tril(A) time:        0.072039 sec
# triangles 21027280

L'*U time (dot):         0.344836 sec
tricount time:         0.357393 sec (dot product method)
tri+prep time:         0.517678 sec (incl time to compute L and U)
compute C time:        0.344836 sec
reduce (C) time:       0.012557 sec
rate      11.10 million edges/sec (incl time for U=triu(A))
rate      16.07 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.200903 sec
tricount time:         0.213497 sec (saxpy method)
tri+prep time:         0.285536 sec (incl time to compute L)
compute C time:        0.200903 sec
reduce (C) time:       0.012593 sec
rate      20.12 million edges/sec (incl time for L=tril(A))
rate      26.91 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/cit-HepPh/cit-HepPh_adj.tsv.gz
--------------------------------------------------------------
matrix 34546 by 34546, 841754 entries, from stdin

total time to read A matrix:       0.538403 sec

n 34546 # edges 420877
U=triu(A) time:        0.004298 sec

------------------------------------- dot product method:
L=tril(A) time:        0.003637 sec
# triangles 1276868

L'*U time (dot):         0.079230 sec
tricount time:         0.081004 sec (dot product method)
tri+prep time:         0.088940 sec (incl time to compute L and U)
compute C time:        0.079230 sec
reduce (C) time:       0.001774 sec
rate       4.73 million edges/sec (incl time for U=triu(A))
rate       5.20 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.033668 sec
tricount time:         0.035439 sec (saxpy method)
tri+prep time:         0.039076 sec (incl time to compute L)
compute C time:        0.033668 sec
reduce (C) time:       0.001771 sec
rate      10.77 million edges/sec (incl time for L=tril(A))
rate      11.88 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/cit-HepTh/cit-HepTh_adj.tsv.gz
--------------------------------------------------------------
matrix 27770 by 27770, 704570 entries, from stdin

total time to read A matrix:       0.437039 sec

n 27770 # edges 352285
U=triu(A) time:        0.003535 sec

------------------------------------- dot product method:
L=tril(A) time:        0.003273 sec
# triangles 1478735

L'*U time (dot):         0.085124 sec
tricount time:         0.086739 sec (dot product method)
tri+prep time:         0.093547 sec (incl time to compute L and U)
compute C time:        0.085124 sec
reduce (C) time:       0.001615 sec
rate       3.77 million edges/sec (incl time for U=triu(A))
rate       4.06 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.038764 sec
tricount time:         0.040376 sec (saxpy method)
tri+prep time:         0.043650 sec (incl time to compute L)
compute C time:        0.038764 sec
reduce (C) time:       0.001612 sec
rate       8.07 million edges/sec (incl time for L=tril(A))
rate       8.73 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/email-EuAll/email-EuAll_adj.tsv.gz
--------------------------------------------------------------
matrix 265214 by 265214, 728962 entries, from stdin

total time to read A matrix:       0.489418 sec

n 265214 # edges 364481
U=triu(A) time:        0.006316 sec

------------------------------------- dot product method:
L=tril(A) time:        0.005808 sec
# triangles 267313

L'*U time (dot):         0.053494 sec
tricount time:         0.053877 sec (dot product method)
tri+prep time:         0.066002 sec (incl time to compute L and U)
compute C time:        0.053494 sec
reduce (C) time:       0.000383 sec
rate       5.52 million edges/sec (incl time for U=triu(A))
rate       6.77 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.038272 sec
tricount time:         0.038652 sec (saxpy method)
tri+prep time:         0.044461 sec (incl time to compute L)
compute C time:        0.038272 sec
reduce (C) time:       0.000380 sec
rate       8.20 million edges/sec (incl time for L=tril(A))
rate       9.43 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/soc-Epinions1/soc-Epinions1_adj.tsv.gz
--------------------------------------------------------------
matrix 75879 by 75879, 811480 entries, from stdin

total time to read A matrix:       0.518763 sec

n 75879 # edges 405740
U=triu(A) time:        0.004584 sec

------------------------------------- dot product method:
L=tril(A) time:        0.004015 sec
# triangles 1624481

L'*U time (dot):         0.163535 sec
tricount time:         0.164894 sec (dot product method)
tri+prep time:         0.173493 sec (incl time to compute L and U)
compute C time:        0.163535 sec
reduce (C) time:       0.001359 sec
rate       2.34 million edges/sec (incl time for U=triu(A))
rate       2.46 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.055391 sec
tricount time:         0.056750 sec (saxpy method)
tri+prep time:         0.060765 sec (incl time to compute L)
compute C time:        0.055391 sec
reduce (C) time:       0.001359 sec
rate       6.68 million edges/sec (incl time for L=tril(A))
rate       7.15 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/soc-Slashdot0811/soc-Slashdot0811_adj.tsv.gz
--------------------------------------------------------------
matrix 77360 by 77360, 938360 entries, from stdin

total time to read A matrix:       0.633345 sec

n 77360 # edges 469180
U=triu(A) time:        0.005367 sec

------------------------------------- dot product method:
L=tril(A) time:        0.004599 sec
# triangles 551724

L'*U time (dot):         0.136191 sec
tricount time:         0.137031 sec (dot product method)
tri+prep time:         0.146997 sec (incl time to compute L and U)
compute C time:        0.136191 sec
reduce (C) time:       0.000840 sec
rate       3.19 million edges/sec (incl time for U=triu(A))
rate       3.42 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.050651 sec
tricount time:         0.051488 sec (saxpy method)
tri+prep time:         0.056086 sec (incl time to compute L)
compute C time:        0.050651 sec
reduce (C) time:       0.000836 sec
rate       8.37 million edges/sec (incl time for L=tril(A))
rate       9.11 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/soc-Slashdot0902/soc-Slashdot0902_adj.tsv.gz
--------------------------------------------------------------
matrix 82168 by 82168, 1008460 entries, from stdin

total time to read A matrix:       0.649211 sec

n 82168 # edges 504230
U=triu(A) time:        0.005551 sec

------------------------------------- dot product method:
L=tril(A) time:        0.004920 sec
# triangles 602592

L'*U time (dot):         0.147233 sec
tricount time:         0.148137 sec (dot product method)
tri+prep time:         0.158608 sec (incl time to compute L and U)
compute C time:        0.147233 sec
reduce (C) time:       0.000904 sec
rate       3.18 million edges/sec (incl time for U=triu(A))
rate       3.40 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.053821 sec
tricount time:         0.054722 sec (saxpy method)
tri+prep time:         0.059642 sec (incl time to compute L)
compute C time:        0.053821 sec
reduce (C) time:       0.000901 sec
rate       8.45 million edges/sec (incl time for L=tril(A))
rate       9.21 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0312/amazon0312_adj.tsv.gz
--------------------------------------------------------------
matrix 400727 by 400727, 4699738 entries, from stdin

total time to read A matrix:       3.155113 sec

n 400727 # edges 2349869
U=triu(A) time:        0.029693 sec

------------------------------------- dot product method:
L=tril(A) time:        0.022551 sec
# triangles 3686467

L'*U time (dot):         0.282089 sec
tricount time:         0.290546 sec (dot product method)
tri+prep time:         0.342791 sec (incl time to compute L and U)
compute C time:        0.282089 sec
reduce (C) time:       0.008457 sec
rate       6.86 million edges/sec (incl time for U=triu(A))
rate       8.09 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.192717 sec
tricount time:         0.201169 sec (saxpy method)
tri+prep time:         0.223721 sec (incl time to compute L)
compute C time:        0.192717 sec
reduce (C) time:       0.008453 sec
rate      10.50 million edges/sec (incl time for L=tril(A))
rate      11.68 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0505/amazon0505_adj.tsv.gz
--------------------------------------------------------------
matrix 410236 by 410236, 4878874 entries, from stdin

total time to read A matrix:       3.299478 sec

n 410236 # edges 2439437
U=triu(A) time:        0.030658 sec

------------------------------------- dot product method:
L=tril(A) time:        0.023225 sec
# triangles 3951063

L'*U time (dot):         0.295191 sec
tricount time:         0.304089 sec (dot product method)
tri+prep time:         0.357972 sec (incl time to compute L and U)
compute C time:        0.295191 sec
reduce (C) time:       0.008898 sec
rate       6.81 million edges/sec (incl time for U=triu(A))
rate       8.02 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.197924 sec
tricount time:         0.206818 sec (saxpy method)
tri+prep time:         0.230043 sec (incl time to compute L)
compute C time:        0.197924 sec
reduce (C) time:       0.008894 sec
rate      10.60 million edges/sec (incl time for L=tril(A))
rate      11.80 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0601/amazon0601_adj.tsv.gz
--------------------------------------------------------------
matrix 403394 by 403394, 4886816 entries, from stdin

total time to read A matrix:       3.279058 sec

n 403394 # edges 2443408
U=triu(A) time:        0.030598 sec

------------------------------------- dot product method:
L=tril(A) time:        0.023166 sec
# triangles 3986507

L'*U time (dot):         0.296386 sec
tricount time:         0.305310 sec (dot product method)
tri+prep time:         0.359073 sec (incl time to compute L and U)
compute C time:        0.296386 sec
reduce (C) time:       0.008923 sec
rate       6.80 million edges/sec (incl time for U=triu(A))
rate       8.00 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.201739 sec
tricount time:         0.210664 sec (saxpy method)
tri+prep time:         0.233830 sec (incl time to compute L)
compute C time:        0.201739 sec
reduce (C) time:       0.008925 sec
rate      10.45 million edges/sec (incl time for L=tril(A))
rate      11.60 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/flickrEdges/flickrEdges_adj.tsv.gz
--------------------------------------------------------------
matrix 105938 by 105938, 4633896 entries, from stdin

total time to read A matrix:       2.994423 sec

n 105938 # edges 2316948
U=triu(A) time:        0.021222 sec

------------------------------------- dot product method:
L=tril(A) time:        0.018953 sec
# triangles 107987357

L'*U time (dot):         2.289677 sec
tricount time:         2.300692 sec (dot product method)
tri+prep time:         2.340867 sec (incl time to compute L and U)
compute C time:        2.289677 sec
reduce (C) time:       0.011015 sec
rate       0.99 million edges/sec (incl time for U=triu(A))
rate       1.01 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.981427 sec
tricount time:         0.992346 sec (saxpy method)
tri+prep time:         1.011300 sec (incl time to compute L)
compute C time:        0.981427 sec
reduce (C) time:       0.010919 sec
rate       2.29 million edges/sec (incl time for L=tril(A))
rate       2.33 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/cit-Patents/cit-Patents_adj.tsv.gz
--------------------------------------------------------------
matrix 3774768 by 3774768, 33037894 entries, from stdin

total time to read A matrix:      25.020136 sec

n 3774768 # edges 16518947
U=triu(A) time:        0.219760 sec

------------------------------------- dot product method:
L=tril(A) time:        0.159101 sec
# triangles 7515023

L'*U time (dot):         3.306375 sec
tricount time:         3.330540 sec (dot product method)
tri+prep time:         3.709401 sec (incl time to compute L and U)
compute C time:        3.306375 sec
reduce (C) time:       0.024164 sec
rate       4.45 million edges/sec (incl time for U=triu(A))
rate       4.96 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         2.752571 sec
tricount time:         2.776954 sec (saxpy method)
tri+prep time:         2.936055 sec (incl time to compute L)
compute C time:        2.752571 sec
reduce (C) time:       0.024383 sec
rate       5.63 million edges/sec (incl time for L=tril(A))
rate       5.95 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/SNAP/soc-LiveJournal1_adj.tsv.gz
--------------------------------------------------------------
matrix 4847571 by 4847571, 85702474 entries, from stdin

total time to read A matrix:      62.906695 sec

n 4847571 # edges 42851237
U=triu(A) time:        0.469715 sec

------------------------------------- dot product method:
L=tril(A) time:        0.386489 sec
# triangles 285730264

L'*U time (dot):        19.111776 sec
tricount time:        19.284439 sec (dot product method)
tri+prep time:        20.140643 sec (incl time to compute L and U)
compute C time:       19.111776 sec
reduce (C) time:       0.172664 sec
rate       2.13 million edges/sec (incl time for U=triu(A))
rate       2.22 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         9.628042 sec
tricount time:         9.788906 sec (saxpy method)
tri+prep time:        10.175396 sec (incl time to compute L)
compute C time:        9.628042 sec
reduce (C) time:       0.160864 sec
rate       4.21 million edges/sec (incl time for L=tril(A))
rate       4.38 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Gleich/wb-edu_adj.tsv.gz
--------------------------------------------------------------
matrix 9845725 by 9845725, 92472210 entries, from stdin

total time to read A matrix:      63.456652 sec

n 9845725 # edges 46236105
U=triu(A) time:        0.553274 sec

------------------------------------- dot product method:
L=tril(A) time:        0.459031 sec
# triangles 254718147

L'*U time (dot):         5.479159 sec
tricount time:         5.661515 sec (dot product method)
tri+prep time:         6.673819 sec (incl time to compute L and U)
compute C time:        5.479159 sec
reduce (C) time:       0.182356 sec
rate       6.93 million edges/sec (incl time for U=triu(A))
rate       8.17 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         3.907355 sec
tricount time:         4.096793 sec (saxpy method)
tri+prep time:         4.555823 sec (incl time to compute L)
compute C time:        3.907355 sec
reduce (C) time:       0.189437 sec
rate      10.15 million edges/sec (incl time for L=tril(A))
rate      11.29 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/amazon0302/amazon0302_adj.tsv.gz
--------------------------------------------------------------
matrix 262111 by 262111, 1799584 entries, from stdin

total time to read A matrix:       1.213592 sec

n 262111 # edges 899792
U=triu(A) time:        0.013392 sec

------------------------------------- dot product method:
L=tril(A) time:        0.010030 sec
# triangles 717719

L'*U time (dot):         0.054104 sec
tricount time:         0.056671 sec (dot product method)
tri+prep time:         0.080093 sec (incl time to compute L and U)
compute C time:        0.054104 sec
reduce (C) time:       0.002567 sec
rate      11.23 million edges/sec (incl time for U=triu(A))
rate      15.88 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.045262 sec
tricount time:         0.047824 sec (saxpy method)
tri+prep time:         0.057854 sec (incl time to compute L)
compute C time:        0.045262 sec
reduce (C) time:       0.002561 sec
rate      15.55 million edges/sec (incl time for L=tril(A))
rate      18.81 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/as-caida20071105/as-caida20071105_adj.tsv.gz
--------------------------------------------------------------
matrix 26475 by 26475, 106762 entries, from stdin

total time to read A matrix:       0.065912 sec

n 26475 # edges 53381
U=triu(A) time:        0.000891 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000730 sec
# triangles 36365

L'*U time (dot):         0.005605 sec
tricount time:         0.005682 sec (dot product method)
tri+prep time:         0.007304 sec (incl time to compute L and U)
compute C time:        0.005605 sec
reduce (C) time:       0.000077 sec
rate       7.31 million edges/sec (incl time for U=triu(A))
rate       9.39 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004953 sec
tricount time:         0.005028 sec (saxpy method)
tri+prep time:         0.005759 sec (incl time to compute L)
compute C time:        0.004953 sec
reduce (C) time:       0.000075 sec
rate       9.27 million edges/sec (incl time for L=tril(A))
rate      10.62 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/as20000102/as20000102_adj.tsv.gz
--------------------------------------------------------------
matrix 6474 by 6474, 25144 entries, from stdin

total time to read A matrix:       0.014710 sec

n 6474 # edges 12572
U=triu(A) time:        0.000220 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000174 sec
# triangles 6584

L'*U time (dot):         0.000851 sec
tricount time:         0.000869 sec (dot product method)
tri+prep time:         0.001263 sec (incl time to compute L and U)
compute C time:        0.000851 sec
reduce (C) time:       0.000018 sec
rate       9.95 million edges/sec (incl time for U=triu(A))
rate      14.47 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000538 sec
tricount time:         0.000554 sec (saxpy method)
tri+prep time:         0.000728 sec (incl time to compute L)
compute C time:        0.000538 sec
reduce (C) time:       0.000016 sec
rate      17.27 million edges/sec (incl time for L=tril(A))
rate      22.70 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-AstroPh/ca-AstroPh_adj.tsv.gz
--------------------------------------------------------------
matrix 18772 by 18772, 396100 entries, from stdin

total time to read A matrix:       0.248497 sec

n 18772 # edges 198050
U=triu(A) time:        0.001997 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001750 sec
# triangles 1351441

L'*U time (dot):         0.041567 sec
tricount time:         0.042542 sec (dot product method)
tri+prep time:         0.046289 sec (incl time to compute L and U)
compute C time:        0.041567 sec
reduce (C) time:       0.000975 sec
rate       4.28 million edges/sec (incl time for U=triu(A))
rate       4.66 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.017917 sec
tricount time:         0.018888 sec (saxpy method)
tri+prep time:         0.020638 sec (incl time to compute L)
compute C time:        0.017917 sec
reduce (C) time:       0.000970 sec
rate       9.60 million edges/sec (incl time for L=tril(A))
rate      10.49 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-CondMat/ca-CondMat_adj.tsv.gz
--------------------------------------------------------------
matrix 23133 by 23133, 186878 entries, from stdin

total time to read A matrix:       0.144486 sec

n 23133 # edges 93439
U=triu(A) time:        0.001266 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000999 sec
# triangles 173361

L'*U time (dot):         0.007625 sec
tricount time:         0.007984 sec (dot product method)
tri+prep time:         0.010249 sec (incl time to compute L and U)
compute C time:        0.007625 sec
reduce (C) time:       0.000359 sec
rate       9.12 million edges/sec (incl time for U=triu(A))
rate      11.70 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004538 sec
tricount time:         0.004894 sec (saxpy method)
tri+prep time:         0.005893 sec (incl time to compute L)
compute C time:        0.004538 sec
reduce (C) time:       0.000356 sec
rate      15.86 million edges/sec (incl time for L=tril(A))
rate      19.09 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-GrQc/ca-GrQc_adj.tsv.gz
--------------------------------------------------------------
matrix 5242 by 5242, 28968 entries, from stdin

total time to read A matrix:       0.017128 sec

n 5242 # edges 14484
U=triu(A) time:        0.000233 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000182 sec
# triangles 48260

L'*U time (dot):         0.000901 sec
tricount time:         0.000954 sec (dot product method)
tri+prep time:         0.001369 sec (incl time to compute L and U)
compute C time:        0.000901 sec
reduce (C) time:       0.000053 sec
rate      10.58 million edges/sec (incl time for U=triu(A))
rate      15.19 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000614 sec
tricount time:         0.000665 sec (saxpy method)
tri+prep time:         0.000848 sec (incl time to compute L)
compute C time:        0.000614 sec
reduce (C) time:       0.000051 sec
rate      17.08 million edges/sec (incl time for L=tril(A))
rate      21.77 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-HepPh/ca-HepPh_adj.tsv.gz
--------------------------------------------------------------
matrix 12008 by 12008, 236978 entries, from stdin

total time to read A matrix:       0.144292 sec

n 12008 # edges 118489
U=triu(A) time:        0.001187 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001021 sec
# triangles 3358499

L'*U time (dot):         0.038928 sec
tricount time:         0.039530 sec (dot product method)
tri+prep time:         0.041738 sec (incl time to compute L and U)
compute C time:        0.038928 sec
reduce (C) time:       0.000602 sec
rate       2.84 million edges/sec (incl time for U=triu(A))
rate       3.00 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.017689 sec
tricount time:         0.018288 sec (saxpy method)
tri+prep time:         0.019309 sec (incl time to compute L)
compute C time:        0.017689 sec
reduce (C) time:       0.000600 sec
rate       6.14 million edges/sec (incl time for L=tril(A))
rate       6.48 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/ca-HepTh/ca-HepTh_adj.tsv.gz
--------------------------------------------------------------
matrix 9877 by 9877, 51946 entries, from stdin

total time to read A matrix:       0.030986 sec

n 9877 # edges 25973
U=triu(A) time:        0.000425 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000322 sec
# triangles 28339

L'*U time (dot):         0.001431 sec
tricount time:         0.001506 sec (dot product method)
tri+prep time:         0.002253 sec (incl time to compute L and U)
compute C time:        0.001431 sec
reduce (C) time:       0.000075 sec
rate      11.53 million edges/sec (incl time for U=triu(A))
rate      17.25 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.001050 sec
tricount time:         0.001123 sec (saxpy method)
tri+prep time:         0.001445 sec (incl time to compute L)
compute C time:        0.001050 sec
reduce (C) time:       0.000074 sec
rate      17.97 million edges/sec (incl time for L=tril(A))
rate      23.13 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/email-Enron/email-Enron_adj.tsv.gz
--------------------------------------------------------------
matrix 36692 by 36692, 367662 entries, from stdin

total time to read A matrix:       0.231098 sec

n 36692 # edges 183831
U=triu(A) time:        0.002194 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001844 sec
# triangles 727044

L'*U time (dot):         0.044687 sec
tricount time:         0.045471 sec (dot product method)
tri+prep time:         0.049509 sec (incl time to compute L and U)
compute C time:        0.044687 sec
reduce (C) time:       0.000783 sec
rate       3.71 million edges/sec (incl time for U=triu(A))
rate       4.04 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.019482 sec
tricount time:         0.020256 sec (saxpy method)
tri+prep time:         0.022100 sec (incl time to compute L)
compute C time:        0.019482 sec
reduce (C) time:       0.000774 sec
rate       8.32 million edges/sec (incl time for L=tril(A))
rate       9.08 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/facebook_combined/facebook_combined_adj.tsv.gz
--------------------------------------------------------------
matrix 4039 by 4039, 176468 entries, from stdin

total time to read A matrix:       0.103257 sec

n 4039 # edges 88234
U=triu(A) time:        0.000776 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000723 sec
# triangles 1612010

L'*U time (dot):         0.027354 sec
tricount time:         0.027837 sec (dot product method)
tri+prep time:         0.029336 sec (incl time to compute L and U)
compute C time:        0.027354 sec
reduce (C) time:       0.000482 sec
rate       3.01 million edges/sec (incl time for U=triu(A))
rate       3.17 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.010706 sec
tricount time:         0.011185 sec (saxpy method)
tri+prep time:         0.011909 sec (incl time to compute L)
compute C time:        0.010706 sec
reduce (C) time:       0.000479 sec
rate       7.41 million edges/sec (incl time for L=tril(A))
rate       7.89 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/loc-brightkite_edges/loc-brightkite_edges_adj.tsv.gz
--------------------------------------------------------------
matrix 58228 by 58228, 428156 entries, from stdin

total time to read A matrix:       0.300612 sec

n 58228 # edges 214078
U=triu(A) time:        0.002802 sec

------------------------------------- dot product method:
L=tril(A) time:        0.002393 sec
# triangles 494728

L'*U time (dot):         0.031465 sec
tricount time:         0.032014 sec (dot product method)
tri+prep time:         0.037209 sec (incl time to compute L and U)
compute C time:        0.031465 sec
reduce (C) time:       0.000549 sec
rate       5.75 million edges/sec (incl time for U=triu(A))
rate       6.69 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.013228 sec
tricount time:         0.013774 sec (saxpy method)
tri+prep time:         0.016167 sec (incl time to compute L)
compute C time:        0.013228 sec
reduce (C) time:       0.000546 sec
rate      13.24 million edges/sec (incl time for L=tril(A))
rate      15.54 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/loc-gowalla_edges/loc-gowalla_edges_adj.tsv.gz
--------------------------------------------------------------
matrix 196591 by 196591, 1900654 entries, from stdin

total time to read A matrix:       1.285893 sec

n 196591 # edges 950327
U=triu(A) time:        0.011734 sec

------------------------------------- dot product method:
L=tril(A) time:        0.009639 sec
# triangles 2273138

L'*U time (dot):         0.211976 sec
tricount time:         0.214950 sec (dot product method)
tri+prep time:         0.236322 sec (incl time to compute L and U)
compute C time:        0.211976 sec
reduce (C) time:       0.002973 sec
rate       4.02 million edges/sec (incl time for U=triu(A))
rate       4.42 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.206407 sec
tricount time:         0.209382 sec (saxpy method)
tri+prep time:         0.219020 sec (incl time to compute L)
compute C time:        0.206407 sec
reduce (C) time:       0.002975 sec
rate       4.34 million edges/sec (incl time for L=tril(A))
rate       4.54 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010331/oregon1_010331_adj.tsv.gz
--------------------------------------------------------------
matrix 10670 by 10670, 44004 entries, from stdin

total time to read A matrix:       0.026203 sec

n 10670 # edges 22002
U=triu(A) time:        0.000354 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000287 sec
# triangles 17144

L'*U time (dot):         0.001867 sec
tricount time:         0.001907 sec (dot product method)
tri+prep time:         0.002548 sec (incl time to compute L and U)
compute C time:        0.001867 sec
reduce (C) time:       0.000040 sec
rate       8.63 million edges/sec (incl time for U=triu(A))
rate      11.54 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002195 sec
tricount time:         0.002234 sec (saxpy method)
tri+prep time:         0.002521 sec (incl time to compute L)
compute C time:        0.002195 sec
reduce (C) time:       0.000039 sec
rate       8.73 million edges/sec (incl time for L=tril(A))
rate       9.85 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010407/oregon1_010407_adj.tsv.gz
--------------------------------------------------------------
matrix 10729 by 10729, 43998 entries, from stdin

total time to read A matrix:       0.026096 sec

n 10729 # edges 21999
U=triu(A) time:        0.000355 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000288 sec
# triangles 15834

L'*U time (dot):         0.001847 sec
tricount time:         0.001887 sec (dot product method)
tri+prep time:         0.002530 sec (incl time to compute L and U)
compute C time:        0.001847 sec
reduce (C) time:       0.000040 sec
rate       8.69 million edges/sec (incl time for U=triu(A))
rate      11.66 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002106 sec
tricount time:         0.002144 sec (saxpy method)
tri+prep time:         0.002432 sec (incl time to compute L)
compute C time:        0.002106 sec
reduce (C) time:       0.000038 sec
rate       9.05 million edges/sec (incl time for L=tril(A))
rate      10.26 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010414/oregon1_010414_adj.tsv.gz
--------------------------------------------------------------
matrix 10790 by 10790, 44938 entries, from stdin

total time to read A matrix:       0.026583 sec

n 10790 # edges 22469
U=triu(A) time:        0.000367 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000293 sec
# triangles 18237

L'*U time (dot):         0.001960 sec
tricount time:         0.002002 sec (dot product method)
tri+prep time:         0.002662 sec (incl time to compute L and U)
compute C time:        0.001960 sec
reduce (C) time:       0.000042 sec
rate       8.44 million edges/sec (incl time for U=triu(A))
rate      11.22 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002244 sec
tricount time:         0.002285 sec (saxpy method)
tri+prep time:         0.002578 sec (incl time to compute L)
compute C time:        0.002244 sec
reduce (C) time:       0.000040 sec
rate       8.72 million edges/sec (incl time for L=tril(A))
rate       9.83 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010421/oregon1_010421_adj.tsv.gz
--------------------------------------------------------------
matrix 10859 by 10859, 45494 entries, from stdin

total time to read A matrix:       0.027051 sec

n 10859 # edges 22747
U=triu(A) time:        0.000369 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000303 sec
# triangles 19108

L'*U time (dot):         0.002003 sec
tricount time:         0.002046 sec (dot product method)
tri+prep time:         0.002719 sec (incl time to compute L and U)
compute C time:        0.002003 sec
reduce (C) time:       0.000043 sec
rate       8.37 million edges/sec (incl time for U=triu(A))
rate      11.12 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002298 sec
tricount time:         0.002339 sec (saxpy method)
tri+prep time:         0.002643 sec (incl time to compute L)
compute C time:        0.002298 sec
reduce (C) time:       0.000041 sec
rate       8.61 million edges/sec (incl time for L=tril(A))
rate       9.72 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010428/oregon1_010428_adj.tsv.gz
--------------------------------------------------------------
matrix 10886 by 10886, 44986 entries, from stdin

total time to read A matrix:       0.026639 sec

n 10886 # edges 22493
U=triu(A) time:        0.000367 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000295 sec
# triangles 17645

L'*U time (dot):         0.001923 sec
tricount time:         0.001964 sec (dot product method)
tri+prep time:         0.002627 sec (incl time to compute L and U)
compute C time:        0.001923 sec
reduce (C) time:       0.000041 sec
rate       8.56 million edges/sec (incl time for U=triu(A))
rate      11.45 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002266 sec
tricount time:         0.002305 sec (saxpy method)
tri+prep time:         0.002600 sec (incl time to compute L)
compute C time:        0.002266 sec
reduce (C) time:       0.000040 sec
rate       8.65 million edges/sec (incl time for L=tril(A))
rate       9.76 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010505/oregon1_010505_adj.tsv.gz
--------------------------------------------------------------
matrix 10943 by 10943, 45214 entries, from stdin

total time to read A matrix:       0.026807 sec

n 10943 # edges 22607
U=triu(A) time:        0.000369 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000299 sec
# triangles 17597

L'*U time (dot):         0.001935 sec
tricount time:         0.001976 sec (dot product method)
tri+prep time:         0.002644 sec (incl time to compute L and U)
compute C time:        0.001935 sec
reduce (C) time:       0.000041 sec
rate       8.55 million edges/sec (incl time for U=triu(A))
rate      11.44 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002265 sec
tricount time:         0.002304 sec (saxpy method)
tri+prep time:         0.002603 sec (incl time to compute L)
compute C time:        0.002265 sec
reduce (C) time:       0.000039 sec
rate       8.69 million edges/sec (incl time for L=tril(A))
rate       9.81 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010512/oregon1_010512_adj.tsv.gz
--------------------------------------------------------------
matrix 11011 by 11011, 45354 entries, from stdin

total time to read A matrix:       0.026896 sec

n 11011 # edges 22677
U=triu(A) time:        0.000370 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000301 sec
# triangles 17598

L'*U time (dot):         0.001934 sec
tricount time:         0.001975 sec (dot product method)
tri+prep time:         0.002646 sec (incl time to compute L and U)
compute C time:        0.001934 sec
reduce (C) time:       0.000041 sec
rate       8.57 million edges/sec (incl time for U=triu(A))
rate      11.48 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002282 sec
tricount time:         0.002322 sec (saxpy method)
tri+prep time:         0.002623 sec (incl time to compute L)
compute C time:        0.002282 sec
reduce (C) time:       0.000040 sec
rate       8.64 million edges/sec (incl time for L=tril(A))
rate       9.77 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010519/oregon1_010519_adj.tsv.gz
--------------------------------------------------------------
matrix 11051 by 11051, 45448 entries, from stdin

total time to read A matrix:       0.026976 sec

n 11051 # edges 22724
U=triu(A) time:        0.000371 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000297 sec
# triangles 17677

L'*U time (dot):         0.001943 sec
tricount time:         0.001984 sec (dot product method)
tri+prep time:         0.002652 sec (incl time to compute L and U)
compute C time:        0.001943 sec
reduce (C) time:       0.000041 sec
rate       8.57 million edges/sec (incl time for U=triu(A))
rate      11.45 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002276 sec
tricount time:         0.002316 sec (saxpy method)
tri+prep time:         0.002612 sec (incl time to compute L)
compute C time:        0.002276 sec
reduce (C) time:       0.000040 sec
rate       8.70 million edges/sec (incl time for L=tril(A))
rate       9.81 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon1_010526/oregon1_010526_adj.tsv.gz
--------------------------------------------------------------
matrix 11174 by 11174, 46818 entries, from stdin

total time to read A matrix:       0.027765 sec

n 11174 # edges 23409
U=triu(A) time:        0.000380 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000356 sec
# triangles 19894

L'*U time (dot):         0.002077 sec
tricount time:         0.002121 sec (dot product method)
tri+prep time:         0.002856 sec (incl time to compute L and U)
compute C time:        0.002077 sec
reduce (C) time:       0.000044 sec
rate       8.20 million edges/sec (incl time for U=triu(A))
rate      11.04 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002348 sec
tricount time:         0.002391 sec (saxpy method)
tri+prep time:         0.002747 sec (incl time to compute L)
compute C time:        0.002348 sec
reduce (C) time:       0.000043 sec
rate       8.52 million edges/sec (incl time for L=tril(A))
rate       9.79 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010331/oregon2_010331_adj.tsv.gz
--------------------------------------------------------------
matrix 10900 by 10900, 62360 entries, from stdin

total time to read A matrix:       0.039439 sec

n 10900 # edges 31180
U=triu(A) time:        0.000445 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000424 sec
# triangles 82856

L'*U time (dot):         0.004057 sec
tricount time:         0.004147 sec (dot product method)
tri+prep time:         0.005016 sec (incl time to compute L and U)
compute C time:        0.004057 sec
reduce (C) time:       0.000090 sec
rate       6.22 million edges/sec (incl time for U=triu(A))
rate       7.52 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003201 sec
tricount time:         0.003290 sec (saxpy method)
tri+prep time:         0.003714 sec (incl time to compute L)
compute C time:        0.003201 sec
reduce (C) time:       0.000089 sec
rate       8.40 million edges/sec (incl time for L=tril(A))
rate       9.48 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010407/oregon2_010407_adj.tsv.gz
--------------------------------------------------------------
matrix 10981 by 10981, 61710 entries, from stdin

total time to read A matrix:       0.039095 sec

n 10981 # edges 30855
U=triu(A) time:        0.000440 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000360 sec
# triangles 78138

L'*U time (dot):         0.003974 sec
tricount time:         0.004061 sec (dot product method)
tri+prep time:         0.004861 sec (incl time to compute L and U)
compute C time:        0.003974 sec
reduce (C) time:       0.000087 sec
rate       6.35 million edges/sec (incl time for U=triu(A))
rate       7.60 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003194 sec
tricount time:         0.003279 sec (saxpy method)
tri+prep time:         0.003639 sec (incl time to compute L)
compute C time:        0.003194 sec
reduce (C) time:       0.000085 sec
rate       8.48 million edges/sec (incl time for L=tril(A))
rate       9.41 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010414/oregon2_010414_adj.tsv.gz
--------------------------------------------------------------
matrix 11019 by 11019, 63522 entries, from stdin

total time to read A matrix:       0.040290 sec

n 11019 # edges 31761
U=triu(A) time:        0.000451 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000366 sec
# triangles 88905

L'*U time (dot):         0.004314 sec
tricount time:         0.004405 sec (dot product method)
tri+prep time:         0.005223 sec (incl time to compute L and U)
compute C time:        0.004314 sec
reduce (C) time:       0.000092 sec
rate       6.08 million edges/sec (incl time for U=triu(A))
rate       7.21 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003363 sec
tricount time:         0.003453 sec (saxpy method)
tri+prep time:         0.003820 sec (incl time to compute L)
compute C time:        0.003363 sec
reduce (C) time:       0.000091 sec
rate       8.31 million edges/sec (incl time for L=tril(A))
rate       9.20 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010421/oregon2_010421_adj.tsv.gz
--------------------------------------------------------------
matrix 11080 by 11080, 63076 entries, from stdin

total time to read A matrix:       0.040222 sec

n 11080 # edges 31538
U=triu(A) time:        0.000451 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000374 sec
# triangles 82129

L'*U time (dot):         0.004179 sec
tricount time:         0.004268 sec (dot product method)
tri+prep time:         0.005093 sec (incl time to compute L and U)
compute C time:        0.004179 sec
reduce (C) time:       0.000090 sec
rate       6.19 million edges/sec (incl time for U=triu(A))
rate       7.39 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003323 sec
tricount time:         0.003412 sec (saxpy method)
tri+prep time:         0.003785 sec (incl time to compute L)
compute C time:        0.003323 sec
reduce (C) time:       0.000088 sec
rate       8.33 million edges/sec (incl time for L=tril(A))
rate       9.24 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010428/oregon2_010428_adj.tsv.gz
--------------------------------------------------------------
matrix 11113 by 11113, 62868 entries, from stdin

total time to read A matrix:       0.040146 sec

n 11113 # edges 31434
U=triu(A) time:        0.000451 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000363 sec
# triangles 78000

L'*U time (dot):         0.004098 sec
tricount time:         0.004186 sec (dot product method)
tri+prep time:         0.005000 sec (incl time to compute L and U)
compute C time:        0.004098 sec
reduce (C) time:       0.000089 sec
rate       6.29 million edges/sec (incl time for U=triu(A))
rate       7.51 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003338 sec
tricount time:         0.003428 sec (saxpy method)
tri+prep time:         0.003791 sec (incl time to compute L)
compute C time:        0.003338 sec
reduce (C) time:       0.000089 sec
rate       8.29 million edges/sec (incl time for L=tril(A))
rate       9.17 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010505/oregon2_010505_adj.tsv.gz
--------------------------------------------------------------
matrix 11157 by 11157, 61886 entries, from stdin

total time to read A matrix:       0.039247 sec

n 11157 # edges 30943
U=triu(A) time:        0.000445 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000363 sec
# triangles 72182

L'*U time (dot):         0.003973 sec
tricount time:         0.004059 sec (dot product method)
tri+prep time:         0.004866 sec (incl time to compute L and U)
compute C time:        0.003973 sec
reduce (C) time:       0.000085 sec
rate       6.36 million edges/sec (incl time for U=triu(A))
rate       7.62 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003201 sec
tricount time:         0.003284 sec (saxpy method)
tri+prep time:         0.003647 sec (incl time to compute L)
compute C time:        0.003201 sec
reduce (C) time:       0.000083 sec
rate       8.48 million edges/sec (incl time for L=tril(A))
rate       9.42 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010512/oregon2_010512_adj.tsv.gz
--------------------------------------------------------------
matrix 11260 by 11260, 62606 entries, from stdin

total time to read A matrix:       0.039805 sec

n 11260 # edges 31303
U=triu(A) time:        0.000453 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000363 sec
# triangles 72866

L'*U time (dot):         0.004022 sec
tricount time:         0.004108 sec (dot product method)
tri+prep time:         0.004923 sec (incl time to compute L and U)
compute C time:        0.004022 sec
reduce (C) time:       0.000086 sec
rate       6.36 million edges/sec (incl time for U=triu(A))
rate       7.62 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003257 sec
tricount time:         0.003342 sec (saxpy method)
tri+prep time:         0.003705 sec (incl time to compute L)
compute C time:        0.003257 sec
reduce (C) time:       0.000085 sec
rate       8.45 million edges/sec (incl time for L=tril(A))
rate       9.37 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010519/oregon2_010519_adj.tsv.gz
--------------------------------------------------------------
matrix 11375 by 11375, 64574 entries, from stdin

total time to read A matrix:       0.041111 sec

n 11375 # edges 32287
U=triu(A) time:        0.000461 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000374 sec
# triangles 83709

L'*U time (dot):         0.004309 sec
tricount time:         0.004400 sec (dot product method)
tri+prep time:         0.005235 sec (incl time to compute L and U)
compute C time:        0.004309 sec
reduce (C) time:       0.000091 sec
rate       6.17 million edges/sec (incl time for U=triu(A))
rate       7.34 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003448 sec
tricount time:         0.003538 sec (saxpy method)
tri+prep time:         0.003912 sec (incl time to compute L)
compute C time:        0.003448 sec
reduce (C) time:       0.000090 sec
rate       8.25 million edges/sec (incl time for L=tril(A))
rate       9.13 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/oregon2_010526/oregon2_010526_adj.tsv.gz
--------------------------------------------------------------
matrix 11461 by 11461, 65460 entries, from stdin

total time to read A matrix:       0.062348 sec

n 11461 # edges 32730
U=triu(A) time:        0.000567 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000446 sec
# triangles 89541

L'*U time (dot):         0.004444 sec
tricount time:         0.004538 sec (dot product method)
tri+prep time:         0.005550 sec (incl time to compute L and U)
compute C time:        0.004444 sec
reduce (C) time:       0.000093 sec
rate       5.90 million edges/sec (incl time for U=triu(A))
rate       7.21 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.003536 sec
tricount time:         0.003628 sec (saxpy method)
tri+prep time:         0.004074 sec (incl time to compute L)
compute C time:        0.003536 sec
reduce (C) time:       0.000093 sec
rate       8.03 million edges/sec (incl time for L=tril(A))
rate       9.02 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella04/p2p-Gnutella04_adj.tsv.gz
--------------------------------------------------------------
matrix 10876 by 10876, 79988 entries, from stdin

total time to read A matrix:       0.047500 sec

n 10876 # edges 39994
U=triu(A) time:        0.000563 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000436 sec
# triangles 934

L'*U time (dot):         0.002025 sec
tricount time:         0.002034 sec (dot product method)
tri+prep time:         0.003033 sec (incl time to compute L and U)
compute C time:        0.002025 sec
reduce (C) time:       0.000009 sec
rate      13.19 million edges/sec (incl time for U=triu(A))
rate      19.66 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.001165 sec
tricount time:         0.001171 sec (saxpy method)
tri+prep time:         0.001607 sec (incl time to compute L)
compute C time:        0.001165 sec
reduce (C) time:       0.000006 sec
rate      24.88 million edges/sec (incl time for L=tril(A))
rate      34.15 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella05/p2p-Gnutella05_adj.tsv.gz
--------------------------------------------------------------
matrix 8846 by 8846, 63678 entries, from stdin

total time to read A matrix:       0.040102 sec

n 8846 # edges 31839
U=triu(A) time:        0.000460 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000346 sec
# triangles 1112

L'*U time (dot):         0.001660 sec
tricount time:         0.001668 sec (dot product method)
tri+prep time:         0.002474 sec (incl time to compute L and U)
compute C time:        0.001660 sec
reduce (C) time:       0.000008 sec
rate      12.87 million edges/sec (incl time for U=triu(A))
rate      19.09 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000938 sec
tricount time:         0.000944 sec (saxpy method)
tri+prep time:         0.001290 sec (incl time to compute L)
compute C time:        0.000938 sec
reduce (C) time:       0.000006 sec
rate      24.67 million edges/sec (incl time for L=tril(A))
rate      33.72 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella06/p2p-Gnutella06_adj.tsv.gz
--------------------------------------------------------------
matrix 8717 by 8717, 63050 entries, from stdin

total time to read A matrix:       0.039568 sec

n 8717 # edges 31525
U=triu(A) time:        0.000456 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000342 sec
# triangles 1142

L'*U time (dot):         0.001638 sec
tricount time:         0.001647 sec (dot product method)
tri+prep time:         0.002444 sec (incl time to compute L and U)
compute C time:        0.001638 sec
reduce (C) time:       0.000008 sec
rate      12.90 million edges/sec (incl time for U=triu(A))
rate      19.14 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000925 sec
tricount time:         0.000932 sec (saxpy method)
tri+prep time:         0.001274 sec (incl time to compute L)
compute C time:        0.000925 sec
reduce (C) time:       0.000007 sec
rate      24.75 million edges/sec (incl time for L=tril(A))
rate      33.84 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella08/p2p-Gnutella08_adj.tsv.gz
--------------------------------------------------------------
matrix 6301 by 6301, 41554 entries, from stdin

total time to read A matrix:       0.024449 sec

n 6301 # edges 20777
U=triu(A) time:        0.000308 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000239 sec
# triangles 2383

L'*U time (dot):         0.001215 sec
tricount time:         0.001226 sec (dot product method)
tri+prep time:         0.001772 sec (incl time to compute L and U)
compute C time:        0.001215 sec
reduce (C) time:       0.000011 sec
rate      11.72 million edges/sec (incl time for U=triu(A))
rate      16.95 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000645 sec
tricount time:         0.000655 sec (saxpy method)
tri+prep time:         0.000894 sec (incl time to compute L)
compute C time:        0.000645 sec
reduce (C) time:       0.000010 sec
rate      23.24 million edges/sec (incl time for L=tril(A))
rate      31.71 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella09/p2p-Gnutella09_adj.tsv.gz
--------------------------------------------------------------
matrix 8114 by 8114, 52026 entries, from stdin

total time to read A matrix:       0.030664 sec

n 8114 # edges 26013
U=triu(A) time:        0.000390 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000295 sec
# triangles 2354

L'*U time (dot):         0.001482 sec
tricount time:         0.001492 sec (dot product method)
tri+prep time:         0.002177 sec (incl time to compute L and U)
compute C time:        0.001482 sec
reduce (C) time:       0.000011 sec
rate      11.95 million edges/sec (incl time for U=triu(A))
rate      17.43 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.000794 sec
tricount time:         0.000803 sec (saxpy method)
tri+prep time:         0.001098 sec (incl time to compute L)
compute C time:        0.000794 sec
reduce (C) time:       0.000009 sec
rate      23.69 million edges/sec (incl time for L=tril(A))
rate      32.39 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella24/p2p-Gnutella24_adj.tsv.gz
--------------------------------------------------------------
matrix 26518 by 26518, 130738 entries, from stdin

total time to read A matrix:       0.084866 sec

n 26518 # edges 65369
U=triu(A) time:        0.001072 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000817 sec
# triangles 986

L'*U time (dot):         0.002928 sec
tricount time:         0.002936 sec (dot product method)
tri+prep time:         0.004826 sec (incl time to compute L and U)
compute C time:        0.002928 sec
reduce (C) time:       0.000009 sec
rate      13.55 million edges/sec (incl time for U=triu(A))
rate      22.26 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002081 sec
tricount time:         0.002088 sec (saxpy method)
tri+prep time:         0.002905 sec (incl time to compute L)
compute C time:        0.002081 sec
reduce (C) time:       0.000007 sec
rate      22.50 million edges/sec (incl time for L=tril(A))
rate      31.31 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella25/p2p-Gnutella25_adj.tsv.gz
--------------------------------------------------------------
matrix 22687 by 22687, 109410 entries, from stdin

total time to read A matrix:       0.067411 sec

n 22687 # edges 54705
U=triu(A) time:        0.000893 sec

------------------------------------- dot product method:
L=tril(A) time:        0.000690 sec
# triangles 806

L'*U time (dot):         0.002346 sec
tricount time:         0.002353 sec (dot product method)
tri+prep time:         0.003937 sec (incl time to compute L and U)
compute C time:        0.002346 sec
reduce (C) time:       0.000007 sec
rate      13.90 million edges/sec (incl time for U=triu(A))
rate      23.25 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.001714 sec
tricount time:         0.001720 sec (saxpy method)
tri+prep time:         0.002410 sec (incl time to compute L)
compute C time:        0.001714 sec
reduce (C) time:       0.000006 sec
rate      22.70 million edges/sec (incl time for L=tril(A))
rate      31.81 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella30/p2p-Gnutella30_adj.tsv.gz
--------------------------------------------------------------
matrix 36682 by 36682, 176656 entries, from stdin

total time to read A matrix:       0.110768 sec

n 36682 # edges 88328
U=triu(A) time:        0.001447 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001111 sec
# triangles 1590

L'*U time (dot):         0.003879 sec
tricount time:         0.003890 sec (dot product method)
tri+prep time:         0.006448 sec (incl time to compute L and U)
compute C time:        0.003879 sec
reduce (C) time:       0.000011 sec
rate      13.70 million edges/sec (incl time for U=triu(A))
rate      22.71 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.002789 sec
tricount time:         0.002799 sec (saxpy method)
tri+prep time:         0.003910 sec (incl time to compute L)
compute C time:        0.002789 sec
reduce (C) time:       0.000010 sec
rate      22.59 million edges/sec (incl time for L=tril(A))
rate      31.56 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/p2p-Gnutella31/p2p-Gnutella31_adj.tsv.gz
--------------------------------------------------------------
matrix 62586 by 62586, 295784 entries, from stdin

total time to read A matrix:       0.187470 sec

n 62586 # edges 147892
U=triu(A) time:        0.002400 sec

------------------------------------- dot product method:
L=tril(A) time:        0.001884 sec
# triangles 2024

L'*U time (dot):         0.006464 sec
tricount time:         0.006480 sec (dot product method)
tri+prep time:         0.010764 sec (incl time to compute L and U)
compute C time:        0.006464 sec
reduce (C) time:       0.000016 sec
rate      13.74 million edges/sec (incl time for U=triu(A))
rate      22.82 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004637 sec
tricount time:         0.004650 sec (saxpy method)
tri+prep time:         0.006533 sec (incl time to compute L)
compute C time:        0.004637 sec
reduce (C) time:       0.000013 sec
rate      22.64 million edges/sec (incl time for L=tril(A))
rate      31.81 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/roadNet-CA/roadNet-CA_adj.tsv.gz
--------------------------------------------------------------
matrix 1965206 by 1965206, 5533214 entries, from stdin

total time to read A matrix:       3.632849 sec

n 1965206 # edges 2766607
U=triu(A) time:        0.056246 sec

------------------------------------- dot product method:
L=tril(A) time:        0.043087 sec
# triangles 120676

L'*U time (dot):         0.060468 sec
tricount time:         0.061192 sec (dot product method)
tri+prep time:         0.160525 sec (incl time to compute L and U)
compute C time:        0.060468 sec
reduce (C) time:       0.000725 sec
rate      17.23 million edges/sec (incl time for U=triu(A))
rate      45.21 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.181106 sec
tricount time:         0.182351 sec (saxpy method)
tri+prep time:         0.225438 sec (incl time to compute L)
compute C time:        0.181106 sec
reduce (C) time:       0.001245 sec
rate      12.27 million edges/sec (incl time for L=tril(A))
rate      15.17 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/roadNet-PA/roadNet-PA_adj.tsv.gz
--------------------------------------------------------------
matrix 1088092 by 1088092, 3083796 entries, from stdin

total time to read A matrix:       2.001551 sec

n 1088092 # edges 1541898
U=triu(A) time:        0.030690 sec

------------------------------------- dot product method:
L=tril(A) time:        0.024027 sec
# triangles 67150

L'*U time (dot):         0.033098 sec
tricount time:         0.033505 sec (dot product method)
tri+prep time:         0.088223 sec (incl time to compute L and U)
compute C time:        0.033098 sec
reduce (C) time:       0.000407 sec
rate      17.48 million edges/sec (incl time for U=triu(A))
rate      46.02 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.098797 sec
tricount time:         0.099200 sec (saxpy method)
tri+prep time:         0.123228 sec (incl time to compute L)
compute C time:        0.098797 sec
reduce (C) time:       0.000403 sec
rate      12.51 million edges/sec (incl time for L=tril(A))
rate      15.54 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/snap/roadNet-TX/roadNet-TX_adj.tsv.gz
--------------------------------------------------------------
matrix 1379917 by 1379917, 3843320 entries, from stdin

total time to read A matrix:       2.479102 sec

n 1379917 # edges 1921660
U=triu(A) time:        0.038488 sec

------------------------------------- dot product method:
L=tril(A) time:        0.030317 sec
# triangles 82869

L'*U time (dot):         0.041056 sec
tricount time:         0.041558 sec (dot product method)
tri+prep time:         0.110364 sec (incl time to compute L and U)
compute C time:        0.041056 sec
reduce (C) time:       0.000502 sec
rate      17.41 million edges/sec (incl time for U=triu(A))
rate      46.24 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.122169 sec
tricount time:         0.122675 sec (saxpy method)
tri+prep time:         0.152992 sec (incl time to compute L)
compute C time:        0.122169 sec
reduce (C) time:       0.000506 sec
rate      12.56 million edges/sec (incl time for L=tril(A))
rate      15.66 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-1045506-262144_adj.tsv.gz
--------------------------------------------------------------
matrix 262144 by 262144, 2091012 entries, from stdin

total time to read A matrix:       1.508217 sec

n 262144 # edges 1045506
U=triu(A) time:        0.012024 sec

------------------------------------- dot product method:
L=tril(A) time:        0.011084 sec
# triangles 1044484

L'*U time (dot):         0.021516 sec
tricount time:         0.024659 sec (dot product method)
tri+prep time:         0.047767 sec (incl time to compute L and U)
compute C time:        0.021516 sec
reduce (C) time:       0.003143 sec
rate      21.89 million edges/sec (incl time for U=triu(A))
rate      42.40 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.019470 sec
tricount time:         0.022605 sec (saxpy method)
tri+prep time:         0.033689 sec (incl time to compute L)
compute C time:        0.019470 sec
reduce (C) time:       0.003134 sec
rate      31.03 million edges/sec (incl time for L=tril(A))
rate      46.25 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-16764930-4194304_adj.tsv.gz
--------------------------------------------------------------
matrix 4194304 by 4194304, 33529860 entries, from stdin

total time to read A matrix:      22.251891 sec

n 4194304 # edges 16764930
U=triu(A) time:        0.205850 sec

------------------------------------- dot product method:
L=tril(A) time:        0.178615 sec
# triangles 16760836

L'*U time (dot):         0.363420 sec
tricount time:         0.415054 sec (dot product method)
tri+prep time:         0.799519 sec (incl time to compute L and U)
compute C time:        0.363420 sec
reduce (C) time:       0.051634 sec
rate      20.97 million edges/sec (incl time for U=triu(A))
rate      40.39 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.322788 sec
tricount time:         0.374471 sec (saxpy method)
tri+prep time:         0.553086 sec (incl time to compute L)
compute C time:        0.322788 sec
reduce (C) time:       0.051683 sec
rate      30.31 million edges/sec (incl time for L=tril(A))
rate      44.77 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-260610-65536_adj.tsv.gz
--------------------------------------------------------------
matrix 65536 by 65536, 521220 entries, from stdin

total time to read A matrix:       0.357860 sec

n 65536 # edges 260610
U=triu(A) time:        0.003034 sec

------------------------------------- dot product method:
L=tril(A) time:        0.002752 sec
# triangles 260100

L'*U time (dot):         0.005430 sec
tricount time:         0.006217 sec (dot product method)
tri+prep time:         0.012002 sec (incl time to compute L and U)
compute C time:        0.005430 sec
reduce (C) time:       0.000786 sec
rate      21.71 million edges/sec (incl time for U=triu(A))
rate      41.92 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.004887 sec
tricount time:         0.005669 sec (saxpy method)
tri+prep time:         0.008421 sec (incl time to compute L)
compute C time:        0.004887 sec
reduce (C) time:       0.000782 sec
rate      30.95 million edges/sec (incl time for L=tril(A))
rate      45.97 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-268386306-67108864_adj.tsv.gz
--------------------------------------------------------------
matrix 67108864 by 67108864, 536772612 entries, from stdin

total time to read A matrix:     378.950331 sec

n 67108864 # edges 268386306
U=triu(A) time:        3.285251 sec

------------------------------------- dot product method:
L=tril(A) time:        2.908133 sec
# triangles 268369924

L'*U time (dot):         5.762976 sec
tricount time:         6.589742 sec (dot product method)
tri+prep time:        12.783126 sec (incl time to compute L and U)
compute C time:        5.762976 sec
reduce (C) time:       0.826766 sec
rate      21.00 million edges/sec (incl time for U=triu(A))
rate      40.73 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         5.354678 sec
tricount time:         6.182644 sec (saxpy method)
tri+prep time:         9.090777 sec (incl time to compute L)
compute C time:        5.354678 sec
reduce (C) time:       0.827966 sec
rate      29.52 million edges/sec (incl time for L=tril(A))
rate      43.41 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/image-grid/g-4188162-1048576_adj.tsv.gz
--------------------------------------------------------------
matrix 1048576 by 1048576, 8376324 entries, from stdin

total time to read A matrix:       5.337943 sec

n 1048576 # edges 4188162
U=triu(A) time:        0.050498 sec

------------------------------------- dot product method:
L=tril(A) time:        0.043433 sec
# triangles 4186116

L'*U time (dot):         0.088571 sec
tricount time:         0.101428 sec (dot product method)
tri+prep time:         0.195358 sec (incl time to compute L and U)
compute C time:        0.088571 sec
reduce (C) time:       0.012857 sec
rate      21.44 million edges/sec (incl time for U=triu(A))
rate      41.29 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         0.080595 sec
tricount time:         0.093370 sec (saxpy method)
tri+prep time:         0.136803 sec (incl time to compute L)
compute C time:        0.080595 sec
reduce (C) time:       0.012776 sec
rate      30.61 million edges/sec (incl time for L=tril(A))
rate      44.86 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/DIMACS10/hugebubbles-00020_adj.tsv.gz
--------------------------------------------------------------
matrix 21198119 by 21198119, 63580358 entries, from stdin

total time to read A matrix:      47.944785 sec

n 21198119 # edges 31790179
U=triu(A) time:        0.570141 sec

------------------------------------- dot product method:
L=tril(A) time:        0.466793 sec
# triangles 0

L'*U time (dot):         3.008929 sec
tricount time:         3.008942 sec (dot product method)
tri+prep time:         4.045876 sec (incl time to compute L and U)
compute C time:        3.008929 sec
reduce (C) time:       0.000013 sec
rate       7.86 million edges/sec (incl time for U=triu(A))
rate      10.57 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         6.399255 sec
tricount time:         6.399262 sec (saxpy method)
tri+prep time:         6.866055 sec (incl time to compute L)
compute C time:        6.399255 sec
reduce (C) time:       0.000007 sec
rate       4.63 million edges/sec (incl time for L=tril(A))
rate       4.97 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/vanHeukelum/cage15_adj.tsv.gz
--------------------------------------------------------------
matrix 5154859 by 5154859, 94044692 entries, from stdin

total time to read A matrix:      67.001856 sec

n 5154859 # edges 47022346
U=triu(A) time:        0.485325 sec

------------------------------------- dot product method:
L=tril(A) time:        0.415512 sec
# triangles 36106416

L'*U time (dot):         2.558625 sec
tricount time:         2.703716 sec (dot product method)
tri+prep time:         3.604553 sec (incl time to compute L and U)
compute C time:        2.558625 sec
reduce (C) time:       0.145091 sec
rate      13.05 million edges/sec (incl time for U=triu(A))
rate      17.39 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         1.557930 sec
tricount time:         1.702906 sec (saxpy method)
tri+prep time:         2.118417 sec (incl time to compute L)
compute C time:        1.557930 sec
reduce (C) time:       0.144976 sec
rate      22.20 million edges/sec (incl time for L=tril(A))
rate      27.61 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/ssget/Freescale/circuit5M_adj.tsv.gz
--------------------------------------------------------------
matrix 5558326 by 5558326, 53967852 entries, from stdin

total time to read A matrix:      37.144572 sec

n 5558326 # edges 26983926
U=triu(A) time:        0.249273 sec

------------------------------------- dot product method:
L=tril(A) time:        0.273627 sec
# triangles 31019473

L'*U time (dot):         1.963181 sec
tricount time:         2.100671 sec (dot product method)
tri+prep time:         2.623571 sec (incl time to compute L and U)
compute C time:        1.963181 sec
reduce (C) time:       0.137489 sec
rate      10.29 million edges/sec (incl time for U=triu(A))
rate      12.85 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):       450.547000 sec
tricount time:       450.677408 sec (saxpy method)
tri+prep time:       450.951035 sec (incl time to compute L)
compute C time:      450.547000 sec
reduce (C) time:       0.130408 sec
rate       0.06 million edges/sec (incl time for L=tril(A))
rate       0.06 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale18-ef16/graph500-scale18-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 174147 by 174147, 7600696 entries, from stdin

total time to read A matrix:       5.960728 sec

n 174147 # edges 3800348
U=triu(A) time:        0.034273 sec

------------------------------------- dot product method:
L=tril(A) time:        0.031492 sec
# triangles 82287285

L'*U time (dot):         8.095941 sec
tricount time:         8.113839 sec (dot product method)
tri+prep time:         8.179605 sec (incl time to compute L and U)
compute C time:        8.095941 sec
reduce (C) time:       0.017899 sec
rate       0.46 million edges/sec (incl time for U=triu(A))
rate       0.47 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         3.540834 sec
tricount time:         3.558162 sec (saxpy method)
tri+prep time:         3.589655 sec (incl time to compute L)
compute C time:        3.540834 sec
reduce (C) time:       0.017329 sec
rate       1.06 million edges/sec (incl time for L=tril(A))
rate       1.07 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale19-ef16/graph500-scale19-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 335318 by 335318, 15459350 entries, from stdin

total time to read A matrix:      12.250062 sec

n 335318 # edges 7729675
U=triu(A) time:        0.068993 sec

------------------------------------- dot product method:
L=tril(A) time:        0.063626 sec
# triangles 186288972

L'*U time (dot):        21.693301 sec
tricount time:        21.728288 sec (dot product method)
tri+prep time:        21.860907 sec (incl time to compute L and U)
compute C time:       21.693301 sec
reduce (C) time:       0.034987 sec
rate       0.35 million edges/sec (incl time for U=triu(A))
rate       0.36 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):         9.264118 sec
tricount time:         9.298129 sec (saxpy method)
tri+prep time:         9.361755 sec (incl time to compute L)
compute C time:        9.264118 sec
reduce (C) time:       0.034010 sec
rate       0.83 million edges/sec (incl time for L=tril(A))
rate       0.83 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale20-ef16/graph500-scale20-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 645820 by 645820, 31361722 entries, from stdin

total time to read A matrix:      23.658462 sec

n 645820 # edges 15680861
U=triu(A) time:        0.137914 sec

------------------------------------- dot product method:
L=tril(A) time:        0.128484 sec
# triangles 419349784

L'*U time (dot):        55.824259 sec
tricount time:        55.897458 sec (dot product method)
tri+prep time:        56.163856 sec (incl time to compute L and U)
compute C time:       55.824259 sec
reduce (C) time:       0.073199 sec
rate       0.28 million edges/sec (incl time for U=triu(A))
rate       0.28 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):        27.603079 sec
tricount time:        27.671889 sec (saxpy method)
tri+prep time:        27.800373 sec (incl time to compute L)
compute C time:       27.603079 sec
reduce (C) time:       0.068810 sec
rate       0.56 million edges/sec (incl time for L=tril(A))
rate       0.57 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale21-ef16/graph500-scale21-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 1243072 by 1243072, 63463300 entries, from stdin

total time to read A matrix:      46.826467 sec

n 1243072 # edges 31731650
U=triu(A) time:        0.279317 sec

------------------------------------- dot product method:
L=tril(A) time:        0.258991 sec
# triangles 935100883

L'*U time (dot):       141.273467 sec
tricount time:       141.413461 sec (dot product method)
tri+prep time:       141.951770 sec (incl time to compute L and U)
compute C time:      141.273467 sec
reduce (C) time:       0.139994 sec
rate       0.22 million edges/sec (incl time for U=triu(A))
rate       0.22 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):       106.967857 sec
tricount time:       107.111104 sec (saxpy method)
tri+prep time:       107.370095 sec (incl time to compute L)
compute C time:      106.967857 sec
reduce (C) time:       0.143247 sec
rate       0.30 million edges/sec (incl time for L=tril(A))
rate       0.30 million edges/sec (just tricount itself)



--------------------------------------------------------------------------------
/research/davisgroup/GraphChallenge/synthetic/graph500-scale22-ef16/graph500-scale22-ef16_adj.tsv.gz
--------------------------------------------------------------
matrix 2393285 by 2393285, 128194008 entries, from stdin

total time to read A matrix:     101.599388 sec

n 2393285 # edges 64097004
U=triu(A) time:        0.561804 sec

------------------------------------- dot product method:
L=tril(A) time:        0.518898 sec
# triangles 2067392370

L'*U time (dot):       377.500330 sec
tricount time:       377.784295 sec (dot product method)
tri+prep time:       378.864997 sec (incl time to compute L and U)
compute C time:      377.500330 sec
reduce (C) time:       0.283966 sec
rate       0.17 million edges/sec (incl time for U=triu(A))
rate       0.17 million edges/sec (just tricount itself)


----------------------------------- saxpy method:

C<L>=L*L time (saxpy):       368.872781 sec
tricount time:       369.153951 sec (saxpy method)
tri+prep time:       369.672849 sec (incl time to compute L)
compute C time:      368.872781 sec
reduce (C) time:       0.281169 sec
rate       0.17 million edges/sec (incl time for L=tril(A))
rate       0.17 million edges/sec (just tricount itself)


