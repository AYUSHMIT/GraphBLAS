[arg1,arg2] = bandwidth (G,uplo)
[arg1 n] = size (G, dim)
assert (G)
binopinfo (op, type)
C = abs (G)
C = all (G, option)
C = and (A, B)
C = any (G, option)
C = ceil (G)
c = chunk (varargin)
C = complex (A,B)
C = conj (G)
C = ctranspose (A)
C = diag (G,k)
C = double (G)
C = eps (G)
C = eq (A, B)
C = expand (scalar, S)
C = eye (varargin)
C = false (varargin)
C = fix (G)
C = floor (G)
C = ge (A, B)
C = gt (A, B)
C = horzcat (varargin)
C = int16 (G)
C = int32 (G)
C = int64 (G)
C = int8 (G)
C = isfinite (G)
C = isinf (G)
C = isnan (G)
C = kron (A, B)
classdef gb
C = ldivide (A, B)
C = le (A, B)
clear
C = logical (G)
C = lt (A, B)
C = max (varargin)
C = minus (A, B)
C = min (varargin)
C = mldivide (A, B)
C = mpower (A, B)
C = mrdivide (A, B)
C = mtimes (A, B)
C = ne (A, B)
C = not (A)
C = ones (varargin)
C = or (A, B)
Cout = apply (varargin)
Cout = assign (varargin)
Cout = eadd (varargin)
Cout = emult (varargin)
Cout = extract (varargin)
Cout = gbkron (varargin)
Cout = gbtranspose (varargin)
Cout = mxm (varargin)
Cout = reduce (varargin)
Cout = select (varargin)
Cout = subassign (varargin)
Cout = vreduce (varargin)
C = plus (A, B)
C = power (A, B)
C = prod (G, option)
C = rdivide (A, B)
C = real (G)
C = repmat (G, m, n)
C = reshape (G, arg1, arg2)
C = round (G)
C = sign (G)
C = single (G)
C = speye (varargin)
C = spfun (fun, G)
C = spones (G, type)
C = sqrt (G)
C = subsasgn (C, S, A)
C = subsref (A, S)
C = sum (G, option)
C = times (A, B)
C = transpose (A)
C = uint16 (G)
C = uint32 (G)
C = uint64 (G)
C = uint8 (G)
C = uminus (A)
C = uplus (A)
C = vertcat (varargin)
C = zeros (varargin)
D = coldegree (G)
descriptorinfo (d)
disp (G, level)
display (G)
D = rowdegree (G)
e = nnz (G)
e = nvals (A)
e = nzmax (G)
f = format (arg)
F = full (X, type, identity)
G = build (varargin)
G = empty (arg1, arg2)
[I,J,X] = extracttuples (varargin)
[I, J, X] = find (G)
index = end (G, k, ndims)
L = tril (G, k)
monoidinfo (monoid, type)
n = length (G)
nthreads = threads (varargin)
p = amd (G, varargin)
[parent, varargout] = etree (G, varargin)
p = symrcm (G)
[p, varargout] = colamd (G, varargin)
[p, varargout] = dmperm (G)
[p, varargout] = symamd (G, varargin)
result = isbanded (G, lo, hi)
result = isdiag (G)
result = ishermitian (G, option)
result = issymmetric (G, option)
result = istril (G)
result = istriu (G)
result = numel (G)
semiringinfo (s, type)
s = isa (G, classname)
s = isempty (G)
s = isfloat (G)
s = isinteger (G)
s = islogical (G)
s = ismatrix (G)
s = isnumeric (G)
s = isreal (G)
s = isscalar (G)
s = issigned (type)
s = issparse (G)
s = isvector (G)
s = norm (G,kind)
S = sparse (G)
s = type (X)
unopinfo (op, type)
U = triu (G, k)
[V, varargout] = eig (G, varargin)
X = nonzeros (G)
