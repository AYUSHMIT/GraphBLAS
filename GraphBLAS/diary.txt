
A = sparse (rand(2))

A =

   (1,1)       0.3583
   (2,1)       0.7256
   (1,2)       0.8477
   (2,2)       0.7508

B = sparse (rand (2))

B =

   (1,1)       0.0249
   (2,1)       0.4405
   (1,2)       0.3913
   (2,2)       0.9340

C = A*B

C =

   (1,1)       0.3824
   (2,1)       0.3488
   (1,2)       0.9320
   (2,2)       0.9852

G = gb.mxm ('+.*',A,B)

G =
whos
  Name      Size            Bytes  Class     Attributes

  A         2x2                88  double    sparse    
  B         2x2                88  double    sparse    
  C         2x2                88  double    sparse    
  G         2x2              1052  gb                  

C-sparse(G)

ans =

   All zero sparse: 2x2

G = gb.mxm ('+.*.single',A,B)

G =
C-sparse(G)

ans =

   1.0e-07 *

   (1,1)      -0.1677
   (2,1)      -0.0999
   (1,2)      -0.1409
   (2,2)       0.1893

whos
  Name      Size            Bytes  Class     Attributes

  A         2x2                88  double    sparse    
  B         2x2                88  double    sparse    
  C         2x2                88  double    sparse    
  G         2x2              1036  gb                  
  ans       2x2                88  double    sparse    

type(G)

ans =

    'single'


help gb.mxm
 MXM: sparse matrix-matrix multiply in GraphBLAS
  Usage:
    Cout = gbmxm (semiring, A, B)
    Cout = gbmxm (semiring, A, B, desc)
    Cout = gbmxm (Cin, accum, semiring, A, B)
    Cout = gbmxm (Cin, accum, semiring, A, B, desc)
    Cout = gbmxm (Cin, Mask, semiring, A, B)
    Cout = gbmxm (Cin, Mask, semiring, A, B, desc)
    Cout = gbmxm (Cin, Mask, accum, semiring, A, B)
    Cout = gbmxm (Cin, Mask, accum, semiring, A, B, desc)
 
  See 'help gbmxm' for more details.

