 init called with mode 3 init_size 262144 max_size 268435456
 make_managed_pool called with  init_size 262144 max_size 268435456
GBCUDA_DEV enabled: for development only!
warming up device 0 memsize 3.40875e+10 sms 80
 rmm_wrap_alloc 256 bytes
oooo nice block of memory of size 8
be free, block of memory of size 8
good ol' cudaMalloc just to be sure
GPU 0 nice and toasty now
 rmm_wrap_alloc 8448 bytes
[==========] Running 16 tests from 4 test suites.
[----------] Global test environment set-up.
[----------] 4 tests from AxB_dot3_tests_PLUS_TIMES_1
[ RUN      ] AxB_dot3_tests_PLUS_TIMES_1.tinyxtinyPLUS_TIMES_Cint32_tMboolAint32_tBint32_tXint32_tYint32_tZint32_t
found device 0
inside fill, using seed 12345
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
fill_random nrows=32ncols=32 need 1024 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 2048 bytes
 rmm_wrap_alloc 2048 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 1024 bytes
 rmm_wrap_alloc 4096 bytes
 rmm_wrap_alloc 4096 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 131072 bytes
 rmm_wrap_alloc 512 bytes
inside fill, using seed 54321
fill_random nrows=32ncols=32 need 1024 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 4096 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 512 bytes
filling matrices
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 512 bytes
32 slots to fill
all pairs to bucket 5, no filling
done assigning buckets
 calling stringify semiring: 0x7fdf2002dc00
inside enumify: 0x7fdf2002dc00

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
nanobuckets_size: 384
blockbuckets_size: 12
 rmm_wrap_alloc 3072 bytes
 rmm_wrap_alloc 256 bytes
A TYpe: 0x7fdf5d2ecf40
B TYpe: 0x7fdf5d2ecf40
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
GB_jit_AxB_phase1
#include "/home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h"
#include "GB_jit_AxB_phase1.cuh"
 jit_cache get program GB_jit_AxB_phase1
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_jit_AxB_phase1
 got kernel instance AxB_phase1_bool
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/AxB_phase1_bool
---------------------------------------
--- Linker for void AxB_phase1<bool>(long long*, long long*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*) ---
---------------------------------------
info    : 0 bytes gmem
info    : Function properties for '_Z10AxB_phase1IbEvPxS0_P16GB_Matrix_opaqueS2_S2_S2_':
info    : used 199 registers, 4576 stack, 3104 bytes smem, 400 bytes cmem[0], 0 bytes lmem


---------------------------------------
Launching _Z10AxB_phase1IbEvPxS0_P16GB_Matrix_opaqueS2_S2_S2_<<<1,32,0,0>>>(long*,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*)
returned from phase1 kernel 10.3537ms
Printing Nanobuckets
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
Done.
Printing Blockbucket
0, 0, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
Done.
==== phase1 done=============================
[       OK ] AxB_dot3_tests_PLUS_TIMES_1.tinyxtinyPLUS_TIMES_Cint32_tMboolAint32_tBint32_tXint32_tYint32_tZint32_t (11 ms)
[ RUN      ] AxB_dot3_tests_PLUS_TIMES_1.smallxsmallPLUS_TIMES_Cint32_tMboolAint32_tBint32_tXint32_tYint32_tZint32_t
found device 0
inside fill, using seed 12345
fill_random nrows=1024ncols=1024 need 1048576 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 32768 bytes
 rmm_wrap_alloc 32768 bytes
 rmm_wrap_alloc 65536 bytes
 rmm_wrap_alloc 65536 bytes
 rmm_wrap_alloc 131072 bytes
 rmm_wrap_alloc 262144 bytes
 rmm_wrap_alloc 262144 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
inside fill, using seed 54321
fill_random nrows=1024ncols=1024 need 1048576 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
filling matrices
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 8192 bytes
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
 rmm_wrap_alloc 16384 bytes
1024 slots to fill
all pairs to bucket 5, no filling
done assigning buckets
 calling stringify semiring: 0x7fdf2002dd00
inside enumify: 0x7fdf2002dd00

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
nanobuckets_size: 3072
blockbuckets_size: 96
 rmm_wrap_alloc 24576 bytes
 rmm_wrap_alloc 768 bytes
A TYpe: 0x7fdf5d2ecf40
B TYpe: 0x7fdf5d2ecf40
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
GB_jit_AxB_phase1
#include "/home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h"
#include "GB_jit_AxB_phase1.cuh"
 jit_cache get program GB_jit_AxB_phase1
found memory-cached prog GB_jit_AxB_phase1
 got kernel instance AxB_phase1_bool
found memory-cached prog AxB_phase1_bool
Launching _Z10AxB_phase1IbEvPxS0_P16GB_Matrix_opaqueS2_S2_S2_<<<8,32,0,0>>>(long*,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*)
returned from phase1 kernel 1.86982ms
Printing Nanobuckets
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
Done.
Printing Blockbucket
0, 0, 0, 0, 0, 0, 0, 0, 248, 248, 248, 248, 248, 248, 248, 248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
Done.
==== phase1 done=============================
[       OK ] AxB_dot3_tests_PLUS_TIMES_1.smallxsmallPLUS_TIMES_Cint32_tMboolAint32_tBint32_tXint32_tYint32_tZint32_t (238 ms)
[ RUN      ] AxB_dot3_tests_PLUS_TIMES_1.tinyxtinyPLUS_TIMES_Cint32_tMint32_tAint32_tBint32_tXint32_tYint32_tZint32_t
found device 0
inside fill, using seed 12345
fill_random nrows=32ncols=32 need 1024 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 512 bytes
inside fill, using seed 54321
fill_random nrows=32ncols=32 need 1024 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 512 bytes
filling matrices
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 512 bytes
32 slots to fill
all pairs to bucket 5, no filling
done assigning buckets
 calling stringify semiring: 0x7fdf2002db00
inside enumify: 0x7fdf2002db00

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ecf40
GB_enumify_mask gets mcode: 6 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 8
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 8, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434378593792
done enumify semiring
scode=397409434378593792
done stringify semiring
 returned from  stringify semiring
nanobuckets_size: 384
blockbuckets_size: 12
 rmm_wrap_alloc 3072 bytes
 rmm_wrap_alloc 256 bytes
A TYpe: 0x7fdf5d2ecf40
B TYpe: 0x7fdf5d2ecf40
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434378593792.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434378593792.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434378593792.h
successful_read: 1
Just closed
GB_jit_AxB_phase1
#include "/home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434378593792.h"
#include "GB_jit_AxB_phase1.cuh"
 jit_cache get program GB_jit_AxB_phase1
found memory-cached prog GB_jit_AxB_phase1
 got kernel instance AxB_phase1_int32_t
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/AxB_phase1_int32_t
---------------------------------------
--- Linker for void AxB_phase1<int>(long long*, long long*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*) ---
---------------------------------------
info    : 0 bytes gmem
info    : Function properties for '_Z10AxB_phase1IiEvPxS0_P16GB_Matrix_opaqueS2_S2_S2_':
info    : used 199 registers, 4576 stack, 3104 bytes smem, 400 bytes cmem[0], 0 bytes lmem


---------------------------------------
Launching _Z10AxB_phase1IiEvPxS0_P16GB_Matrix_opaqueS2_S2_S2_<<<1,32,0,0>>>(long*,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*)
returned from phase1 kernel 9.216ms
Printing Nanobuckets
0, 0, 0, 0, 1, 1, 1, 2, 2, 3, 4, 5, 6, 6, 6, 6, 7, 8, 8, 9, 10, 11, 12, 13, 13, 13, 13, 13, 13, 13, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 3, 4, 5, 5, 6, 6, 6, 6, 6, 7, 8, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 12, 13, 14, 15, 16, 16, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
Done.
Printing Blockbucket
28, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
Done.
==== phase1 done=============================
[       OK ] AxB_dot3_tests_PLUS_TIMES_1.tinyxtinyPLUS_TIMES_Cint32_tMint32_tAint32_tBint32_tXint32_tYint32_tZint32_t (10 ms)
[ RUN      ] AxB_dot3_tests_PLUS_TIMES_1.smallxsmallPLUS_TIMES_Cint32_tMint32_tAint32_tBint32_tXint32_tYint32_tZint32_t
found device 0
inside fill, using seed 12345
fill_random nrows=1024ncols=1024 need 1048576 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
inside fill, using seed 54321
fill_random nrows=1024ncols=1024 need 1048576 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
filling matrices
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 16384 bytes
1024 slots to fill
all pairs to bucket 5, no filling
done assigning buckets
 calling stringify semiring: 0x7fdf2003ef00
inside enumify: 0x7fdf2003ef00

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ecf40
GB_enumify_mask gets mcode: 6 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 8
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 8, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434378593792
done enumify semiring
scode=397409434378593792
done stringify semiring
 returned from  stringify semiring
nanobuckets_size: 3072
blockbuckets_size: 96
 rmm_wrap_alloc 24576 bytes
 rmm_wrap_alloc 768 bytes
A TYpe: 0x7fdf5d2ecf40
B TYpe: 0x7fdf5d2ecf40
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434378593792.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434378593792.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434378593792.h
successful_read: 1
Just closed
GB_jit_AxB_phase1
#include "/home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434378593792.h"
#include "GB_jit_AxB_phase1.cuh"
 jit_cache get program GB_jit_AxB_phase1
found memory-cached prog GB_jit_AxB_phase1
 got kernel instance AxB_phase1_int32_t
found memory-cached prog AxB_phase1_int32_t
Launching _Z10AxB_phase1IiEvPxS0_P16GB_Matrix_opaqueS2_S2_S2_<<<8,32,0,0>>>(long*,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*)
returned from phase1 kernel 1.98659ms
Printing Nanobuckets
0, 3, 4, 6, 9, 12, 13, 15, 18, 20, 21, 23, 26, 30, 32, 35, 37, 38, 40, 43, 45, 45, 48, 51, 54, 55, 58, 58, 61, 61, 63, 66, 0, 1, 4, 6, 7, 8, 11, 13, 14, 16, 19, 21, 22, 22, 24, 25, 27, 30, 32, 33, 35, 39, 40, 41, 42, 45, 46, 50, 51, 55, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 8, 12, 15, 19, 19, 22, 23, 25, 27, 30, 32, 33, 34, 37, 39, 40, 42, 45, 48, 50, 50, 54, 57, 61, 63, 65, 67, 68, 69, 0, 2, 4, 4, 4, 5, 5, 9, 10, 13, 15, 17, 18, 20, 23, 26, 27, 29, 32, 34, 35, 36, 38, 42, 42, 43, 43, 45, 47, 49, 52, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 4, 7, 8, 9, 11, 12, 15, 16, 18, 19, 22, 25, 27, 29, 31, 34, 35, 37, 38, 40, 41, 44, 46, 48, 50, 53, 56, 57, 58, 0, 3, 5, 8, 9, 12, 15, 17, 20, 21, 24, 26, 29, 30, 31, 33, 35, 37, 38, 41, 43, 46, 48, 51, 52, 54, 56, 58, 59, 60, 63, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 6, 9, 11, 14, 15, 17, 18, 19, 22, 24, 25, 28, 31, 32, 33, 36, 38, 41, 45, 46, 47, 48, 50, 52, 54, 55, 55, 58, 60, 62, 0, 2, 2, 3, 5, 6, 9, 11, 14, 17, 18, 20, 23, 24, 25, 28, 31, 32, 34, 35, 35, 38, 41, 44, 46, 48, 50, 53, 57, 58, 60, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 4, 7, 8, 12, 14, 15, 16, 20, 23, 26, 29, 32, 34, 35, 38, 40, 41, 45, 47, 48, 50, 53, 57, 59, 61, 63, 66, 68, 71, 72, 0, 1, 4, 5, 8, 8, 10, 13, 16, 16, 17, 18, 19, 20, 22, 25, 26, 28, 31, 31, 33, 36, 38, 39, 39, 41, 43, 45, 46, 48, 49, 52, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 5, 8, 10, 11, 12, 13, 15, 16, 18, 20, 24, 24, 26, 28, 29, 30, 32, 34, 35, 35, 36, 39, 42, 43, 46, 48, 50, 52, 0, 3, 5, 9, 11, 12, 14, 17, 20, 23, 25, 28, 30, 32, 32, 36, 38, 40, 43, 46, 48, 50, 53, 57, 60, 61, 62, 65, 66, 68, 70, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 5, 8, 10, 11, 11, 12, 13, 13, 14, 17, 17, 20, 21, 23, 26, 29, 31, 33, 35, 35, 37, 40, 42, 46, 49, 53, 54, 58, 59, 60, 0, 1, 3, 4, 6, 9, 13, 16, 19, 23, 26, 27, 31, 32, 35, 37, 38, 39, 41, 43, 45, 49, 51, 52, 54, 54, 55, 55, 58, 58, 61, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 7, 9, 11, 13, 15, 18, 20, 22, 24, 25, 27, 27, 28, 28, 29, 31, 35, 38, 39, 41, 44, 47, 50, 52, 54, 58, 58, 59, 59, 0, 3, 4, 5, 7, 9, 11, 13, 14, 16, 18, 20, 23, 25, 29, 32, 36, 39, 41, 41, 42, 45, 47, 48, 49, 50, 52, 54, 54, 58, 61, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
Done.
Printing Blockbucket
132, 138, 116, 124, 144, 104, 120, 118, 116, 110, 132, 124, 104, 144, 128, 130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
Done.
==== phase1 done=============================
[       OK ] AxB_dot3_tests_PLUS_TIMES_1.smallxsmallPLUS_TIMES_Cint32_tMint32_tAint32_tBint32_tXint32_tYint32_tZint32_t (232 ms)
[----------] 4 tests from AxB_dot3_tests_PLUS_TIMES_1 (493 ms total)

[----------] 4 tests from AxB_dot3_tests_PLUS_TIMES_2
[ RUN      ] AxB_dot3_tests_PLUS_TIMES_2.tinyxtinyPLUS_TIMES_Cint32_tMboolAint32_tBint32_tXint32_tYint32_tZint32_t
found device 0
inside fill, using seed 12345
fill_random nrows=32ncols=32 need 1024 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
inside fill, using seed 54321
fill_random nrows=32ncols=32 need 1024 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 512 bytes
filling matrices
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 5, no filling
done assigning buckets
 rmm_wrap_alloc 3072 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
nthrd: 32, ntasks: 1
Printing nanobuckets
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
Done.
Printing blockbucket
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
Done.
GB_jit_AxB_phase2
#include "GB_jit_AxB_phase2.cuh"
 jit_cache get program GB_jit_AxB_phase2
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_jit_AxB_phase2
 got kernel instance AxB_phase2
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/AxB_phase2
---------------------------------------
--- Linker for AxB_phase2(long long*, long long*, int) ---
---------------------------------------
info    : 39 bytes gmem
info    : Function properties for '_Z10AxB_phase2PxS_i':
info    : used 88 registers, 720 stack, 32 bytes smem, 372 bytes cmem[0], 0 bytes lmem


---------------------------------------
Launching _Z10AxB_phase2PxS_i<<<1,32,0,0>>>(long*,long*,int)
s_0: 1, s_1=1, s_10=1, s_11=1
GB_jit_AxB_phase2end
#include "GB_jit_AxB_phase2end.cuh"
 jit_cache get program GB_jit_AxB_phase2end
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_jit_AxB_phase2end
 got kernel instance AxB_phase2end
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/AxB_phase2end
---------------------------------------
--- Linker for AxB_phase2end(long long*, long long const*, long long const*, long long*, long long const*, GB_Matrix_opaque*, long long) ---
---------------------------------------
info    : 0 bytes gmem
info    : Function properties for '_Z13AxB_phase2endPxPKxS1_S_S1_P16GB_Matrix_opaquex':
info    : used 107 registers, 0 stack, 0 bytes smem, 408 bytes cmem[0], 0 bytes lmem


---------------------------------------
Launching _Z13AxB_phase2endPxPKxS1_S_S1_P16GB_Matrix_opaquex<<<1,32,0,0>>>(long*,long*,long*,long*,long*,GB_Matrix_opaque*,long)
Printing bucketp
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
Done.
Printing bucket
0, 16, 5, 8, 9, 12, 15, 17, 20, 21, 24, 26, 29, 30, 31, 33, 35, 37, 38, 41, 43, 46, 48, 51, 52, 54, 56, 58, 59, 60, 63, 66, 
Done.
phase2 kernel done ==================
[       OK ] AxB_dot3_tests_PLUS_TIMES_2.tinyxtinyPLUS_TIMES_Cint32_tMboolAint32_tBint32_tXint32_tYint32_tZint32_t (15 ms)
[ RUN      ] AxB_dot3_tests_PLUS_TIMES_2.smallxsmallPLUS_TIMES_Cint32_tMboolAint32_tBint32_tXint32_tYint32_tZint32_t
found device 0
inside fill, using seed 12345
fill_random nrows=1024ncols=1024 need 1048576 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 1024 bytes
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
inside fill, using seed 54321
fill_random nrows=1024ncols=1024 need 1048576 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
filling matrices
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
 rmm_wrap_alloc 4096 bytes
1024 slots to fill
all pairs to bucket 5, no filling
done assigning buckets
 rmm_wrap_alloc 24576 bytes
 rmm_wrap_alloc 768 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 256 bytes
nthrd: 32, ntasks: 8
Printing nanobuckets

Done.
Printing blockbucket
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
Done.
GB_jit_AxB_phase2
#include "GB_jit_AxB_phase2.cuh"
 jit_cache get program GB_jit_AxB_phase2
found memory-cached prog GB_jit_AxB_phase2
 got kernel instance AxB_phase2
found memory-cached prog AxB_phase2
Launching _Z10AxB_phase2PxS_i<<<1,32,0,0>>>(long*,long*,int)
s_0: 1, s_1=1, s_10=1, s_11=1
GB_jit_AxB_phase2end
#include "GB_jit_AxB_phase2end.cuh"
 jit_cache get program GB_jit_AxB_phase2end
found memory-cached prog GB_jit_AxB_phase2end
 got kernel instance AxB_phase2end
found memory-cached prog AxB_phase2end
Launching _Z13AxB_phase2endPxPKxS1_S_S1_P16GB_Matrix_opaquex<<<8,32,0,0>>>(long*,long*,long*,long*,long*,GB_Matrix_opaque*,long)
Printing bucketp
0, 2, 4, 4294967302, 4294967303, 8589934600, 12884901897, 17179869194, 17179869195, 21474836492, 21474836493, 25769803791, 
Done.
Printing bucket
1, 656, 560, 720, 752, 1, 4294967296, 0, 0, 4294967296, 1, 1, 4294967297, 4294967296, 4294967296, 4294967296, 1, 4294967297, 0, 0, 0, 0, 0, 1, 4294967296, 0, 1, 1, 0, 4294967297, 4294967296, 0, 0, 4294967296, 4294967296, 0, 1, 1, 0, 4294967296, 0, 4294967296, 1, 1, 1, 1, 4294967296, 4294967297, 0, 4294967297, 4294967296, 0, 0, 0, 4294967297, 1, 1, 4294967297, 4294967296, 0, 4294967296, 0, 0, 4294967296, 4294967297, 4294967296, 1, 0, 0, 4294967297, 4294967296, 4294967296, 4294967297, 0, 0, 4294967297, 0, 1, 4294967297, 4294967297, 4294967296, 4294967297, 4294967296, 4294967297, 4294967296, 4294967296, 4294967297, 4294967296, 1, 4294967297, 4294967296, 4294967297, 0, 4294967296, 4294967296, 4294967296, 0, 4294967296, 4294967296, 4294967297, 4294967297, 4294967296, 1, 4294967296, 4294967296, 4294967296, 4294967296, 0, 4294967297, 1, 4294967296, 0, 4294967296, 4294967296, 4294967297, 0, 1, 4294967297, 0, 0, 0, 4294967296, 4294967297, 4294967297, 0, 4294967296, 4294967297, 1, 0, 0, 0, 0, 1, 4294967297, 1, 4294967296, 0, 4294967296, 4294967296, 4294967296, 1, 4294967297, 1, 4294967296, 4294967296, 0, 4294967297, 4294967297, 1, 0, 4294967296, 0, 1, 0, 1, 0, 0, 0, 4294967297, 0, 1, 1, 4294967296, 1, 4294967297, 4294967297, 1, 4294967296, 4294967297, 4294967297, 1, 0, 0, 4294967297, 4294967296, 0, 4294967297, 4294967297, 4294967297, 4294967296, 4294967296, 0, 0, 1, 0, 0, 1, 4294967296, 1, 4294967296, 4294967296, 1, 4294967297, 1, 4294967297, 1, 4294967296, 4294967297, 4294967297, 4294967296, 4294967296, 4294967297, 4294967296, 4294967296, 1, 4294967297, 4294967297, 0, 4294967297, 4294967296, 0, 0, 1, 4294967296, 0, 4294967297, 4294967297, 1, 0, 4294967296, 0, 4294967296, 0, 1, 4294967296, 1, 4294967297, 1, 0, 1, 4294967296, 1, 4294967296, 1, 4294967297, 4294967296, 0, 4294967296, 4294967296, 0, 1, 0, 4294967297, 4294967297, 1, 4294967297, 4294967296, 1, 0, 4294967297, 4294967296, 0, 0, 4294967296, 0, 0, 4294967297, 1, 0, 4294967296, 4294967297, 1, 4294967297, 4294967297, 0, 4294967296, 1, 4294967297, 4294967297, 4294967297, 4294967296, 0, 4294967297, 4294967297, 1, 0, 4294967297, 4294967297, 0, 4294967296, 0, 0, 4294967296, 1, 4294967297, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 4294967297, 4294967297, 1, 0, 4294967296, 1, 4294967297, 1, 0, 4294967297, 1, 0, 4294967297, 4294967297, 4294967297, 1, 1, 0, 4294967296, 4294967297, 4294967296, 4294967297, 0, 4294967297, 1, 0, 1, 1, 1, 4294967297, 4294967297, 1, 4294967296, 4294967297, 1, 1, 4294967297, 4294967296, 4294967296, 4294967296, 4294967297, 4294967296, 0, 0, 4294967296, 0, 1, 1, 4294967297, 4294967297, 4294967297, 1, 1, 0, 1, 1, 4294967296, 4294967296, 0, 0, 0, 4294967297, 4294967296, 0, 4294967297, 4294967296, 4294967297, 0, 4294967297, 1, 4294967296, 1, 1, 1, 4294967296, 4294967297, 1, 0, 4294967297, 0, 0, 4294967297, 0, 4294967296, 1, 4294967297, 4294967296, 0, 4294967296, 4294967297, 0, 1, 4294967296, 4294967297, 1, 4294967296, 0, 4294967296, 0, 4294967296, 4294967296, 0, 0, 0, 0, 0, 4294967297, 4294967296, 4294967296, 4294967297, 0, 4294967297, 4294967296, 0, 1, 1, 4294967297, 1, 4294967296, 1, 0, 4294967297, 1, 1, 4294967296, 0, 0, 4294967296, 4294967296, 0, 4294967297, 0, 4294967297, 4294967297, 0, 4294967297, 0, 1, 0, 1, 4294967297, 1, 1, 1, 0, 4294967296, 4294967296, 4294967297, 1, 4294967296, 1, 0, 4294967297, 4294967296, 0, 4294967297, 4294967296, 1, 4294967296, 4294967297, 0, 4294967296, 0, 0, 0, 0, 4294967297, 4294967296, 4294967296, 4294967297, 0, 1, 4294967296, 4294967296, 0, 4294967297, 1, 4294967297, 0, 1, 4294967296, 1, 4294967296, 4294967297, 4294967296, 0, 1, 4294967296, 4294967296, 4294967297, 0, 0, 4294967296, 0, 0, 4294967297, 4294967297, 0, 0, 4294967297, 4294967296, 4294967297, 0, 0, 1, 4294967297, 0, 4294967297, 0, 0, 4294967297, 0, 0, 4294967296, 0, 0, 4294967297, 1, 4294967297, 4294967297, 4294967297, 0, 0, 4294967296, 4294967297, 0, 4294967297, 1, 0, 0, 0, 4294967297, 4294967296, 0, 0, 4294967297, 1, 4294967297, 1, 1, 4294967296, 0, 4294967296, 0, 1, 0, 4294967297, 1, 4294967296, 0, 4294967296, 4294967297, 4294967297, 4294967297, 0, 1, 1, 4294967296, 4294967296, 0, 4294967296, 0, 4294967296, 4294967297, 4294967296, 4294967297, 4294967297, 1, 4294967297, 4294967296, 0, 0, 4294967297, 4294967297, 4294967296, 4294967296, 4294967297, 4294967296, 4294967296, 0, 1, 4294967296, 4294967296, 1, 4294967297, 4294967296, 0, 0, 4294967297, 1, 1, 4294967297, 4294967296, 1, 0, 1, 4294967296, 4294967297, 4294967297, 4294967297, 1, 1, 0, 4294967297, 4294967296, 0, 4294967296, 1, 1, 0, 4294967297, 4294967297, 0, 4294967296, 4294967297, 0, 4294967297, 4294967297, 4294967297, 4294967296, 0, 0, 4294967297, 0, 4294967296, 4294967297, 4294967296, 0, 4294967297, 0, 4294967297, 4294967296, 4294967297, 4294967296, 0, 1, 4294967297, 4294967296, 4294967297, 0, 4294967297, 4294967296, 1, 4294967297, 4294967296, 0, 1, 0, 4294967297, 1, 4294967296, 0, 4294967296, 4294967297, 1, 4294967297, 0, 1, 4294967296, 4294967296, 4294967296, 4294967297, 4294967297, 4294967297, 4294967296, 4294967296, 4294967297, 4294967297, 1, 0, 1, 0, 4294967297, 0, 1, 0, 4294967296, 4294967296, 4294967296, 4294967296, 0, 1, 1, 4294967297, 1, 1, 4294967297, 1, 4294967296, 4294967297, 4294967297, 4294967296, 1, 4294967297, 4294967296, 1, 1, 1, 1, 1, 0, 4294967296, 4294967297, 1, 0, 1, 4294967297, 4294967296, 0, 0, 4294967297, 4294967297, 1, 4294967297, 1, 1, 4294967297, 1, 4294967297, 0, 1, 1, 4294967297, 1, 4294967297, 4294967297, 4294967297, 4294967297, 4294967296, 0, 0, 4294967297, 0, 4294967296, 0, 0, 0, 4294967297, 1, 4294967297, 0, 4294967296, 0, 0, 4294967296, 1, 0, 4294967296, 0, 0, 4294967296, 4294967296, 1, 4294967296, 4294967297, 0, 4294967297, 0, 0, 0, 0, 1, 1, 4294967296, 4294967297, 4294967296, 4294967297, 1, 4294967296, 4294967297, 4294967296, 0, 4294967297, 0, 0, 0, 0, 0, 1, 4294967296, 4294967296, 4294967297, 4294967296, 4294967296, 4294967296, 1, 4294967296, 4294967296, 1, 1, 0, 0, 4294967297, 4294967296, 4294967296, 4294967297, 1, 0, 4294967297, 4294967296, 0, 4294967296, 4294967296, 1, 0, 4294967296, 4294967296, 4294967297, 0, 0, 4294967296, 1, 4294967297, 0, 4294967296, 4294967296, 4294967297, 4294967296, 4294967297, 4294967296, 0, 1, 4294967297, 1, 1, 0, 0, 1, 0, 1, 1, 4294967296, 0, 1, 0, 1, 4294967297, 1, 1, 4294967296, 1, 0, 4294967297, 0, 0, 4294967296, 1, 4294967297, 0, 4294967296, 0, 0, 4294967297, 4294967296, 4294967297, 1, 1, 4294967296, 4294967297, 4294967297, 4294967296, 4294967296, 4294967296, 1, 0, 4294967296, 4294967297, 0, 1, 4294967296, 4294967296, 1, 0, 4294967296, 0, 1, 1, 4294967297, 4294967296, 4294967297, 4294967296, 4294967296, 1, 4294967297, 0, 4294967296, 0, 0, 4294967297, 4294967296, 1, 0, 0, 1, 4294967296, 4294967297, 4294967297, 1, 1, 4294967296, 0, 4294967297, 0, 0, 0, 1, 0, 4294967297, 4294967296, 1, 0, 4294967297, 4294967296, 4294967296, 4294967297, 4294967296, 4294967297, 4294967296, 0, 1, 1, 0, 0, 4294967296, 4294967297, 1, 1, 0, 1, 0, 4294967296, 4294967297, 4294967297, 0, 0, 1, 1, 1, 4294967296, 0, 1, 4294967297, 4294967296, 1, 4294967296, 1, 4294967296, 4294967297, 1, 1, 1, 0, 1, 1, 4294967297, 4294967297, 1, 4294967297, 0, 1, 4294967296, 0, 4294967297, 0, 4294967297, 4294967296, 4294967297, 4294967297, 1, 4294967297, 4294967296, 4294967296, 1, 4294967296, 4294967296, 4294967296, 4294967296, 4294967296, 0, 0, 0, 1, 0, 0, 1, 0, 0, 4294967297, 1, 4294967296, 4294967296, 4294967296, 1, 1, 4294967297, 4294967297, 4294967296, 4294967296, 4294967297, 4294967296, 4294967297, 4294967296, 0, 0, 0, 0, 4294967297, 1, 1, 0, 4294967296, 4294967296, 1, 0, 4294967297, 0, 1, 4294967297, 1, 0, 4294967296, 4294967297, 4294967297, 4294967297, 4294967296, 4294967296, 0, 1, 
Done.
phase2 kernel done ==================
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 4194304 bytes
[       OK ] AxB_dot3_tests_PLUS_TIMES_2.smallxsmallPLUS_TIMES_Cint32_tMboolAint32_tBint32_tXint32_tYint32_tZint32_t (229 ms)
[ RUN      ] AxB_dot3_tests_PLUS_TIMES_2.tinyxtinyPLUS_TIMES_Cint32_tMint32_tAint32_tBint32_tXint32_tYint32_tZint32_t
found device 0
inside fill, using seed 12345
fill_random nrows=32ncols=32 need 1024 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
inside fill, using seed 54321
fill_random nrows=32ncols=32 need 1024 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 512 bytes
filling matrices
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 5, no filling
done assigning buckets
 rmm_wrap_alloc 3072 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
nthrd: 32, ntasks: 1
Printing nanobuckets
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
Done.
Printing blockbucket
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
Done.
GB_jit_AxB_phase2
#include "GB_jit_AxB_phase2.cuh"
 jit_cache get program GB_jit_AxB_phase2
found memory-cached prog GB_jit_AxB_phase2
 got kernel instance AxB_phase2
found memory-cached prog AxB_phase2
Launching _Z10AxB_phase2PxS_i<<<1,32,0,0>>>(long*,long*,int)
s_0: 1, s_1=1, s_10=1, s_11=1
GB_jit_AxB_phase2end
#include "GB_jit_AxB_phase2end.cuh"
 jit_cache get program GB_jit_AxB_phase2end
found memory-cached prog GB_jit_AxB_phase2end
 got kernel instance AxB_phase2end
found memory-cached prog AxB_phase2end
Launching _Z13AxB_phase2endPxPKxS1_S_S1_P16GB_Matrix_opaquex<<<1,32,0,0>>>(long*,long*,long*,long*,long*,GB_Matrix_opaque*,long)
Printing bucketp
0, 1, 2, 4294967299, 4294967300, 4294967302, 4294967303, 8589934600, 8589934601, 8589934603, 8589934605, 8589934606, 
Done.
Printing bucket
0, 16, 4294967296, 1, 1, 1, 0, 0, 4294967297, 1, 0, 4294967296, 0, 4294967296, 4294967296, 4294967297, 1, 4294967296, 4294967297, 4294967296, 4294967297, 4294967296, 0, 0, 4294967297, 4294967297, 4294967296, 1, 0, 1, 4294967296, 4294967296, 
Done.
phase2 kernel done ==================
[       OK ] AxB_dot3_tests_PLUS_TIMES_2.tinyxtinyPLUS_TIMES_Cint32_tMint32_tAint32_tBint32_tXint32_tYint32_tZint32_t (1 ms)
[ RUN      ] AxB_dot3_tests_PLUS_TIMES_2.smallxsmallPLUS_TIMES_Cint32_tMint32_tAint32_tBint32_tXint32_tYint32_tZint32_t
found device 0
inside fill, using seed 12345
fill_random nrows=1024ncols=1024 need 1048576 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 1024 bytes
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
inside fill, using seed 54321
fill_random nrows=1024ncols=1024 need 1048576 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
filling matrices
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
 rmm_wrap_alloc 4096 bytes
1024 slots to fill
all pairs to bucket 5, no filling
done assigning buckets
 rmm_wrap_alloc 24576 bytes
 rmm_wrap_alloc 768 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 256 bytes
nthrd: 32, ntasks: 8
Printing nanobuckets

Done.
Printing blockbucket
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
Done.
GB_jit_AxB_phase2
#include "GB_jit_AxB_phase2.cuh"
 jit_cache get program GB_jit_AxB_phase2
found memory-cached prog GB_jit_AxB_phase2
 got kernel instance AxB_phase2
found memory-cached prog AxB_phase2
Launching _Z10AxB_phase2PxS_i<<<1,32,0,0>>>(long*,long*,int)
s_0: 1, s_1=1, s_10=1, s_11=1
GB_jit_AxB_phase2end
#include "GB_jit_AxB_phase2end.cuh"
 jit_cache get program GB_jit_AxB_phase2end
found memory-cached prog GB_jit_AxB_phase2end
 got kernel instance AxB_phase2end
found memory-cached prog AxB_phase2end
Launching _Z13AxB_phase2endPxPKxS1_S_S1_P16GB_Matrix_opaquex<<<8,32,0,0>>>(long*,long*,long*,long*,long*,GB_Matrix_opaque*,long)
Printing bucketp
0, 2, 4, 4294967302, 4294967303, 8589934600, 12884901897, 17179869194, 17179869195, 21474836492, 21474836493, 25769803791, 
Done.
Printing bucket
1, 784, 816, 848, 880, 1, 4294967296, 0, 0, 4294967296, 1, 1, 4294967297, 4294967296, 4294967296, 4294967296, 1, 4294967297, 0, 0, 0, 0, 0, 1, 4294967296, 0, 1, 1, 0, 4294967297, 4294967296, 0, 0, 4294967296, 4294967296, 0, 1, 1, 0, 4294967296, 0, 4294967296, 1, 1, 1, 1, 4294967296, 4294967297, 0, 4294967297, 4294967296, 0, 0, 0, 4294967297, 1, 1, 4294967297, 4294967296, 0, 4294967296, 0, 0, 4294967296, 4294967297, 4294967296, 1, 0, 0, 4294967297, 4294967296, 4294967296, 4294967297, 0, 0, 4294967297, 0, 1, 4294967297, 4294967297, 4294967296, 4294967297, 4294967296, 4294967297, 4294967296, 4294967296, 4294967297, 4294967296, 1, 4294967297, 4294967296, 4294967297, 0, 4294967296, 4294967296, 4294967296, 0, 4294967296, 4294967296, 4294967297, 4294967297, 4294967296, 1, 4294967296, 4294967296, 4294967296, 4294967296, 0, 4294967297, 1, 4294967296, 0, 4294967296, 4294967296, 4294967297, 0, 1, 4294967297, 0, 0, 0, 4294967296, 4294967297, 4294967297, 0, 4294967296, 4294967297, 1, 0, 0, 0, 0, 1, 4294967297, 1, 4294967296, 0, 4294967296, 4294967296, 4294967296, 1, 4294967297, 1, 4294967296, 4294967296, 0, 4294967297, 4294967297, 1, 0, 4294967296, 0, 1, 0, 1, 0, 0, 0, 4294967297, 0, 1, 1, 4294967296, 1, 4294967297, 4294967297, 1, 4294967296, 4294967297, 4294967297, 1, 0, 0, 4294967297, 4294967296, 0, 4294967297, 4294967297, 4294967297, 4294967296, 4294967296, 0, 0, 1, 0, 0, 1, 4294967296, 1, 4294967296, 4294967296, 1, 4294967297, 1, 4294967297, 1, 4294967296, 4294967297, 4294967297, 4294967296, 4294967296, 4294967297, 4294967296, 4294967296, 1, 4294967297, 4294967297, 0, 4294967297, 4294967296, 0, 0, 1, 4294967296, 0, 4294967297, 4294967297, 1, 0, 4294967296, 0, 4294967296, 0, 1, 4294967296, 1, 4294967297, 1, 0, 1, 4294967296, 1, 4294967296, 1, 4294967297, 4294967296, 0, 4294967296, 4294967296, 0, 1, 0, 4294967297, 4294967297, 1, 4294967297, 4294967296, 1, 0, 4294967297, 4294967296, 0, 0, 4294967296, 0, 0, 4294967297, 1, 0, 4294967296, 4294967297, 1, 4294967297, 4294967297, 0, 4294967296, 1, 4294967297, 4294967297, 4294967297, 4294967296, 0, 4294967297, 4294967297, 1, 0, 4294967297, 4294967297, 0, 4294967296, 0, 0, 4294967296, 1, 4294967297, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 4294967297, 4294967297, 1, 0, 4294967296, 1, 4294967297, 1, 0, 4294967297, 1, 0, 4294967297, 4294967297, 4294967297, 1, 1, 0, 4294967296, 4294967297, 4294967296, 4294967297, 0, 4294967297, 1, 0, 1, 1, 1, 4294967297, 4294967297, 1, 4294967296, 4294967297, 1, 1, 4294967297, 4294967296, 4294967296, 4294967296, 4294967297, 4294967296, 0, 0, 4294967296, 0, 1, 1, 4294967297, 4294967297, 4294967297, 1, 1, 0, 1, 1, 4294967296, 4294967296, 0, 0, 0, 4294967297, 4294967296, 0, 4294967297, 4294967296, 4294967297, 0, 4294967297, 1, 4294967296, 1, 1, 1, 4294967296, 4294967297, 1, 0, 4294967297, 0, 0, 4294967297, 0, 4294967296, 1, 4294967297, 4294967296, 0, 4294967296, 4294967297, 0, 1, 4294967296, 4294967297, 1, 4294967296, 0, 4294967296, 0, 4294967296, 4294967296, 0, 0, 0, 0, 0, 4294967297, 4294967296, 4294967296, 4294967297, 0, 4294967297, 4294967296, 0, 1, 1, 4294967297, 1, 4294967296, 1, 0, 4294967297, 1, 1, 4294967296, 0, 0, 4294967296, 4294967296, 0, 4294967297, 0, 4294967297, 4294967297, 0, 4294967297, 0, 1, 0, 1, 4294967297, 1, 1, 1, 0, 4294967296, 4294967296, 4294967297, 1, 4294967296, 1, 0, 4294967297, 4294967296, 0, 4294967297, 4294967296, 1, 4294967296, 4294967297, 0, 4294967296, 0, 0, 0, 0, 4294967297, 4294967296, 4294967296, 4294967297, 0, 1, 4294967296, 4294967296, 0, 4294967297, 1, 4294967297, 0, 1, 4294967296, 1, 4294967296, 4294967297, 4294967296, 0, 1, 4294967296, 4294967296, 4294967297, 0, 0, 4294967296, 0, 0, 4294967297, 4294967297, 0, 0, 4294967297, 4294967296, 4294967297, 0, 0, 1, 4294967297, 0, 4294967297, 0, 0, 4294967297, 0, 0, 4294967296, 0, 0, 4294967297, 1, 4294967297, 4294967297, 4294967297, 0, 0, 4294967296, 4294967297, 0, 4294967297, 1, 0, 0, 0, 4294967297, 4294967296, 0, 0, 4294967297, 1, 4294967297, 1, 1, 4294967296, 0, 4294967296, 0, 1, 0, 4294967297, 1, 4294967296, 0, 4294967296, 4294967297, 4294967297, 4294967297, 0, 1, 1, 4294967296, 4294967296, 0, 4294967296, 0, 4294967296, 4294967297, 4294967296, 4294967297, 4294967297, 1, 4294967297, 4294967296, 0, 0, 4294967297, 4294967297, 4294967296, 4294967296, 4294967297, 4294967296, 4294967296, 0, 1, 4294967296, 4294967296, 1, 4294967297, 4294967296, 0, 0, 4294967297, 1, 1, 4294967297, 4294967296, 1, 0, 1, 4294967296, 4294967297, 4294967297, 4294967297, 1, 1, 0, 4294967297, 4294967296, 0, 4294967296, 1, 1, 0, 4294967297, 4294967297, 0, 4294967296, 4294967297, 0, 4294967297, 4294967297, 4294967297, 4294967296, 0, 0, 4294967297, 0, 4294967296, 4294967297, 4294967296, 0, 4294967297, 0, 4294967297, 4294967296, 4294967297, 4294967296, 0, 1, 4294967297, 4294967296, 4294967297, 0, 4294967297, 4294967296, 1, 4294967297, 4294967296, 0, 1, 0, 4294967297, 1, 4294967296, 0, 4294967296, 4294967297, 1, 4294967297, 0, 1, 4294967296, 4294967296, 4294967296, 4294967297, 4294967297, 4294967297, 4294967296, 4294967296, 4294967297, 4294967297, 1, 0, 1, 0, 4294967297, 0, 1, 0, 4294967296, 4294967296, 4294967296, 4294967296, 0, 1, 1, 4294967297, 1, 1, 4294967297, 1, 4294967296, 4294967297, 4294967297, 4294967296, 1, 4294967297, 4294967296, 1, 1, 1, 1, 1, 0, 4294967296, 4294967297, 1, 0, 1, 4294967297, 4294967296, 0, 0, 4294967297, 4294967297, 1, 4294967297, 1, 1, 4294967297, 1, 4294967297, 0, 1, 1, 4294967297, 1, 4294967297, 4294967297, 4294967297, 4294967297, 4294967296, 0, 0, 4294967297, 0, 4294967296, 0, 0, 0, 4294967297, 1, 4294967297, 0, 4294967296, 0, 0, 4294967296, 1, 0, 4294967296, 0, 0, 4294967296, 4294967296, 1, 4294967296, 4294967297, 0, 4294967297, 0, 0, 0, 0, 1, 1, 4294967296, 4294967297, 4294967296, 4294967297, 1, 4294967296, 4294967297, 4294967296, 0, 4294967297, 0, 0, 0, 0, 0, 1, 4294967296, 4294967296, 4294967297, 4294967296, 4294967296, 4294967296, 1, 4294967296, 4294967296, 1, 1, 0, 0, 4294967297, 4294967296, 4294967296, 4294967297, 1, 0, 4294967297, 4294967296, 0, 4294967296, 4294967296, 1, 0, 4294967296, 4294967296, 4294967297, 0, 0, 4294967296, 1, 4294967297, 0, 4294967296, 4294967296, 4294967297, 4294967296, 4294967297, 4294967296, 0, 1, 4294967297, 1, 1, 0, 0, 1, 0, 1, 1, 4294967296, 0, 1, 0, 1, 4294967297, 1, 1, 4294967296, 1, 0, 4294967297, 0, 0, 4294967296, 1, 4294967297, 0, 4294967296, 0, 0, 4294967297, 4294967296, 4294967297, 1, 1, 4294967296, 4294967297, 4294967297, 4294967296, 4294967296, 4294967296, 1, 0, 4294967296, 4294967297, 0, 1, 4294967296, 4294967296, 1, 0, 4294967296, 0, 1, 1, 4294967297, 4294967296, 4294967297, 4294967296, 4294967296, 1, 4294967297, 0, 4294967296, 0, 0, 4294967297, 4294967296, 1, 0, 0, 1, 4294967296, 4294967297, 4294967297, 1, 1, 4294967296, 0, 4294967297, 0, 0, 0, 1, 0, 4294967297, 4294967296, 1, 0, 4294967297, 4294967296, 4294967296, 4294967297, 4294967296, 4294967297, 4294967296, 0, 1, 1, 0, 0, 4294967296, 4294967297, 1, 1, 0, 1, 0, 4294967296, 4294967297, 4294967297, 0, 0, 1, 1, 1, 4294967296, 0, 1, 4294967297, 4294967296, 1, 4294967296, 1, 4294967296, 4294967297, 1, 1, 1, 0, 1, 1, 4294967297, 4294967297, 1, 4294967297, 0, 1, 4294967296, 0, 4294967297, 0, 4294967297, 4294967296, 4294967297, 4294967297, 1, 4294967297, 4294967296, 4294967296, 1, 4294967296, 4294967296, 4294967296, 4294967296, 4294967296, 0, 0, 0, 1, 0, 0, 1, 0, 0, 4294967297, 1, 4294967296, 4294967296, 4294967296, 1, 1, 4294967297, 4294967297, 4294967296, 4294967296, 4294967297, 4294967296, 4294967297, 4294967296, 0, 0, 0, 0, 4294967297, 1, 1, 0, 4294967296, 4294967296, 1, 0, 4294967297, 0, 1, 4294967297, 1, 0, 4294967296, 4294967297, 4294967297, 4294967297, 4294967296, 4294967296, 0, 1, 
Done.
phase2 kernel done ==================
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 4194304 bytes
[       OK ] AxB_dot3_tests_PLUS_TIMES_2.smallxsmallPLUS_TIMES_Cint32_tMint32_tAint32_tBint32_tXint32_tYint32_tZint32_t (227 ms)
[----------] 4 tests from AxB_dot3_tests_PLUS_TIMES_2 (474 ms total)

[----------] 4 tests from AxB_dot3_tests_PLUS_TIMES_3
[ RUN      ] AxB_dot3_tests_PLUS_TIMES_3.tinyxtinyPLUS_TIMES_Cint32_tMboolAint32_tBint32_tXint32_tYint32_tZint32_t
Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 512 bytes
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 512 bytes
inside fill, using seed 543210
fill_random nrows=32ncols=32 need 1024 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
inside fill, using seed 32
fill_random nrows=32ncols=32 need 1024 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 512 bytes
32 slots to fill
all pairs to bucket 1, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b0e0200
inside enumify: 0x7fdf2b0e0200

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 1, no filling
done assigning buckets
bucket 1 has 32 dots to do
LAUNCHING BUCKET CODE: 1
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_dndn
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_jit_AxB_dot3_phase3_dndn
 got kernel instance AxB_dot3_phase3_dndn_int32_t_int32_t_int32_t
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/AxB_dot3_phase3_dndn_int32_t_int32_t_int32_t
---------------------------------------
--- Linker for void AxB_dot3_phase3_dndn<int, int, int>(long long, long long, long long*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*, int) ---
---------------------------------------
info    : 40 bytes gmem
info    : Function properties for '_Z20AxB_dot3_phase3_dndnIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i':
info    : used 98 registers, 320 stack, 0 bytes smem, 412 bytes cmem[0], 0 bytes lmem


---------------------------------------
Launching _Z20AxB_dot3_phase3_dndnIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<1,32,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
tid=0, i,j = 6,0  nnzA= 32, nnzB=32
tid=0, i,j = 1,1  nnzA= 32, nnzB=32
tid=0, i,j = 12,3  nnzA= 32, nnzB=32
tid=0, i,j = 17,3  nnzA= 32, nnzB=32
tid=0, i,j = 19,4  nnzA= 32, nnzB=32
tid=0, i,j = 19,5  nnzA= 32, nnzB=32
tid=0, i,j = 22,6  nnzA= 32, nnzB=32
tid=0, i,j = 24,6  nnzA= 32, nnzB=32
tid=0, i,j = 10,8  nnzA= 32, nnzB=32
tid=0, i,j = 19,9  nnzA= 32, nnzB=32
tid=0, i,j = 31,9  nnzA= 32, nnzB=32
tid=0, i,j = 13,11  nnzA= 32, nnzB=32
tid=0, i,j = 11,12  nnzA= 32, nnzB=32
tid=0, i,j = 24,14  nnzA= 32, nnzB=32
tid=0, i,j = 30,15  nnzA= 32, nnzB=32
tid=0, i,j = 20,16  nnzA= 32, nnzB=32
tid=0, i,j = 30,17  nnzA= 32, nnzB=32
tid=0, i,j = 18,18  nnzA= 32, nnzB=32
tid=0, i,j = 1,19  nnzA= 32, nnzB=32
tid=0, i,j = 25,20  nnzA= 32, nnzB=32
tid=0, i,j = 24,21  nnzA= 32, nnzB=32
tid=0, i,j = 27,21  nnzA= 32, nnzB=32
tid=0, i,j = 30,22  nnzA= 32, nnzB=32
tid=0, i,j = 30,23  nnzA= 32, nnzB=32
tid=0, i,j = 14,24  nnzA= 32, nnzB=32
tid=0, i,j = 4,25  nnzA= 32, nnzB=32
tid=0, i,j = 15,26  nnzA= 32, nnzB=32
tid=0, i,j = 28,27  nnzA= 32, nnzB=32
tid=0, i,j = 16,28  nnzA= 32, nnzB=32
tid=0, i,j = 9,29  nnzA= 32, nnzB=32
tid=0, i,j = 24,30  nnzA= 32, nnzB=32
tid=0, i,j = 31,31  nnzA= 32, nnzB=32
returned from kernel 4.83942ms

  32x32 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB

    (0,6)   11
    (1,1)   10
    (3,12)   7
    (3,17)   6
    (4,19)   8
    (5,19)   10
    (6,22)   6
    (6,24)   9
    (8,10)   7
    (9,19)   8
    (9,31)   6
    (11,13)   8
    (12,11)   6
    (14,24)   10
    (15,30)   9
    (16,20)   5
    (17,30)   7
    (18,18)   12
    (19,1)   6
    (20,25)   7
    (21,24)   9
    (21,27)   6
    (22,30)   8
    (23,30)   11
    (24,14)   7
    (25,4)   9
    (26,15)   4
    (27,28)   5
    (28,16)   4
    ...
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes

  32x32 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 32 entries, memory: 1.0 KB

    (0,6)   1
    (1,1)   1
    (3,12)   1
    (3,17)   1
    (4,19)   1
    (5,19)   1
    (6,22)   1
    (6,24)   1
    (8,10)   1
    (9,19)   1
    (9,31)   1
    (11,13)   1
    (12,11)   1
    (14,24)   1
    (15,30)   1
    (16,20)   1
    (17,30)   1
    (18,18)   1
    (19,1)   1
    (20,25)   1
    (21,24)   1
    (21,27)   1
    (22,30)   1
    (23,30)   1
    (24,14)   1
    (25,4)   1
    (26,15)   1
    (27,28)   1
    (28,16)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 1024 entries, memory: 12.8 KB

    (0,0)   0
    (0,1)   0
    (0,2)   1
    (0,3)   1
    (0,4)   0
    (0,5)   1
    (0,6)   0
    (0,7)   0
    (0,8)   1
    (0,9)   0
    (0,10)   0
    (0,11)   1
    (0,12)   1
    (0,13)   1
    (0,14)   1
    (0,15)   1
    (0,16)   1
    (0,17)   0
    (0,18)   1
    (0,19)   1
    (0,20)   1
    (0,21)   0
    (0,22)   1
    (0,23)   1
    (0,24)   0
    (0,25)   0
    (0,26)   0
    (0,27)   1
    (0,28)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 1024 entries, memory: 12.8 KB

    (0,0)   0
    (0,1)   0
    (0,2)   0
    (0,3)   1
    (0,4)   1
    (0,5)   0
    (0,6)   0
    (0,7)   0
    (0,8)   1
    (0,9)   1
    (0,10)   0
    (0,11)   0
    (0,12)   1
    (0,13)   1
    (0,14)   1
    (0,15)   1
    (0,16)   0
    (0,17)   1
    (0,18)   0
    (0,19)   1
    (0,20)   0
    (0,21)   1
    (0,22)   0
    (0,23)   0
    (0,24)   0
    (0,25)   0
    (0,26)   1
    (0,27)   0
    (0,28)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB

    (0,6)   11
    (1,1)   10
    (3,12)   7
    (3,17)   6
    (4,19)   8
    (5,19)   10
    (6,22)   6
    (6,24)   9
    (8,10)   7
    (9,19)   8
    (9,31)   6
    (11,13)   8
    (12,11)   6
    (14,24)   10
    (15,30)   9
    (16,20)   5
    (17,30)   7
    (18,18)   12
    (19,1)   6
    (20,25)   7
    (21,24)   9
    (21,27)   6
    (22,30)   8
    (23,30)   11
    (24,14)   7
    (25,4)   9
    (26,15)   4
    (27,28)   5
    (28,16)   4
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  C_actual, 32 entries, memory: 1.5 KB

    (0,6)   11
    (1,1)   10
    (3,12)   7
    (3,17)   6
    (4,19)   8
    (5,19)   10
    (6,22)   6
    (6,24)   9
    (8,10)   7
    (9,19)   8
    (9,31)   6
    (11,13)   8
    (12,11)   6
    (14,24)   10
    (15,30)   9
    (16,20)   5
    (17,30)   7
    (18,18)   12
    (19,1)   6
    (20,25)   7
    (21,24)   9
    (21,27)   6
    (22,30)   8
    (23,30)   11
    (24,14)   7
    (25,4)   9
    (26,15)   4
    (27,28)   5
    (28,16)   4
    ...
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes

  32x32 GraphBLAS double matrix, sparse by row
  Diff actual, 32 entries, memory: 1.2 KB

    (0,6)    0
    (1,1)    0
    (3,12)    0
    (3,17)    0
    (4,19)    0
    (5,19)    0
    (6,22)    0
    (6,24)    0
    (8,10)    0
    (9,19)    0
    (9,31)    0
    (11,13)    0
    (12,11)    0
    (14,24)    0
    (15,30)    0
    (16,20)    0
    (17,30)    0
    (18,18)    0
    (19,1)    0
    (20,25)    0
    (21,24)    0
    (21,27)    0
    (22,30)    0
    (23,30)    0
    (24,14)    0
    (25,4)    0
    (26,15)    0
    (27,28)    0
    (28,16)    0
    ...

  32x32 GraphBLAS bool matrix, sparse by row
  T actual, 32 entries, memory: 1.0 KB

    (0,6)   1
    (1,1)   1
    (3,12)   1
    (3,17)   1
    (4,19)   1
    (5,19)   1
    (6,22)   1
    (6,24)   1
    (8,10)   1
    (9,19)   1
    (9,31)   1
    (11,13)   1
    (12,11)   1
    (14,24)   1
    (15,30)   1
    (16,20)   1
    (17,30)   1
    (18,18)   1
    (19,1)   1
    (20,25)   1
    (21,24)   1
    (21,27)   1
    (22,30)   1
    (23,30)   1
    (24,14)   1
    (25,4)   1
    (26,15)   1
    (27,28)   1
    (28,16)   1
    ...
 work:32 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
inside fill, using seed 543210
fill_random nrows=32ncols=32 need 1024 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
inside fill, using seed 32
fill_random nrows=32ncols=32 need 160 values, invsparse = 7
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
160 nonzeroes left to fill..
62 nonzeroes left to fill..
 rmm_wrap_alloc 2048 bytes
 rmm_wrap_alloc 1024 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 5, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2003f000
inside enumify: 0x7fdf2003f000

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 5, no filling
done assigning buckets
bucket 5 has 32 dots to do
LAUNCHING BUCKET CODE: 5
Confiring spdnINside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_spdn
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_jit_AxB_dot3_phase3_spdn
 got kernel instance AxB_dot3_phase3_spdn_int32_t_int32_t_int32_t
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/AxB_dot3_phase3_spdn_int32_t_int32_t_int32_t
---------------------------------------
--- Linker for void AxB_dot3_phase3_spdn<int, int, int>(long long, long long, long long*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*, int) ---
---------------------------------------
info    : 0 bytes gmem
info    : Function properties for '_Z20AxB_dot3_phase3_spdnIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i':
info    : used 112 registers, 296 stack, 0 bytes smem, 412 bytes cmem[0], 0 bytes lmem


---------------------------------------
Launching _Z20AxB_dot3_phase3_spdnIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<1,32,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 1.93638ms

  32x32 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 6

    (0,6) zombie
    (1,1)   2
    (3,12)   2
    (3,17)   2
    (4,19) zombie
    (5,19) zombie
    (6,22)   2
    (6,24)   0
    (8,10)   0
    (9,19) zombie
    (9,31)   4
    (11,13)   3
    (12,11)   2
    (14,24)   1
    (15,30)   1
    (16,20)   0
    (17,30)   0
    (18,18) zombie
    (19,1)   3
    (20,25) zombie
    (21,24)   1
    (21,27)   0
    (22,30)   1
    (23,30)   0
    (24,14)   1
    (25,4)   0
    (26,15)   1
    (27,28)   2
    (28,16)   1
    ...
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes

  32x32 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 32 entries, memory: 1.0 KB

    (0,6)   1
    (1,1)   1
    (3,12)   1
    (3,17)   1
    (4,19)   1
    (5,19)   1
    (6,22)   1
    (6,24)   1
    (8,10)   1
    (9,19)   1
    (9,31)   1
    (11,13)   1
    (12,11)   1
    (14,24)   1
    (15,30)   1
    (16,20)   1
    (17,30)   1
    (18,18)   1
    (19,1)   1
    (20,25)   1
    (21,24)   1
    (21,27)   1
    (22,30)   1
    (23,30)   1
    (24,14)   1
    (25,4)   1
    (26,15)   1
    (27,28)   1
    (28,16)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 1024 entries, memory: 12.8 KB

    (0,0)   0
    (0,1)   0
    (0,2)   1
    (0,3)   1
    (0,4)   0
    (0,5)   1
    (0,6)   0
    (0,7)   0
    (0,8)   1
    (0,9)   0
    (0,10)   0
    (0,11)   1
    (0,12)   1
    (0,13)   1
    (0,14)   1
    (0,15)   1
    (0,16)   1
    (0,17)   0
    (0,18)   1
    (0,19)   1
    (0,20)   1
    (0,21)   0
    (0,22)   1
    (0,23)   1
    (0,24)   0
    (0,25)   0
    (0,26)   0
    (0,27)   1
    (0,28)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 160 entries, memory: 3.8 KB

    (0,8)   0
    (0,9)   1
    (0,10)   1
    (0,16)   0
    (1,3)   0
    (1,4)   0
    (1,5)   1
    (1,6)   1
    (1,7)   0
    (1,12)   1
    (1,13)   0
    (1,14)   0
    (1,19)   1
    (1,27)   1
    (1,29)   0
    (2,0)   0
    (2,1)   0
    (2,5)   0
    (2,8)   0
    (2,15)   0
    (2,18)   0
    (2,20)   0
    (2,31)   1
    (3,1)   0
    (3,7)   1
    (3,10)   0
    (3,12)   0
    (3,17)   1
    (3,21)   0
    ...

  32x32 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 6

    (0,6) zombie
    (1,1)   2
    (3,12)   2
    (3,17)   2
    (4,19) zombie
    (5,19) zombie
    (6,22)   2
    (6,24)   0
    (8,10)   0
    (9,19) zombie
    (9,31)   4
    (11,13)   3
    (12,11)   2
    (14,24)   1
    (15,30)   1
    (16,20)   0
    (17,30)   0
    (18,18) zombie
    (19,1)   3
    (20,25) zombie
    (21,24)   1
    (21,27)   0
    (22,30)   1
    (23,30)   0
    (24,14)   1
    (25,4)   0
    (26,15)   1
    (27,28)   2
    (28,16)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  C_actual, 32 entries, memory: 1.5 KB
  pending tuples: 0 max pending: 0 zombies: 6

    (0,6) zombie
    (1,1)   2
    (3,12)   2
    (3,17)   2
    (4,19) zombie
    (5,19) zombie
    (6,22)   2
    (6,24)   0
    (8,10)   0
    (9,19) zombie
    (9,31)   4
    (11,13)   3
    (12,11)   2
    (14,24)   1
    (15,30)   1
    (16,20)   0
    (17,30)   0
    (18,18) zombie
    (19,1)   3
    (20,25) zombie
    (21,24)   1
    (21,27)   0
    (22,30)   1
    (23,30)   0
    (24,14)   1
    (25,4)   0
    (26,15)   1
    (27,28)   2
    (28,16)   1
    ...
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes

  32x32 GraphBLAS double matrix, sparse by row
  Diff actual, 26 entries, memory: 1.2 KB

    (1,1)    0
    (3,12)    0
    (3,17)    0
    (6,22)    0
    (6,24)    0
    (8,10)    0
    (9,31)    0
    (11,13)    0
    (12,11)    0
    (14,24)    0
    (15,30)    0
    (16,20)    0
    (17,30)    0
    (19,1)    0
    (21,24)    0
    (21,27)    0
    (22,30)    0
    (23,30)    0
    (24,14)    0
    (25,4)    0
    (26,15)    0
    (27,28)    0
    (28,16)    0
    (29,9)    0
    (30,24)    0
    (31,31)    0

  32x32 GraphBLAS bool matrix, sparse by row
  T actual, 26 entries, memory: 1.0 KB

    (1,1)   1
    (3,12)   1
    (3,17)   1
    (6,22)   1
    (6,24)   1
    (8,10)   1
    (9,31)   1
    (11,13)   1
    (12,11)   1
    (14,24)   1
    (15,30)   1
    (16,20)   1
    (17,30)   1
    (19,1)   1
    (21,24)   1
    (21,27)   1
    (22,30)   1
    (23,30)   1
    (24,14)   1
    (25,4)   1
    (26,15)   1
    (27,28)   1
    (28,16)   1
    (29,9)   1
    (30,24)   1
    (31,31)   1
 work:26 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
inside fill, using seed 543210
fill_random nrows=32ncols=32 need 64 values, invsparse = 16
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
64 nonzeroes left to fill..
21 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 32
fill_random nrows=32ncols=32 need 320 values, invsparse = 4
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
320 nonzeroes left to fill..
140 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 6, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b2fd100
inside enumify: 0x7fdf2b2fd100

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 6, no filling
done assigning buckets
bucket 6 has 32 dots to do
LAUNCHING BUCKET CODE: 6
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_vssp
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_jit_AxB_dot3_phase3_vssp
 got kernel instance AxB_dot3_phase3_vssp_int32_t_int32_t_int32_t
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/AxB_dot3_phase3_vssp_int32_t_int32_t_int32_t
---------------------------------------
--- Linker for void AxB_dot3_phase3_vssp<int, int, int>(long long, long long, long long*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*, int) ---
---------------------------------------
info    : 0 bytes gmem
info    : Function properties for '_Z20AxB_dot3_phase3_vsspIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i':
info    : used 215 registers, 296 stack, 0 bytes smem, 412 bytes cmem[0], 0 bytes lmem


---------------------------------------
Launching _Z20AxB_dot3_phase3_vsspIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<1,32,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 2.54771ms

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 15

    (0,6) zombie
    (1,1)   1
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22)   0
    (6,24)   0
    (8,10)   0
    (9,19) zombie
    (9,31)   1
    (11,13) zombie
    (12,11)   0
    (14,24)   1
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   1
    (20,25) zombie
    (21,24) zombie
    (21,27)   1
    (22,30)   0
    (23,30)   0
    (24,14) zombie
    (25,4) zombie
    (26,15)   0
    (27,28) zombie
    (28,16)   0
    ...
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes

  32x32 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 32 entries, memory: 1.0 KB

    (0,6)   1
    (1,1)   1
    (3,12)   1
    (3,17)   1
    (4,19)   1
    (5,19)   1
    (6,22)   1
    (6,24)   1
    (8,10)   1
    (9,19)   1
    (9,31)   1
    (11,13)   1
    (12,11)   1
    (14,24)   1
    (15,30)   1
    (16,20)   1
    (17,30)   1
    (18,18)   1
    (19,1)   1
    (20,25)   1
    (21,24)   1
    (21,27)   1
    (22,30)   1
    (23,30)   1
    (24,14)   1
    (25,4)   1
    (26,15)   1
    (27,28)   1
    (28,16)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 64 entries, memory: 1.5 KB

    (0,21)   1
    (1,1)   1
    (1,14)   0
    (1,24)   1
    (3,3)   1
    (3,15)   0
    (3,31)   1
    (4,1)   1
    (4,13)   1
    (4,27)   1
    (5,30)   0
    (6,13)   1
    (6,14)   0
    (6,22)   0
    (6,29)   0
    (7,11)   1
    (7,21)   0
    (7,31)   0
    (8,5)   0
    (8,6)   1
    (8,24)   0
    (8,31)   0
    (9,2)   1
    (9,21)   0
    (9,22)   1
    (9,31)   1
    (11,30)   1
    (12,1)   0
    (13,15)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 320 entries, memory: 6.8 KB

    (0,1)   1
    (0,5)   0
    (0,7)   1
    (0,8)   0
    (0,11)   0
    (0,13)   1
    (0,18)   0
    (0,21)   0
    (0,23)   1
    (0,26)   1
    (0,30)   0
    (1,1)   1
    (1,2)   0
    (1,3)   0
    (1,5)   0
    (1,6)   1
    (1,7)   0
    (1,8)   0
    (1,18)   1
    (1,19)   0
    (1,20)   1
    (1,22)   1
    (1,23)   1
    (2,0)   1
    (2,2)   0
    (2,4)   0
    (2,6)   0
    (2,7)   1
    (2,10)   0
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 15

    (0,6) zombie
    (1,1)   1
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22)   0
    (6,24)   0
    (8,10)   0
    (9,19) zombie
    (9,31)   1
    (11,13) zombie
    (12,11)   0
    (14,24)   1
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   1
    (20,25) zombie
    (21,24) zombie
    (21,27)   1
    (22,30)   0
    (23,30)   0
    (24,14) zombie
    (25,4) zombie
    (26,15)   0
    (27,28) zombie
    (28,16)   0
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  C_actual, 32 entries, memory: 1.5 KB
  pending tuples: 0 max pending: 0 zombies: 15

    (0,6) zombie
    (1,1)   1
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22)   0
    (6,24)   0
    (8,10)   0
    (9,19) zombie
    (9,31)   1
    (11,13) zombie
    (12,11)   0
    (14,24)   1
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   1
    (20,25) zombie
    (21,24) zombie
    (21,27)   1
    (22,30)   0
    (23,30)   0
    (24,14) zombie
    (25,4) zombie
    (26,15)   0
    (27,28) zombie
    (28,16)   0
    ...
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes

  32x32 GraphBLAS double matrix, sparse by row
  Diff actual, 17 entries, memory: 1.2 KB

    (1,1)    0
    (3,17)    0
    (6,22)    0
    (6,24)    0
    (8,10)    0
    (9,31)    0
    (12,11)    0
    (14,24)    0
    (15,30)    0
    (19,1)    0
    (21,27)    0
    (22,30)    0
    (23,30)    0
    (26,15)    0
    (28,16)    0
    (30,24)    0
    (31,31)    0

  32x32 GraphBLAS bool matrix, sparse by row
  T actual, 17 entries, memory: 1.0 KB

    (1,1)   1
    (3,17)   1
    (6,22)   1
    (6,24)   1
    (8,10)   1
    (9,31)   1
    (12,11)   1
    (14,24)   1
    (15,30)   1
    (19,1)   1
    (21,27)   1
    (22,30)   1
    (23,30)   1
    (26,15)   1
    (28,16)   1
    (30,24)   1
    (31,31)   1
 work:17 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
inside fill, using seed 543210
fill_random nrows=32ncols=32 need 64 values, invsparse = 16
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
64 nonzeroes left to fill..
21 nonzeroes left to fill..
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 32
fill_random nrows=32ncols=32 need 128 values, invsparse = 8
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
128 nonzeroes left to fill..
43 nonzeroes left to fill..
 rmm_wrap_alloc 1024 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 7, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b0e0300
inside enumify: 0x7fdf2b0e0300

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 7, no filling
done assigning buckets
bucket 7 has 32 dots to do
LAUNCHING BUCKET CODE: 7
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_vsvs
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_jit_AxB_dot3_phase3_vsvs
 got kernel instance AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
---------------------------------------
--- Linker for void AxB_dot3_phase3_vsvs<int, int, int>(long long, long long, long long*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*, int) ---
---------------------------------------
info    : 0 bytes gmem
info    : Function properties for '_Z20AxB_dot3_phase3_vsvsIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i':
info    : used 88 registers, 336 stack, 128 bytes smem, 412 bytes cmem[0], 0 bytes lmem


---------------------------------------
Launching _Z20AxB_dot3_phase3_vsvsIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<1,512,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 2.16678ms

  32x32 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 24

    (0,6) zombie
    (1,1)   0
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24) zombie
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   0
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes

  32x32 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 32 entries, memory: 1.0 KB

    (0,6)   1
    (1,1)   1
    (3,12)   1
    (3,17)   1
    (4,19)   1
    (5,19)   1
    (6,22)   1
    (6,24)   1
    (8,10)   1
    (9,19)   1
    (9,31)   1
    (11,13)   1
    (12,11)   1
    (14,24)   1
    (15,30)   1
    (16,20)   1
    (17,30)   1
    (18,18)   1
    (19,1)   1
    (20,25)   1
    (21,24)   1
    (21,27)   1
    (22,30)   1
    (23,30)   1
    (24,14)   1
    (25,4)   1
    (26,15)   1
    (27,28)   1
    (28,16)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 64 entries, memory: 1.5 KB

    (0,21)   1
    (1,1)   1
    (1,14)   0
    (1,24)   1
    (3,3)   1
    (3,15)   0
    (3,31)   1
    (4,1)   1
    (4,13)   1
    (4,27)   1
    (5,30)   0
    (6,13)   1
    (6,14)   0
    (6,22)   0
    (6,29)   0
    (7,11)   1
    (7,21)   0
    (7,31)   0
    (8,5)   0
    (8,6)   1
    (8,24)   0
    (8,31)   0
    (9,2)   1
    (9,21)   0
    (9,22)   1
    (9,31)   1
    (11,30)   1
    (12,1)   0
    (13,15)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 128 entries, memory: 2.2 KB

    (0,8)   1
    (0,10)   0
    (1,0)   1
    (1,4)   0
    (1,6)   0
    (1,14)   0
    (1,26)   1
    (2,5)   0
    (2,11)   0
    (2,13)   0
    (2,15)   1
    (2,16)   0
    (2,25)   1
    (3,2)   0
    (3,11)   0
    (3,12)   0
    (3,14)   1
    (3,16)   0
    (3,19)   0
    (3,26)   1
    (4,9)   0
    (4,10)   0
    (4,30)   1
    (5,7)   1
    (5,10)   0
    (5,12)   0
    (5,16)   1
    (5,28)   0
    (7,1)   0
    ...

  32x32 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 24

    (0,6) zombie
    (1,1)   0
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24) zombie
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   0
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  C_actual, 32 entries, memory: 1.5 KB
  pending tuples: 0 max pending: 0 zombies: 24

    (0,6) zombie
    (1,1)   0
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24) zombie
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   0
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes

  32x32 GraphBLAS double matrix, sparse by row
  Diff actual, 8 entries, memory: 896 bytes

    (1,1)    0
    (3,17)    0
    (9,31)    0
    (15,30)    0
    (19,1)    0
    (25,4)    0
    (30,24)    0
    (31,31)    0

  32x32 GraphBLAS bool matrix, sparse by row
  T actual, 8 entries, memory: 840 bytes

    (1,1)   1
    (3,17)   1
    (9,31)   1
    (15,30)   1
    (19,1)   1
    (25,4)   1
    (30,24)   1
    (31,31)   1
 work:8 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
inside fill, using seed 543210
fill_random nrows=32ncols=32 need 64 values, invsparse = 16
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
64 nonzeroes left to fill..
21 nonzeroes left to fill..
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 32
fill_random nrows=32ncols=32 need 128 values, invsparse = 8
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
128 nonzeroes left to fill..
43 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 8, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b302900
inside enumify: 0x7fdf2b302900

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 8, no filling
done assigning buckets
bucket 8 has 32 dots to do
LAUNCHING BUCKET CODE: 8
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_vsvs
found memory-cached prog GB_jit_AxB_dot3_phase3_vsvs
 got kernel instance AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
found memory-cached prog AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
Launching _Z20AxB_dot3_phase3_vsvsIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<1,512,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 0.30208ms

  32x32 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 24

    (0,6) zombie
    (1,1)   0
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24) zombie
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   0
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes

  32x32 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 32 entries, memory: 1.0 KB

    (0,6)   1
    (1,1)   1
    (3,12)   1
    (3,17)   1
    (4,19)   1
    (5,19)   1
    (6,22)   1
    (6,24)   1
    (8,10)   1
    (9,19)   1
    (9,31)   1
    (11,13)   1
    (12,11)   1
    (14,24)   1
    (15,30)   1
    (16,20)   1
    (17,30)   1
    (18,18)   1
    (19,1)   1
    (20,25)   1
    (21,24)   1
    (21,27)   1
    (22,30)   1
    (23,30)   1
    (24,14)   1
    (25,4)   1
    (26,15)   1
    (27,28)   1
    (28,16)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 64 entries, memory: 1.5 KB

    (0,21)   1
    (1,1)   1
    (1,14)   0
    (1,24)   1
    (3,3)   1
    (3,15)   0
    (3,31)   1
    (4,1)   1
    (4,13)   1
    (4,27)   1
    (5,30)   0
    (6,13)   1
    (6,14)   0
    (6,22)   0
    (6,29)   0
    (7,11)   1
    (7,21)   0
    (7,31)   0
    (8,5)   0
    (8,6)   1
    (8,24)   0
    (8,31)   0
    (9,2)   1
    (9,21)   0
    (9,22)   1
    (9,31)   1
    (11,30)   1
    (12,1)   0
    (13,15)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 128 entries, memory: 2.2 KB

    (0,8)   1
    (0,10)   0
    (1,0)   1
    (1,4)   0
    (1,6)   0
    (1,14)   0
    (1,26)   1
    (2,5)   0
    (2,11)   0
    (2,13)   0
    (2,15)   1
    (2,16)   0
    (2,25)   1
    (3,2)   0
    (3,11)   0
    (3,12)   0
    (3,14)   1
    (3,16)   0
    (3,19)   0
    (3,26)   1
    (4,9)   0
    (4,10)   0
    (4,30)   1
    (5,7)   1
    (5,10)   0
    (5,12)   0
    (5,16)   1
    (5,28)   0
    (7,1)   0
    ...

  32x32 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 24

    (0,6) zombie
    (1,1)   0
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24) zombie
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   0
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  C_actual, 32 entries, memory: 1.5 KB
  pending tuples: 0 max pending: 0 zombies: 24

    (0,6) zombie
    (1,1)   0
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24) zombie
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   0
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes

  32x32 GraphBLAS double matrix, sparse by row
  Diff actual, 8 entries, memory: 896 bytes

    (1,1)    0
    (3,17)    0
    (9,31)    0
    (15,30)    0
    (19,1)    0
    (25,4)    0
    (30,24)    0
    (31,31)    0

  32x32 GraphBLAS bool matrix, sparse by row
  T actual, 8 entries, memory: 840 bytes

    (1,1)   1
    (3,17)   1
    (9,31)   1
    (15,30)   1
    (19,1)   1
    (25,4)   1
    (30,24)   1
    (31,31)   1
 work:8 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
inside fill, using seed 543210
fill_random nrows=32ncols=32 need 64 values, invsparse = 16
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
64 nonzeroes left to fill..
21 nonzeroes left to fill..
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 32
fill_random nrows=32ncols=32 need 128 values, invsparse = 8
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
128 nonzeroes left to fill..
43 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 9, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b303c00
inside enumify: 0x7fdf2b303c00

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 9, no filling
done assigning buckets
bucket 9 has 32 dots to do
LAUNCHING BUCKET CODE: 9
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_vsvs
found memory-cached prog GB_jit_AxB_dot3_phase3_vsvs
 got kernel instance AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
found memory-cached prog AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
Launching _Z20AxB_dot3_phase3_vsvsIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<1,512,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 0.32768ms

  32x32 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 24

    (0,6) zombie
    (1,1)   0
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24) zombie
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   0
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes

  32x32 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 32 entries, memory: 1.0 KB

    (0,6)   1
    (1,1)   1
    (3,12)   1
    (3,17)   1
    (4,19)   1
    (5,19)   1
    (6,22)   1
    (6,24)   1
    (8,10)   1
    (9,19)   1
    (9,31)   1
    (11,13)   1
    (12,11)   1
    (14,24)   1
    (15,30)   1
    (16,20)   1
    (17,30)   1
    (18,18)   1
    (19,1)   1
    (20,25)   1
    (21,24)   1
    (21,27)   1
    (22,30)   1
    (23,30)   1
    (24,14)   1
    (25,4)   1
    (26,15)   1
    (27,28)   1
    (28,16)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 64 entries, memory: 1.5 KB

    (0,21)   1
    (1,1)   1
    (1,14)   0
    (1,24)   1
    (3,3)   1
    (3,15)   0
    (3,31)   1
    (4,1)   1
    (4,13)   1
    (4,27)   1
    (5,30)   0
    (6,13)   1
    (6,14)   0
    (6,22)   0
    (6,29)   0
    (7,11)   1
    (7,21)   0
    (7,31)   0
    (8,5)   0
    (8,6)   1
    (8,24)   0
    (8,31)   0
    (9,2)   1
    (9,21)   0
    (9,22)   1
    (9,31)   1
    (11,30)   1
    (12,1)   0
    (13,15)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 128 entries, memory: 2.2 KB

    (0,8)   1
    (0,10)   0
    (1,0)   1
    (1,4)   0
    (1,6)   0
    (1,14)   0
    (1,26)   1
    (2,5)   0
    (2,11)   0
    (2,13)   0
    (2,15)   1
    (2,16)   0
    (2,25)   1
    (3,2)   0
    (3,11)   0
    (3,12)   0
    (3,14)   1
    (3,16)   0
    (3,19)   0
    (3,26)   1
    (4,9)   0
    (4,10)   0
    (4,30)   1
    (5,7)   1
    (5,10)   0
    (5,12)   0
    (5,16)   1
    (5,28)   0
    (7,1)   0
    ...

  32x32 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 24

    (0,6) zombie
    (1,1)   0
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24) zombie
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   0
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  C_actual, 32 entries, memory: 1.5 KB
  pending tuples: 0 max pending: 0 zombies: 24

    (0,6) zombie
    (1,1)   0
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24) zombie
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   0
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes

  32x32 GraphBLAS double matrix, sparse by row
  Diff actual, 8 entries, memory: 896 bytes

    (1,1)    0
    (3,17)    0
    (9,31)    0
    (15,30)    0
    (19,1)    0
    (25,4)    0
    (30,24)    0
    (31,31)    0

  32x32 GraphBLAS bool matrix, sparse by row
  T actual, 8 entries, memory: 840 bytes

    (1,1)   1
    (3,17)   1
    (9,31)   1
    (15,30)   1
    (19,1)   1
    (25,4)   1
    (30,24)   1
    (31,31)   1
 work:8 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
inside fill, using seed 543210
fill_random nrows=32ncols=32 need 64 values, invsparse = 16
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
64 nonzeroes left to fill..
21 nonzeroes left to fill..
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 32
fill_random nrows=32ncols=32 need 128 values, invsparse = 8
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
128 nonzeroes left to fill..
43 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 10, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b304e00
inside enumify: 0x7fdf2b304e00

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 10, no filling
done assigning buckets
bucket 10 has 32 dots to do
LAUNCHING BUCKET CODE: 10
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_vsvs
found memory-cached prog GB_jit_AxB_dot3_phase3_vsvs
 got kernel instance AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
found memory-cached prog AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
Launching _Z20AxB_dot3_phase3_vsvsIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<1,512,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 0.408576ms

  32x32 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 24

    (0,6) zombie
    (1,1)   0
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24) zombie
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   0
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes

  32x32 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 32 entries, memory: 1.0 KB

    (0,6)   1
    (1,1)   1
    (3,12)   1
    (3,17)   1
    (4,19)   1
    (5,19)   1
    (6,22)   1
    (6,24)   1
    (8,10)   1
    (9,19)   1
    (9,31)   1
    (11,13)   1
    (12,11)   1
    (14,24)   1
    (15,30)   1
    (16,20)   1
    (17,30)   1
    (18,18)   1
    (19,1)   1
    (20,25)   1
    (21,24)   1
    (21,27)   1
    (22,30)   1
    (23,30)   1
    (24,14)   1
    (25,4)   1
    (26,15)   1
    (27,28)   1
    (28,16)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 64 entries, memory: 1.5 KB

    (0,21)   1
    (1,1)   1
    (1,14)   0
    (1,24)   1
    (3,3)   1
    (3,15)   0
    (3,31)   1
    (4,1)   1
    (4,13)   1
    (4,27)   1
    (5,30)   0
    (6,13)   1
    (6,14)   0
    (6,22)   0
    (6,29)   0
    (7,11)   1
    (7,21)   0
    (7,31)   0
    (8,5)   0
    (8,6)   1
    (8,24)   0
    (8,31)   0
    (9,2)   1
    (9,21)   0
    (9,22)   1
    (9,31)   1
    (11,30)   1
    (12,1)   0
    (13,15)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 128 entries, memory: 2.2 KB

    (0,8)   1
    (0,10)   0
    (1,0)   1
    (1,4)   0
    (1,6)   0
    (1,14)   0
    (1,26)   1
    (2,5)   0
    (2,11)   0
    (2,13)   0
    (2,15)   1
    (2,16)   0
    (2,25)   1
    (3,2)   0
    (3,11)   0
    (3,12)   0
    (3,14)   1
    (3,16)   0
    (3,19)   0
    (3,26)   1
    (4,9)   0
    (4,10)   0
    (4,30)   1
    (5,7)   1
    (5,10)   0
    (5,12)   0
    (5,16)   1
    (5,28)   0
    (7,1)   0
    ...

  32x32 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 24

    (0,6) zombie
    (1,1)   0
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24) zombie
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   0
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  C_actual, 32 entries, memory: 1.5 KB
  pending tuples: 0 max pending: 0 zombies: 24

    (0,6) zombie
    (1,1)   0
    (3,12) zombie
    (3,17)   0
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24) zombie
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30)   1
    (16,20) zombie
    (17,30) zombie
    (18,18) zombie
    (19,1)   0
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes

  32x32 GraphBLAS double matrix, sparse by row
  Diff actual, 8 entries, memory: 896 bytes

    (1,1)    0
    (3,17)    0
    (9,31)    0
    (15,30)    0
    (19,1)    0
    (25,4)    0
    (30,24)    0
    (31,31)    0

  32x32 GraphBLAS bool matrix, sparse by row
  T actual, 8 entries, memory: 840 bytes

    (1,1)   1
    (3,17)   1
    (9,31)   1
    (15,30)   1
    (19,1)   1
    (25,4)   1
    (30,24)   1
    (31,31)   1
 work:8 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 4567
fill_random nrows=32ncols=32 need 32 values, invsparse = 32
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
32 nonzeroes left to fill..
2 nonzeroes left to fill..
inside fill, using seed 543210
fill_random nrows=32ncols=32 need 160 values, invsparse = 7
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
160 nonzeroes left to fill..
51 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 32
fill_random nrows=32ncols=32 need 64 values, invsparse = 16
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
64 nonzeroes left to fill..
20 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 11, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b306300
inside enumify: 0x7fdf2b306300

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
32 slots to fill
all pairs to bucket 11, no filling
done assigning buckets
bucket 11 has 32 dots to do
LAUNCHING BUCKET CODE: 11
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_mp
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_jit_AxB_dot3_phase3_mp
 got kernel instance AxB_dot3_phase3_mp_int32_t_int32_t_int32_t
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/AxB_dot3_phase3_mp_int32_t_int32_t_int32_t
---------------------------------------
--- Linker for void AxB_dot3_phase3_mp<int, int, int>(long long, long long, long long*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*, GB_Matrix_opaque*, int) ---
---------------------------------------
info    : 0 bytes gmem
info    : Function properties for '_Z18AxB_dot3_phase3_mpIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i':
info    : used 138 registers, 304 stack, 0 bytes smem, 412 bytes cmem[0], 0 bytes lmem


---------------------------------------
Launching _Z18AxB_dot3_phase3_mpIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<1,32,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 3.16416ms

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 27

    (0,6) zombie
    (1,1)   1
    (3,12) zombie
    (3,17) zombie
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24)   0
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30) zombie
    (16,20)   0
    (17,30) zombie
    (18,18) zombie
    (19,1) zombie
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes
 rmm_wrap_alloc 512 bytes

  32x32 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 32 entries, memory: 1.0 KB

    (0,6)   1
    (1,1)   1
    (3,12)   1
    (3,17)   1
    (4,19)   1
    (5,19)   1
    (6,22)   1
    (6,24)   1
    (8,10)   1
    (9,19)   1
    (9,31)   1
    (11,13)   1
    (12,11)   1
    (14,24)   1
    (15,30)   1
    (16,20)   1
    (17,30)   1
    (18,18)   1
    (19,1)   1
    (20,25)   1
    (21,24)   1
    (21,27)   1
    (22,30)   1
    (23,30)   1
    (24,14)   1
    (25,4)   1
    (26,15)   1
    (27,28)   1
    (28,16)   1
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 160 entries, memory: 3.8 KB

    (0,6)   1
    (0,26)   0
    (0,27)   0
    (1,6)   1
    (1,13)   1
    (1,20)   0
    (1,24)   0
    (3,3)   1
    (3,4)   0
    (3,15)   1
    (3,20)   0
    (3,23)   1
    (3,30)   1
    (3,31)   0
    (4,2)   0
    (4,3)   0
    (4,10)   0
    (4,21)   1
    (4,29)   0
    (4,30)   1
    (5,7)   0
    (5,8)   1
    (5,10)   1
    (5,18)   1
    (5,21)   1
    (6,5)   1
    (6,6)   1
    (6,7)   1
    (6,9)   0
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 64 entries, memory: 1.5 KB

    (0,12)   1
    (0,15)   0
    (0,17)   1
    (0,21)   1
    (1,6)   1
    (2,16)   1
    (2,22)   1
    (2,28)   1
    (3,13)   1
    (3,24)   1
    (3,31)   0
    (4,1)   1
    (5,1)   1
    (5,7)   1
    (5,16)   0
    (7,3)   1
    (7,22)   0
    (7,28)   1
    (8,2)   1
    (8,22)   0
    (8,25)   0
    (8,30)   1
    (9,0)   0
    (9,4)   0
    (9,26)   0
    (10,20)   1
    (11,3)   0
    (11,10)   0
    (12,10)   0
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  C GPU, 32 entries, memory: 1.1 KB
  pending tuples: 0 max pending: 0 zombies: 27

    (0,6) zombie
    (1,1)   1
    (3,12) zombie
    (3,17) zombie
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24)   0
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30) zombie
    (16,20)   0
    (17,30) zombie
    (18,18) zombie
    (19,1) zombie
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...

  32x32 GraphBLAS int32_t matrix, sparse by row
  C_actual, 32 entries, memory: 1.5 KB
  pending tuples: 0 max pending: 0 zombies: 27

    (0,6) zombie
    (1,1)   1
    (3,12) zombie
    (3,17) zombie
    (4,19) zombie
    (5,19) zombie
    (6,22) zombie
    (6,24)   0
    (8,10) zombie
    (9,19) zombie
    (9,31)   0
    (11,13) zombie
    (12,11) zombie
    (14,24) zombie
    (15,30) zombie
    (16,20)   0
    (17,30) zombie
    (18,18) zombie
    (19,1) zombie
    (20,25) zombie
    (21,24) zombie
    (21,27) zombie
    (22,30) zombie
    (23,30) zombie
    (24,14) zombie
    (25,4)   1
    (26,15) zombie
    (27,28) zombie
    (28,16) zombie
    ...
 rmm_wrap_alloc 256 bytes

  32x32 GraphBLAS double matrix, sparse by row
  Diff actual, 5 entries, memory: 896 bytes

    (1,1)    0
    (6,24)    0
    (9,31)    0
    (16,20)    0
    (25,4)    0

  32x32 GraphBLAS bool matrix, sparse by row
  T actual, 5 entries, memory: 840 bytes

    (1,1)   1
    (6,24)   1
    (9,31)   1
    (16,20)   1
    (25,4)   1
 work:5 gpus:0 [       OK ] AxB_dot3_tests_PLUS_TIMES_3.tinyxtinyPLUS_TIMES_Cint32_tMboolAint32_tBint32_tXint32_tYint32_tZint32_t (32 ms)
[ RUN      ] AxB_dot3_tests_PLUS_TIMES_3.smallxsmallPLUS_TIMES_Cint32_tMboolAint32_tBint32_tXint32_tYint32_tZint32_t
Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
 rmm_wrap_alloc 16384 bytes
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
 rmm_wrap_alloc 16384 bytes
inside fill, using seed 543210
fill_random nrows=1024ncols=1024 need 1048576 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
inside fill, using seed 32
fill_random nrows=1024ncols=1024 need 1048576 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
1024 slots to fill
all pairs to bucket 1, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b305700
inside enumify: 0x7fdf2b305700

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 256 bytes
1024 slots to fill
all pairs to bucket 1, no filling
done assigning buckets
bucket 1 has 1024 dots to do
LAUNCHING BUCKET CODE: 1
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_dndn
found memory-cached prog GB_jit_AxB_dot3_phase3_dndn
 got kernel instance AxB_dot3_phase3_dndn_int32_t_int32_t_int32_t
found memory-cached prog AxB_dot3_phase3_dndn_int32_t_int32_t_int32_t
Launching _Z20AxB_dot3_phase3_dndnIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<32,32,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
tid=0, i,j = 886,19  nnzA= 1024, nnzB=1024
tid=0, i,j = 905,24  nnzA= 1024, nnzB=1024
tid=0, i,j = 568,15  nnzA= 1024, nnzB=1024
tid=0, i,j = 569,22  nnzA= 1024, nnzB=1024
tid=0, i,j = 996,6  nnzA= 1024, nnzB=1024
tid=0, i,j = 192,13  nnzA= 1024, nnzB=1024
tid=0, i,j = 46,11  nnzA= 1024, nnzB=1024
tid=0, i,j = 103,18  nnzA= 1024, nnzB=1024
tid=0, i,j = 187,9  nnzA= 1024, nnzB=1024
tid=0, i,j = 376,2  nnzA= 1024, nnzB=1024
tid=0, i,j = 975,21  nnzA= 1024, nnzB=1024
tid=0, i,j = 107,28  nnzA= 1024, nnzB=1024
tid=0, i,j = 574,0  nnzA= 1024, nnzB=1024
tid=0, i,j = 928,17  nnzA= 1024, nnzB=1024
tid=0, i,j = 896,8  nnzA= 1024, nnzB=1024
tid=0, i,j = 953,12  nnzA= 1024, nnzB=1024
tid=0, i,j = 310,23  nnzA= 1024, nnzB=1024
tid=0, i,j = 560,5  nnzA= 1024, nnzB=1024
tid=0, i,j = 821,19  nnzA= 1024, nnzB=1024
tid=0, i,j = 446,10  nnzA= 1024, nnzB=1024
tid=0, i,j = 421,14  nnzA= 1024, nnzB=1024
tid=0, i,j = 428,26  nnzA= 1024, nnzB=1024
tid=0, i,j = 479,21  nnzA= 1024, nnzB=1024
tid=0, i,j = 397,12  nnzA= 1024, nnzB=1024
tid=0, i,j = 904,16  nnzA= 1024, nnzB=1024
tid=0, i,j = 666,7  nnzA= 1024, nnzB=1024
tid=0, i,j = 241,25  nnzA= 1024, nnzB=1024
tid=0, i,j = 474,20  nnzA= 1024, nnzB=1024
tid=0, i,j = 788,16  nnzA= 1024, nnzB=1024
tid=0, i,j = 478,0  nnzA= 1024, nnzB=1024
tid=0, i,j = 955,11  nnzA= 1024, nnzB=1024
tid=0, i,j = 183,7  nnzA= 1024, nnzB=1024
tid=0, i,j = 960,54  nnzA= 1024, nnzB=1024
tid=0, i,j = 893,57  nnzA= 1024, nnzB=1024
tid=0, i,j = 940,53  nnzA= 1024, nnzB=1024
tid=0, i,j = 70,47  nnzA= 1024, nnzB=1024
tid=0, i,j = 476,49  nnzA= 1024, nnzB=1024
tid=0, i,j = 846,57  nnzA= 1024, nnzB=1024
tid=0, i,j = 108,59  nnzA= 1024, nnzB=1024
tid=0, i,j = 804,34  nnzA= 1024, nnzB=1024
tid=0, i,j = 35,58  nnzA= 1024, nnzB=1024
tid=0, i,j = 590,61  nnzA= 1024, nnzB=1024
tid=0, i,j = 771,62  nnzA= 1024, nnzB=1024
tid=0, i,j = 121,32  nnzA= 1024, nnzB=1024
tid=0, i,j = 694,30  nnzA= 1024, nnzB=1024
tid=0, i,j = 568,41  nnzA= 1024, nnzB=1024
tid=0, i,j = 698,39  nnzA= 1024, nnzB=1024
tid=0, i,j = 138,38  nnzA= 1024, nnzB=1024
tid=0, i,j = 81,33  nnzA= 1024, nnzB=1024
tid=0, i,j = 558,54  nnzA= 1024, nnzB=1024
tid=0, i,j = 999,52  nnzA= 1024, nnzB=1024
tid=0, i,j = 208,46  nnzA= 1024, nnzB=1024
tid=0, i,j = 950,40  nnzA= 1024, nnzB=1024
tid=0, i,j = 336,48  nnzA= 1024, nnzB=1024
tid=0, i,j = 90,56  nnzA= 1024, nnzB=1024
tid=0, i,j = 798,43  nnzA= 1024, nnzB=1024
tid=0, i,j = 479,60  nnzA= 1024, nnzB=1024
tid=0, i,j = 556,51  nnzA= 1024, nnzB=1024
tid=0, i,j = 609,37  nnzA= 1024, nnzB=1024
tid=0, i,j = 35,50  nnzA= 1024, nnzB=1024
tid=0, i,j = 979,55  nnzA= 1024, nnzB=1024
tid=0, i,j = 441,28  nnzA= 1024, nnzB=1024
tid=0, i,j = 324,42  nnzA= 1024, nnzB=1024
tid=0, i,j = 451,36  nnzA= 1024, nnzB=1024
tid=0, i,j = 665,73  nnzA= 1024, nnzB=1024
tid=0, i,j = 297,72  nnzA= 1024, nnzB=1024
tid=0, i,j = 50,63  nnzA= 1024, nnzB=1024
tid=0, i,j = 324,68  nnzA= 1024, nnzB=1024
tid=0, i,j = 234,91  nnzA= 1024, nnzB=1024
tid=0, i,j = 637,94  nnzA= 1024, nnzB=1024
tid=0, i,j = 243,82  nnzA= 1024, nnzB=1024
tid=0, i,j = 690,92  nnzA= 1024, nnzB=1024
tid=0, i,j = 411,67  nnzA= 1024, nnzB=1024
tid=0, i,j = 90,78  nnzA= 1024, nnzB=1024
tid=0, i,j = 825,89  nnzA= 1024, nnzB=1024
tid=0, i,j = 228,71  nnzA= 1024, nnzB=1024
tid=0, i,j = 218,92  nnzA= 1024, nnzB=1024
tid=0, i,j = 748,97  nnzA= 1024, nnzB=1024
tid=0, i,j = 486,93  nnzA= 1024, nnzB=1024
tid=0, i,j = 37,90  nnzA= 1024, nnzB=1024
tid=0, i,j = 719,66  nnzA= 1024, nnzB=1024
tid=0, i,j = 268,64  nnzA= 1024, nnzB=1024
tid=0, i,j = 657,87  nnzA= 1024, nnzB=1024
tid=0, i,j = 539,70  nnzA= 1024, nnzB=1024
tid=0, i,j = 564,96  nnzA= 1024, nnzB=1024
tid=0, i,j = 402,110  nnzA= 1024, nnzB=1024
tid=0, i,j = 694,65  nnzA= 1024, nnzB=1024
tid=0, i,j = 74,92  nnzA= 1024, nnzB=1024
tid=0, i,j = 248,76  nnzA= 1024, nnzB=1024
tid=0, i,j = 104,86  nnzA= 1024, nnzB=1024
tid=0, i,j = 722,94  nnzA= 1024, nnzB=1024
tid=0, i,j = 519,91  nnzA= 1024, nnzB=1024
tid=0, i,j = 253,84  nnzA= 1024, nnzB=1024
tid=0, i,j = 477,69  nnzA= 1024, nnzB=1024
tid=0, i,j = 326,99  nnzA= 1024, nnzB=1024
tid=0, i,j = 660,129  nnzA= 1024, nnzB=1024
tid=0, i,j = 820,128  nnzA= 1024, nnzB=1024
tid=0, i,j = 240,115  nnzA= 1024, nnzB=1024
tid=0, i,j = 151,122  nnzA= 1024, nnzB=1024
tid=0, i,j = 219,117  nnzA= 1024, nnzB=1024
tid=0, i,j = 127,112  nnzA= 1024, nnzB=1024
tid=0, i,j = 623,130  nnzA= 1024, nnzB=1024
tid=0, i,j = 644,104  nnzA= 1024, nnzB=1024
tid=0, i,j = 177,125  nnzA= 1024, nnzB=1024
tid=0, i,j = 278,113  nnzA= 1024, nnzB=1024
tid=0, i,j = 284,139  nnzA= 1024, nnzB=1024
tid=0, i,j = 338,117  nnzA= 1024, nnzB=1024
tid=0, i,j = 36,126  nnzA= 1024, nnzB=1024
tid=0, i,j = 477,120  nnzA= 1024, nnzB=1024
tid=0, i,j = 99,118  nnzA= 1024, nnzB=1024
tid=0, i,j = 522,107  nnzA= 1024, nnzB=1024
tid=0, i,j = 609,102  nnzA= 1024, nnzB=1024
tid=0, i,j = 621,103  nnzA= 1024, nnzB=1024
tid=0, i,j = 835,128  nnzA= 1024, nnzB=1024
tid=0, i,j = 715,121  nnzA= 1024, nnzB=1024
tid=0, i,j = 239,107  nnzA= 1024, nnzB=1024
tid=0, i,j = 816,163  nnzA= 1024, nnzB=1024
tid=0, i,j = 601,162  nnzA= 1024, nnzB=1024
tid=0, i,j = 959,158  nnzA= 1024, nnzB=1024
tid=0, i,j = 492,133  nnzA= 1024, nnzB=1024
tid=0, i,j = 357,148  nnzA= 1024, nnzB=1024
tid=0, i,j = 108,136  nnzA= 1024, nnzB=1024
tid=0, i,j = 974,157  nnzA= 1024, nnzB=1024
tid=0, i,j = 355,131  nnzA= 1024, nnzB=1024
tid=0, i,j = 995,146  nnzA= 1024, nnzB=1024
tid=0, i,j = 714,157  nnzA= 1024, nnzB=1024
tid=0, i,j = 484,151  nnzA= 1024, nnzB=1024
tid=0, i,j = 570,132  nnzA= 1024, nnzB=1024
tid=0, i,j = 887,140  nnzA= 1024, nnzB=1024
tid=0, i,j = 717,150  nnzA= 1024, nnzB=1024
tid=0, i,j = 123,143  nnzA= 1024, nnzB=1024
tid=0, i,j = 297,160  nnzA= 1024, nnzB=1024
tid=0, i,j = 554,121  nnzA= 1024, nnzB=1024
tid=0, i,j = 621,123  nnzA= 1024, nnzB=1024
tid=0, i,j = 87,142  nnzA= 1024, nnzB=1024
tid=0, i,j = 281,100  nnzA= 1024, nnzB=1024
tid=0, i,j = 194,146  nnzA= 1024, nnzB=1024
tid=0, i,j = 131,108  nnzA= 1024, nnzB=1024
tid=0, i,j = 552,145  nnzA= 1024, nnzB=1024
tid=0, i,j = 433,77  nnzA= 1024, nnzB=1024
tid=0, i,j = 754,81  nnzA= 1024, nnzB=1024
tid=0, i,j = 884,109  nnzA= 1024, nnzB=1024
tid=0, i,j = 198,116  nnzA= 1024, nnzB=1024
tid=0, i,j = 595,174  nnzA= 1024, nnzB=1024
tid=0, i,j = 807,130  nnzA= 1024, nnzB=1024
tid=0, i,j = 652,106  nnzA= 1024, nnzB=1024
tid=0, i,j = 855,75  nnzA= 1024, nnzB=1024
tid=0, i,j = 295,135  nnzA= 1024, nnzB=1024
tid=0, i,j = 953,192  nnzA= 1024, nnzB=1024
tid=0, i,j = 644,192  nnzA= 1024, nnzB=1024
tid=0, i,j = 111,189  nnzA= 1024, nnzB=1024
tid=0, i,j = 321,168  nnzA= 1024, nnzB=1024
tid=0, i,j = 1001,182  nnzA= 1024, nnzB=1024
tid=0, i,j = 15,171  nnzA= 1024, nnzB=1024
tid=0, i,j = 357,188  nnzA= 1024, nnzB=1024
tid=0, i,j = 997,187  nnzA= 1024, nnzB=1024
tid=0, i,j = 675,182  nnzA= 1024, nnzB=1024
tid=0, i,j = 450,185  nnzA= 1024, nnzB=1024
tid=0, i,j = 801,166  nnzA= 1024, nnzB=1024
tid=0, i,j = 290,156  nnzA= 1024, nnzB=1024
tid=0, i,j = 949,149  nnzA= 1024, nnzB=1024
tid=0, i,j = 614,176  nnzA= 1024, nnzB=1024
tid=0, i,j = 17,177  nnzA= 1024, nnzB=1024
tid=0, i,j = 879,167  nnzA= 1024, nnzB=1024
tid=0, i,j = 990,190  nnzA= 1024, nnzB=1024
tid=0, i,j = 143,184  nnzA= 1024, nnzB=1024
tid=0, i,j = 108,176  nnzA= 1024, nnzB=1024
tid=0, i,j = 253,131  nnzA= 1024, nnzB=1024
tid=0, i,j = 830,180  nnzA= 1024, nnzB=1024
tid=0, i,j = 834,137  nnzA= 1024, nnzB=1024
tid=0, i,j = 932,179  nnzA= 1024, nnzB=1024
tid=0, i,j = 288,138  nnzA= 1024, nnzB=1024
tid=0, i,j = 779,112  nnzA= 1024, nnzB=1024
tid=0, i,j = 519,114  nnzA= 1024, nnzB=1024
tid=0, i,j = 574,144  nnzA= 1024, nnzB=1024
tid=0, i,j = 612,170  nnzA= 1024, nnzB=1024
tid=0, i,j = 821,134  nnzA= 1024, nnzB=1024
tid=0, i,j = 905,111  nnzA= 1024, nnzB=1024
tid=0, i,j = 221,164  nnzA= 1024, nnzB=1024
tid=0, i,j = 910,198  nnzA= 1024, nnzB=1024
tid=0, i,j = 863,202  nnzA= 1024, nnzB=1024
tid=0, i,j = 779,186  nnzA= 1024, nnzB=1024
tid=0, i,j = 922,195  nnzA= 1024, nnzB=1024
tid=0, i,j = 692,183  nnzA= 1024, nnzB=1024
tid=0, i,j = 396,165  nnzA= 1024, nnzB=1024
tid=0, i,j = 859,197  nnzA= 1024, nnzB=1024
tid=0, i,j = 951,172  nnzA= 1024, nnzB=1024
tid=0, i,j = 0,174  nnzA= 1024, nnzB=1024
tid=0, i,j = 199,141  nnzA= 1024, nnzB=1024
tid=0, i,j = 225,142  nnzA= 1024, nnzB=1024
tid=0, i,j = 631,178  nnzA= 1024, nnzB=1024
tid=0, i,j = 945,139  nnzA= 1024, nnzB=1024
tid=0, i,j = 907,201  nnzA= 1024, nnzB=1024
tid=0, i,j = 901,169  nnzA= 1024, nnzB=1024
tid=0, i,j = 135,193  nnzA= 1024, nnzB=1024
tid=0, i,j = 56,221  nnzA= 1024, nnzB=1024
tid=0, i,j = 704,220  nnzA= 1024, nnzB=1024
tid=0, i,j = 551,221  nnzA= 1024, nnzB=1024
tid=0, i,j = 545,222  nnzA= 1024, nnzB=1024
tid=0, i,j = 935,225  nnzA= 1024, nnzB=1024
tid=0, i,j = 704,218  nnzA= 1024, nnzB=1024
tid=0, i,j = 721,224  nnzA= 1024, nnzB=1024
tid=0, i,j = 550,216  nnzA= 1024, nnzB=1024
tid=0, i,j = 551,231  nnzA= 1024, nnzB=1024
tid=0, i,j = 426,212  nnzA= 1024, nnzB=1024
tid=0, i,j = 614,204  nnzA= 1024, nnzB=1024
tid=0, i,j = 71,211  nnzA= 1024, nnzB=1024
tid=0, i,j = 382,230  nnzA= 1024, nnzB=1024
tid=0, i,j = 826,207  nnzA= 1024, nnzB=1024
tid=0, i,j = 520,234  nnzA= 1024, nnzB=1024
tid=0, i,j = 922,218  nnzA= 1024, nnzB=1024
tid=0, i,j = 268,215  nnzA= 1024, nnzB=1024
tid=0, i,j = 535,229  nnzA= 1024, nnzB=1024
tid=0, i,j = 808,209  nnzA= 1024, nnzB=1024
tid=0, i,j = 928,214  nnzA= 1024, nnzB=1024
tid=0, i,j = 781,176  nnzA= 1024, nnzB=1024
tid=0, i,j = 921,217  nnzA= 1024, nnzB=1024
tid=0, i,j = 1016,223  nnzA= 1024, nnzB=1024
tid=0, i,j = 137,194  nnzA= 1024, nnzB=1024
tid=0, i,j = 66,219  nnzA= 1024, nnzB=1024
tid=0, i,j = 188,176  nnzA= 1024, nnzB=1024
tid=0, i,j = 152,213  nnzA= 1024, nnzB=1024
tid=0, i,j = 865,203  nnzA= 1024, nnzB=1024
tid=0, i,j = 669,175  nnzA= 1024, nnzB=1024
tid=0, i,j = 570,233  nnzA= 1024, nnzB=1024
tid=0, i,j = 531,199  nnzA= 1024, nnzB=1024
tid=0, i,j = 727,226  nnzA= 1024, nnzB=1024
tid=0, i,j = 233,248  nnzA= 1024, nnzB=1024
tid=0, i,j = 197,252  nnzA= 1024, nnzB=1024
tid=0, i,j = 485,250  nnzA= 1024, nnzB=1024
tid=0, i,j = 708,251  nnzA= 1024, nnzB=1024
tid=0, i,j = 326,246  nnzA= 1024, nnzB=1024
tid=0, i,j = 238,254  nnzA= 1024, nnzB=1024
tid=0, i,j = 40,254  nnzA= 1024, nnzB=1024
tid=0, i,j = 1004,244  nnzA= 1024, nnzB=1024
tid=0, i,j = 500,241  nnzA= 1024, nnzB=1024
tid=0, i,j = 233,258  nnzA= 1024, nnzB=1024
tid=0, i,j = 221,236  nnzA= 1024, nnzB=1024
tid=0, i,j = 588,244  nnzA= 1024, nnzB=1024
tid=0, i,j = 368,262  nnzA= 1024, nnzB=1024
tid=0, i,j = 193,242  nnzA= 1024, nnzB=1024
tid=0, i,j = 115,247  nnzA= 1024, nnzB=1024
tid=0, i,j = 755,237  nnzA= 1024, nnzB=1024
tid=0, i,j = 796,257  nnzA= 1024, nnzB=1024
tid=0, i,j = 461,257  nnzA= 1024, nnzB=1024
tid=0, i,j = 82,239  nnzA= 1024, nnzB=1024
tid=0, i,j = 494,245  nnzA= 1024, nnzB=1024
tid=0, i,j = 147,247  nnzA= 1024, nnzB=1024
tid=0, i,j = 300,243  nnzA= 1024, nnzB=1024
tid=0, i,j = 931,211  nnzA= 1024, nnzB=1024
tid=0, i,j = 743,228  nnzA= 1024, nnzB=1024
tid=0, i,j = 485,253  nnzA= 1024, nnzB=1024
tid=0, i,j = 522,235  nnzA= 1024, nnzB=1024
tid=0, i,j = 621,242  nnzA= 1024, nnzB=1024
tid=0, i,j = 945,261  nnzA= 1024, nnzB=1024
tid=0, i,j = 895,255  nnzA= 1024, nnzB=1024
tid=0, i,j = 985,208  nnzA= 1024, nnzB=1024
tid=0, i,j = 897,232  nnzA= 1024, nnzB=1024
tid=0, i,j = 659,210  nnzA= 1024, nnzB=1024
tid=0, i,j = 179,282  nnzA= 1024, nnzB=1024
tid=0, i,j = 595,284  nnzA= 1024, nnzB=1024
tid=0, i,j = 1007,283  nnzA= 1024, nnzB=1024
tid=0, i,j = 877,279  nnzA= 1024, nnzB=1024
tid=0, i,j = 126,287  nnzA= 1024, nnzB=1024
tid=0, i,j = 333,276  nnzA= 1024, nnzB=1024
tid=0, i,j = 32,285  nnzA= 1024, nnzB=1024
tid=0, i,j = 394,287  nnzA= 1024, nnzB=1024
tid=0, i,j = 877,270  nnzA= 1024, nnzB=1024
tid=0, i,j = 466,294  nnzA= 1024, nnzB=1024
tid=0, i,j = 124,265  nnzA= 1024, nnzB=1024
tid=0, i,j = 979,274  nnzA= 1024, nnzB=1024
tid=0, i,j = 18,280  nnzA= 1024, nnzB=1024
tid=0, i,j = 352,266  nnzA= 1024, nnzB=1024
tid=0, i,j = 562,292  nnzA= 1024, nnzB=1024
tid=0, i,j = 944,271  nnzA= 1024, nnzB=1024
tid=0, i,j = 106,295  nnzA= 1024, nnzB=1024
tid=0, i,j = 114,256  nnzA= 1024, nnzB=1024
tid=0, i,j = 234,268  nnzA= 1024, nnzB=1024
tid=0, i,j = 449,281  nnzA= 1024, nnzB=1024
tid=0, i,j = 100,273  nnzA= 1024, nnzB=1024
tid=0, i,j = 594,291  nnzA= 1024, nnzB=1024
tid=0, i,j = 377,277  nnzA= 1024, nnzB=1024
tid=0, i,j = 755,264  nnzA= 1024, nnzB=1024
tid=0, i,j = 124,242  nnzA= 1024, nnzB=1024
tid=0, i,j = 37,286  nnzA= 1024, nnzB=1024
tid=0, i,j = 67,272  nnzA= 1024, nnzB=1024
tid=0, i,j = 388,240  nnzA= 1024, nnzB=1024
tid=0, i,j = 1,295  nnzA= 1024, nnzB=1024
tid=0, i,j = 848,288  nnzA= 1024, nnzB=1024
tid=0, i,j = 884,260  nnzA= 1024, nnzB=1024
tid=0, i,j = 964,238  nnzA= 1024, nnzB=1024
tid=0, i,j = 61,312  nnzA= 1024, nnzB=1024
tid=0, i,j = 298,315  nnzA= 1024, nnzB=1024
tid=0, i,j = 264,307  nnzA= 1024, nnzB=1024
tid=0, i,j = 758,313  nnzA= 1024, nnzB=1024
tid=0, i,j = 355,311  nnzA= 1024, nnzB=1024
tid=0, i,j = 328,309  nnzA= 1024, nnzB=1024
tid=0, i,j = 571,314  nnzA= 1024, nnzB=1024
tid=0, i,j = 741,315  nnzA= 1024, nnzB=1024
tid=0, i,j = 554,300  nnzA= 1024, nnzB=1024
tid=0, i,j = 622,305  nnzA= 1024, nnzB=1024
tid=0, i,j = 183,296  nnzA= 1024, nnzB=1024
tid=0, i,j = 245,296  nnzA= 1024, nnzB=1024
tid=0, i,j = 627,309  nnzA= 1024, nnzB=1024
tid=0, i,j = 126,319  nnzA= 1024, nnzB=1024
tid=0, i,j = 30,302  nnzA= 1024, nnzB=1024
tid=0, i,j = 595,318  nnzA= 1024, nnzB=1024
tid=0, i,j = 317,290  nnzA= 1024, nnzB=1024
tid=0, i,j = 1006,297  nnzA= 1024, nnzB=1024
tid=0, i,j = 235,322  nnzA= 1024, nnzB=1024
tid=0, i,j = 323,317  nnzA= 1024, nnzB=1024
tid=0, i,j = 109,296  nnzA= 1024, nnzB=1024
tid=0, i,j = 924,270  nnzA= 1024, nnzB=1024
tid=0, i,j = 357,310  nnzA= 1024, nnzB=1024
tid=0, i,j = 229,304  nnzA= 1024, nnzB=1024
tid=0, i,j = 177,315  nnzA= 1024, nnzB=1024
tid=0, i,j = 28,308  nnzA= 1024, nnzB=1024
tid=0, i,j = 645,303  nnzA= 1024, nnzB=1024
tid=0, i,j = 73,321  nnzA= 1024, nnzB=1024
tid=0, i,j = 177,316  nnzA= 1024, nnzB=1024
tid=0, i,j = 960,294  nnzA= 1024, nnzB=1024
tid=0, i,j = 400,269  nnzA= 1024, nnzB=1024
tid=0, i,j = 10,267  nnzA= 1024, nnzB=1024
tid=0, i,j = 680,339  nnzA= 1024, nnzB=1024
tid=0, i,j = 849,340  nnzA= 1024, nnzB=1024
tid=0, i,j = 775,336  nnzA= 1024, nnzB=1024
tid=0, i,j = 678,343  nnzA= 1024, nnzB=1024
tid=0, i,j = 695,334  nnzA= 1024, nnzB=1024
tid=0, i,j = 993,338  nnzA= 1024, nnzB=1024
tid=0, i,j = 384,344  nnzA= 1024, nnzB=1024
tid=0, i,j = 704,327  nnzA= 1024, nnzB=1024
tid=0, i,j = 36,341  nnzA= 1024, nnzB=1024
tid=0, i,j = 795,332  nnzA= 1024, nnzB=1024
tid=0, i,j = 651,323  nnzA= 1024, nnzB=1024
tid=0, i,j = 821,348  nnzA= 1024, nnzB=1024
tid=0, i,j = 808,336  nnzA= 1024, nnzB=1024
tid=0, i,j = 176,329  nnzA= 1024, nnzB=1024
tid=0, i,j = 549,324  nnzA= 1024, nnzB=1024
tid=0, i,j = 60,348  nnzA= 1024, nnzB=1024
tid=0, i,j = 308,316  nnzA= 1024, nnzB=1024
tid=0, i,j = 142,351  nnzA= 1024, nnzB=1024
tid=0, i,j = 487,325  nnzA= 1024, nnzB=1024
tid=0, i,j = 375,323  nnzA= 1024, nnzB=1024
tid=0, i,j = 996,347  nnzA= 1024, nnzB=1024
tid=0, i,j = 608,337  nnzA= 1024, nnzB=1024
tid=0, i,j = 774,301  nnzA= 1024, nnzB=1024
tid=0, i,j = 694,335  nnzA= 1024, nnzB=1024
tid=0, i,j = 965,330  nnzA= 1024, nnzB=1024
tid=0, i,j = 848,330  nnzA= 1024, nnzB=1024
tid=0, i,j = 723,342  nnzA= 1024, nnzB=1024
tid=0, i,j = 282,350  nnzA= 1024, nnzB=1024
tid=0, i,j = 680,344  nnzA= 1024, nnzB=1024
tid=0, i,j = 468,320  nnzA= 1024, nnzB=1024
tid=0, i,j = 912,297  nnzA= 1024, nnzB=1024
tid=0, i,j = 159,299  nnzA= 1024, nnzB=1024
tid=0, i,j = 270,370  nnzA= 1024, nnzB=1024
tid=0, i,j = 327,371  nnzA= 1024, nnzB=1024
tid=0, i,j = 669,374  nnzA= 1024, nnzB=1024
tid=0, i,j = 971,366  nnzA= 1024, nnzB=1024
tid=0, i,j = 990,365  nnzA= 1024, nnzB=1024
tid=0, i,j = 471,372  nnzA= 1024, nnzB=1024
tid=0, i,j = 679,360  nnzA= 1024, nnzB=1024
tid=0, i,j = 684,369  nnzA= 1024, nnzB=1024
tid=0, i,j = 629,364  nnzA= 1024, nnzB=1024
tid=0, i,j = 77,380  nnzA= 1024, nnzB=1024
tid=0, i,j = 992,375  nnzA= 1024, nnzB=1024
tid=0, i,j = 160,352  nnzA= 1024, nnzB=1024
tid=0, i,j = 536,353  nnzA= 1024, nnzB=1024
tid=0, i,j = 888,367  nnzA= 1024, nnzB=1024
tid=0, i,j = 989,361  nnzA= 1024, nnzB=1024
tid=0, i,j = 592,379  nnzA= 1024, nnzB=1024
tid=0, i,j = 75,345  nnzA= 1024, nnzB=1024
tid=0, i,j = 816,382  nnzA= 1024, nnzB=1024
tid=0, i,j = 340,356  nnzA= 1024, nnzB=1024
tid=0, i,j = 882,378  nnzA= 1024, nnzB=1024
tid=0, i,j = 587,368  nnzA= 1024, nnzB=1024
tid=0, i,j = 937,351  nnzA= 1024, nnzB=1024
tid=0, i,j = 142,328  nnzA= 1024, nnzB=1024
tid=0, i,j = 841,366  nnzA= 1024, nnzB=1024
tid=0, i,j = 88,373  nnzA= 1024, nnzB=1024
tid=0, i,j = 206,363  nnzA= 1024, nnzB=1024
tid=0, i,j = 816,362  nnzA= 1024, nnzB=1024
tid=0, i,j = 1012,381  nnzA= 1024, nnzB=1024
tid=0, i,j = 336,376  nnzA= 1024, nnzB=1024
tid=0, i,j = 649,326  nnzA= 1024, nnzB=1024
tid=0, i,j = 306,325  nnzA= 1024, nnzB=1024
tid=0, i,j = 804,349  nnzA= 1024, nnzB=1024
tid=0, i,j = 790,401  nnzA= 1024, nnzB=1024
tid=0, i,j = 320,402  nnzA= 1024, nnzB=1024
tid=0, i,j = 49,405  nnzA= 1024, nnzB=1024
tid=0, i,j = 246,398  nnzA= 1024, nnzB=1024
tid=0, i,j = 835,397  nnzA= 1024, nnzB=1024
tid=0, i,j = 40,403  nnzA= 1024, nnzB=1024
tid=0, i,j = 733,389  nnzA= 1024, nnzB=1024
tid=0, i,j = 382,400  nnzA= 1024, nnzB=1024
tid=0, i,j = 645,396  nnzA= 1024, nnzB=1024
tid=0, i,j = 949,412  nnzA= 1024, nnzB=1024
tid=0, i,j = 537,386  nnzA= 1024, nnzB=1024
tid=0, i,j = 670,385  nnzA= 1024, nnzB=1024
tid=0, i,j = 86,377  nnzA= 1024, nnzB=1024
tid=0, i,j = 59,391  nnzA= 1024, nnzB=1024
tid=0, i,j = 475,405  nnzA= 1024, nnzB=1024
tid=0, i,j = 643,411  nnzA= 1024, nnzB=1024
tid=0, i,j = 26,415  nnzA= 1024, nnzB=1024
tid=0, i,j = 494,388  nnzA= 1024, nnzB=1024
tid=0, i,j = 436,399  nnzA= 1024, nnzB=1024
tid=0, i,j = 754,410  nnzA= 1024, nnzB=1024
tid=0, i,j = 107,398  nnzA= 1024, nnzB=1024
tid=0, i,j = 711,383  nnzA= 1024, nnzB=1024
tid=0, i,j = 794,361  nnzA= 1024, nnzB=1024
tid=0, i,j = 641,404  nnzA= 1024, nnzB=1024
tid=0, i,j = 172,400  nnzA= 1024, nnzB=1024
tid=0, i,j = 692,394  nnzA= 1024, nnzB=1024
tid=0, i,j = 600,391  nnzA= 1024, nnzB=1024
tid=0, i,j = 678,358  nnzA= 1024, nnzB=1024
tid=0, i,j = 320,407  nnzA= 1024, nnzB=1024
tid=0, i,j = 991,414  nnzA= 1024, nnzB=1024
tid=0, i,j = 352,355  nnzA= 1024, nnzB=1024
tid=0, i,j = 643,380  nnzA= 1024, nnzB=1024
tid=0, i,j = 857,432  nnzA= 1024, nnzB=1024
tid=0, i,j = 604,434  nnzA= 1024, nnzB=1024
tid=0, i,j = 105,437  nnzA= 1024, nnzB=1024
tid=0, i,j = 377,426  nnzA= 1024, nnzB=1024
tid=0, i,j = 950,428  nnzA= 1024, nnzB=1024
tid=0, i,j = 152,435  nnzA= 1024, nnzB=1024
tid=0, i,j = 748,420  nnzA= 1024, nnzB=1024
tid=0, i,j = 51,431  nnzA= 1024, nnzB=1024
tid=0, i,j = 669,444  nnzA= 1024, nnzB=1024
tid=0, i,j = 263,425  nnzA= 1024, nnzB=1024
tid=0, i,j = 814,438  nnzA= 1024, nnzB=1024
tid=0, i,j = 160,418  nnzA= 1024, nnzB=1024
tid=0, i,j = 61,408  nnzA= 1024, nnzB=1024
tid=0, i,j = 366,417  nnzA= 1024, nnzB=1024
tid=0, i,j = 177,422  nnzA= 1024, nnzB=1024
tid=0, i,j = 753,443  nnzA= 1024, nnzB=1024
tid=0, i,j = 970,447  nnzA= 1024, nnzB=1024
tid=0, i,j = 149,427  nnzA= 1024, nnzB=1024
tid=0, i,j = 209,419  nnzA= 1024, nnzB=1024
tid=0, i,j = 575,416  nnzA= 1024, nnzB=1024
tid=0, i,j = 880,442  nnzA= 1024, nnzB=1024
tid=0, i,j = 551,390  nnzA= 1024, nnzB=1024
tid=0, i,j = 305,429  nnzA= 1024, nnzB=1024
tid=0, i,j = 356,436  nnzA= 1024, nnzB=1024
tid=0, i,j = 718,430  nnzA= 1024, nnzB=1024
tid=0, i,j = 542,424  nnzA= 1024, nnzB=1024
tid=0, i,j = 873,423  nnzA= 1024, nnzB=1024
tid=0, i,j = 328,389  nnzA= 1024, nnzB=1024
tid=0, i,j = 338,440  nnzA= 1024, nnzB=1024
tid=0, i,j = 347,387  nnzA= 1024, nnzB=1024
tid=0, i,j = 741,446  nnzA= 1024, nnzB=1024
tid=0, i,j = 94,413  nnzA= 1024, nnzB=1024
tid=0, i,j = 985,456  nnzA= 1024, nnzB=1024
tid=0, i,j = 868,452  nnzA= 1024, nnzB=1024
tid=0, i,j = 849,456  nnzA= 1024, nnzB=1024
tid=0, i,j = 835,449  nnzA= 1024, nnzB=1024
tid=0, i,j = 982,441  nnzA= 1024, nnzB=1024
tid=0, i,j = 415,454  nnzA= 1024, nnzB=1024
tid=0, i,j = 744,448  nnzA= 1024, nnzB=1024
tid=0, i,j = 218,457  nnzA= 1024, nnzB=1024
tid=0, i,j = 147,451  nnzA= 1024, nnzB=1024
tid=0, i,j = 614,421  nnzA= 1024, nnzB=1024
tid=0, i,j = 646,448  nnzA= 1024, nnzB=1024
tid=0, i,j = 668,454  nnzA= 1024, nnzB=1024
tid=0, i,j = 43,455  nnzA= 1024, nnzB=1024
tid=0, i,j = 285,419  nnzA= 1024, nnzB=1024
tid=0, i,j = 669,418  nnzA= 1024, nnzB=1024
tid=0, i,j = 952,445  nnzA= 1024, nnzB=1024
tid=0, i,j = 26,453  nnzA= 1024, nnzB=1024
tid=0, i,j = 1017,451  nnzA= 1024, nnzB=1024
tid=0, i,j = 579,450  nnzA= 1024, nnzB=1024
tid=0, i,j = 900,462  nnzA= 1024, nnzB=1024
tid=0, i,j = 917,461  nnzA= 1024, nnzB=1024
tid=0, i,j = 801,465  nnzA= 1024, nnzB=1024
tid=0, i,j = 316,463  nnzA= 1024, nnzB=1024
tid=0, i,j = 836,460  nnzA= 1024, nnzB=1024
tid=0, i,j = 889,470  nnzA= 1024, nnzB=1024
tid=0, i,j = 762,464  nnzA= 1024, nnzB=1024
tid=0, i,j = 673,466  nnzA= 1024, nnzB=1024
tid=0, i,j = 510,458  nnzA= 1024, nnzB=1024
tid=0, i,j = 849,461  nnzA= 1024, nnzB=1024
tid=0, i,j = 355,465  nnzA= 1024, nnzB=1024
tid=0, i,j = 112,467  nnzA= 1024, nnzB=1024
tid=0, i,j = 737,459  nnzA= 1024, nnzB=1024
tid=0, i,j = 288,468  nnzA= 1024, nnzB=1024
tid=0, i,j = 680,482  nnzA= 1024, nnzB=1024
tid=0, i,j = 802,489  nnzA= 1024, nnzB=1024
tid=0, i,j = 487,474  nnzA= 1024, nnzB=1024
tid=0, i,j = 194,487  nnzA= 1024, nnzB=1024
tid=0, i,j = 811,490  nnzA= 1024, nnzB=1024
tid=0, i,j = 650,471  nnzA= 1024, nnzB=1024
tid=0, i,j = 44,476  nnzA= 1024, nnzB=1024
tid=0, i,j = 667,480  nnzA= 1024, nnzB=1024
tid=0, i,j = 517,483  nnzA= 1024, nnzB=1024
tid=0, i,j = 382,475  nnzA= 1024, nnzB=1024
tid=0, i,j = 1015,486  nnzA= 1024, nnzB=1024
tid=0, i,j = 342,477  nnzA= 1024, nnzB=1024
tid=0, i,j = 274,485  nnzA= 1024, nnzB=1024
tid=0, i,j = 786,478  nnzA= 1024, nnzB=1024
tid=0, i,j = 127,473  nnzA= 1024, nnzB=1024
tid=0, i,j = 961,484  nnzA= 1024, nnzB=1024
tid=0, i,j = 558,481  nnzA= 1024, nnzB=1024
tid=0, i,j = 121,473  nnzA= 1024, nnzB=1024
tid=0, i,j = 319,491  nnzA= 1024, nnzB=1024
tid=0, i,j = 377,492  nnzA= 1024, nnzB=1024
tid=0, i,j = 1013,521  nnzA= 1024, nnzB=1024
tid=0, i,j = 52,526  nnzA= 1024, nnzB=1024
tid=0, i,j = 362,525  nnzA= 1024, nnzB=1024
tid=0, i,j = 284,522  nnzA= 1024, nnzB=1024
tid=0, i,j = 61,527  nnzA= 1024, nnzB=1024
tid=0, i,j = 194,498  nnzA= 1024, nnzB=1024
tid=0, i,j = 809,495  nnzA= 1024, nnzB=1024
tid=0, i,j = 704,501  nnzA= 1024, nnzB=1024
tid=0, i,j = 643,507  nnzA= 1024, nnzB=1024
tid=0, i,j = 510,504  nnzA= 1024, nnzB=1024
tid=0, i,j = 404,514  nnzA= 1024, nnzB=1024
tid=0, i,j = 267,496  nnzA= 1024, nnzB=1024
tid=0, i,j = 271,513  nnzA= 1024, nnzB=1024
tid=0, i,j = 84,500  nnzA= 1024, nnzB=1024
tid=0, i,j = 270,520  nnzA= 1024, nnzB=1024
tid=0, i,j = 432,494  nnzA= 1024, nnzB=1024
tid=0, i,j = 945,524  nnzA= 1024, nnzB=1024
tid=0, i,j = 369,517  nnzA= 1024, nnzB=1024
tid=0, i,j = 892,512  nnzA= 1024, nnzB=1024
tid=0, i,j = 887,504  nnzA= 1024, nnzB=1024
tid=0, i,j = 519,503  nnzA= 1024, nnzB=1024
tid=0, i,j = 952,499  nnzA= 1024, nnzB=1024
tid=0, i,j = 293,518  nnzA= 1024, nnzB=1024
tid=0, i,j = 902,496  nnzA= 1024, nnzB=1024
tid=0, i,j = 758,515  nnzA= 1024, nnzB=1024
tid=0, i,j = 632,523  nnzA= 1024, nnzB=1024
tid=0, i,j = 574,505  nnzA= 1024, nnzB=1024
tid=0, i,j = 786,519  nnzA= 1024, nnzB=1024
tid=0, i,j = 94,525  nnzA= 1024, nnzB=1024
tid=0, i,j = 449,508  nnzA= 1024, nnzB=1024
tid=0, i,j = 294,528  nnzA= 1024, nnzB=1024
tid=0, i,j = 505,534  nnzA= 1024, nnzB=1024
tid=0, i,j = 112,530  nnzA= 1024, nnzB=1024
tid=0, i,j = 137,542  nnzA= 1024, nnzB=1024
tid=0, i,j = 776,535  nnzA= 1024, nnzB=1024
tid=0, i,j = 767,547  nnzA= 1024, nnzB=1024
tid=0, i,j = 500,536  nnzA= 1024, nnzB=1024
tid=0, i,j = 391,553  nnzA= 1024, nnzB=1024
tid=0, i,j = 792,560  nnzA= 1024, nnzB=1024
tid=0, i,j = 910,557  nnzA= 1024, nnzB=1024
tid=0, i,j = 908,531  nnzA= 1024, nnzB=1024
tid=0, i,j = 492,538  nnzA= 1024, nnzB=1024
tid=0, i,j = 927,550  nnzA= 1024, nnzB=1024
tid=0, i,j = 710,552  nnzA= 1024, nnzB=1024
tid=0, i,j = 552,558  nnzA= 1024, nnzB=1024
tid=0, i,j = 10,555  nnzA= 1024, nnzB=1024
tid=0, i,j = 998,529  nnzA= 1024, nnzB=1024
tid=0, i,j = 912,547  nnzA= 1024, nnzB=1024
tid=0, i,j = 145,529  nnzA= 1024, nnzB=1024
tid=0, i,j = 861,538  nnzA= 1024, nnzB=1024
tid=0, i,j = 660,535  nnzA= 1024, nnzB=1024
tid=0, i,j = 213,546  nnzA= 1024, nnzB=1024
tid=0, i,j = 799,537  nnzA= 1024, nnzB=1024
tid=0, i,j = 46,548  nnzA= 1024, nnzB=1024
tid=0, i,j = 597,561  nnzA= 1024, nnzB=1024
tid=0, i,j = 602,549  nnzA= 1024, nnzB=1024
tid=0, i,j = 245,540  nnzA= 1024, nnzB=1024
tid=0, i,j = 1018,547  nnzA= 1024, nnzB=1024
tid=0, i,j = 697,548  nnzA= 1024, nnzB=1024
tid=0, i,j = 26,556  nnzA= 1024, nnzB=1024
tid=0, i,j = 674,533  nnzA= 1024, nnzB=1024
tid=0, i,j = 351,554  nnzA= 1024, nnzB=1024
tid=0, i,j = 658,545  nnzA= 1024, nnzB=1024
tid=0, i,j = 490,565  nnzA= 1024, nnzB=1024
tid=0, i,j = 607,566  nnzA= 1024, nnzB=1024
tid=0, i,j = 872,569  nnzA= 1024, nnzB=1024
tid=0, i,j = 877,563  nnzA= 1024, nnzB=1024
tid=0, i,j = 603,574  nnzA= 1024, nnzB=1024
tid=0, i,j = 182,580  nnzA= 1024, nnzB=1024
tid=0, i,j = 271,571  nnzA= 1024, nnzB=1024
tid=0, i,j = 862,562  nnzA= 1024, nnzB=1024
tid=0, i,j = 445,581  nnzA= 1024, nnzB=1024
tid=0, i,j = 310,564  nnzA= 1024, nnzB=1024
tid=0, i,j = 914,588  nnzA= 1024, nnzB=1024
tid=0, i,j = 802,590  nnzA= 1024, nnzB=1024
tid=0, i,j = 1016,589  nnzA= 1024, nnzB=1024
tid=0, i,j = 182,562  nnzA= 1024, nnzB=1024
tid=0, i,j = 254,587  nnzA= 1024, nnzB=1024
tid=0, i,j = 919,571  nnzA= 1024, nnzB=1024
tid=0, i,j = 564,566  nnzA= 1024, nnzB=1024
tid=0, i,j = 630,572  nnzA= 1024, nnzB=1024
tid=0, i,j = 118,583  nnzA= 1024, nnzB=1024
tid=0, i,j = 274,579  nnzA= 1024, nnzB=1024
tid=0, i,j = 609,564  nnzA= 1024, nnzB=1024
tid=0, i,j = 433,585  nnzA= 1024, nnzB=1024
tid=0, i,j = 95,590  nnzA= 1024, nnzB=1024
tid=0, i,j = 399,584  nnzA= 1024, nnzB=1024
tid=0, i,j = 465,570  nnzA= 1024, nnzB=1024
tid=0, i,j = 177,582  nnzA= 1024, nnzB=1024
tid=0, i,j = 256,576  nnzA= 1024, nnzB=1024
tid=0, i,j = 478,601  nnzA= 1024, nnzB=1024
tid=0, i,j = 127,599  nnzA= 1024, nnzB=1024
tid=0, i,j = 76,605  nnzA= 1024, nnzB=1024
tid=0, i,j = 832,608  nnzA= 1024, nnzB=1024
tid=0, i,j = 527,592  nnzA= 1024, nnzB=1024
tid=0, i,j = 339,600  nnzA= 1024, nnzB=1024
tid=0, i,j = 41,621  nnzA= 1024, nnzB=1024
tid=0, i,j = 287,609  nnzA= 1024, nnzB=1024
tid=0, i,j = 996,619  nnzA= 1024, nnzB=1024
tid=0, i,j = 978,591  nnzA= 1024, nnzB=1024
tid=0, i,j = 759,603  nnzA= 1024, nnzB=1024
tid=0, i,j = 79,623  nnzA= 1024, nnzB=1024
tid=0, i,j = 398,613  nnzA= 1024, nnzB=1024
tid=0, i,j = 787,595  nnzA= 1024, nnzB=1024
tid=0, i,j = 143,593  nnzA= 1024, nnzB=1024
tid=0, i,j = 337,620  nnzA= 1024, nnzB=1024
tid=0, i,j = 788,598  nnzA= 1024, nnzB=1024
tid=0, i,j = 5,620  nnzA= 1024, nnzB=1024
tid=0, i,j = 270,604  nnzA= 1024, nnzB=1024
tid=0, i,j = 386,614  nnzA= 1024, nnzB=1024
tid=0, i,j = 430,594  nnzA= 1024, nnzB=1024
tid=0, i,j = 218,602  nnzA= 1024, nnzB=1024
tid=0, i,j = 794,610  nnzA= 1024, nnzB=1024
tid=0, i,j = 759,611  nnzA= 1024, nnzB=1024
tid=0, i,j = 44,623  nnzA= 1024, nnzB=1024
tid=0, i,j = 677,596  nnzA= 1024, nnzB=1024
tid=0, i,j = 30,617  nnzA= 1024, nnzB=1024
tid=0, i,j = 115,615  nnzA= 1024, nnzB=1024
tid=0, i,j = 1006,612  nnzA= 1024, nnzB=1024
tid=0, i,j = 928,616  nnzA= 1024, nnzB=1024
tid=0, i,j = 361,618  nnzA= 1024, nnzB=1024
tid=0, i,j = 930,606  nnzA= 1024, nnzB=1024
tid=0, i,j = 341,630  nnzA= 1024, nnzB=1024
tid=0, i,j = 882,629  nnzA= 1024, nnzB=1024
tid=0, i,j = 617,636  nnzA= 1024, nnzB=1024
tid=0, i,j = 912,634  nnzA= 1024, nnzB=1024
tid=0, i,j = 396,628  nnzA= 1024, nnzB=1024
tid=0, i,j = 285,637  nnzA= 1024, nnzB=1024
tid=0, i,j = 19,624  nnzA= 1024, nnzB=1024
tid=0, i,j = 242,624  nnzA= 1024, nnzB=1024
tid=0, i,j = 614,649  nnzA= 1024, nnzB=1024
tid=0, i,j = 333,653  nnzA= 1024, nnzB=1024
tid=0, i,j = 973,652  nnzA= 1024, nnzB=1024
tid=0, i,j = 683,625  nnzA= 1024, nnzB=1024
tid=0, i,j = 281,651  nnzA= 1024, nnzB=1024
tid=0, i,j = 73,632  nnzA= 1024, nnzB=1024
tid=0, i,j = 966,623  nnzA= 1024, nnzB=1024
tid=0, i,j = 585,631  nnzA= 1024, nnzB=1024
tid=0, i,j = 49,631  nnzA= 1024, nnzB=1024
tid=0, i,j = 957,650  nnzA= 1024, nnzB=1024
tid=0, i,j = 113,638  nnzA= 1024, nnzB=1024
tid=0, i,j = 361,627  nnzA= 1024, nnzB=1024
tid=0, i,j = 616,639  nnzA= 1024, nnzB=1024
tid=0, i,j = 716,637  nnzA= 1024, nnzB=1024
tid=0, i,j = 837,640  nnzA= 1024, nnzB=1024
tid=0, i,j = 524,624  nnzA= 1024, nnzB=1024
tid=0, i,j = 60,653  nnzA= 1024, nnzB=1024
tid=0, i,j = 934,643  nnzA= 1024, nnzB=1024
tid=0, i,j = 457,641  nnzA= 1024, nnzB=1024
tid=0, i,j = 51,626  nnzA= 1024, nnzB=1024
tid=0, i,j = 783,647  nnzA= 1024, nnzB=1024
tid=0, i,j = 367,638  nnzA= 1024, nnzB=1024
tid=0, i,j = 195,648  nnzA= 1024, nnzB=1024
tid=0, i,j = 882,635  nnzA= 1024, nnzB=1024
tid=0, i,j = 158,664  nnzA= 1024, nnzB=1024
tid=0, i,j = 77,665  nnzA= 1024, nnzB=1024
tid=0, i,j = 503,666  nnzA= 1024, nnzB=1024
tid=0, i,j = 141,671  nnzA= 1024, nnzB=1024
tid=0, i,j = 819,672  nnzA= 1024, nnzB=1024
tid=0, i,j = 36,674  nnzA= 1024, nnzB=1024
tid=0, i,j = 910,655  nnzA= 1024, nnzB=1024
tid=0, i,j = 110,683  nnzA= 1024, nnzB=1024
tid=0, i,j = 699,681  nnzA= 1024, nnzB=1024
tid=0, i,j = 202,686  nnzA= 1024, nnzB=1024
tid=0, i,j = 349,656  nnzA= 1024, nnzB=1024
tid=0, i,j = 300,669  nnzA= 1024, nnzB=1024
tid=0, i,j = 591,660  nnzA= 1024, nnzB=1024
tid=0, i,j = 951,667  nnzA= 1024, nnzB=1024
tid=0, i,j = 907,684  nnzA= 1024, nnzB=1024
tid=0, i,j = 17,685  nnzA= 1024, nnzB=1024
tid=0, i,j = 454,675  nnzA= 1024, nnzB=1024
tid=0, i,j = 647,677  nnzA= 1024, nnzB=1024
tid=0, i,j = 819,674  nnzA= 1024, nnzB=1024
tid=0, i,j = 767,663  nnzA= 1024, nnzB=1024
tid=0, i,j = 605,654  nnzA= 1024, nnzB=1024
tid=0, i,j = 365,668  nnzA= 1024, nnzB=1024
tid=0, i,j = 117,682  nnzA= 1024, nnzB=1024
tid=0, i,j = 17,659  nnzA= 1024, nnzB=1024
tid=0, i,j = 512,661  nnzA= 1024, nnzB=1024
tid=0, i,j = 289,677  nnzA= 1024, nnzB=1024
tid=0, i,j = 899,679  nnzA= 1024, nnzB=1024
tid=0, i,j = 802,678  nnzA= 1024, nnzB=1024
tid=0, i,j = 398,680  nnzA= 1024, nnzB=1024
tid=0, i,j = 565,671  nnzA= 1024, nnzB=1024
tid=0, i,j = 390,681  nnzA= 1024, nnzB=1024
tid=0, i,j = 242,676  nnzA= 1024, nnzB=1024
tid=0, i,j = 102,696  nnzA= 1024, nnzB=1024
tid=0, i,j = 777,702  nnzA= 1024, nnzB=1024
tid=0, i,j = 579,705  nnzA= 1024, nnzB=1024
tid=0, i,j = 287,688  nnzA= 1024, nnzB=1024
tid=0, i,j = 702,695  nnzA= 1024, nnzB=1024
tid=0, i,j = 631,698  nnzA= 1024, nnzB=1024
tid=0, i,j = 374,704  nnzA= 1024, nnzB=1024
tid=0, i,j = 323,701  nnzA= 1024, nnzB=1024
tid=0, i,j = 502,689  nnzA= 1024, nnzB=1024
tid=0, i,j = 152,699  nnzA= 1024, nnzB=1024
tid=0, i,j = 392,691  nnzA= 1024, nnzB=1024
tid=0, i,j = 172,715  nnzA= 1024, nnzB=1024
tid=0, i,j = 462,711  nnzA= 1024, nnzB=1024
tid=0, i,j = 378,694  nnzA= 1024, nnzB=1024
tid=0, i,j = 511,706  nnzA= 1024, nnzB=1024
tid=0, i,j = 299,690  nnzA= 1024, nnzB=1024
tid=0, i,j = 872,709  nnzA= 1024, nnzB=1024
tid=0, i,j = 45,687  nnzA= 1024, nnzB=1024
tid=0, i,j = 76,707  nnzA= 1024, nnzB=1024
tid=0, i,j = 475,714  nnzA= 1024, nnzB=1024
tid=0, i,j = 600,692  nnzA= 1024, nnzB=1024
tid=0, i,j = 840,700  nnzA= 1024, nnzB=1024
tid=0, i,j = 293,710  nnzA= 1024, nnzB=1024
tid=0, i,j = 107,710  nnzA= 1024, nnzB=1024
tid=0, i,j = 925,708  nnzA= 1024, nnzB=1024
tid=0, i,j = 873,709  nnzA= 1024, nnzB=1024
tid=0, i,j = 259,708  nnzA= 1024, nnzB=1024
tid=0, i,j = 132,703  nnzA= 1024, nnzB=1024
tid=0, i,j = 210,711  nnzA= 1024, nnzB=1024
tid=0, i,j = 480,724  nnzA= 1024, nnzB=1024
tid=0, i,j = 797,728  nnzA= 1024, nnzB=1024
tid=0, i,j = 697,716  nnzA= 1024, nnzB=1024
tid=0, i,j = 337,726  nnzA= 1024, nnzB=1024
tid=0, i,j = 485,742  nnzA= 1024, nnzB=1024
tid=0, i,j = 201,720  nnzA= 1024, nnzB=1024
tid=0, i,j = 848,718  nnzA= 1024, nnzB=1024
tid=0, i,j = 912,737  nnzA= 1024, nnzB=1024
tid=0, i,j = 574,734  nnzA= 1024, nnzB=1024
tid=0, i,j = 177,727  nnzA= 1024, nnzB=1024
tid=0, i,j = 751,715  nnzA= 1024, nnzB=1024
tid=0, i,j = 910,732  nnzA= 1024, nnzB=1024
tid=0, i,j = 146,737  nnzA= 1024, nnzB=1024
tid=0, i,j = 763,733  nnzA= 1024, nnzB=1024
tid=0, i,j = 630,741  nnzA= 1024, nnzB=1024
tid=0, i,j = 1023,738  nnzA= 1024, nnzB=1024
tid=0, i,j = 806,721  nnzA= 1024, nnzB=1024
tid=0, i,j = 335,739  nnzA= 1024, nnzB=1024
tid=0, i,j = 596,740  nnzA= 1024, nnzB=1024
tid=0, i,j = 934,722  nnzA= 1024, nnzB=1024
tid=0, i,j = 725,720  nnzA= 1024, nnzB=1024
tid=0, i,j = 675,723  nnzA= 1024, nnzB=1024
tid=0, i,j = 884,729  nnzA= 1024, nnzB=1024
tid=0, i,j = 331,719  nnzA= 1024, nnzB=1024
tid=0, i,j = 268,735  nnzA= 1024, nnzB=1024
tid=0, i,j = 275,731  nnzA= 1024, nnzB=1024
tid=0, i,j = 365,741  nnzA= 1024, nnzB=1024
tid=0, i,j = 620,717  nnzA= 1024, nnzB=1024
tid=0, i,j = 234,717  nnzA= 1024, nnzB=1024
tid=0, i,j = 415,722  nnzA= 1024, nnzB=1024
tid=0, i,j = 115,736  nnzA= 1024, nnzB=1024
tid=0, i,j = 767,730  nnzA= 1024, nnzB=1024
tid=0, i,j = 621,745  nnzA= 1024, nnzB=1024
tid=0, i,j = 56,773  nnzA= 1024, nnzB=1024
tid=0, i,j = 936,766  nnzA= 1024, nnzB=1024
tid=0, i,j = 91,747  nnzA= 1024, nnzB=1024
tid=0, i,j = 472,753  nnzA= 1024, nnzB=1024
tid=0, i,j = 633,756  nnzA= 1024, nnzB=1024
tid=0, i,j = 592,753  nnzA= 1024, nnzB=1024
tid=0, i,j = 59,749  nnzA= 1024, nnzB=1024
tid=0, i,j = 954,763  nnzA= 1024, nnzB=1024
tid=0, i,j = 915,766  nnzA= 1024, nnzB=1024
tid=0, i,j = 381,760  nnzA= 1024, nnzB=1024
tid=0, i,j = 1007,754  nnzA= 1024, nnzB=1024
tid=0, i,j = 487,771  nnzA= 1024, nnzB=1024
tid=0, i,j = 962,762  nnzA= 1024, nnzB=1024
tid=0, i,j = 742,752  nnzA= 1024, nnzB=1024
tid=0, i,j = 186,743  nnzA= 1024, nnzB=1024
tid=0, i,j = 745,752  nnzA= 1024, nnzB=1024
tid=0, i,j = 847,758  nnzA= 1024, nnzB=1024
tid=0, i,j = 372,767  nnzA= 1024, nnzB=1024
tid=0, i,j = 755,749  nnzA= 1024, nnzB=1024
tid=0, i,j = 886,748  nnzA= 1024, nnzB=1024
tid=0, i,j = 348,751  nnzA= 1024, nnzB=1024
tid=0, i,j = 340,760  nnzA= 1024, nnzB=1024
tid=0, i,j = 307,768  nnzA= 1024, nnzB=1024
tid=0, i,j = 313,752  nnzA= 1024, nnzB=1024
tid=0, i,j = 645,745  nnzA= 1024, nnzB=1024
tid=0, i,j = 103,771  nnzA= 1024, nnzB=1024
tid=0, i,j = 458,770  nnzA= 1024, nnzB=1024
tid=0, i,j = 392,764  nnzA= 1024, nnzB=1024
tid=0, i,j = 913,764  nnzA= 1024, nnzB=1024
tid=0, i,j = 500,759  nnzA= 1024, nnzB=1024
tid=0, i,j = 273,746  nnzA= 1024, nnzB=1024
tid=0, i,j = 115,775  nnzA= 1024, nnzB=1024
tid=0, i,j = 1022,804  nnzA= 1024, nnzB=1024
tid=0, i,j = 462,786  nnzA= 1024, nnzB=1024
tid=0, i,j = 273,788  nnzA= 1024, nnzB=1024
tid=0, i,j = 816,785  nnzA= 1024, nnzB=1024
tid=0, i,j = 256,780  nnzA= 1024, nnzB=1024
tid=0, i,j = 880,797  nnzA= 1024, nnzB=1024
tid=0, i,j = 893,778  nnzA= 1024, nnzB=1024
tid=0, i,j = 876,787  nnzA= 1024, nnzB=1024
tid=0, i,j = 614,783  nnzA= 1024, nnzB=1024
tid=0, i,j = 896,803  nnzA= 1024, nnzB=1024
tid=0, i,j = 809,793  nnzA= 1024, nnzB=1024
tid=0, i,j = 347,796  nnzA= 1024, nnzB=1024
tid=0, i,j = 899,781  nnzA= 1024, nnzB=1024
tid=0, i,j = 636,792  nnzA= 1024, nnzB=1024
tid=0, i,j = 54,784  nnzA= 1024, nnzB=1024
tid=0, i,j = 696,789  nnzA= 1024, nnzB=1024
tid=0, i,j = 955,792  nnzA= 1024, nnzB=1024
tid=0, i,j = 793,791  nnzA= 1024, nnzB=1024
tid=0, i,j = 773,774  nnzA= 1024, nnzB=1024
tid=0, i,j = 802,798  nnzA= 1024, nnzB=1024
tid=0, i,j = 644,779  nnzA= 1024, nnzB=1024
tid=0, i,j = 537,776  nnzA= 1024, nnzB=1024
tid=0, i,j = 294,799  nnzA= 1024, nnzB=1024
tid=0, i,j = 392,777  nnzA= 1024, nnzB=1024
tid=0, i,j = 399,782  nnzA= 1024, nnzB=1024
tid=0, i,j = 130,801  nnzA= 1024, nnzB=1024
tid=0, i,j = 892,782  nnzA= 1024, nnzB=1024
tid=0, i,j = 986,794  nnzA= 1024, nnzB=1024
tid=0, i,j = 471,790  nnzA= 1024, nnzB=1024
tid=0, i,j = 970,800  nnzA= 1024, nnzB=1024
tid=0, i,j = 656,795  nnzA= 1024, nnzB=1024
tid=0, i,j = 479,805  nnzA= 1024, nnzB=1024
tid=0, i,j = 985,818  nnzA= 1024, nnzB=1024
tid=0, i,j = 430,817  nnzA= 1024, nnzB=1024
tid=0, i,j = 115,835  nnzA= 1024, nnzB=1024
tid=0, i,j = 839,821  nnzA= 1024, nnzB=1024
tid=0, i,j = 982,831  nnzA= 1024, nnzB=1024
tid=0, i,j = 646,810  nnzA= 1024, nnzB=1024
tid=0, i,j = 408,815  nnzA= 1024, nnzB=1024
tid=0, i,j = 719,809  nnzA= 1024, nnzB=1024
tid=0, i,j = 547,811  nnzA= 1024, nnzB=1024
tid=0, i,j = 625,827  nnzA= 1024, nnzB=1024
tid=0, i,j = 688,819  nnzA= 1024, nnzB=1024
tid=0, i,j = 915,830  nnzA= 1024, nnzB=1024
tid=0, i,j = 295,834  nnzA= 1024, nnzB=1024
tid=0, i,j = 737,809  nnzA= 1024, nnzB=1024
tid=0, i,j = 902,816  nnzA= 1024, nnzB=1024
tid=0, i,j = 1003,832  nnzA= 1024, nnzB=1024
tid=0, i,j = 747,822  nnzA= 1024, nnzB=1024
tid=0, i,j = 406,825  nnzA= 1024, nnzB=1024
tid=0, i,j = 814,826  nnzA= 1024, nnzB=1024
tid=0, i,j = 889,806  nnzA= 1024, nnzB=1024
tid=0, i,j = 362,833  nnzA= 1024, nnzB=1024
tid=0, i,j = 886,824  nnzA= 1024, nnzB=1024
tid=0, i,j = 375,812  nnzA= 1024, nnzB=1024
tid=0, i,j = 32,805  nnzA= 1024, nnzB=1024
tid=0, i,j = 504,807  nnzA= 1024, nnzB=1024
tid=0, i,j = 200,813  nnzA= 1024, nnzB=1024
tid=0, i,j = 136,834  nnzA= 1024, nnzB=1024
tid=0, i,j = 39,823  nnzA= 1024, nnzB=1024
tid=0, i,j = 999,833  nnzA= 1024, nnzB=1024
tid=0, i,j = 407,828  nnzA= 1024, nnzB=1024
tid=0, i,j = 511,829  nnzA= 1024, nnzB=1024
tid=0, i,j = 565,837  nnzA= 1024, nnzB=1024
tid=0, i,j = 483,848  nnzA= 1024, nnzB=1024
tid=0, i,j = 741,847  nnzA= 1024, nnzB=1024
tid=0, i,j = 302,850  nnzA= 1024, nnzB=1024
tid=0, i,j = 972,865  nnzA= 1024, nnzB=1024
tid=0, i,j = 994,858  nnzA= 1024, nnzB=1024
tid=0, i,j = 636,841  nnzA= 1024, nnzB=1024
tid=0, i,j = 781,858  nnzA= 1024, nnzB=1024
tid=0, i,j = 694,845  nnzA= 1024, nnzB=1024
tid=0, i,j = 136,842  nnzA= 1024, nnzB=1024
tid=0, i,j = 159,840  nnzA= 1024, nnzB=1024
tid=0, i,j = 464,849  nnzA= 1024, nnzB=1024
tid=0, i,j = 1014,856  nnzA= 1024, nnzB=1024
tid=0, i,j = 1022,864  nnzA= 1024, nnzB=1024
tid=0, i,j = 103,841  nnzA= 1024, nnzB=1024
tid=0, i,j = 533,846  nnzA= 1024, nnzB=1024
tid=0, i,j = 106,855  nnzA= 1024, nnzB=1024
tid=0, i,j = 529,852  nnzA= 1024, nnzB=1024
tid=0, i,j = 716,859  nnzA= 1024, nnzB=1024
tid=0, i,j = 567,851  nnzA= 1024, nnzB=1024
tid=0, i,j = 508,859  nnzA= 1024, nnzB=1024
tid=0, i,j = 541,839  nnzA= 1024, nnzB=1024
tid=0, i,j = 623,853  nnzA= 1024, nnzB=1024
tid=0, i,j = 218,836  nnzA= 1024, nnzB=1024
tid=0, i,j = 524,843  nnzA= 1024, nnzB=1024
tid=0, i,j = 21,863  nnzA= 1024, nnzB=1024
tid=0, i,j = 114,844  nnzA= 1024, nnzB=1024
tid=0, i,j = 711,839  nnzA= 1024, nnzB=1024
tid=0, i,j = 650,857  nnzA= 1024, nnzB=1024
tid=0, i,j = 150,852  nnzA= 1024, nnzB=1024
tid=0, i,j = 636,862  nnzA= 1024, nnzB=1024
tid=0, i,j = 151,857  nnzA= 1024, nnzB=1024
tid=0, i,j = 48,867  nnzA= 1024, nnzB=1024
tid=0, i,j = 990,877  nnzA= 1024, nnzB=1024
tid=0, i,j = 775,872  nnzA= 1024, nnzB=1024
tid=0, i,j = 608,882  nnzA= 1024, nnzB=1024
tid=0, i,j = 176,880  nnzA= 1024, nnzB=1024
tid=0, i,j = 687,900  nnzA= 1024, nnzB=1024
tid=0, i,j = 653,892  nnzA= 1024, nnzB=1024
tid=0, i,j = 357,876  nnzA= 1024, nnzB=1024
tid=0, i,j = 173,873  nnzA= 1024, nnzB=1024
tid=0, i,j = 679,891  nnzA= 1024, nnzB=1024
tid=0, i,j = 506,870  nnzA= 1024, nnzB=1024
tid=0, i,j = 453,871  nnzA= 1024, nnzB=1024
tid=0, i,j = 42,897  nnzA= 1024, nnzB=1024
tid=0, i,j = 943,888  nnzA= 1024, nnzB=1024
tid=0, i,j = 23,881  nnzA= 1024, nnzB=1024
tid=0, i,j = 37,895  nnzA= 1024, nnzB=1024
tid=0, i,j = 110,888  nnzA= 1024, nnzB=1024
tid=0, i,j = 722,877  nnzA= 1024, nnzB=1024
tid=0, i,j = 929,883  nnzA= 1024, nnzB=1024
tid=0, i,j = 687,885  nnzA= 1024, nnzB=1024
tid=0, i,j = 487,887  nnzA= 1024, nnzB=1024
tid=0, i,j = 97,866  nnzA= 1024, nnzB=1024
tid=0, i,j = 485,874  nnzA= 1024, nnzB=1024
tid=0, i,j = 33,894  nnzA= 1024, nnzB=1024
tid=0, i,j = 390,896  nnzA= 1024, nnzB=1024
tid=0, i,j = 303,868  nnzA= 1024, nnzB=1024
tid=0, i,j = 168,875  nnzA= 1024, nnzB=1024
tid=0, i,j = 364,869  nnzA= 1024, nnzB=1024
tid=0, i,j = 628,890  nnzA= 1024, nnzB=1024
tid=0, i,j = 695,895  nnzA= 1024, nnzB=1024
tid=0, i,j = 892,889  nnzA= 1024, nnzB=1024
tid=0, i,j = 643,884  nnzA= 1024, nnzB=1024
tid=0, i,j = 605,901  nnzA= 1024, nnzB=1024
tid=0, i,j = 366,915  nnzA= 1024, nnzB=1024
tid=0, i,j = 823,916  nnzA= 1024, nnzB=1024
tid=0, i,j = 479,906  nnzA= 1024, nnzB=1024
tid=0, i,j = 502,915  nnzA= 1024, nnzB=1024
tid=0, i,j = 548,911  nnzA= 1024, nnzB=1024
tid=0, i,j = 496,939  nnzA= 1024, nnzB=1024
tid=0, i,j = 13,930  nnzA= 1024, nnzB=1024
tid=0, i,j = 479,931  nnzA= 1024, nnzB=1024
tid=0, i,j = 674,907  nnzA= 1024, nnzB=1024
tid=0, i,j = 808,904  nnzA= 1024, nnzB=1024
tid=0, i,j = 795,905  nnzA= 1024, nnzB=1024
tid=0, i,j = 685,925  nnzA= 1024, nnzB=1024
tid=0, i,j = 165,934  nnzA= 1024, nnzB=1024
tid=0, i,j = 924,914  nnzA= 1024, nnzB=1024
tid=0, i,j = 216,923  nnzA= 1024, nnzB=1024
tid=0, i,j = 215,938  nnzA= 1024, nnzB=1024
tid=0, i,j = 608,920  nnzA= 1024, nnzB=1024
tid=0, i,j = 420,916  nnzA= 1024, nnzB=1024
tid=0, i,j = 966,921  nnzA= 1024, nnzB=1024
tid=0, i,j = 480,918  nnzA= 1024, nnzB=1024
tid=0, i,j = 456,909  nnzA= 1024, nnzB=1024
tid=0, i,j = 399,936  nnzA= 1024, nnzB=1024
tid=0, i,j = 146,901  nnzA= 1024, nnzB=1024
tid=0, i,j = 860,933  nnzA= 1024, nnzB=1024
tid=0, i,j = 167,910  nnzA= 1024, nnzB=1024
tid=0, i,j = 57,902  nnzA= 1024, nnzB=1024
tid=0, i,j = 1021,903  nnzA= 1024, nnzB=1024
tid=0, i,j = 351,935  nnzA= 1024, nnzB=1024
tid=0, i,j = 755,926  nnzA= 1024, nnzB=1024
tid=0, i,j = 538,929  nnzA= 1024, nnzB=1024
tid=0, i,j = 970,919  nnzA= 1024, nnzB=1024
tid=0, i,j = 414,940  nnzA= 1024, nnzB=1024
tid=0, i,j = 1017,950  nnzA= 1024, nnzB=1024
tid=0, i,j = 109,944  nnzA= 1024, nnzB=1024
tid=0, i,j = 221,951  nnzA= 1024, nnzB=1024
tid=0, i,j = 823,955  nnzA= 1024, nnzB=1024
tid=0, i,j = 628,948  nnzA= 1024, nnzB=1024
tid=0, i,j = 504,965  nnzA= 1024, nnzB=1024
tid=0, i,j = 875,971  nnzA= 1024, nnzB=1024
tid=0, i,j = 671,945  nnzA= 1024, nnzB=1024
tid=0, i,j = 538,943  nnzA= 1024, nnzB=1024
tid=0, i,j = 316,949  nnzA= 1024, nnzB=1024
tid=0, i,j = 370,964  nnzA= 1024, nnzB=1024
tid=0, i,j = 31,943  nnzA= 1024, nnzB=1024
tid=0, i,j = 653,956  nnzA= 1024, nnzB=1024
tid=0, i,j = 828,961  nnzA= 1024, nnzB=1024
tid=0, i,j = 644,958  nnzA= 1024, nnzB=1024
tid=0, i,j = 1023,967  nnzA= 1024, nnzB=1024
tid=0, i,j = 667,959  nnzA= 1024, nnzB=1024
tid=0, i,j = 78,960  nnzA= 1024, nnzB=1024
tid=0, i,j = 856,970  nnzA= 1024, nnzB=1024
tid=0, i,j = 457,955  nnzA= 1024, nnzB=1024
tid=0, i,j = 564,969  nnzA= 1024, nnzB=1024
tid=0, i,j = 748,939  nnzA= 1024, nnzB=1024
tid=0, i,j = 246,946  nnzA= 1024, nnzB=1024
tid=0, i,j = 483,966  nnzA= 1024, nnzB=1024
tid=0, i,j = 182,947  nnzA= 1024, nnzB=1024
tid=0, i,j = 400,968  nnzA= 1024, nnzB=1024
tid=0, i,j = 586,941  nnzA= 1024, nnzB=1024
tid=0, i,j = 877,962  nnzA= 1024, nnzB=1024
tid=0, i,j = 356,942  nnzA= 1024, nnzB=1024
tid=0, i,j = 656,957  nnzA= 1024, nnzB=1024
tid=0, i,j = 397,963  nnzA= 1024, nnzB=1024
tid=0, i,j = 549,972  nnzA= 1024, nnzB=1024
tid=0, i,j = 72,985  nnzA= 1024, nnzB=1024
tid=0, i,j = 582,984  nnzA= 1024, nnzB=1024
tid=0, i,j = 743,985  nnzA= 1024, nnzB=1024
tid=0, i,j = 123,978  nnzA= 1024, nnzB=1024
tid=0, i,j = 340,987  nnzA= 1024, nnzB=1024
tid=0, i,j = 449,984  nnzA= 1024, nnzB=1024
tid=0, i,j = 371,980  nnzA= 1024, nnzB=1024
tid=0, i,j = 120,987  nnzA= 1024, nnzB=1024
tid=0, i,j = 980,976  nnzA= 1024, nnzB=1024
tid=0, i,j = 58,983  nnzA= 1024, nnzB=1024
tid=0, i,j = 323,986  nnzA= 1024, nnzB=1024
tid=0, i,j = 175,981  nnzA= 1024, nnzB=1024
tid=0, i,j = 347,977  nnzA= 1024, nnzB=1024
tid=0, i,j = 630,972  nnzA= 1024, nnzB=1024
tid=0, i,j = 934,974  nnzA= 1024, nnzB=1024
tid=0, i,j = 67,1020  nnzA= 1024, nnzB=1024
tid=0, i,j = 172,988  nnzA= 1024, nnzB=1024
tid=0, i,j = 514,990  nnzA= 1024, nnzB=1024
tid=0, i,j = 491,1022  nnzA= 1024, nnzB=1024
tid=0, i,j = 170,995  nnzA= 1024, nnzB=1024
tid=0, i,j = 660,991  nnzA= 1024, nnzB=1024
tid=0, i,j = 946,997  nnzA= 1024, nnzB=1024
tid=0, i,j = 1022,1006  nnzA= 1024, nnzB=1024
tid=0, i,j = 678,998  nnzA= 1024, nnzB=1024
tid=0, i,j = 877,1001  nnzA= 1024, nnzB=1024
tid=0, i,j = 180,1017  nnzA= 1024, nnzB=1024
tid=0, i,j = 87,993  nnzA= 1024, nnzB=1024
tid=0, i,j = 167,999  nnzA= 1024, nnzB=1024
tid=0, i,j = 585,989  nnzA= 1024, nnzB=1024
tid=0, i,j = 254,1018  nnzA= 1024, nnzB=1024
tid=0, i,j = 667,1014  nnzA= 1024, nnzB=1024
tid=0, i,j = 151,1020  nnzA= 1024, nnzB=1024
tid=0, i,j = 287,1019  nnzA= 1024, nnzB=1024
tid=0, i,j = 992,994  nnzA= 1024, nnzB=1024
tid=0, i,j = 286,1002  nnzA= 1024, nnzB=1024
tid=0, i,j = 531,992  nnzA= 1024, nnzB=1024
tid=0, i,j = 250,1004  nnzA= 1024, nnzB=1024
tid=0, i,j = 15,992  nnzA= 1024, nnzB=1024
tid=0, i,j = 674,993  nnzA= 1024, nnzB=1024
tid=0, i,j = 127,1015  nnzA= 1024, nnzB=1024
tid=0, i,j = 810,1021  nnzA= 1024, nnzB=1024
tid=0, i,j = 533,1012  nnzA= 1024, nnzB=1024
tid=0, i,j = 574,1013  nnzA= 1024, nnzB=1024
tid=0, i,j = 457,1016  nnzA= 1024, nnzB=1024
tid=0, i,j = 613,1015  nnzA= 1024, nnzB=1024
tid=0, i,j = 159,1008  nnzA= 1024, nnzB=1024
tid=0, i,j = 574,1009  nnzA= 1024, nnzB=1024
tid=0, i,j = 840,1023  nnzA= 1024, nnzB=1024
returned from kernel 9.09312ms

  1024x1024 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB

    (0,478)   268
    (0,574)   246
    (2,376)   235
    (5,560)   278
    (6,996)   255
    (7,183)   256
    (7,666)   248
    (8,896)   255
    (9,187)   274
    (10,446)   256
    (11,46)   270
    (11,955)   284
    (12,397)   250
    (12,953)   259
    (13,192)   278
    (14,421)   267
    (15,568)   251
    (16,788)   225
    (16,904)   246
    (17,928)   240
    (18,103)   262
    (19,821)   235
    (19,886)   236
    (20,474)   267
    (21,479)   248
    (21,975)   251
    (22,569)   255
    (23,310)   272
    (24,905)   262
    ...
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 16384 bytes

  1024x1024 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 1024 entries, memory: 25.2 KB

    (0,478)   1
    (0,574)   1
    (2,376)   1
    (5,560)   1
    (6,996)   1
    (7,183)   1
    (7,666)   1
    (8,896)   1
    (9,187)   1
    (10,446)   1
    (11,46)   1
    (11,955)   1
    (12,397)   1
    (12,953)   1
    (13,192)   1
    (14,421)   1
    (15,568)   1
    (16,788)   1
    (16,904)   1
    (17,928)   1
    (18,103)   1
    (19,821)   1
    (19,886)   1
    (20,474)   1
    (21,479)   1
    (21,975)   1
    (22,569)   1
    (23,310)   1
    (24,905)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 1048576 entries, memory: 12.0 MB

    (0,0)   0
    (0,1)   0
    (0,2)   1
    (0,3)   1
    (0,4)   0
    (0,5)   1
    (0,6)   0
    (0,7)   0
    (0,8)   1
    (0,9)   0
    (0,10)   0
    (0,11)   1
    (0,12)   1
    (0,13)   1
    (0,14)   1
    (0,15)   1
    (0,16)   1
    (0,17)   0
    (0,18)   1
    (0,19)   1
    (0,20)   1
    (0,21)   0
    (0,22)   1
    (0,23)   1
    (0,24)   0
    (0,25)   0
    (0,26)   0
    (0,27)   1
    (0,28)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 1048576 entries, memory: 12.0 MB

    (0,0)   0
    (0,1)   0
    (0,2)   0
    (0,3)   1
    (0,4)   1
    (0,5)   0
    (0,6)   0
    (0,7)   0
    (0,8)   1
    (0,9)   1
    (0,10)   0
    (0,11)   0
    (0,12)   1
    (0,13)   1
    (0,14)   1
    (0,15)   1
    (0,16)   0
    (0,17)   1
    (0,18)   0
    (0,19)   1
    (0,20)   0
    (0,21)   1
    (0,22)   0
    (0,23)   0
    (0,24)   0
    (0,25)   0
    (0,26)   1
    (0,27)   0
    (0,28)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB

    (0,478)   268
    (0,574)   246
    (2,376)   235
    (5,560)   278
    (6,996)   255
    (7,183)   256
    (7,666)   248
    (8,896)   255
    (9,187)   274
    (10,446)   256
    (11,46)   270
    (11,955)   284
    (12,397)   250
    (12,953)   259
    (13,192)   278
    (14,421)   267
    (15,568)   251
    (16,788)   225
    (16,904)   246
    (17,928)   240
    (18,103)   262
    (19,821)   235
    (19,886)   236
    (20,474)   267
    (21,479)   248
    (21,975)   251
    (22,569)   255
    (23,310)   272
    (24,905)   262
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  C_actual, 1024 entries, memory: 40.2 KB

    (0,478)   268
    (0,574)   246
    (2,376)   235
    (5,560)   278
    (6,996)   255
    (7,183)   256
    (7,666)   248
    (8,896)   255
    (9,187)   274
    (10,446)   256
    (11,46)   270
    (11,955)   284
    (12,397)   250
    (12,953)   259
    (13,192)   278
    (14,421)   267
    (15,568)   251
    (16,788)   225
    (16,904)   246
    (17,928)   240
    (18,103)   262
    (19,821)   235
    (19,886)   236
    (20,474)   267
    (21,479)   248
    (21,975)   251
    (22,569)   255
    (23,310)   272
    (24,905)   262
    ...
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 16384 bytes

  1024x1024 GraphBLAS double matrix, sparse by row
  Diff actual, 1024 entries, memory: 32.2 KB

    (0,478)    0
    (0,574)    0
    (2,376)    0
    (5,560)    0
    (6,996)    0
    (7,183)    0
    (7,666)    0
    (8,896)    0
    (9,187)    0
    (10,446)    0
    (11,46)    0
    (11,955)    0
    (12,397)    0
    (12,953)    0
    (13,192)    0
    (14,421)    0
    (15,568)    0
    (16,788)    0
    (16,904)    0
    (17,928)    0
    (18,103)    0
    (19,821)    0
    (19,886)    0
    (20,474)    0
    (21,479)    0
    (21,975)    0
    (22,569)    0
    (23,310)    0
    (24,905)    0
    ...

  1024x1024 GraphBLAS bool matrix, sparse by row
  T actual, 1024 entries, memory: 25.2 KB

    (0,478)   1
    (0,574)   1
    (2,376)   1
    (5,560)   1
    (6,996)   1
    (7,183)   1
    (7,666)   1
    (8,896)   1
    (9,187)   1
    (10,446)   1
    (11,46)   1
    (11,955)   1
    (12,397)   1
    (12,953)   1
    (13,192)   1
    (14,421)   1
    (15,568)   1
    (16,788)   1
    (16,904)   1
    (17,928)   1
    (18,103)   1
    (19,821)   1
    (19,886)   1
    (20,474)   1
    (21,479)   1
    (21,975)   1
    (22,569)   1
    (23,310)   1
    (24,905)   1
    ...
 work:1024 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 543210
fill_random nrows=1024ncols=1024 need 1048576 values, invsparse = 1
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling dense
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 524288 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 1048576 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 2097152 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
 rmm_wrap_alloc 4194304 bytes
 rmm_wrap_alloc 8388608 bytes
inside fill, using seed 32
fill_random nrows=1024ncols=1024 need 5120 values, invsparse = 205
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
5120 nonzeroes left to fill..
2026 nonzeroes left to fill..
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 65536 bytes
1024 slots to fill
all pairs to bucket 5, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b306000
inside enumify: 0x7fdf2b306000

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 256 bytes
1024 slots to fill
all pairs to bucket 5, no filling
done assigning buckets
bucket 5 has 1024 dots to do
LAUNCHING BUCKET CODE: 5
Confiring spdnINside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_spdn
found memory-cached prog GB_jit_AxB_dot3_phase3_spdn
 got kernel instance AxB_dot3_phase3_spdn_int32_t_int32_t_int32_t
found memory-cached prog AxB_dot3_phase3_spdn_int32_t_int32_t_int32_t
Launching _Z20AxB_dot3_phase3_spdnIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<32,32,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 3.64237ms

  1024x1024 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 131

    (0,478)   1
    (0,574)   2
    (2,376) zombie
    (5,560)   3
    (6,996)   2
    (7,183)   0
    (7,666)   0
    (8,896)   2
    (9,187)   0
    (10,446)   2
    (11,46)   2
    (11,955)   2
    (12,397)   1
    (12,953)   0
    (13,192)   1
    (14,421)   1
    (15,568)   1
    (16,788)   1
    (16,904)   0
    (17,928)   0
    (18,103) zombie
    (19,821)   1
    (19,886)   0
    (20,474)   4
    (21,479)   1
    (21,975)   1
    (22,569)   1
    (23,310)   2
    (24,905)   0
    ...
 rmm_wrap_alloc 256 bytes
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 16384 bytes

  1024x1024 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 1024 entries, memory: 25.2 KB

    (0,478)   1
    (0,574)   1
    (2,376)   1
    (5,560)   1
    (6,996)   1
    (7,183)   1
    (7,666)   1
    (8,896)   1
    (9,187)   1
    (10,446)   1
    (11,46)   1
    (11,955)   1
    (12,397)   1
    (12,953)   1
    (13,192)   1
    (14,421)   1
    (15,568)   1
    (16,788)   1
    (16,904)   1
    (17,928)   1
    (18,103)   1
    (19,821)   1
    (19,886)   1
    (20,474)   1
    (21,479)   1
    (21,975)   1
    (22,569)   1
    (23,310)   1
    (24,905)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 1048576 entries, memory: 12.0 MB

    (0,0)   0
    (0,1)   0
    (0,2)   1
    (0,3)   1
    (0,4)   0
    (0,5)   1
    (0,6)   0
    (0,7)   0
    (0,8)   1
    (0,9)   0
    (0,10)   0
    (0,11)   1
    (0,12)   1
    (0,13)   1
    (0,14)   1
    (0,15)   1
    (0,16)   1
    (0,17)   0
    (0,18)   1
    (0,19)   1
    (0,20)   1
    (0,21)   0
    (0,22)   1
    (0,23)   1
    (0,24)   0
    (0,25)   0
    (0,26)   0
    (0,27)   1
    (0,28)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 5120 entries, memory: 112.2 KB

    (1,55)   1
    (1,171)   0
    (1,377)   0
    (1,422)   1
    (1,686)   0
    (1,1018)   0
    (2,78)   0
    (2,287)   1
    (2,607)   1
    (2,735)   0
    (3,371)   0
    (3,389)   0
    (4,101)   0
    (4,273)   1
    (4,612)   1
    (4,749)   1
    (4,970)   0
    (5,49)   1
    (5,377)   1
    (5,652)   0
    (5,656)   1
    (5,854)   0
    (6,115)   0
    (6,197)   1
    (6,252)   1
    (6,375)   1
    (6,470)   0
    (6,628)   0
    (6,639)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 131

    (0,478)   1
    (0,574)   2
    (2,376) zombie
    (5,560)   3
    (6,996)   2
    (7,183)   0
    (7,666)   0
    (8,896)   2
    (9,187)   0
    (10,446)   2
    (11,46)   2
    (11,955)   2
    (12,397)   1
    (12,953)   0
    (13,192)   1
    (14,421)   1
    (15,568)   1
    (16,788)   1
    (16,904)   0
    (17,928)   0
    (18,103) zombie
    (19,821)   1
    (19,886)   0
    (20,474)   4
    (21,479)   1
    (21,975)   1
    (22,569)   1
    (23,310)   2
    (24,905)   0
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  C_actual, 1024 entries, memory: 40.2 KB
  pending tuples: 0 max pending: 0 zombies: 131

    (0,478)   1
    (0,574)   2
    (2,376) zombie
    (5,560)   3
    (6,996)   2
    (7,183)   0
    (7,666)   0
    (8,896)   2
    (9,187)   0
    (10,446)   2
    (11,46)   2
    (11,955)   2
    (12,397)   1
    (12,953)   0
    (13,192)   1
    (14,421)   1
    (15,568)   1
    (16,788)   1
    (16,904)   0
    (17,928)   0
    (18,103) zombie
    (19,821)   1
    (19,886)   0
    (20,474)   4
    (21,479)   1
    (21,975)   1
    (22,569)   1
    (23,310)   2
    (24,905)   0
    ...
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes

  1024x1024 GraphBLAS double matrix, sparse by row
  Diff actual, 893 entries, memory: 32.2 KB

    (0,478)    0
    (0,574)    0
    (5,560)    0
    (6,996)    0
    (7,183)    0
    (7,666)    0
    (8,896)    0
    (9,187)    0
    (10,446)    0
    (11,46)    0
    (11,955)    0
    (12,397)    0
    (12,953)    0
    (13,192)    0
    (14,421)    0
    (15,568)    0
    (16,788)    0
    (16,904)    0
    (17,928)    0
    (19,821)    0
    (19,886)    0
    (20,474)    0
    (21,479)    0
    (21,975)    0
    (22,569)    0
    (23,310)    0
    (24,905)    0
    (25,241)    0
    (26,428)    0
    ...

  1024x1024 GraphBLAS bool matrix, sparse by row
  T actual, 893 entries, memory: 25.2 KB

    (0,478)   1
    (0,574)   1
    (5,560)   1
    (6,996)   1
    (7,183)   1
    (7,666)   1
    (8,896)   1
    (9,187)   1
    (10,446)   1
    (11,46)   1
    (11,955)   1
    (12,397)   1
    (12,953)   1
    (13,192)   1
    (14,421)   1
    (15,568)   1
    (16,788)   1
    (16,904)   1
    (17,928)   1
    (19,821)   1
    (19,886)   1
    (20,474)   1
    (21,479)   1
    (21,975)   1
    (22,569)   1
    (23,310)   1
    (24,905)   1
    (25,241)   1
    (26,428)   1
    ...
 work:893 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
 rmm_wrap_alloc 8192 bytes
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
 rmm_wrap_alloc 4096 bytes
inside fill, using seed 543210
fill_random nrows=1024ncols=1024 need 2048 values, invsparse = 512
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
2048 nonzeroes left to fill..
504 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 8192 bytes
inside fill, using seed 32
fill_random nrows=1024ncols=1024 need 10240 values, invsparse = 103
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
10240 nonzeroes left to fill..
4633 nonzeroes left to fill..
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 131072 bytes
 rmm_wrap_alloc 256 bytes
1024 slots to fill
all pairs to bucket 6, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b306a00
inside enumify: 0x7fdf2b306a00

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 256 bytes
1024 slots to fill
all pairs to bucket 6, no filling
done assigning buckets
bucket 6 has 1024 dots to do
LAUNCHING BUCKET CODE: 6
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_vssp
found memory-cached prog GB_jit_AxB_dot3_phase3_vssp
 got kernel instance AxB_dot3_phase3_vssp_int32_t_int32_t_int32_t
found memory-cached prog AxB_dot3_phase3_vssp_int32_t_int32_t_int32_t
Launching _Z20AxB_dot3_phase3_vsspIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<32,32,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 0.971776ms

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 1001

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...
 rmm_wrap_alloc 256 bytes
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 16384 bytes

  1024x1024 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 1024 entries, memory: 25.2 KB

    (0,478)   1
    (0,574)   1
    (2,376)   1
    (5,560)   1
    (6,996)   1
    (7,183)   1
    (7,666)   1
    (8,896)   1
    (9,187)   1
    (10,446)   1
    (11,46)   1
    (11,955)   1
    (12,397)   1
    (12,953)   1
    (13,192)   1
    (14,421)   1
    (15,568)   1
    (16,788)   1
    (16,904)   1
    (17,928)   1
    (18,103)   1
    (19,821)   1
    (19,886)   1
    (20,474)   1
    (21,479)   1
    (21,975)   1
    (22,569)   1
    (23,310)   1
    (24,905)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 2048 entries, memory: 40.2 KB

    (0,776)   0
    (1,994)   1
    (2,203)   1
    (2,728)   0
    (3,514)   1
    (3,893)   1
    (4,248)   1
    (4,600)   0
    (4,866)   0
    (4,997)   1
    (5,550)   0
    (5,647)   1
    (5,662)   1
    (6,343)   0
    (6,854)   1
    (6,1005)   1
    (8,395)   1
    (8,759)   0
    (9,295)   1
    (9,556)   1
    (9,758)   1
    (10,563)   1
    (10,708)   0
    (11,472)   0
    (12,727)   0
    (12,872)   0
    (12,876)   1
    (13,564)   1
    (14,5)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 10240 entries, memory: 208.2 KB

    (1,94)   0
    (1,117)   0
    (1,190)   0
    (1,278)   0
    (1,305)   0
    (1,350)   1
    (1,395)   1
    (1,638)   0
    (1,639)   1
    (1,714)   0
    (1,726)   1
    (1,752)   0
    (1,792)   0
    (1,932)   0
    (1,971)   1
    (2,12)   1
    (2,105)   0
    (2,249)   1
    (2,254)   1
    (2,356)   0
    (2,415)   1
    (2,520)   1
    (2,860)   0
    (3,60)   1
    (3,267)   1
    (3,315)   0
    (3,345)   0
    (3,429)   0
    (3,448)   0
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 1001

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  C_actual, 1024 entries, memory: 40.2 KB
  pending tuples: 0 max pending: 0 zombies: 1001

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes

  1024x1024 GraphBLAS double matrix, hypersparse by row
  Diff actual, 23 entries, memory: 1.2 KB

    (42,324)    0
    (73,665)    0
    (106,652)    0
    (138,288)    0
    (242,124)    0
    (295,1)    0
    (300,554)    0
    (312,61)    0
    (344,384)    0
    (496,267)    0
    (587,254)    0
    (686,202)    0
    (708,925)    0
    (715,751)    0
    (729,884)    0
    (741,365)    0
    (751,348)    0
    (792,636)    0
    (857,151)    0
    (876,357)    0
    (940,414)    0
    (945,671)    0
    (968,400)    0

  1024x1024 GraphBLAS bool matrix, hypersparse by row
  T actual, 23 entries, memory: 1.0 KB

    (42,324)   1
    (73,665)   1
    (106,652)   1
    (138,288)   1
    (242,124)   1
    (295,1)   1
    (300,554)   1
    (312,61)   1
    (344,384)   1
    (496,267)   1
    (587,254)   1
    (686,202)   1
    (708,925)   1
    (715,751)   1
    (729,884)   1
    (741,365)   1
    (751,348)   1
    (792,636)   1
    (857,151)   1
    (876,357)   1
    (940,414)   1
    (945,671)   1
    (968,400)   1
 work:23 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 543210
fill_random nrows=1024ncols=1024 need 2048 values, invsparse = 512
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
2048 nonzeroes left to fill..
504 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 16384 bytes
inside fill, using seed 32
fill_random nrows=1024ncols=1024 need 4096 values, invsparse = 256
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
4096 nonzeroes left to fill..
1491 nonzeroes left to fill..
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 32768 bytes
1024 slots to fill
all pairs to bucket 7, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b382700
inside enumify: 0x7fdf2b382700

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 256 bytes
1024 slots to fill
all pairs to bucket 7, no filling
done assigning buckets
bucket 7 has 1024 dots to do
LAUNCHING BUCKET CODE: 7
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_vsvs
found memory-cached prog GB_jit_AxB_dot3_phase3_vsvs
 got kernel instance AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
found memory-cached prog AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
Launching _Z20AxB_dot3_phase3_vsvsIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<2,512,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 0.559104ms

  1024x1024 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 1010

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 16384 bytes

  1024x1024 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 1024 entries, memory: 25.2 KB

    (0,478)   1
    (0,574)   1
    (2,376)   1
    (5,560)   1
    (6,996)   1
    (7,183)   1
    (7,666)   1
    (8,896)   1
    (9,187)   1
    (10,446)   1
    (11,46)   1
    (11,955)   1
    (12,397)   1
    (12,953)   1
    (13,192)   1
    (14,421)   1
    (15,568)   1
    (16,788)   1
    (16,904)   1
    (17,928)   1
    (18,103)   1
    (19,821)   1
    (19,886)   1
    (20,474)   1
    (21,479)   1
    (21,975)   1
    (22,569)   1
    (23,310)   1
    (24,905)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 2048 entries, memory: 40.2 KB

    (0,776)   0
    (1,994)   1
    (2,203)   1
    (2,728)   0
    (3,514)   1
    (3,893)   1
    (4,248)   1
    (4,600)   0
    (4,866)   0
    (4,997)   1
    (5,550)   0
    (5,647)   1
    (5,662)   1
    (6,343)   0
    (6,854)   1
    (6,1005)   1
    (8,395)   1
    (8,759)   0
    (9,295)   1
    (9,556)   1
    (9,758)   1
    (10,563)   1
    (10,708)   0
    (11,472)   0
    (12,727)   0
    (12,872)   0
    (12,876)   1
    (13,564)   1
    (14,5)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 4096 entries, memory: 64.2 KB

    (1,641)   1
    (1,688)   0
    (1,898)   0
    (2,20)   1
    (2,30)   1
    (2,279)   0
    (2,363)   0
    (2,506)   0
    (2,755)   0
    (2,980)   1
    (3,35)   0
    (3,417)   0
    (4,190)   1
    (4,347)   1
    (4,727)   1
    (4,829)   1
    (4,957)   0
    (5,374)   1
    (5,503)   0
    (5,556)   0
    (5,601)   0
    (6,319)   1
    (6,407)   0
    (6,666)   0
    (6,793)   1
    (6,926)   1
    (7,303)   0
    (7,486)   0
    (7,666)   0
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 1010

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  C_actual, 1024 entries, memory: 40.2 KB
  pending tuples: 0 max pending: 0 zombies: 1010

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes

  1024x1024 GraphBLAS double matrix, hypersparse by row
  Diff actual, 14 entries, memory: 768 bytes

    (99,326)    0
    (115,240)    0
    (176,614)    0
    (180,830)    0
    (343,678)    0
    (398,246)    0
    (411,643)    0
    (557,910)    0
    (590,95)    0
    (601,478)    0
    (623,44)    0
    (729,884)    0
    (825,406)    0
    (891,679)    0

  1024x1024 GraphBLAS bool matrix, hypersparse by row
  T actual, 14 entries, memory: 656 bytes

    (99,326)   1
    (115,240)   1
    (176,614)   1
    (180,830)   1
    (343,678)   1
    (398,246)   1
    (411,643)   1
    (557,910)   1
    (590,95)   1
    (601,478)   1
    (623,44)   1
    (729,884)   1
    (825,406)   1
    (891,679)   1
 work:14 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 543210
fill_random nrows=1024ncols=1024 need 2048 values, invsparse = 512
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
2048 nonzeroes left to fill..
504 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
inside fill, using seed 32
fill_random nrows=1024ncols=1024 need 4096 values, invsparse = 256
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
4096 nonzeroes left to fill..
1491 nonzeroes left to fill..
 rmm_wrap_alloc 16384 bytes
1024 slots to fill
all pairs to bucket 8, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b39d600
inside enumify: 0x7fdf2b39d600

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 256 bytes
1024 slots to fill
all pairs to bucket 8, no filling
done assigning buckets
bucket 8 has 1024 dots to do
LAUNCHING BUCKET CODE: 8
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_vsvs
found memory-cached prog GB_jit_AxB_dot3_phase3_vsvs
 got kernel instance AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
found memory-cached prog AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
Launching _Z20AxB_dot3_phase3_vsvsIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<2,512,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 0.779264ms

  1024x1024 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 1010

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...
 rmm_wrap_alloc 256 bytes
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 16384 bytes

  1024x1024 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 1024 entries, memory: 25.2 KB

    (0,478)   1
    (0,574)   1
    (2,376)   1
    (5,560)   1
    (6,996)   1
    (7,183)   1
    (7,666)   1
    (8,896)   1
    (9,187)   1
    (10,446)   1
    (11,46)   1
    (11,955)   1
    (12,397)   1
    (12,953)   1
    (13,192)   1
    (14,421)   1
    (15,568)   1
    (16,788)   1
    (16,904)   1
    (17,928)   1
    (18,103)   1
    (19,821)   1
    (19,886)   1
    (20,474)   1
    (21,479)   1
    (21,975)   1
    (22,569)   1
    (23,310)   1
    (24,905)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 2048 entries, memory: 40.2 KB

    (0,776)   0
    (1,994)   1
    (2,203)   1
    (2,728)   0
    (3,514)   1
    (3,893)   1
    (4,248)   1
    (4,600)   0
    (4,866)   0
    (4,997)   1
    (5,550)   0
    (5,647)   1
    (5,662)   1
    (6,343)   0
    (6,854)   1
    (6,1005)   1
    (8,395)   1
    (8,759)   0
    (9,295)   1
    (9,556)   1
    (9,758)   1
    (10,563)   1
    (10,708)   0
    (11,472)   0
    (12,727)   0
    (12,872)   0
    (12,876)   1
    (13,564)   1
    (14,5)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 4096 entries, memory: 64.2 KB

    (1,641)   1
    (1,688)   0
    (1,898)   0
    (2,20)   1
    (2,30)   1
    (2,279)   0
    (2,363)   0
    (2,506)   0
    (2,755)   0
    (2,980)   1
    (3,35)   0
    (3,417)   0
    (4,190)   1
    (4,347)   1
    (4,727)   1
    (4,829)   1
    (4,957)   0
    (5,374)   1
    (5,503)   0
    (5,556)   0
    (5,601)   0
    (6,319)   1
    (6,407)   0
    (6,666)   0
    (6,793)   1
    (6,926)   1
    (7,303)   0
    (7,486)   0
    (7,666)   0
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 1010

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  C_actual, 1024 entries, memory: 40.2 KB
  pending tuples: 0 max pending: 0 zombies: 1010

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes

  1024x1024 GraphBLAS double matrix, hypersparse by row
  Diff actual, 14 entries, memory: 768 bytes

    (99,326)    0
    (115,240)    0
    (176,614)    0
    (180,830)    0
    (343,678)    0
    (398,246)    0
    (411,643)    0
    (557,910)    0
    (590,95)    0
    (601,478)    0
    (623,44)    0
    (729,884)    0
    (825,406)    0
    (891,679)    0

  1024x1024 GraphBLAS bool matrix, hypersparse by row
  T actual, 14 entries, memory: 656 bytes

    (99,326)   1
    (115,240)   1
    (176,614)   1
    (180,830)   1
    (343,678)   1
    (398,246)   1
    (411,643)   1
    (557,910)   1
    (590,95)   1
    (601,478)   1
    (623,44)   1
    (729,884)   1
    (825,406)   1
    (891,679)   1
 work:14 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 543210
fill_random nrows=1024ncols=1024 need 2048 values, invsparse = 512
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
2048 nonzeroes left to fill..
504 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 32
fill_random nrows=1024ncols=1024 need 4096 values, invsparse = 256
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
4096 nonzeroes left to fill..
1491 nonzeroes left to fill..
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 256 bytes
1024 slots to fill
all pairs to bucket 9, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b3ae000
inside enumify: 0x7fdf2b3ae000

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 256 bytes
1024 slots to fill
all pairs to bucket 9, no filling
done assigning buckets
bucket 9 has 1024 dots to do
LAUNCHING BUCKET CODE: 9
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_vsvs
found memory-cached prog GB_jit_AxB_dot3_phase3_vsvs
 got kernel instance AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
found memory-cached prog AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
Launching _Z20AxB_dot3_phase3_vsvsIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<2,512,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 0.883712ms

  1024x1024 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 1010

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...
 rmm_wrap_alloc 256 bytes
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 16384 bytes

  1024x1024 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 1024 entries, memory: 25.2 KB

    (0,478)   1
    (0,574)   1
    (2,376)   1
    (5,560)   1
    (6,996)   1
    (7,183)   1
    (7,666)   1
    (8,896)   1
    (9,187)   1
    (10,446)   1
    (11,46)   1
    (11,955)   1
    (12,397)   1
    (12,953)   1
    (13,192)   1
    (14,421)   1
    (15,568)   1
    (16,788)   1
    (16,904)   1
    (17,928)   1
    (18,103)   1
    (19,821)   1
    (19,886)   1
    (20,474)   1
    (21,479)   1
    (21,975)   1
    (22,569)   1
    (23,310)   1
    (24,905)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 2048 entries, memory: 40.2 KB

    (0,776)   0
    (1,994)   1
    (2,203)   1
    (2,728)   0
    (3,514)   1
    (3,893)   1
    (4,248)   1
    (4,600)   0
    (4,866)   0
    (4,997)   1
    (5,550)   0
    (5,647)   1
    (5,662)   1
    (6,343)   0
    (6,854)   1
    (6,1005)   1
    (8,395)   1
    (8,759)   0
    (9,295)   1
    (9,556)   1
    (9,758)   1
    (10,563)   1
    (10,708)   0
    (11,472)   0
    (12,727)   0
    (12,872)   0
    (12,876)   1
    (13,564)   1
    (14,5)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 4096 entries, memory: 64.2 KB

    (1,641)   1
    (1,688)   0
    (1,898)   0
    (2,20)   1
    (2,30)   1
    (2,279)   0
    (2,363)   0
    (2,506)   0
    (2,755)   0
    (2,980)   1
    (3,35)   0
    (3,417)   0
    (4,190)   1
    (4,347)   1
    (4,727)   1
    (4,829)   1
    (4,957)   0
    (5,374)   1
    (5,503)   0
    (5,556)   0
    (5,601)   0
    (6,319)   1
    (6,407)   0
    (6,666)   0
    (6,793)   1
    (6,926)   1
    (7,303)   0
    (7,486)   0
    (7,666)   0
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 1010

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  C_actual, 1024 entries, memory: 40.2 KB
  pending tuples: 0 max pending: 0 zombies: 1010

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes

  1024x1024 GraphBLAS double matrix, hypersparse by row
  Diff actual, 14 entries, memory: 768 bytes

    (99,326)    0
    (115,240)    0
    (176,614)    0
    (180,830)    0
    (343,678)    0
    (398,246)    0
    (411,643)    0
    (557,910)    0
    (590,95)    0
    (601,478)    0
    (623,44)    0
    (729,884)    0
    (825,406)    0
    (891,679)    0

  1024x1024 GraphBLAS bool matrix, hypersparse by row
  T actual, 14 entries, memory: 656 bytes

    (99,326)   1
    (115,240)   1
    (176,614)   1
    (180,830)   1
    (343,678)   1
    (398,246)   1
    (411,643)   1
    (557,910)   1
    (590,95)   1
    (601,478)   1
    (623,44)   1
    (729,884)   1
    (825,406)   1
    (891,679)   1
 work:14 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 543210
fill_random nrows=1024ncols=1024 need 2048 values, invsparse = 512
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
2048 nonzeroes left to fill..
504 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 32
fill_random nrows=1024ncols=1024 need 4096 values, invsparse = 256
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
4096 nonzeroes left to fill..
1491 nonzeroes left to fill..
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 256 bytes
1024 slots to fill
all pairs to bucket 10, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b382a00
inside enumify: 0x7fdf2b382a00

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 256 bytes
1024 slots to fill
all pairs to bucket 10, no filling
done assigning buckets
bucket 10 has 1024 dots to do
LAUNCHING BUCKET CODE: 10
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_vsvs
found memory-cached prog GB_jit_AxB_dot3_phase3_vsvs
 got kernel instance AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
found memory-cached prog AxB_dot3_phase3_vsvs_int32_t_int32_t_int32_t
Launching _Z20AxB_dot3_phase3_vsvsIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<2,512,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 0.959488ms

  1024x1024 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 1010

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...
 rmm_wrap_alloc 256 bytes
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 16384 bytes

  1024x1024 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 1024 entries, memory: 25.2 KB

    (0,478)   1
    (0,574)   1
    (2,376)   1
    (5,560)   1
    (6,996)   1
    (7,183)   1
    (7,666)   1
    (8,896)   1
    (9,187)   1
    (10,446)   1
    (11,46)   1
    (11,955)   1
    (12,397)   1
    (12,953)   1
    (13,192)   1
    (14,421)   1
    (15,568)   1
    (16,788)   1
    (16,904)   1
    (17,928)   1
    (18,103)   1
    (19,821)   1
    (19,886)   1
    (20,474)   1
    (21,479)   1
    (21,975)   1
    (22,569)   1
    (23,310)   1
    (24,905)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 2048 entries, memory: 40.2 KB

    (0,776)   0
    (1,994)   1
    (2,203)   1
    (2,728)   0
    (3,514)   1
    (3,893)   1
    (4,248)   1
    (4,600)   0
    (4,866)   0
    (4,997)   1
    (5,550)   0
    (5,647)   1
    (5,662)   1
    (6,343)   0
    (6,854)   1
    (6,1005)   1
    (8,395)   1
    (8,759)   0
    (9,295)   1
    (9,556)   1
    (9,758)   1
    (10,563)   1
    (10,708)   0
    (11,472)   0
    (12,727)   0
    (12,872)   0
    (12,876)   1
    (13,564)   1
    (14,5)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 4096 entries, memory: 64.2 KB

    (1,641)   1
    (1,688)   0
    (1,898)   0
    (2,20)   1
    (2,30)   1
    (2,279)   0
    (2,363)   0
    (2,506)   0
    (2,755)   0
    (2,980)   1
    (3,35)   0
    (3,417)   0
    (4,190)   1
    (4,347)   1
    (4,727)   1
    (4,829)   1
    (4,957)   0
    (5,374)   1
    (5,503)   0
    (5,556)   0
    (5,601)   0
    (6,319)   1
    (6,407)   0
    (6,666)   0
    (6,793)   1
    (6,926)   1
    (7,303)   0
    (7,486)   0
    (7,666)   0
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse (jumbled) by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 1010

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  C_actual, 1024 entries, memory: 40.2 KB
  pending tuples: 0 max pending: 0 zombies: 1010

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes

  1024x1024 GraphBLAS double matrix, hypersparse by row
  Diff actual, 14 entries, memory: 768 bytes

    (99,326)    0
    (115,240)    0
    (176,614)    0
    (180,830)    0
    (343,678)    0
    (398,246)    0
    (411,643)    0
    (557,910)    0
    (590,95)    0
    (601,478)    0
    (623,44)    0
    (729,884)    0
    (825,406)    0
    (891,679)    0

  1024x1024 GraphBLAS bool matrix, hypersparse by row
  T actual, 14 entries, memory: 656 bytes

    (99,326)   1
    (115,240)   1
    (176,614)   1
    (180,830)   1
    (343,678)   1
    (398,246)   1
    (411,643)   1
    (557,910)   1
    (590,95)   1
    (601,478)   1
    (623,44)   1
    (729,884)   1
    (825,406)   1
    (891,679)   1
 work:14 gpus:0 Getting test data
Creating problem gen
filling matrices
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 4567
fill_random nrows=1024ncols=1024 need 1024 values, invsparse = 1024
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
1024 nonzeroes left to fill..
35 nonzeroes left to fill..
inside fill, using seed 543210
fill_random nrows=1024ncols=1024 need 5120 values, invsparse = 205
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
5120 nonzeroes left to fill..
2091 nonzeroes left to fill..
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 256 bytes
inside fill, using seed 32
fill_random nrows=1024ncols=1024 need 2048 values, invsparse = 512
fill_random after alloc values
vdim ready 
vlen ready 
ready to fill p
filling sparse
2048 nonzeroes left to fill..
569 nonzeroes left to fill..
 rmm_wrap_alloc 16384 bytes
 rmm_wrap_alloc 256 bytes
1024 slots to fill
all pairs to bucket 11, no filling
done assigning buckets
Building semiring factgory
 calling stringify semiring: 0x7fdf2b383400
inside enumify: 0x7fdf2b383400

    GraphBLAS Semiring: semiring (user-defined)
    GraphBLAS Monoid: semiring->add (built-in)
    GraphBLAS BinaryOp: monoid->op (built-in) z=plus(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
    identity: [   0 ] 

    GraphBLAS BinaryOp: semiring->multiply (built-in) z=times(x,y)
    GraphBLAS type: ztype int32_t size: 4
    GraphBLAS type: xtype int32_t size: 4
    GraphBLAS type: ytype int32_t size: 4
Getting semiring add
Getting semiring mult
Getting semiring add op
Getting types
Getting opcodes
Getting typecodes
Performing asserts
Invoking boolean rename
Invoking boolean rename
Invoking enumify binop
e 14
Invoking enumify monoid
Calling enumify binop
Inside plus binop code
e 11
Calling enumify identity
Calling enumify terminal
Done enumify monoid
Done invoking enumify monoid
atype
btype
ctype
Invoking enumify_mask, mtype 0x7fdf5d2ed180
GB_enumify_mask gets mcode: 1 Mask_struct: 0 Mask_comp: 0
got mask_ecode: 4
constructing semiring scode
before: add_ecode: 11, id_ecode: 0, term_ecode: 31, mult_ecode: 14, flipxy: 0, zcode: 6, xcode: 6, ycode: 6, mask_ecode: 4, ccode: 6, acode: 6, bcode: 6, csparsity: 0, msparsity: 0, asparsity: 0, bsparsity: 0
serialized_scode: 397409434374399488
done enumify semiring
scode=397409434374399488
done stringify semiring
 returned from  stringify semiring
 rmm_wrap_alloc 256 bytes
 rmm_wrap_alloc 8192 bytes
 rmm_wrap_alloc 256 bytes
1024 slots to fill
all pairs to bucket 11, no filling
done assigning buckets
bucket 11 has 1024 dots to do
LAUNCHING BUCKET CODE: 11
INside get cached file
looking for prog in file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
opening /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h for write
about to close
 read cache file /home/cjnolet/.SuiteSparse/GraphBLAS/6.3.0/GB_semiring_397409434374399488.h
successful_read: 1
Just closed
 jit_cache get program GB_jit_AxB_dot3_phase3_mp
found memory-cached prog GB_jit_AxB_dot3_phase3_mp
 got kernel instance AxB_dot3_phase3_mp_int32_t_int32_t_int32_t
found memory-cached prog AxB_dot3_phase3_mp_int32_t_int32_t_int32_t
Launching _Z18AxB_dot3_phase3_mpIiiiEvxxPxP16GB_Matrix_opaqueS2_S2_S2_i<<<32,32,0,0>>>(long,long,long*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,GB_Matrix_opaque*,int)
returned from kernel 1.41107ms

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 1015

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...
 rmm_wrap_alloc 256 bytes
Not using cuda path. M_is_hypersparse: 0, A->iso: 0, B->iso: 0, A_BITMAP: 0, B_BITMAP: 0, GB_IS_FULL(A): 0, GB_IS_FULL(B): 0, semiring header size: 32
 rmm_wrap_alloc 16384 bytes

  1024x1024 GraphBLAS bool matrix, sparse by row
  sparsity control: sparse only
  M actual, 1024 entries, memory: 25.2 KB

    (0,478)   1
    (0,574)   1
    (2,376)   1
    (5,560)   1
    (6,996)   1
    (7,183)   1
    (7,666)   1
    (8,896)   1
    (9,187)   1
    (10,446)   1
    (11,46)   1
    (11,955)   1
    (12,397)   1
    (12,953)   1
    (13,192)   1
    (14,421)   1
    (15,568)   1
    (16,788)   1
    (16,904)   1
    (17,928)   1
    (18,103)   1
    (19,821)   1
    (19,886)   1
    (20,474)   1
    (21,479)   1
    (21,975)   1
    (22,569)   1
    (23,310)   1
    (24,905)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  A actual, 5120 entries, memory: 112.2 KB

    (0,108)   1
    (0,262)   1
    (0,777)   0
    (0,783)   1
    (1,4)   0
    (1,64)   0
    (1,424)   0
    (1,530)   1
    (1,674)   0
    (1,858)   0
    (1,987)   0
    (2,79)   0
    (2,139)   1
    (2,169)   0
    (2,459)   0
    (2,489)   1
    (2,525)   0
    (2,527)   0
    (2,963)   1
    (3,125)   0
    (3,218)   1
    (3,365)   0
    (3,407)   1
    (3,549)   1
    (3,820)   1
    (4,292)   0
    (4,305)   0
    (4,306)   1
    (4,312)   0
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  B actual, 2048 entries, memory: 40.2 KB

    (1,289)   1
    (2,415)   1
    (2,751)   0
    (2,898)   1
    (2,904)   0
    (2,950)   0
    (3,545)   0
    (4,572)   1
    (4,608)   1
    (5,57)   0
    (5,106)   0
    (5,660)   1
    (5,701)   1
    (5,941)   0
    (6,43)   0
    (6,718)   0
    (6,756)   0
    (7,297)   0
    (7,734)   0
    (8,127)   1
    (8,266)   0
    (8,275)   1
    (8,744)   1
    (9,401)   1
    (9,753)   1
    (9,761)   0
    (9,928)   1
    (9,932)   1
    (10,488)   1
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  sparsity control: sparse only
  C GPU, 1024 entries, memory: 28.2 KB
  pending tuples: 0 max pending: 0 zombies: 1015

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...

  1024x1024 GraphBLAS int32_t matrix, sparse by row
  C_actual, 1024 entries, memory: 40.2 KB
  pending tuples: 0 max pending: 0 zombies: 1016

    (0,478) zombie
    (0,574) zombie
    (2,376) zombie
    (5,560) zombie
    (6,996) zombie
    (7,183) zombie
    (7,666) zombie
    (8,896) zombie
    (9,187) zombie
    (10,446) zombie
    (11,46) zombie
    (11,955) zombie
    (12,397) zombie
    (12,953) zombie
    (13,192) zombie
    (14,421) zombie
    (15,568) zombie
    (16,788) zombie
    (16,904) zombie
    (17,928) zombie
    (18,103) zombie
    (19,821) zombie
    (19,886) zombie
    (20,474) zombie
    (21,479) zombie
    (21,975) zombie
    (22,569) zombie
    (23,310) zombie
    (24,905) zombie
    ...
