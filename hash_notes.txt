


GB_build_hash (GrB_Matrix A,    // hypersparse
    // output:
    Ahash,
...
)
{



    Ah = A->h ;         // size nvec
    anvec = A->nvec ;
    avdim = A->vdim ;

    A->hash = malloc (2*anvec + 16)     // whatever

    for (int k = 0 ; k < anvec ; k++)
    {
        j = Ah [k] ;        // j is in range 0 to avdim-1

        hash the value k with key j into the
        hash table Ahash so that later on
        we can do:

        k = Ahash_lookup (Ahash, j)
            bucket = fhash (j)
            k = Hash (bucket, j), or "nothing" if not present

    }

    anvec triplets

    for (int k = 0 ; k < anvec ; k++)
    {
        j = Ah [k] ;        // j is in range 0 to avdim-1
        Hash [k] = fhash (j) ;
        Stupid [k] = k
    }

        CSR matrix has dimension: nrows-by-ncols  (nrows == H->vdim, ncols = H->vlen)
            # rows is 2*anvec       size: Hp: 2*anvec+1, Hi,Hx: size anvec
            # cols is avdim
            
        I row indices:  Hash [0..anvec-1]     
        J col indices   0..anvec-1            Stupid [0..anvec-1]
        X values:       Ah   [0..anvec-1]

    H = build ( I,J,X )

}

